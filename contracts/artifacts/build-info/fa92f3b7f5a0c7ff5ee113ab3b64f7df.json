{
	"id": "fa92f3b7f5a0c7ff5ee113ab3b64f7df",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/bet.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\ncontract Bettoken is ERC20, Ownable, ReentrancyGuard, Pausable {\n\n    // Total Supply tanımı\n    uint256 public constant TOTAL_SUPPLY = 200_000_000 * 10 ** 18;\n\n    // Private Sale değişkenleri\n    uint256 public privateSaleTokens = 38_835_764 * 10 ** 18;\n    uint256 public privateSaleStartPrice = 0.001 * 10 ** 18; // 0.001 USD başlangıç fiyatı\n    uint256 public privateSaleEndPrice = 0.0505 * 10 ** 18; // 0.0505 USD bitiş fiyatı\n    uint256 public privateSaleSoldTokens = 0;\n    uint256 public privateSaleStartTime; // Private sale başlangıç zamanı\n\n    // Affiliate ödül yüzdesi\n    uint256 public affiliateRewardPercentage; // Affiliate ödül yüzdesi (%5 olarak varsayılan)\n\n    // Pre-Sale değişkenleri\n    uint256 public preSaleTokens = 161_164_236 * 10 ** 18; // Pre-Sale sırasında satılacak BETT miktarı\n    uint256 public preSaleTargetFunds = 19_000_000 * 10 ** 18; // Hedeflenen fon miktarı (19 milyon USD)\n    uint256 public preSaleStartPrice = 0.0505 * 10 ** 18; // Pre-Sale başlangıç fiyatı\n    uint256 public preSaleEndPrice = 0.1 * 10 ** 18; // Pre-Sale bitiş fiyatı\n    uint256 public preSaleSoldTokens = 0;\n    uint256 public preSaleStartTime; // Pre-Sale başlangıç zamanı\n    bool public preSaleActive = false; // Pre-Sale aktif mi?\n\n    // Pre-Sale satın alma sınırları\n    uint256 public minPurchaseAmountPreSale = 100 * 10 ** 18; // Minimum satın alma miktarı (100 USD)\n    uint256 public maxPurchaseAmountPreSale = 3000 * 10 ** 18; // Maksimum satın alma miktarı (3000 USD)\n\n    // Vesting Planı yapısı\n    struct VestingSchedule {\n        uint256 totalAmount;\n        uint256 releasedAmount;\n        uint256 startTime;\n        uint256 duration;\n        uint256 interval;\n    }\n\n    mapping(address => VestingSchedule) public vestingSchedules;\n\n    // Satış aşaması değişkeni\n    bool public privateSaleActive = false; // Private Sale aktif mi değil mi\n\n    // Etkinlikler\n    event PrivateSaleStarted(uint256 affiliateRewardPercentage, uint256 startTime);\n    event PrivateSale(address indexed buyer, uint256 amount);\n    event AffiliateRewardPaid(address indexed affiliate, uint256 reward);\n    event TokensStaked(address indexed staker, uint256 amount, uint256 releaseTime);\n    event VestedTokensReleased(address indexed beneficiary, uint256 amount);\n    event PrivateSaleEnded();\n    event PreSaleStarted(uint256 startTime);\n    event PreSaleEnded();\n    event TokensWithdrawn(uint256 amount);\n    event ETHWithdrawn(uint256 amount);\n\n    // Yapıcı fonksiyon\n    constructor() ERC20(\"Bettoken\", \"BETT\") Ownable(msg.sender) {\n        _mint(address(this), TOTAL_SUPPLY);\n    }\n\n    /**\n     * @dev Private Sale'i başlatır ve affiliate ödül yüzdesini belirler.\n     * @param _affiliateRewardPercentage Affiliate ödül yüzdesi.\n     */\n    function startPrivateSale(uint256 _affiliateRewardPercentage) external onlyOwner {\n        require(!privateSaleActive, \"Private Sale already active\");\n        require(_affiliateRewardPercentage > 0 && _affiliateRewardPercentage <= 100, \"Invalid percentage\");\n\n        affiliateRewardPercentage = _affiliateRewardPercentage; // Affiliate yüzdesini ayarla\n        privateSaleActive = true; // Private Sale aktif\n        privateSaleStartTime = block.timestamp; // Başlangıç zamanını kaydet\n\n        emit PrivateSaleStarted(affiliateRewardPercentage, privateSaleStartTime); // Satış başlama olayını tetikle\n    }\n\n    /**\n     * @dev Private Sale sırasında token satın alımını gerçekleştirir.\n     */\n    function buyTokensPrivateSale(uint256 usdAmount) external payable nonReentrant whenNotPaused {\n        require(privateSaleActive, \"Private Sale is not active\");\n        require(usdAmount >= 50 * 10 ** 18, \"Minimum USD amount required is 50 USD\");\n        uint256 tokensToBuy = calculateTokensPrivateSale(usdAmount);\n        require(tokensToBuy <= 1000 * 10 ** 18, \"Exceeds maximum token purchase limit\");\n\n        privateSaleSoldTokens += tokensToBuy;\n\n        if (privateSaleSoldTokens >= privateSaleTokens) {\n            privateSaleActive = false;\n            emit PrivateSaleEnded();\n        }\n\n        createVestingSchedule(msg.sender, tokensToBuy, block.timestamp + 365 days, 180 days, 30 days);\n    }\n\n\n    /**\n     * @dev Pre-Sale'i başlatır.\n     */\n    function startPreSale() external onlyOwner {\n        require(!preSaleActive, \"Pre-Sale is already active\");\n        preSaleActive = true;\n        preSaleStartTime = block.timestamp;\n        emit PreSaleStarted(preSaleStartTime);\n    }\n\n    /**\n     * @dev Pre-Sale sırasında token satın alımını gerçekleştirir.\n     */\n    function buyTokensPreSale(uint256 usdAmount) external payable nonReentrant whenNotPaused {\n        require(preSaleActive, \"Pre-Sale is not active\");\n        require(usdAmount >= minPurchaseAmountPreSale, \"Amount is below minimum purchase limit\");\n        require(usdAmount <= maxPurchaseAmountPreSale, \"Amount exceeds maximum purchase limit\");\n\n        uint256 tokensToBuy = calculateTokensPreSale(usdAmount);\n        require(preSaleSoldTokens + tokensToBuy <= preSaleTokens, \"Exceeds Pre-Sale token limit\");\n\n        preSaleSoldTokens += tokensToBuy;\n\n        if (preSaleSoldTokens >= preSaleTokens) {\n            preSaleActive = false;\n            emit PreSaleEnded();\n        }\n\n        _transfer(address(this), msg.sender, tokensToBuy);\n    }\n\n    /**\n     * @dev Pre-Sale için token fiyatını USD cinsinden hesaplar.\n     * @param usdAmount Satın alınacak token miktarının hesaplanacağı USD miktarı.\n     * @return Satın alınacak token miktarı.\n     */\n    function calculateTokensPreSale(uint256 usdAmount) public view returns (uint256) {\n        uint256 currentPrice = preSaleStartPrice + (\n            (preSaleEndPrice - preSaleStartPrice) * preSaleSoldTokens / preSaleTokens\n        );\n        uint256 tokens = usdAmount / currentPrice;\n        return tokens;\n    }\n\n    /**\n     * @dev Private Sale için token fiyatını USD cinsinden hesaplar.\n     */\n    function calculateTokensPrivateSale(uint256 usdAmount) public view returns (uint256) {\n        uint256 currentPrice = privateSaleStartPrice + (\n            (privateSaleEndPrice - privateSaleStartPrice) * privateSaleSoldTokens / privateSaleTokens\n        );\n        uint256 tokens = usdAmount / currentPrice;\n        return tokens;\n    }\n\n    /**\n     * @dev Vesting programı oluşturur.\n     */\n    function createVestingSchedule(\n        address beneficiary,\n        uint256 amount,\n        uint256 startTime,\n        uint256 duration,\n        uint256 interval\n    ) internal {\n        VestingSchedule storage schedule = vestingSchedules[beneficiary];\n        schedule.totalAmount += amount;\n        schedule.startTime = startTime;\n        schedule.duration = duration;\n        schedule.interval = interval;\n    }\n\n    /**\n     * @dev Private Sale'i sonlandırır.\n     */\n    function endPrivateSale() external onlyOwner {\n        require(privateSaleActive, \"Private Sale is not active\");\n        privateSaleActive = false;\n        emit PrivateSaleEnded();\n    }\n\n    /**\n     * @dev Pre-Sale'i sonlandırır.\n     */\n    function endPreSale() external onlyOwner {\n        require(preSaleActive, \"Pre-Sale is not active\");\n        preSaleActive = false;\n        emit PreSaleEnded();\n    }\n\n    /**\n     * @dev Kontratta bulunan tokenları çekmeye yarar.\n     */\n    function withdrawTokens() external onlyOwner {\n        uint256 balance = balanceOf(address(this));\n        require(balance > 0, \"No tokens to withdraw\");\n        _transfer(address(this), owner(), balance);\n        emit TokensWithdrawn(balance);\n    }\n\n    /**\n     * @dev Kontratta bulunan ETH'yi çekmeye yarar.\n     */\n    function withdrawETH() external onlyOwner {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"No ETH to withdraw\");\n        (bool success, ) = owner().call{value: balance}(\"\");\n        require(success, \"Transfer failed\");\n        emit ETHWithdrawn(balance);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "istanbul"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 480,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 486,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 488,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 490,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 492,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/bet.sol": {
				"Bettoken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "affiliate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "AffiliateRewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ETHWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "PreSaleEnded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								}
							],
							"name": "PreSaleStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PrivateSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "PrivateSaleEnded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "affiliateRewardPercentage",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								}
							],
							"name": "PrivateSaleStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								}
							],
							"name": "TokensStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "VestedTokensReleased",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "affiliateRewardPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdAmount",
									"type": "uint256"
								}
							],
							"name": "buyTokensPreSale",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdAmount",
									"type": "uint256"
								}
							],
							"name": "buyTokensPrivateSale",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdAmount",
									"type": "uint256"
								}
							],
							"name": "calculateTokensPreSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdAmount",
									"type": "uint256"
								}
							],
							"name": "calculateTokensPrivateSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endPreSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endPrivateSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxPurchaseAmountPreSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minPurchaseAmountPreSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleEndPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleSoldTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleStartPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleTargetFunds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleEndPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleSoldTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleStartPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPreSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_affiliateRewardPercentage",
									"type": "uint256"
								}
							],
							"name": "startPrivateSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vestingSchedules",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "releasedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "interval",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"buyTokensPreSale(uint256)": {
								"details": "Pre-Sale sırasında token satın alımını gerçekleştirir."
							},
							"buyTokensPrivateSale(uint256)": {
								"details": "Private Sale sırasında token satın alımını gerçekleştirir."
							},
							"calculateTokensPreSale(uint256)": {
								"details": "Pre-Sale için token fiyatını USD cinsinden hesaplar.",
								"params": {
									"usdAmount": "Satın alınacak token miktarının hesaplanacağı USD miktarı."
								},
								"returns": {
									"_0": "Satın alınacak token miktarı."
								}
							},
							"calculateTokensPrivateSale(uint256)": {
								"details": "Private Sale için token fiyatını USD cinsinden hesaplar."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"endPreSale()": {
								"details": "Pre-Sale'i sonlandırır."
							},
							"endPrivateSale()": {
								"details": "Private Sale'i sonlandırır."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"startPreSale()": {
								"details": "Pre-Sale'i başlatır."
							},
							"startPrivateSale(uint256)": {
								"details": "Private Sale'i başlatır ve affiliate ödül yüzdesini belirler.",
								"params": {
									"_affiliateRewardPercentage": "Affiliate ödül yüzdesi."
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawETH()": {
								"details": "Kontratta bulunan ETH'yi çekmeye yarar."
							},
							"withdrawTokens()": {
								"details": "Kontratta bulunan tokenları çekmeye yarar."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/bet.sol\":286:8300  contract Bettoken is ERC20, Ownable, ReentrancyGuard, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/bet.sol\":523:544  38_835_764 * 10 ** 18 */\n  0x201fcafc2577d298500000\n    /* \"contracts/bet.sol\":488:544  uint256 public privateSaleTokens = 38_835_764 * 10 ** 18 */\n  0x08\n  sstore\n    /* \"contracts/bet.sol\":589:605  0.001 * 10 ** 18 */\n  0x038d7ea4c68000\n    /* \"contracts/bet.sol\":550:605  uint256 public privateSaleStartPrice = 0.001 * 10 ** 18 */\n  0x09\n  sstore\n    /* \"contracts/bet.sol\":682:699  0.0505 * 10 ** 18 */\n  0xb3697b81284000\n    /* \"contracts/bet.sol\":645:699  uint256 public privateSaleEndPrice = 0.0505 * 10 ** 18 */\n  0x0a\n  sstore\n    /* \"contracts/bet.sol\":773:774  0 */\n  0x00\n    /* \"contracts/bet.sol\":734:774  uint256 public privateSaleSoldTokens = 0 */\n  0x0b\n  sstore\n    /* \"contracts/bet.sol\":1054:1076  161_164_236 * 10 ** 18 */\n  0x854fdabd6aa1d32fb00000\n    /* \"contracts/bet.sol\":1023:1076  uint256 public preSaleTokens = 161_164_236 * 10 ** 18 */\n  0x0e\n  sstore\n    /* \"contracts/bet.sol\":1167:1188  19_000_000 * 10 ** 18 */\n  0x0fb768105935a2f3000000\n    /* \"contracts/bet.sol\":1131:1188  uint256 public preSaleTargetFunds = 19_000_000 * 10 ** 18 */\n  0x0f\n  sstore\n    /* \"contracts/bet.sol\":1272:1289  0.0505 * 10 ** 18 */\n  0xb3697b81284000\n    /* \"contracts/bet.sol\":1237:1289  uint256 public preSaleStartPrice = 0.0505 * 10 ** 18 */\n  0x10\n  sstore\n    /* \"contracts/bet.sol\":1361:1375  0.1 * 10 ** 18 */\n  0x016345785d8a0000\n    /* \"contracts/bet.sol\":1328:1375  uint256 public preSaleEndPrice = 0.1 * 10 ** 18 */\n  0x11\n  sstore\n    /* \"contracts/bet.sol\":1443:1444  0 */\n  0x00\n    /* \"contracts/bet.sol\":1408:1444  uint256 public preSaleSoldTokens = 0 */\n  0x12\n  sstore\n    /* \"contracts/bet.sol\":1548:1553  false */\n  0x00\n    /* \"contracts/bet.sol\":1520:1553  bool public preSaleActive = false */\n  0x14\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/bet.sol\":1665:1679  100 * 10 ** 18 */\n  0x056bc75e2d63100000\n    /* \"contracts/bet.sol\":1623:1679  uint256 public minPurchaseAmountPreSale = 100 * 10 ** 18 */\n  0x15\n  sstore\n    /* \"contracts/bet.sol\":1769:1784  3000 * 10 ** 18 */\n  0xa2a15d09519be00000\n    /* \"contracts/bet.sol\":1727:1784  uint256 public maxPurchaseAmountPreSale = 3000 * 10 ** 18 */\n  0x16\n  sstore\n    /* \"contracts/bet.sol\":2177:2182  false */\n  0x00\n    /* \"contracts/bet.sol\":2145:2182  bool public privateSaleActive = false */\n  0x18\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/bet.sol\":2836:2947  constructor() ERC20(\"Bettoken\", \"BETT\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/bet.sol\":2884:2894  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x426574746f6b656e000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4245545400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x07\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/bet.sol\":2906:2940  _mint(address(this), TOTAL_SUPPLY) */\n  tag_20\n    /* \"contracts/bet.sol\":2920:2924  this */\n  address\n    /* \"contracts/bet.sol\":424:446  200_000_000 * 10 ** 18 */\n  0xa56fa5b99019a5c8000000\n    /* \"contracts/bet.sol\":2906:2911  _mint */\n  shl(0x20, tag_21)\n    /* \"contracts/bet.sol\":2906:2940  _mint(address(this), TOTAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"contracts/bet.sol\":286:8300  contract Bettoken is ERC20, Ownable, ReentrancyGuard, Pausable {... */\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_27\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_33)\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_35\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_38)\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_41:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_42:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_43:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_44:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_71:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_73\n  tag_43\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":714:798   */\ntag_72:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_45:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_46:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_47:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_48:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_78\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_47\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1429:1468   */\n  tag_79\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_47\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_49:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_50:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_51:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_83\n    /* \"#utility.yul\":1818:1852   */\n  tag_84\n    /* \"#utility.yul\":1827:1851   */\n  tag_85\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":1818:1852   */\n  tag_50\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1800:1853   */\n  tag_49\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_52:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_53:\n    /* \"#utility.yul\":2056:2095   */\n  tag_88\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_51\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":2117:2208   */\n  tag_89\n    /* \"#utility.yul\":2166:2207   */\n  tag_90\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_52\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_48\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_54:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_55:\n    /* \"#utility.yul\":2377:2409   */\n  tag_93\n  tag_54\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":2418:2483   */\n  tag_94\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_53\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_56:\n    /* \"#utility.yul\":2555:2675   */\ntag_96:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_99\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_55\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_96)\ntag_98:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_57:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_102\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_45\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2906:2935   */\n  tag_103\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_46\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_104:\n    /* \"#utility.yul\":3133:3213   */\n  tag_105\n    /* \"#utility.yul\":3189:3211   */\n  tag_106\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_46\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_56\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_101:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_58:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_59:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_109\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_58\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_60:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_111\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_59\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_9:\n    /* \"#utility.yul\":3950:3987   */\n  tag_113\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_41\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_115\n  tag_42\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":4038:4094   */\ntag_114:\n    /* \"#utility.yul\":4118:4156   */\n  tag_116\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_44\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":4203:4270   */\n  tag_117\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_57\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_119\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_120:\n    /* \"#utility.yul\":5144:5211   */\n  tag_121\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_60\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_118)\n    /* \"#utility.yul\":4365:4983   */\ntag_119:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_122\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_45\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_123:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_123)\ntag_125:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_127\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_59\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_126:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_118:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_61:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_62:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_130\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_61\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_63:\n    /* \"#utility.yul\":5555:5579   */\n  tag_132\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_62\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_14:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_134\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_63\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:6000   */\ntag_64:\n    /* \"#utility.yul\":5868:5945   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5865:5866   */\n  0x00\n    /* \"#utility.yul\":5858:5946   */\n  mstore\n    /* \"#utility.yul\":5965:5969   */\n  0x11\n    /* \"#utility.yul\":5962:5963   */\n  0x04\n    /* \"#utility.yul\":5955:5970   */\n  mstore\n    /* \"#utility.yul\":5989:5993   */\n  0x24\n    /* \"#utility.yul\":5986:5987   */\n  0x00\n    /* \"#utility.yul\":5979:5994   */\n  revert\n    /* \"#utility.yul\":6006:6197   */\ntag_32:\n    /* \"#utility.yul\":6046:6049   */\n  0x00\n    /* \"#utility.yul\":6065:6085   */\n  tag_137\n    /* \"#utility.yul\":6083:6084   */\n  dup3\n    /* \"#utility.yul\":6065:6085   */\n  tag_49\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":6060:6085   */\n  swap2\n  pop\n    /* \"#utility.yul\":6099:6119   */\n  tag_138\n    /* \"#utility.yul\":6117:6118   */\n  dup4\n    /* \"#utility.yul\":6099:6119   */\n  tag_49\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6094:6119   */\n  swap3\n  pop\n    /* \"#utility.yul\":6142:6143   */\n  dup3\n    /* \"#utility.yul\":6139:6140   */\n  dup3\n    /* \"#utility.yul\":6135:6144   */\n  add\n    /* \"#utility.yul\":6128:6144   */\n  swap1\n  pop\n    /* \"#utility.yul\":6163:6166   */\n  dup1\n    /* \"#utility.yul\":6160:6161   */\n  dup3\n    /* \"#utility.yul\":6157:6167   */\n  gt\n    /* \"#utility.yul\":6154:6190   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":6170:6188   */\n  tag_140\n  tag_64\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6154:6190   */\ntag_139:\n    /* \"#utility.yul\":6006:6197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6203:6321   */\ntag_65:\n    /* \"#utility.yul\":6290:6314   */\n  tag_142\n    /* \"#utility.yul\":6308:6313   */\n  dup2\n    /* \"#utility.yul\":6290:6314   */\n  tag_49\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6285:6288   */\n  dup3\n    /* \"#utility.yul\":6278:6315   */\n  mstore\n    /* \"#utility.yul\":6203:6321   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6769   */\ntag_36:\n    /* \"#utility.yul\":6476:6480   */\n  0x00\n    /* \"#utility.yul\":6514:6516   */\n  0x60\n    /* \"#utility.yul\":6503:6512   */\n  dup3\n    /* \"#utility.yul\":6499:6517   */\n  add\n    /* \"#utility.yul\":6491:6517   */\n  swap1\n  pop\n    /* \"#utility.yul\":6527:6598   */\n  tag_144\n    /* \"#utility.yul\":6595:6596   */\n  0x00\n    /* \"#utility.yul\":6584:6593   */\n  dup4\n    /* \"#utility.yul\":6580:6597   */\n  add\n    /* \"#utility.yul\":6571:6577   */\n  dup7\n    /* \"#utility.yul\":6527:6598   */\n  tag_63\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6608:6680   */\n  tag_145\n    /* \"#utility.yul\":6676:6678   */\n  0x20\n    /* \"#utility.yul\":6665:6674   */\n  dup4\n    /* \"#utility.yul\":6661:6679   */\n  add\n    /* \"#utility.yul\":6652:6658   */\n  dup6\n    /* \"#utility.yul\":6608:6680   */\n  tag_65\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6690:6762   */\n  tag_146\n    /* \"#utility.yul\":6758:6760   */\n  0x40\n    /* \"#utility.yul\":6747:6756   */\n  dup4\n    /* \"#utility.yul\":6743:6761   */\n  add\n    /* \"#utility.yul\":6734:6740   */\n  dup5\n    /* \"#utility.yul\":6690:6762   */\n  tag_65\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6327:6769   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6775:6997   */\ntag_40:\n    /* \"#utility.yul\":6868:6872   */\n  0x00\n    /* \"#utility.yul\":6906:6908   */\n  0x20\n    /* \"#utility.yul\":6895:6904   */\n  dup3\n    /* \"#utility.yul\":6891:6909   */\n  add\n    /* \"#utility.yul\":6883:6909   */\n  swap1\n  pop\n    /* \"#utility.yul\":6919:6990   */\n  tag_148\n    /* \"#utility.yul\":6987:6988   */\n  0x00\n    /* \"#utility.yul\":6976:6985   */\n  dup4\n    /* \"#utility.yul\":6972:6989   */\n  add\n    /* \"#utility.yul\":6963:6969   */\n  dup5\n    /* \"#utility.yul\":6919:6990   */\n  tag_65\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6775:6997   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/bet.sol\":286:8300  contract Bettoken is ERC20, Ownable, ReentrancyGuard, Pausable {... */\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/bet.sol\":286:8300  contract Bettoken is ERC20, Ownable, ReentrancyGuard, Pausable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x920168b3\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xcb8dcfe6\n      gt\n      tag_44\n      jumpi\n      dup1\n      0xe6a23c3d\n      gt\n      tag_45\n      jumpi\n      dup1\n      0xe6a23c3d\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xee889ed0\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xef5b329c\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xf15a41f6\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xfdb20ccb\n      eq\n      tag_42\n      jumpi\n      jump(tag_1)\n    tag_45:\n      dup1\n      0xcb8dcfe6\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xd414890a\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xd50234c4\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xe086e5ec\n      eq\n      tag_36\n      jumpi\n      jump(tag_1)\n    tag_44:\n      dup1\n      0xac21694c\n      gt\n      tag_46\n      jumpi\n      dup1\n      0xac21694c\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xb0e68630\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xb68ed11f\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xbda95633\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xc552e04b\n      eq\n      tag_31\n      jumpi\n      jump(tag_1)\n    tag_46:\n      dup1\n      0x920168b3\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x940de97e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa089de2f\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_26\n      jumpi\n      jump(tag_1)\n    tag_43:\n      dup1\n      0x55dd574c\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x84494708\n      gt\n      tag_48\n      jumpi\n      dup1\n      0x84494708\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8d8f2adb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8f7713ff\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x902d55a5\n      eq\n      tag_21\n      jumpi\n      jump(tag_1)\n    tag_48:\n      dup1\n      0x55dd574c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5fb3b944\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      jump(tag_1)\n    tag_47:\n      dup1\n      0x1ecf8f4d\n      gt\n      tag_49\n      jumpi\n      dup1\n      0x1ecf8f4d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2a237bb6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x466c3f93\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_49:\n      dup1\n      0x06d65af3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0fe83bb8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/bet.sol\":1450:1481  uint256 public preSaleStartTime */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":1023:1076  uint256 public preSaleTokens = 161_164_236 * 10 ** 18 */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":1623:1679  uint256 public minPurchaseAmountPreSale = 100 * 10 ** 18 */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":2145:2182  bool public privateSaleActive = false */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":4931:5677  function buyTokensPreSale(uint256 usdAmount) external payable nonReentrant whenNotPaused {... */\n    tag_11:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      stop\n        /* \"contracts/bet.sol\":4600:4834  function startPreSale() external onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":734:774  uint256 public privateSaleSoldTokens = 0 */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      stop\n        /* \"contracts/bet.sol\":1520:1553  bool public preSaleActive = false */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":7681:7931  function withdrawTokens() external onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":1328:1375  uint256 public preSaleEndPrice = 0.1 * 10 ** 18 */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":385:446  uint256 public constant TOTAL_SUPPLY = 200_000_000 * 10 ** 18 */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":1237:1289  uint256 public preSaleStartPrice = 0.0505 * 10 ** 18 */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      tag_139\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      tag_141\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":780:815  uint256 public privateSaleStartTime */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":3116:3735  function startPrivateSale(uint256 _affiliateRewardPercentage) external onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      tag_151\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_152:\n      tag_153\n      jump\t// in\n    tag_151:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":1727:1784  uint256 public maxPurchaseAmountPreSale = 3000 * 10 ** 18 */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      tag_160\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      tag_162\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":550:605  uint256 public privateSaleStartPrice = 0.001 * 10 ** 18 */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_164\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      tag_166\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":1408:1444  uint256 public preSaleSoldTokens = 0 */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      tag_168\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      tag_170\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":645:699  uint256 public privateSaleEndPrice = 0.0505 * 10 ** 18 */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_172\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      tag_174\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":488:544  uint256 public privateSaleTokens = 38_835_764 * 10 ** 18 */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      tag_176\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      tag_178\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":5905:6217  function calculateTokensPreSale(uint256 usdAmount) public view returns (uint256) {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      tag_180\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_181\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_181:\n      tag_182\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      tag_183\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":3836:4542  function buyTokensPrivateSale(uint256 usdAmount) external payable nonReentrant whenNotPaused {... */\n    tag_33:\n      tag_184\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_185\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_185:\n      tag_186\n      jump\t// in\n    tag_184:\n      stop\n        /* \"contracts/bet.sol\":892:932  uint256 public affiliateRewardPercentage */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      tag_188\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      tag_190\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_191:\n      pop\n      tag_192\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      tag_195\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      tag_196\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":8006:8298  function withdrawETH() external onlyOwner {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      tag_198\n      tag_199\n      jump\t// in\n    tag_198:\n      stop\n        /* \"contracts/bet.sol\":7190:7376  function endPrivateSale() external onlyOwner {... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n      pop\n      tag_201\n      tag_202\n      jump\t// in\n    tag_201:\n      stop\n        /* \"contracts/bet.sol\":7436:7602  function endPreSale() external onlyOwner {... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      tag_204\n      tag_205\n      jump\t// in\n    tag_204:\n      stop\n        /* \"contracts/bet.sol\":1131:1188  uint256 public preSaleTargetFunds = 19_000_000 * 10 ** 18 */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      tag_207\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      tag_209\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":6311:6647  function calculateTokensPrivateSale(uint256 usdAmount) public view returns (uint256) {... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_210\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_210:\n      pop\n      tag_211\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_212\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_212:\n      tag_213\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      tag_214\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_215\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_215:\n      pop\n      tag_216\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_217\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_217:\n      tag_218\n      jump\t// in\n    tag_216:\n      stop\n        /* \"contracts/bet.sol\":2042:2101  mapping(address => VestingSchedule) public vestingSchedules */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_219\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_219:\n      pop\n      tag_220\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_221\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_221:\n      tag_222\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      tag_223\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bet.sol\":1450:1481  uint256 public preSaleStartTime */\n    tag_52:\n      sload(0x13)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_226\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_228\n      swap1\n      tag_227\n      jump\t// in\n    tag_228:\n      dup1\n      iszero\n      tag_229\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_230\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_229)\n    tag_230:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_231:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_231\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_229:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bet.sol\":1023:1076  uint256 public preSaleTokens = 161_164_236 * 10 ** 18 */\n    tag_69:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bet.sol\":1623:1679  uint256 public minPurchaseAmountPreSale = 100 * 10 ** 18 */\n    tag_77:\n      sload(0x15)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_241\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bet.sol\":2145:2182  bool public privateSaleActive = false */\n    tag_87:\n      0x18\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bet.sol\":4931:5677  function buyTokensPreSale(uint256 usdAmount) external payable nonReentrant whenNotPaused {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_246\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_247\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_249\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_250\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_249:\n        /* \"contracts/bet.sol\":5038:5051  preSaleActive */\n      0x14\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bet.sol\":5030:5078  require(preSaleActive, \"Pre-Sale is not active\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_252:\n        /* \"contracts/bet.sol\":5109:5133  minPurchaseAmountPreSale */\n      sload(0x15)\n        /* \"contracts/bet.sol\":5096:5105  usdAmount */\n      dup2\n        /* \"contracts/bet.sol\":5096:5133  usdAmount >= minPurchaseAmountPreSale */\n      lt\n      iszero\n        /* \"contracts/bet.sol\":5088:5176  require(usdAmount >= minPurchaseAmountPreSale, \"Amount is below minimum purchase limit\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_255:\n        /* \"contracts/bet.sol\":5207:5231  maxPurchaseAmountPreSale */\n      sload(0x16)\n        /* \"contracts/bet.sol\":5194:5203  usdAmount */\n      dup2\n        /* \"contracts/bet.sol\":5194:5231  usdAmount <= maxPurchaseAmountPreSale */\n      gt\n      iszero\n        /* \"contracts/bet.sol\":5186:5273  require(usdAmount <= maxPurchaseAmountPreSale, \"Amount exceeds maximum purchase limit\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_258:\n        /* \"contracts/bet.sol\":5284:5303  uint256 tokensToBuy */\n      0x00\n        /* \"contracts/bet.sol\":5306:5339  calculateTokensPreSale(usdAmount) */\n      tag_261\n        /* \"contracts/bet.sol\":5329:5338  usdAmount */\n      dup3\n        /* \"contracts/bet.sol\":5306:5328  calculateTokensPreSale */\n      tag_182\n        /* \"contracts/bet.sol\":5306:5339  calculateTokensPreSale(usdAmount) */\n      jump\t// in\n    tag_261:\n        /* \"contracts/bet.sol\":5284:5339  uint256 tokensToBuy = calculateTokensPreSale(usdAmount) */\n      swap1\n      pop\n        /* \"contracts/bet.sol\":5392:5405  preSaleTokens */\n      sload(0x0e)\n        /* \"contracts/bet.sol\":5377:5388  tokensToBuy */\n      dup2\n        /* \"contracts/bet.sol\":5357:5374  preSaleSoldTokens */\n      sload(0x12)\n        /* \"contracts/bet.sol\":5357:5388  preSaleSoldTokens + tokensToBuy */\n      tag_262\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"contracts/bet.sol\":5357:5405  preSaleSoldTokens + tokensToBuy <= preSaleTokens */\n      gt\n      iszero\n        /* \"contracts/bet.sol\":5349:5438  require(preSaleSoldTokens + tokensToBuy <= preSaleTokens, \"Exceeds Pre-Sale token limit\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_264:\n        /* \"contracts/bet.sol\":5470:5481  tokensToBuy */\n      dup1\n        /* \"contracts/bet.sol\":5449:5466  preSaleSoldTokens */\n      0x12\n      0x00\n        /* \"contracts/bet.sol\":5449:5481  preSaleSoldTokens += tokensToBuy */\n      dup3\n      dup3\n      sload\n      tag_267\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_267:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bet.sol\":5517:5530  preSaleTokens */\n      sload(0x0e)\n        /* \"contracts/bet.sol\":5496:5513  preSaleSoldTokens */\n      sload(0x12)\n        /* \"contracts/bet.sol\":5496:5530  preSaleSoldTokens >= preSaleTokens */\n      lt\n        /* \"contracts/bet.sol\":5492:5611  if (preSaleSoldTokens >= preSaleTokens) {... */\n      tag_268\n      jumpi\n        /* \"contracts/bet.sol\":5562:5567  false */\n      0x00\n        /* \"contracts/bet.sol\":5546:5559  preSaleActive */\n      0x14\n      0x00\n        /* \"contracts/bet.sol\":5546:5567  preSaleActive = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/bet.sol\":5586:5600  PreSaleEnded() */\n      0xc82e6055d31de9b552cd0014f23a8b8ce120c288ed1afce01adb97150efc0185\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/bet.sol\":5492:5611  if (preSaleSoldTokens >= preSaleTokens) {... */\n    tag_268:\n        /* \"contracts/bet.sol\":5621:5670  _transfer(address(this), msg.sender, tokensToBuy) */\n      tag_269\n        /* \"contracts/bet.sol\":5639:5643  this */\n      address\n        /* \"contracts/bet.sol\":5646:5656  msg.sender */\n      caller\n        /* \"contracts/bet.sol\":5658:5669  tokensToBuy */\n      dup4\n        /* \"contracts/bet.sol\":5621:5630  _transfer */\n      tag_243\n        /* \"contracts/bet.sol\":5621:5670  _transfer(address(this), msg.sender, tokensToBuy) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/bet.sol\":5020:5677  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_270\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_271\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_270:\n        /* \"contracts/bet.sol\":4931:5677  function buyTokensPreSale(uint256 usdAmount) external payable nonReentrant whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"contracts/bet.sol\":4600:4834  function startPreSale() external onlyOwner {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_273\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_273:\n        /* \"contracts/bet.sol\":4662:4675  preSaleActive */\n      0x14\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bet.sol\":4661:4675  !preSaleActive */\n      iszero\n        /* \"contracts/bet.sol\":4653:4706  require(!preSaleActive, \"Pre-Sale is already active\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_276:\n        /* \"contracts/bet.sol\":4732:4736  true */\n      0x01\n        /* \"contracts/bet.sol\":4716:4729  preSaleActive */\n      0x14\n      0x00\n        /* \"contracts/bet.sol\":4716:4736  preSaleActive = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/bet.sol\":4765:4780  block.timestamp */\n      timestamp\n        /* \"contracts/bet.sol\":4746:4762  preSaleStartTime */\n      0x13\n        /* \"contracts/bet.sol\":4746:4780  preSaleStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bet.sol\":4795:4827  PreSaleStarted(preSaleStartTime) */\n      0x71d9b86cd8e742cc8d4d6b9d25c84d4e42f8ba8138c6ee54914285f4a9540056\n        /* \"contracts/bet.sol\":4810:4826  preSaleStartTime */\n      sload(0x13)\n        /* \"contracts/bet.sol\":4795:4827  PreSaleStarted(preSaleStartTime) */\n      mload(0x40)\n      tag_279\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/bet.sol\":4600:4834  function startPreSale() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bet.sol\":734:774  uint256 public privateSaleSoldTokens = 0 */\n    tag_107:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_283\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_285\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_286\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/bet.sol\":1520:1553  bool public preSaleActive = false */\n    tag_120:\n      0x14\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/bet.sol\":7681:7931  function withdrawTokens() external onlyOwner {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_288\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_288:\n        /* \"contracts/bet.sol\":7736:7751  uint256 balance */\n      0x00\n        /* \"contracts/bet.sol\":7754:7778  balanceOf(address(this)) */\n      tag_290\n        /* \"contracts/bet.sol\":7772:7776  this */\n      address\n        /* \"contracts/bet.sol\":7754:7763  balanceOf */\n      tag_113\n        /* \"contracts/bet.sol\":7754:7778  balanceOf(address(this)) */\n      jump\t// in\n    tag_290:\n        /* \"contracts/bet.sol\":7736:7778  uint256 balance = balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/bet.sol\":7806:7807  0 */\n      0x00\n        /* \"contracts/bet.sol\":7796:7803  balance */\n      dup2\n        /* \"contracts/bet.sol\":7796:7807  balance > 0 */\n      gt\n        /* \"contracts/bet.sol\":7788:7833  require(balance > 0, \"No tokens to withdraw\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_292\n      swap1\n      tag_293\n      jump\t// in\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_291:\n        /* \"contracts/bet.sol\":7843:7885  _transfer(address(this), owner(), balance) */\n      tag_294\n        /* \"contracts/bet.sol\":7861:7865  this */\n      address\n        /* \"contracts/bet.sol\":7868:7875  owner() */\n      tag_295\n        /* \"contracts/bet.sol\":7868:7873  owner */\n      tag_127\n        /* \"contracts/bet.sol\":7868:7875  owner() */\n      jump\t// in\n    tag_295:\n        /* \"contracts/bet.sol\":7877:7884  balance */\n      dup4\n        /* \"contracts/bet.sol\":7843:7852  _transfer */\n      tag_243\n        /* \"contracts/bet.sol\":7843:7885  _transfer(address(this), owner(), balance) */\n      jump\t// in\n    tag_294:\n        /* \"contracts/bet.sol\":7900:7924  TokensWithdrawn(balance) */\n      0x9c6393f251205f9e03559951cab4c9ae71767b6174f77944a5b0c2fa51fbda9f\n        /* \"contracts/bet.sol\":7916:7923  balance */\n      dup2\n        /* \"contracts/bet.sol\":7900:7924  TokensWithdrawn(balance) */\n      mload(0x40)\n      tag_296\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/bet.sol\":7726:7931  {... */\n      pop\n        /* \"contracts/bet.sol\":7681:7931  function withdrawTokens() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bet.sol\":1328:1375  uint256 public preSaleEndPrice = 0.1 * 10 ** 18 */\n    tag_132:\n      sload(0x11)\n      dup2\n      jump\t// out\n        /* \"contracts/bet.sol\":385:446  uint256 public constant TOTAL_SUPPLY = 200_000_000 * 10 ** 18 */\n    tag_136:\n        /* \"contracts/bet.sol\":424:446  200_000_000 * 10 ** 18 */\n      0xa56fa5b99019a5c8000000\n        /* \"contracts/bet.sol\":385:446  uint256 public constant TOTAL_SUPPLY = 200_000_000 * 10 ** 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/bet.sol\":1237:1289  uint256 public preSaleStartPrice = 0.0505 * 10 ** 18 */\n    tag_140:\n      sload(0x10)\n      dup2\n      jump\t// out\n        /* \"contracts/bet.sol\":780:815  uint256 public privateSaleStartTime */\n    tag_144:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_299\n      swap1\n      tag_227\n      jump\t// in\n    tag_299:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_300\n      swap1\n      tag_227\n      jump\t// in\n    tag_300:\n      dup1\n      iszero\n      tag_301\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_302\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_301)\n    tag_302:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_303:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_303\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_301:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bet.sol\":3116:3735  function startPrivateSale(uint256 _affiliateRewardPercentage) external onlyOwner {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_305\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_305:\n        /* \"contracts/bet.sol\":3216:3233  privateSaleActive */\n      0x18\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bet.sol\":3215:3233  !privateSaleActive */\n      iszero\n        /* \"contracts/bet.sol\":3207:3265  require(!privateSaleActive, \"Private Sale already active\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap1\n      tag_309\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_307:\n        /* \"contracts/bet.sol\":3312:3313  0 */\n      0x00\n        /* \"contracts/bet.sol\":3283:3309  _affiliateRewardPercentage */\n      dup2\n        /* \"contracts/bet.sol\":3283:3313  _affiliateRewardPercentage > 0 */\n      gt\n        /* \"contracts/bet.sol\":3283:3350  _affiliateRewardPercentage > 0 && _affiliateRewardPercentage <= 100 */\n      dup1\n      iszero\n      tag_310\n      jumpi\n      pop\n        /* \"contracts/bet.sol\":3347:3350  100 */\n      0x64\n        /* \"contracts/bet.sol\":3317:3343  _affiliateRewardPercentage */\n      dup2\n        /* \"contracts/bet.sol\":3317:3350  _affiliateRewardPercentage <= 100 */\n      gt\n      iszero\n        /* \"contracts/bet.sol\":3283:3350  _affiliateRewardPercentage > 0 && _affiliateRewardPercentage <= 100 */\n    tag_310:\n        /* \"contracts/bet.sol\":3275:3373  require(_affiliateRewardPercentage > 0 && _affiliateRewardPercentage <= 100, \"Invalid percentage\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_312\n      swap1\n      tag_313\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_311:\n        /* \"contracts/bet.sol\":3412:3438  _affiliateRewardPercentage */\n      dup1\n        /* \"contracts/bet.sol\":3384:3409  affiliateRewardPercentage */\n      0x0d\n        /* \"contracts/bet.sol\":3384:3438  affiliateRewardPercentage = _affiliateRewardPercentage */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bet.sol\":3499:3503  true */\n      0x01\n        /* \"contracts/bet.sol\":3479:3496  privateSaleActive */\n      0x18\n      0x00\n        /* \"contracts/bet.sol\":3479:3503  privateSaleActive = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/bet.sol\":3558:3573  block.timestamp */\n      timestamp\n        /* \"contracts/bet.sol\":3535:3555  privateSaleStartTime */\n      0x0c\n        /* \"contracts/bet.sol\":3535:3573  privateSaleStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bet.sol\":3623:3690  PrivateSaleStarted(affiliateRewardPercentage, privateSaleStartTime) */\n      0xcbe7b2993d671ff089495ae9d90ae7a115f123db134c0a6d3c4bc6e0c72cf7e5\n        /* \"contracts/bet.sol\":3642:3667  affiliateRewardPercentage */\n      sload(0x0d)\n        /* \"contracts/bet.sol\":3669:3689  privateSaleStartTime */\n      sload(0x0c)\n        /* \"contracts/bet.sol\":3623:3690  PrivateSaleStarted(affiliateRewardPercentage, privateSaleStartTime) */\n      mload(0x40)\n      tag_314\n      swap3\n      swap2\n      swap1\n      tag_315\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/bet.sol\":3116:3735  function startPrivateSale(uint256 _affiliateRewardPercentage) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_317\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_318\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bet.sol\":1727:1784  uint256 public maxPurchaseAmountPreSale = 3000 * 10 ** 18 */\n    tag_161:\n      sload(0x16)\n      dup2\n      jump\t// out\n        /* \"contracts/bet.sol\":550:605  uint256 public privateSaleStartPrice = 0.001 * 10 ** 18 */\n    tag_165:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/bet.sol\":1408:1444  uint256 public preSaleSoldTokens = 0 */\n    tag_169:\n      sload(0x12)\n      dup2\n      jump\t// out\n        /* \"contracts/bet.sol\":645:699  uint256 public privateSaleEndPrice = 0.0505 * 10 ** 18 */\n    tag_173:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/bet.sol\":488:544  uint256 public privateSaleTokens = 38_835_764 * 10 ** 18 */\n    tag_177:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/bet.sol\":5905:6217  function calculateTokensPreSale(uint256 usdAmount) public view returns (uint256) {... */\n    tag_182:\n        /* \"contracts/bet.sol\":5977:5984  uint256 */\n      0x00\n        /* \"contracts/bet.sol\":5996:6016  uint256 currentPrice */\n      dup1\n        /* \"contracts/bet.sol\":6113:6126  preSaleTokens */\n      sload(0x0e)\n        /* \"contracts/bet.sol\":6093:6110  preSaleSoldTokens */\n      sload(0x12)\n        /* \"contracts/bet.sol\":6072:6089  preSaleStartPrice */\n      sload(0x10)\n        /* \"contracts/bet.sol\":6054:6069  preSaleEndPrice */\n      sload(0x11)\n        /* \"contracts/bet.sol\":6054:6089  preSaleEndPrice - preSaleStartPrice */\n      tag_320\n      swap2\n      swap1\n      tag_321\n      jump\t// in\n    tag_320:\n        /* \"contracts/bet.sol\":6053:6110  (preSaleEndPrice - preSaleStartPrice) * preSaleSoldTokens */\n      tag_322\n      swap2\n      swap1\n      tag_323\n      jump\t// in\n    tag_322:\n        /* \"contracts/bet.sol\":6053:6126  (preSaleEndPrice - preSaleStartPrice) * preSaleSoldTokens / preSaleTokens */\n      tag_324\n      swap2\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n        /* \"contracts/bet.sol\":6019:6036  preSaleStartPrice */\n      sload(0x10)\n        /* \"contracts/bet.sol\":6019:6136  preSaleStartPrice + (... */\n      tag_326\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_326:\n        /* \"contracts/bet.sol\":5996:6136  uint256 currentPrice = preSaleStartPrice + (... */\n      swap1\n      pop\n        /* \"contracts/bet.sol\":6146:6160  uint256 tokens */\n      0x00\n        /* \"contracts/bet.sol\":6175:6187  currentPrice */\n      dup2\n        /* \"contracts/bet.sol\":6163:6172  usdAmount */\n      dup5\n        /* \"contracts/bet.sol\":6163:6187  usdAmount / currentPrice */\n      tag_327\n      swap2\n      swap1\n      tag_325\n      jump\t// in\n    tag_327:\n        /* \"contracts/bet.sol\":6146:6187  uint256 tokens = usdAmount / currentPrice */\n      swap1\n      pop\n        /* \"contracts/bet.sol\":6204:6210  tokens */\n      dup1\n        /* \"contracts/bet.sol\":6197:6210  return tokens */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/bet.sol\":5905:6217  function calculateTokensPreSale(uint256 usdAmount) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/bet.sol\":3836:4542  function buyTokensPrivateSale(uint256 usdAmount) external payable nonReentrant whenNotPaused {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_329\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_247\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_331\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_250\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_331:\n        /* \"contracts/bet.sol\":3947:3964  privateSaleActive */\n      0x18\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bet.sol\":3939:3995  require(privateSaleActive, \"Private Sale is not active\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_334\n      swap1\n      tag_335\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_333:\n        /* \"contracts/bet.sol\":4026:4039  50 * 10 ** 18 */\n      0x02b5e3af16b1880000\n        /* \"contracts/bet.sol\":4013:4022  usdAmount */\n      dup2\n        /* \"contracts/bet.sol\":4013:4039  usdAmount >= 50 * 10 ** 18 */\n      lt\n      iszero\n        /* \"contracts/bet.sol\":4005:4081  require(usdAmount >= 50 * 10 ** 18, \"Minimum USD amount required is 50 USD\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_337\n      swap1\n      tag_338\n      jump\t// in\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_336:\n        /* \"contracts/bet.sol\":4091:4110  uint256 tokensToBuy */\n      0x00\n        /* \"contracts/bet.sol\":4113:4150  calculateTokensPrivateSale(usdAmount) */\n      tag_339\n        /* \"contracts/bet.sol\":4140:4149  usdAmount */\n      dup3\n        /* \"contracts/bet.sol\":4113:4139  calculateTokensPrivateSale */\n      tag_213\n        /* \"contracts/bet.sol\":4113:4150  calculateTokensPrivateSale(usdAmount) */\n      jump\t// in\n    tag_339:\n        /* \"contracts/bet.sol\":4091:4150  uint256 tokensToBuy = calculateTokensPrivateSale(usdAmount) */\n      swap1\n      pop\n        /* \"contracts/bet.sol\":4183:4198  1000 * 10 ** 18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/bet.sol\":4168:4179  tokensToBuy */\n      dup2\n        /* \"contracts/bet.sol\":4168:4198  tokensToBuy <= 1000 * 10 ** 18 */\n      gt\n      iszero\n        /* \"contracts/bet.sol\":4160:4239  require(tokensToBuy <= 1000 * 10 ** 18, \"Exceeds maximum token purchase limit\") */\n      tag_340\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_341\n      swap1\n      tag_342\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_340:\n        /* \"contracts/bet.sol\":4275:4286  tokensToBuy */\n      dup1\n        /* \"contracts/bet.sol\":4250:4271  privateSaleSoldTokens */\n      0x0b\n      0x00\n        /* \"contracts/bet.sol\":4250:4286  privateSaleSoldTokens += tokensToBuy */\n      dup3\n      dup3\n      sload\n      tag_343\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_343:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bet.sol\":4326:4343  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bet.sol\":4301:4322  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bet.sol\":4301:4343  privateSaleSoldTokens >= privateSaleTokens */\n      lt\n        /* \"contracts/bet.sol\":4297:4432  if (privateSaleSoldTokens >= privateSaleTokens) {... */\n      tag_344\n      jumpi\n        /* \"contracts/bet.sol\":4379:4384  false */\n      0x00\n        /* \"contracts/bet.sol\":4359:4376  privateSaleActive */\n      0x18\n      0x00\n        /* \"contracts/bet.sol\":4359:4384  privateSaleActive = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/bet.sol\":4403:4421  PrivateSaleEnded() */\n      0x8d80f5be79e7dd88d69814b57e8f5c7dd249b3d6bac194eb9144b8ca639db036\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/bet.sol\":4297:4432  if (privateSaleSoldTokens >= privateSaleTokens) {... */\n    tag_344:\n        /* \"contracts/bet.sol\":4442:4535  createVestingSchedule(msg.sender, tokensToBuy, block.timestamp + 365 days, 180 days, 30 days) */\n      tag_345\n        /* \"contracts/bet.sol\":4464:4474  msg.sender */\n      caller\n        /* \"contracts/bet.sol\":4476:4487  tokensToBuy */\n      dup3\n        /* \"contracts/bet.sol\":4507:4515  365 days */\n      0x01e13380\n        /* \"contracts/bet.sol\":4489:4504  block.timestamp */\n      timestamp\n        /* \"contracts/bet.sol\":4489:4515  block.timestamp + 365 days */\n      tag_346\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_346:\n        /* \"contracts/bet.sol\":4517:4525  180 days */\n      0xed4e00\n        /* \"contracts/bet.sol\":4527:4534  30 days */\n      0x278d00\n        /* \"contracts/bet.sol\":4442:4463  createVestingSchedule */\n      tag_347\n        /* \"contracts/bet.sol\":4442:4535  createVestingSchedule(msg.sender, tokensToBuy, block.timestamp + 365 days, 180 days, 30 days) */\n      jump\t// in\n    tag_345:\n        /* \"contracts/bet.sol\":3929:4542  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_348\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_271\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_348:\n        /* \"contracts/bet.sol\":3836:4542  function buyTokensPrivateSale(uint256 usdAmount) external payable nonReentrant whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"contracts/bet.sol\":892:932  uint256 public affiliateRewardPercentage */\n    tag_189:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bet.sol\":8006:8298  function withdrawETH() external onlyOwner {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_351\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_351:\n        /* \"contracts/bet.sol\":8058:8073  uint256 balance */\n      0x00\n        /* \"contracts/bet.sol\":8076:8097  address(this).balance */\n      selfbalance\n        /* \"contracts/bet.sol\":8058:8097  uint256 balance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/bet.sol\":8125:8126  0 */\n      0x00\n        /* \"contracts/bet.sol\":8115:8122  balance */\n      dup2\n        /* \"contracts/bet.sol\":8115:8126  balance > 0 */\n      gt\n        /* \"contracts/bet.sol\":8107:8149  require(balance > 0, \"No ETH to withdraw\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap1\n      tag_355\n      jump\t// in\n    tag_354:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_353:\n        /* \"contracts/bet.sol\":8160:8172  bool success */\n      0x00\n        /* \"contracts/bet.sol\":8178:8185  owner() */\n      tag_356\n        /* \"contracts/bet.sol\":8178:8183  owner */\n      tag_127\n        /* \"contracts/bet.sol\":8178:8185  owner() */\n      jump\t// in\n    tag_356:\n        /* \"contracts/bet.sol\":8178:8190  owner().call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/bet.sol\":8198:8205  balance */\n      dup3\n        /* \"contracts/bet.sol\":8178:8210  owner().call{value: balance}(\"\") */\n      mload(0x40)\n      tag_357\n      swap1\n      tag_358\n      jump\t// in\n    tag_357:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_361\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_360)\n    tag_361:\n      0x60\n      swap2\n      pop\n    tag_360:\n      pop\n        /* \"contracts/bet.sol\":8159:8210  (bool success, ) = owner().call{value: balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/bet.sol\":8228:8235  success */\n      dup1\n        /* \"contracts/bet.sol\":8220:8255  require(success, \"Transfer failed\") */\n      tag_362\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_363\n      swap1\n      tag_364\n      jump\t// in\n    tag_363:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_362:\n        /* \"contracts/bet.sol\":8270:8291  ETHWithdrawn(balance) */\n      0x043f607a14d3b4f0a11a0b2e192bbfcd894298ba5abf22553be6081406db28aa\n        /* \"contracts/bet.sol\":8283:8290  balance */\n      dup3\n        /* \"contracts/bet.sol\":8270:8291  ETHWithdrawn(balance) */\n      mload(0x40)\n      tag_365\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_365:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/bet.sol\":8048:8298  {... */\n      pop\n      pop\n        /* \"contracts/bet.sol\":8006:8298  function withdrawETH() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/bet.sol\":7190:7376  function endPrivateSale() external onlyOwner {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_367\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_367:\n        /* \"contracts/bet.sol\":7253:7270  privateSaleActive */\n      0x18\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bet.sol\":7245:7301  require(privateSaleActive, \"Private Sale is not active\") */\n      tag_369\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_370\n      swap1\n      tag_335\n      jump\t// in\n    tag_370:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_369:\n        /* \"contracts/bet.sol\":7331:7336  false */\n      0x00\n        /* \"contracts/bet.sol\":7311:7328  privateSaleActive */\n      0x18\n      0x00\n        /* \"contracts/bet.sol\":7311:7336  privateSaleActive = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/bet.sol\":7351:7369  PrivateSaleEnded() */\n      0x8d80f5be79e7dd88d69814b57e8f5c7dd249b3d6bac194eb9144b8ca639db036\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/bet.sol\":7190:7376  function endPrivateSale() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/bet.sol\":7436:7602  function endPreSale() external onlyOwner {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_372\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_372:\n        /* \"contracts/bet.sol\":7495:7508  preSaleActive */\n      0x14\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bet.sol\":7487:7535  require(preSaleActive, \"Pre-Sale is not active\") */\n      tag_374\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_375\n      swap1\n      tag_254\n      jump\t// in\n    tag_375:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_374:\n        /* \"contracts/bet.sol\":7561:7566  false */\n      0x00\n        /* \"contracts/bet.sol\":7545:7558  preSaleActive */\n      0x14\n      0x00\n        /* \"contracts/bet.sol\":7545:7566  preSaleActive = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/bet.sol\":7581:7595  PreSaleEnded() */\n      0xc82e6055d31de9b552cd0014f23a8b8ce120c288ed1afce01adb97150efc0185\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/bet.sol\":7436:7602  function endPreSale() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/bet.sol\":1131:1188  uint256 public preSaleTargetFunds = 19_000_000 * 10 ** 18 */\n    tag_208:\n      sload(0x0f)\n      dup2\n      jump\t// out\n        /* \"contracts/bet.sol\":6311:6647  function calculateTokensPrivateSale(uint256 usdAmount) public view returns (uint256) {... */\n    tag_213:\n        /* \"contracts/bet.sol\":6387:6394  uint256 */\n      0x00\n        /* \"contracts/bet.sol\":6406:6426  uint256 currentPrice */\n      dup1\n        /* \"contracts/bet.sol\":6539:6556  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bet.sol\":6515:6536  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bet.sol\":6490:6511  privateSaleStartPrice */\n      sload(0x09)\n        /* \"contracts/bet.sol\":6468:6487  privateSaleEndPrice */\n      sload(0x0a)\n        /* \"contracts/bet.sol\":6468:6511  privateSaleEndPrice - privateSaleStartPrice */\n      tag_377\n      swap2\n      swap1\n      tag_321\n      jump\t// in\n    tag_377:\n        /* \"contracts/bet.sol\":6467:6536  (privateSaleEndPrice - privateSaleStartPrice) * privateSaleSoldTokens */\n      tag_378\n      swap2\n      swap1\n      tag_323\n      jump\t// in\n    tag_378:\n        /* \"contracts/bet.sol\":6467:6556  (privateSaleEndPrice - privateSaleStartPrice) * privateSaleSoldTokens / privateSaleTokens */\n      tag_379\n      swap2\n      swap1\n      tag_325\n      jump\t// in\n    tag_379:\n        /* \"contracts/bet.sol\":6429:6450  privateSaleStartPrice */\n      sload(0x09)\n        /* \"contracts/bet.sol\":6429:6566  privateSaleStartPrice + (... */\n      tag_380\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_380:\n        /* \"contracts/bet.sol\":6406:6566  uint256 currentPrice = privateSaleStartPrice + (... */\n      swap1\n      pop\n        /* \"contracts/bet.sol\":6576:6590  uint256 tokens */\n      0x00\n        /* \"contracts/bet.sol\":6605:6617  currentPrice */\n      dup2\n        /* \"contracts/bet.sol\":6593:6602  usdAmount */\n      dup5\n        /* \"contracts/bet.sol\":6593:6617  usdAmount / currentPrice */\n      tag_381\n      swap2\n      swap1\n      tag_325\n      jump\t// in\n    tag_381:\n        /* \"contracts/bet.sol\":6576:6617  uint256 tokens = usdAmount / currentPrice */\n      swap1\n      pop\n        /* \"contracts/bet.sol\":6634:6640  tokens */\n      dup1\n        /* \"contracts/bet.sol\":6627:6640  return tokens */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/bet.sol\":6311:6647  function calculateTokensPrivateSale(uint256 usdAmount) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_383\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_383:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_385\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_386\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_386:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_385:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_387\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_286\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/bet.sol\":2042:2101  mapping(address => VestingSchedule) public vestingSchedules */\n    tag_222:\n      mstore(0x20, 0x17)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_390\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_391\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_390:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_393\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_393:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_394\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_395\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_396\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_397\n      jump\t// in\n    tag_396:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_395:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_398\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_391\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_398:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_394:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_400\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_401\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_401:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_400:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_402\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_403\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_403:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_402:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_404\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_405\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_404:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_407\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_408\n      swap1\n      tag_409\n      jump\t// in\n    tag_408:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_407:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_411\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_103\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_411:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_412\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_413\n      swap1\n      tag_414\n      jump\t// in\n    tag_413:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_412:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_417\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_234\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_417:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_418\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_418:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_419\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_420\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_234\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_420:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_421\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_421:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_419:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/bet.sol\":6711:7126  function createVestingSchedule(... */\n    tag_347:\n        /* \"contracts/bet.sol\":6899:6931  VestingSchedule storage schedule */\n      0x00\n        /* \"contracts/bet.sol\":6934:6950  vestingSchedules */\n      0x17\n        /* \"contracts/bet.sol\":6934:6963  vestingSchedules[beneficiary] */\n      0x00\n        /* \"contracts/bet.sol\":6951:6962  beneficiary */\n      dup8\n        /* \"contracts/bet.sol\":6934:6963  vestingSchedules[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/bet.sol\":6899:6963  VestingSchedule storage schedule = vestingSchedules[beneficiary] */\n      swap1\n      pop\n        /* \"contracts/bet.sol\":6997:7003  amount */\n      dup5\n        /* \"contracts/bet.sol\":6973:6981  schedule */\n      dup2\n        /* \"contracts/bet.sol\":6973:6993  schedule.totalAmount */\n      0x00\n      add\n      0x00\n        /* \"contracts/bet.sol\":6973:7003  schedule.totalAmount += amount */\n      dup3\n      dup3\n      sload\n      tag_424\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_424:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bet.sol\":7034:7043  startTime */\n      dup4\n        /* \"contracts/bet.sol\":7013:7021  schedule */\n      dup2\n        /* \"contracts/bet.sol\":7013:7031  schedule.startTime */\n      0x02\n      add\n        /* \"contracts/bet.sol\":7013:7043  schedule.startTime = startTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bet.sol\":7073:7081  duration */\n      dup3\n        /* \"contracts/bet.sol\":7053:7061  schedule */\n      dup2\n        /* \"contracts/bet.sol\":7053:7070  schedule.duration */\n      0x03\n      add\n        /* \"contracts/bet.sol\":7053:7081  schedule.duration = duration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bet.sol\":7111:7119  interval */\n      dup2\n        /* \"contracts/bet.sol\":7091:7099  schedule */\n      dup2\n        /* \"contracts/bet.sol\":7091:7108  schedule.interval */\n      0x04\n      add\n        /* \"contracts/bet.sol\":7091:7119  schedule.interval = interval */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bet.sol\":6889:7126  {... */\n      pop\n        /* \"contracts/bet.sol\":6711:7126  function createVestingSchedule(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_391:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_426\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_427\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_427:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_426:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_428\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_429\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_429:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_428:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_430\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_431\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_431:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_430:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_405:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_433\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_434\n      swap2\n      swap1\n      tag_263\n      jump\t// in\n    tag_434:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_435)\n    tag_433:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_436\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_437\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_397\n      jump\t// in\n    tag_437:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_436:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_435:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_438\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_439)\n    tag_438:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_439:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_440\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_440:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_441:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_442:\n        /* \"#utility.yul\":177:201   */\n      tag_501\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_441\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_54:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_503\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_442\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:541   */\n    tag_443:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":528:533   */\n      dup2\n        /* \"#utility.yul\":522:534   */\n      mload\n        /* \"#utility.yul\":512:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:716   */\n    tag_444:\n        /* \"#utility.yul\":631:642   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup3\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:672   */\n      mstore\n        /* \"#utility.yul\":705:709   */\n      0x20\n        /* \"#utility.yul\":700:703   */\n      dup3\n        /* \"#utility.yul\":696:710   */\n      add\n        /* \"#utility.yul\":681:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":547:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:970   */\n    tag_445:\n        /* \"#utility.yul\":804:805   */\n      0x00\n        /* \"#utility.yul\":814:927   */\n    tag_507:\n        /* \"#utility.yul\":828:834   */\n      dup4\n        /* \"#utility.yul\":825:826   */\n      dup2\n        /* \"#utility.yul\":822:835   */\n      lt\n        /* \"#utility.yul\":814:927   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":913:914   */\n      dup1\n        /* \"#utility.yul\":908:911   */\n      dup3\n        /* \"#utility.yul\":904:915   */\n      add\n        /* \"#utility.yul\":898:916   */\n      mload\n        /* \"#utility.yul\":894:895   */\n      dup2\n        /* \"#utility.yul\":889:892   */\n      dup5\n        /* \"#utility.yul\":885:896   */\n      add\n        /* \"#utility.yul\":878:917   */\n      mstore\n        /* \"#utility.yul\":850:852   */\n      0x20\n        /* \"#utility.yul\":847:848   */\n      dup2\n        /* \"#utility.yul\":843:853   */\n      add\n        /* \"#utility.yul\":838:853   */\n      swap1\n      pop\n        /* \"#utility.yul\":814:927   */\n      jump(tag_507)\n    tag_509:\n        /* \"#utility.yul\":961:962   */\n      0x00\n        /* \"#utility.yul\":952:958   */\n      dup5\n        /* \"#utility.yul\":947:950   */\n      dup5\n        /* \"#utility.yul\":943:959   */\n      add\n        /* \"#utility.yul\":936:963   */\n      mstore\n        /* \"#utility.yul\":784:970   */\n      pop\n        /* \"#utility.yul\":722:970   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":976:1078   */\n    tag_446:\n        /* \"#utility.yul\":1017:1023   */\n      0x00\n        /* \"#utility.yul\":1068:1070   */\n      0x1f\n        /* \"#utility.yul\":1064:1071   */\n      not\n        /* \"#utility.yul\":1059:1061   */\n      0x1f\n        /* \"#utility.yul\":1052:1057   */\n      dup4\n        /* \"#utility.yul\":1048:1062   */\n      add\n        /* \"#utility.yul\":1044:1072   */\n      and\n        /* \"#utility.yul\":1034:1072   */\n      swap1\n      pop\n        /* \"#utility.yul\":976:1078   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1084:1461   */\n    tag_447:\n        /* \"#utility.yul\":1172:1175   */\n      0x00\n        /* \"#utility.yul\":1200:1239   */\n      tag_512\n        /* \"#utility.yul\":1233:1238   */\n      dup3\n        /* \"#utility.yul\":1200:1239   */\n      tag_443\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":1255:1326   */\n      tag_513\n        /* \"#utility.yul\":1319:1325   */\n      dup2\n        /* \"#utility.yul\":1314:1317   */\n      dup6\n        /* \"#utility.yul\":1255:1326   */\n      tag_444\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":1248:1326   */\n      swap4\n      pop\n        /* \"#utility.yul\":1335:1400   */\n      tag_514\n        /* \"#utility.yul\":1393:1399   */\n      dup2\n        /* \"#utility.yul\":1388:1391   */\n      dup6\n        /* \"#utility.yul\":1381:1385   */\n      0x20\n        /* \"#utility.yul\":1374:1379   */\n      dup7\n        /* \"#utility.yul\":1370:1386   */\n      add\n        /* \"#utility.yul\":1335:1400   */\n      tag_445\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":1425:1454   */\n      tag_515\n        /* \"#utility.yul\":1447:1453   */\n      dup2\n        /* \"#utility.yul\":1425:1454   */\n      tag_446\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":1420:1423   */\n      dup5\n        /* \"#utility.yul\":1416:1455   */\n      add\n        /* \"#utility.yul\":1409:1455   */\n      swap2\n      pop\n        /* \"#utility.yul\":1176:1461   */\n      pop\n        /* \"#utility.yul\":1084:1461   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1467:1780   */\n    tag_59:\n        /* \"#utility.yul\":1580:1584   */\n      0x00\n        /* \"#utility.yul\":1618:1620   */\n      0x20\n        /* \"#utility.yul\":1607:1616   */\n      dup3\n        /* \"#utility.yul\":1603:1621   */\n      add\n        /* \"#utility.yul\":1595:1621   */\n      swap1\n      pop\n        /* \"#utility.yul\":1667:1676   */\n      dup2\n        /* \"#utility.yul\":1661:1665   */\n      dup2\n        /* \"#utility.yul\":1657:1677   */\n      sub\n        /* \"#utility.yul\":1653:1654   */\n      0x00\n        /* \"#utility.yul\":1642:1651   */\n      dup4\n        /* \"#utility.yul\":1638:1655   */\n      add\n        /* \"#utility.yul\":1631:1678   */\n      mstore\n        /* \"#utility.yul\":1695:1773   */\n      tag_517\n        /* \"#utility.yul\":1768:1772   */\n      dup2\n        /* \"#utility.yul\":1759:1765   */\n      dup5\n        /* \"#utility.yul\":1695:1773   */\n      tag_447\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":1687:1773   */\n      swap1\n      pop\n        /* \"#utility.yul\":1467:1780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1867:1984   */\n    tag_449:\n        /* \"#utility.yul\":1976:1977   */\n      0x00\n        /* \"#utility.yul\":1973:1974   */\n      dup1\n        /* \"#utility.yul\":1966:1978   */\n      revert\n        /* \"#utility.yul\":2113:2239   */\n    tag_451:\n        /* \"#utility.yul\":2150:2157   */\n      0x00\n        /* \"#utility.yul\":2190:2232   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2183:2188   */\n      dup3\n        /* \"#utility.yul\":2179:2233   */\n      and\n        /* \"#utility.yul\":2168:2233   */\n      swap1\n      pop\n        /* \"#utility.yul\":2113:2239   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2245:2341   */\n    tag_452:\n        /* \"#utility.yul\":2282:2289   */\n      0x00\n        /* \"#utility.yul\":2311:2335   */\n      tag_523\n        /* \"#utility.yul\":2329:2334   */\n      dup3\n        /* \"#utility.yul\":2311:2335   */\n      tag_451\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":2300:2335   */\n      swap1\n      pop\n        /* \"#utility.yul\":2245:2341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2347:2469   */\n    tag_453:\n        /* \"#utility.yul\":2420:2444   */\n      tag_525\n        /* \"#utility.yul\":2438:2443   */\n      dup2\n        /* \"#utility.yul\":2420:2444   */\n      tag_452\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":2413:2418   */\n      dup2\n        /* \"#utility.yul\":2410:2445   */\n      eq\n        /* \"#utility.yul\":2400:2463   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":2459:2460   */\n      0x00\n        /* \"#utility.yul\":2456:2457   */\n      dup1\n        /* \"#utility.yul\":2449:2461   */\n      revert\n        /* \"#utility.yul\":2400:2463   */\n    tag_526:\n        /* \"#utility.yul\":2347:2469   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2475:2614   */\n    tag_454:\n        /* \"#utility.yul\":2521:2526   */\n      0x00\n        /* \"#utility.yul\":2559:2565   */\n      dup2\n        /* \"#utility.yul\":2546:2566   */\n      calldataload\n        /* \"#utility.yul\":2537:2566   */\n      swap1\n      pop\n        /* \"#utility.yul\":2575:2608   */\n      tag_528\n        /* \"#utility.yul\":2602:2607   */\n      dup2\n        /* \"#utility.yul\":2575:2608   */\n      tag_453\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":2475:2614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2620:2742   */\n    tag_455:\n        /* \"#utility.yul\":2693:2717   */\n      tag_530\n        /* \"#utility.yul\":2711:2716   */\n      dup2\n        /* \"#utility.yul\":2693:2717   */\n      tag_441\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":2686:2691   */\n      dup2\n        /* \"#utility.yul\":2683:2718   */\n      eq\n        /* \"#utility.yul\":2673:2736   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":2732:2733   */\n      0x00\n        /* \"#utility.yul\":2729:2730   */\n      dup1\n        /* \"#utility.yul\":2722:2734   */\n      revert\n        /* \"#utility.yul\":2673:2736   */\n    tag_531:\n        /* \"#utility.yul\":2620:2742   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2748:2887   */\n    tag_456:\n        /* \"#utility.yul\":2794:2799   */\n      0x00\n        /* \"#utility.yul\":2832:2838   */\n      dup2\n        /* \"#utility.yul\":2819:2839   */\n      calldataload\n        /* \"#utility.yul\":2810:2839   */\n      swap1\n      pop\n        /* \"#utility.yul\":2848:2881   */\n      tag_533\n        /* \"#utility.yul\":2875:2880   */\n      dup2\n        /* \"#utility.yul\":2848:2881   */\n      tag_455\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":2748:2887   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2893:3367   */\n    tag_63:\n        /* \"#utility.yul\":2961:2967   */\n      0x00\n        /* \"#utility.yul\":2969:2975   */\n      dup1\n        /* \"#utility.yul\":3018:3020   */\n      0x40\n        /* \"#utility.yul\":3006:3015   */\n      dup4\n        /* \"#utility.yul\":2997:3004   */\n      dup6\n        /* \"#utility.yul\":2993:3016   */\n      sub\n        /* \"#utility.yul\":2989:3021   */\n      slt\n        /* \"#utility.yul\":2986:3105   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":3024:3103   */\n      tag_536\n      tag_449\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":2986:3105   */\n    tag_535:\n        /* \"#utility.yul\":3144:3145   */\n      0x00\n        /* \"#utility.yul\":3169:3222   */\n      tag_537\n        /* \"#utility.yul\":3214:3221   */\n      dup6\n        /* \"#utility.yul\":3205:3211   */\n      dup3\n        /* \"#utility.yul\":3194:3203   */\n      dup7\n        /* \"#utility.yul\":3190:3212   */\n      add\n        /* \"#utility.yul\":3169:3222   */\n      tag_454\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":3159:3222   */\n      swap3\n      pop\n        /* \"#utility.yul\":3115:3232   */\n      pop\n        /* \"#utility.yul\":3271:3273   */\n      0x20\n        /* \"#utility.yul\":3297:3350   */\n      tag_538\n        /* \"#utility.yul\":3342:3349   */\n      dup6\n        /* \"#utility.yul\":3333:3339   */\n      dup3\n        /* \"#utility.yul\":3322:3331   */\n      dup7\n        /* \"#utility.yul\":3318:3340   */\n      add\n        /* \"#utility.yul\":3297:3350   */\n      tag_456\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":3287:3350   */\n      swap2\n      pop\n        /* \"#utility.yul\":3242:3360   */\n      pop\n        /* \"#utility.yul\":2893:3367   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3373:3463   */\n    tag_457:\n        /* \"#utility.yul\":3407:3414   */\n      0x00\n        /* \"#utility.yul\":3450:3455   */\n      dup2\n        /* \"#utility.yul\":3443:3456   */\n      iszero\n        /* \"#utility.yul\":3436:3457   */\n      iszero\n        /* \"#utility.yul\":3425:3457   */\n      swap1\n      pop\n        /* \"#utility.yul\":3373:3463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3469:3578   */\n    tag_458:\n        /* \"#utility.yul\":3550:3571   */\n      tag_541\n        /* \"#utility.yul\":3565:3570   */\n      dup2\n        /* \"#utility.yul\":3550:3571   */\n      tag_457\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":3545:3548   */\n      dup3\n        /* \"#utility.yul\":3538:3572   */\n      mstore\n        /* \"#utility.yul\":3469:3578   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3584:3794   */\n    tag_66:\n        /* \"#utility.yul\":3671:3675   */\n      0x00\n        /* \"#utility.yul\":3709:3711   */\n      0x20\n        /* \"#utility.yul\":3698:3707   */\n      dup3\n        /* \"#utility.yul\":3694:3712   */\n      add\n        /* \"#utility.yul\":3686:3712   */\n      swap1\n      pop\n        /* \"#utility.yul\":3722:3787   */\n      tag_543\n        /* \"#utility.yul\":3784:3785   */\n      0x00\n        /* \"#utility.yul\":3773:3782   */\n      dup4\n        /* \"#utility.yul\":3769:3786   */\n      add\n        /* \"#utility.yul\":3760:3766   */\n      dup5\n        /* \"#utility.yul\":3722:3787   */\n      tag_458\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":3584:3794   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3800:4419   */\n    tag_82:\n        /* \"#utility.yul\":3877:3883   */\n      0x00\n        /* \"#utility.yul\":3885:3891   */\n      dup1\n        /* \"#utility.yul\":3893:3899   */\n      0x00\n        /* \"#utility.yul\":3942:3944   */\n      0x60\n        /* \"#utility.yul\":3930:3939   */\n      dup5\n        /* \"#utility.yul\":3921:3928   */\n      dup7\n        /* \"#utility.yul\":3917:3940   */\n      sub\n        /* \"#utility.yul\":3913:3945   */\n      slt\n        /* \"#utility.yul\":3910:4029   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":3948:4027   */\n      tag_546\n      tag_449\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":3910:4029   */\n    tag_545:\n        /* \"#utility.yul\":4068:4069   */\n      0x00\n        /* \"#utility.yul\":4093:4146   */\n      tag_547\n        /* \"#utility.yul\":4138:4145   */\n      dup7\n        /* \"#utility.yul\":4129:4135   */\n      dup3\n        /* \"#utility.yul\":4118:4127   */\n      dup8\n        /* \"#utility.yul\":4114:4136   */\n      add\n        /* \"#utility.yul\":4093:4146   */\n      tag_454\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":4083:4146   */\n      swap4\n      pop\n        /* \"#utility.yul\":4039:4156   */\n      pop\n        /* \"#utility.yul\":4195:4197   */\n      0x20\n        /* \"#utility.yul\":4221:4274   */\n      tag_548\n        /* \"#utility.yul\":4266:4273   */\n      dup7\n        /* \"#utility.yul\":4257:4263   */\n      dup3\n        /* \"#utility.yul\":4246:4255   */\n      dup8\n        /* \"#utility.yul\":4242:4264   */\n      add\n        /* \"#utility.yul\":4221:4274   */\n      tag_454\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":4211:4274   */\n      swap3\n      pop\n        /* \"#utility.yul\":4166:4284   */\n      pop\n        /* \"#utility.yul\":4323:4325   */\n      0x40\n        /* \"#utility.yul\":4349:4402   */\n      tag_549\n        /* \"#utility.yul\":4394:4401   */\n      dup7\n        /* \"#utility.yul\":4385:4391   */\n      dup3\n        /* \"#utility.yul\":4374:4383   */\n      dup8\n        /* \"#utility.yul\":4370:4392   */\n      add\n        /* \"#utility.yul\":4349:4402   */\n      tag_456\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":4339:4402   */\n      swap2\n      pop\n        /* \"#utility.yul\":4294:4412   */\n      pop\n        /* \"#utility.yul\":3800:4419   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4425:4511   */\n    tag_459:\n        /* \"#utility.yul\":4460:4467   */\n      0x00\n        /* \"#utility.yul\":4500:4504   */\n      0xff\n        /* \"#utility.yul\":4493:4498   */\n      dup3\n        /* \"#utility.yul\":4489:4505   */\n      and\n        /* \"#utility.yul\":4478:4505   */\n      swap1\n      pop\n        /* \"#utility.yul\":4425:4511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4517:4629   */\n    tag_460:\n        /* \"#utility.yul\":4600:4622   */\n      tag_552\n        /* \"#utility.yul\":4616:4621   */\n      dup2\n        /* \"#utility.yul\":4600:4622   */\n      tag_459\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":4595:4598   */\n      dup3\n        /* \"#utility.yul\":4588:4623   */\n      mstore\n        /* \"#utility.yul\":4517:4629   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4635:4849   */\n    tag_93:\n        /* \"#utility.yul\":4724:4728   */\n      0x00\n        /* \"#utility.yul\":4762:4764   */\n      0x20\n        /* \"#utility.yul\":4751:4760   */\n      dup3\n        /* \"#utility.yul\":4747:4765   */\n      add\n        /* \"#utility.yul\":4739:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4775:4842   */\n      tag_554\n        /* \"#utility.yul\":4839:4840   */\n      0x00\n        /* \"#utility.yul\":4828:4837   */\n      dup4\n        /* \"#utility.yul\":4824:4841   */\n      add\n        /* \"#utility.yul\":4815:4821   */\n      dup5\n        /* \"#utility.yul\":4775:4842   */\n      tag_460\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":4635:4849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4855:5184   */\n    tag_96:\n        /* \"#utility.yul\":4914:4920   */\n      0x00\n        /* \"#utility.yul\":4963:4965   */\n      0x20\n        /* \"#utility.yul\":4951:4960   */\n      dup3\n        /* \"#utility.yul\":4942:4949   */\n      dup5\n        /* \"#utility.yul\":4938:4961   */\n      sub\n        /* \"#utility.yul\":4934:4966   */\n      slt\n        /* \"#utility.yul\":4931:5050   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":4969:5048   */\n      tag_557\n      tag_449\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":4931:5050   */\n    tag_556:\n        /* \"#utility.yul\":5089:5090   */\n      0x00\n        /* \"#utility.yul\":5114:5167   */\n      tag_558\n        /* \"#utility.yul\":5159:5166   */\n      dup5\n        /* \"#utility.yul\":5150:5156   */\n      dup3\n        /* \"#utility.yul\":5139:5148   */\n      dup6\n        /* \"#utility.yul\":5135:5157   */\n      add\n        /* \"#utility.yul\":5114:5167   */\n      tag_456\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":5104:5167   */\n      swap2\n      pop\n        /* \"#utility.yul\":5060:5177   */\n      pop\n        /* \"#utility.yul\":4855:5184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5190:5519   */\n    tag_112:\n        /* \"#utility.yul\":5249:5255   */\n      0x00\n        /* \"#utility.yul\":5298:5300   */\n      0x20\n        /* \"#utility.yul\":5286:5295   */\n      dup3\n        /* \"#utility.yul\":5277:5284   */\n      dup5\n        /* \"#utility.yul\":5273:5296   */\n      sub\n        /* \"#utility.yul\":5269:5301   */\n      slt\n        /* \"#utility.yul\":5266:5385   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":5304:5383   */\n      tag_561\n      tag_449\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":5266:5385   */\n    tag_560:\n        /* \"#utility.yul\":5424:5425   */\n      0x00\n        /* \"#utility.yul\":5449:5502   */\n      tag_562\n        /* \"#utility.yul\":5494:5501   */\n      dup5\n        /* \"#utility.yul\":5485:5491   */\n      dup3\n        /* \"#utility.yul\":5474:5483   */\n      dup6\n        /* \"#utility.yul\":5470:5492   */\n      add\n        /* \"#utility.yul\":5449:5502   */\n      tag_454\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":5439:5502   */\n      swap2\n      pop\n        /* \"#utility.yul\":5395:5512   */\n      pop\n        /* \"#utility.yul\":5190:5519   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5525:5643   */\n    tag_461:\n        /* \"#utility.yul\":5612:5636   */\n      tag_564\n        /* \"#utility.yul\":5630:5635   */\n      dup2\n        /* \"#utility.yul\":5612:5636   */\n      tag_452\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":5607:5610   */\n      dup3\n        /* \"#utility.yul\":5600:5637   */\n      mstore\n        /* \"#utility.yul\":5525:5643   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5649:5871   */\n    tag_129:\n        /* \"#utility.yul\":5742:5746   */\n      0x00\n        /* \"#utility.yul\":5780:5782   */\n      0x20\n        /* \"#utility.yul\":5769:5778   */\n      dup3\n        /* \"#utility.yul\":5765:5783   */\n      add\n        /* \"#utility.yul\":5757:5783   */\n      swap1\n      pop\n        /* \"#utility.yul\":5793:5864   */\n      tag_566\n        /* \"#utility.yul\":5861:5862   */\n      0x00\n        /* \"#utility.yul\":5850:5859   */\n      dup4\n        /* \"#utility.yul\":5846:5863   */\n      add\n        /* \"#utility.yul\":5837:5843   */\n      dup5\n        /* \"#utility.yul\":5793:5864   */\n      tag_461\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":5649:5871   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5877:6351   */\n    tag_194:\n        /* \"#utility.yul\":5945:5951   */\n      0x00\n        /* \"#utility.yul\":5953:5959   */\n      dup1\n        /* \"#utility.yul\":6002:6004   */\n      0x40\n        /* \"#utility.yul\":5990:5999   */\n      dup4\n        /* \"#utility.yul\":5981:5988   */\n      dup6\n        /* \"#utility.yul\":5977:6000   */\n      sub\n        /* \"#utility.yul\":5973:6005   */\n      slt\n        /* \"#utility.yul\":5970:6089   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":6008:6087   */\n      tag_569\n      tag_449\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":5970:6089   */\n    tag_568:\n        /* \"#utility.yul\":6128:6129   */\n      0x00\n        /* \"#utility.yul\":6153:6206   */\n      tag_570\n        /* \"#utility.yul\":6198:6205   */\n      dup6\n        /* \"#utility.yul\":6189:6195   */\n      dup3\n        /* \"#utility.yul\":6178:6187   */\n      dup7\n        /* \"#utility.yul\":6174:6196   */\n      add\n        /* \"#utility.yul\":6153:6206   */\n      tag_454\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":6143:6206   */\n      swap3\n      pop\n        /* \"#utility.yul\":6099:6216   */\n      pop\n        /* \"#utility.yul\":6255:6257   */\n      0x20\n        /* \"#utility.yul\":6281:6334   */\n      tag_571\n        /* \"#utility.yul\":6326:6333   */\n      dup6\n        /* \"#utility.yul\":6317:6323   */\n      dup3\n        /* \"#utility.yul\":6306:6315   */\n      dup7\n        /* \"#utility.yul\":6302:6324   */\n      add\n        /* \"#utility.yul\":6281:6334   */\n      tag_454\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":6271:6334   */\n      swap2\n      pop\n        /* \"#utility.yul\":6226:6344   */\n      pop\n        /* \"#utility.yul\":5877:6351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6357:7021   */\n    tag_224:\n        /* \"#utility.yul\":6562:6566   */\n      0x00\n        /* \"#utility.yul\":6600:6603   */\n      0xa0\n        /* \"#utility.yul\":6589:6598   */\n      dup3\n        /* \"#utility.yul\":6585:6604   */\n      add\n        /* \"#utility.yul\":6577:6604   */\n      swap1\n      pop\n        /* \"#utility.yul\":6614:6685   */\n      tag_573\n        /* \"#utility.yul\":6682:6683   */\n      0x00\n        /* \"#utility.yul\":6671:6680   */\n      dup4\n        /* \"#utility.yul\":6667:6684   */\n      add\n        /* \"#utility.yul\":6658:6664   */\n      dup9\n        /* \"#utility.yul\":6614:6685   */\n      tag_442\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":6695:6767   */\n      tag_574\n        /* \"#utility.yul\":6763:6765   */\n      0x20\n        /* \"#utility.yul\":6752:6761   */\n      dup4\n        /* \"#utility.yul\":6748:6766   */\n      add\n        /* \"#utility.yul\":6739:6745   */\n      dup8\n        /* \"#utility.yul\":6695:6767   */\n      tag_442\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":6777:6849   */\n      tag_575\n        /* \"#utility.yul\":6845:6847   */\n      0x40\n        /* \"#utility.yul\":6834:6843   */\n      dup4\n        /* \"#utility.yul\":6830:6848   */\n      add\n        /* \"#utility.yul\":6821:6827   */\n      dup7\n        /* \"#utility.yul\":6777:6849   */\n      tag_442\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":6859:6931   */\n      tag_576\n        /* \"#utility.yul\":6927:6929   */\n      0x60\n        /* \"#utility.yul\":6916:6925   */\n      dup4\n        /* \"#utility.yul\":6912:6930   */\n      add\n        /* \"#utility.yul\":6903:6909   */\n      dup6\n        /* \"#utility.yul\":6859:6931   */\n      tag_442\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":6941:7014   */\n      tag_577\n        /* \"#utility.yul\":7009:7012   */\n      0x80\n        /* \"#utility.yul\":6998:7007   */\n      dup4\n        /* \"#utility.yul\":6994:7013   */\n      add\n        /* \"#utility.yul\":6985:6991   */\n      dup5\n        /* \"#utility.yul\":6941:7014   */\n      tag_442\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":6357:7021   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7027:7207   */\n    tag_462:\n        /* \"#utility.yul\":7075:7152   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7072:7073   */\n      0x00\n        /* \"#utility.yul\":7065:7153   */\n      mstore\n        /* \"#utility.yul\":7172:7176   */\n      0x22\n        /* \"#utility.yul\":7169:7170   */\n      0x04\n        /* \"#utility.yul\":7162:7177   */\n      mstore\n        /* \"#utility.yul\":7196:7200   */\n      0x24\n        /* \"#utility.yul\":7193:7194   */\n      0x00\n        /* \"#utility.yul\":7186:7201   */\n      revert\n        /* \"#utility.yul\":7213:7533   */\n    tag_227:\n        /* \"#utility.yul\":7257:7263   */\n      0x00\n        /* \"#utility.yul\":7294:7295   */\n      0x02\n        /* \"#utility.yul\":7288:7292   */\n      dup3\n        /* \"#utility.yul\":7284:7296   */\n      div\n        /* \"#utility.yul\":7274:7296   */\n      swap1\n      pop\n        /* \"#utility.yul\":7341:7342   */\n      0x01\n        /* \"#utility.yul\":7335:7339   */\n      dup3\n        /* \"#utility.yul\":7331:7343   */\n      and\n        /* \"#utility.yul\":7362:7380   */\n      dup1\n        /* \"#utility.yul\":7352:7433   */\n      tag_580\n      jumpi\n        /* \"#utility.yul\":7418:7422   */\n      0x7f\n        /* \"#utility.yul\":7410:7416   */\n      dup3\n        /* \"#utility.yul\":7406:7423   */\n      and\n        /* \"#utility.yul\":7396:7423   */\n      swap2\n      pop\n        /* \"#utility.yul\":7352:7433   */\n    tag_580:\n        /* \"#utility.yul\":7480:7482   */\n      0x20\n        /* \"#utility.yul\":7472:7478   */\n      dup3\n        /* \"#utility.yul\":7469:7483   */\n      lt\n        /* \"#utility.yul\":7449:7467   */\n      dup2\n        /* \"#utility.yul\":7446:7484   */\n      sub\n        /* \"#utility.yul\":7443:7527   */\n      tag_581\n      jumpi\n        /* \"#utility.yul\":7499:7517   */\n      tag_582\n      tag_462\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":7443:7527   */\n    tag_581:\n        /* \"#utility.yul\":7264:7533   */\n      pop\n        /* \"#utility.yul\":7213:7533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7539:7711   */\n    tag_463:\n        /* \"#utility.yul\":7679:7703   */\n      0x5072652d53616c65206973206e6f742061637469766500000000000000000000\n        /* \"#utility.yul\":7675:7676   */\n      0x00\n        /* \"#utility.yul\":7667:7673   */\n      dup3\n        /* \"#utility.yul\":7663:7677   */\n      add\n        /* \"#utility.yul\":7656:7704   */\n      mstore\n        /* \"#utility.yul\":7539:7711   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7717:8083   */\n    tag_464:\n        /* \"#utility.yul\":7859:7862   */\n      0x00\n        /* \"#utility.yul\":7880:7947   */\n      tag_585\n        /* \"#utility.yul\":7944:7946   */\n      0x16\n        /* \"#utility.yul\":7939:7942   */\n      dup4\n        /* \"#utility.yul\":7880:7947   */\n      tag_444\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":7873:7947   */\n      swap2\n      pop\n        /* \"#utility.yul\":7956:8049   */\n      tag_586\n        /* \"#utility.yul\":8045:8048   */\n      dup3\n        /* \"#utility.yul\":7956:8049   */\n      tag_463\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":8074:8076   */\n      0x20\n        /* \"#utility.yul\":8069:8072   */\n      dup3\n        /* \"#utility.yul\":8065:8077   */\n      add\n        /* \"#utility.yul\":8058:8077   */\n      swap1\n      pop\n        /* \"#utility.yul\":7717:8083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8089:8508   */\n    tag_254:\n        /* \"#utility.yul\":8255:8259   */\n      0x00\n        /* \"#utility.yul\":8293:8295   */\n      0x20\n        /* \"#utility.yul\":8282:8291   */\n      dup3\n        /* \"#utility.yul\":8278:8296   */\n      add\n        /* \"#utility.yul\":8270:8296   */\n      swap1\n      pop\n        /* \"#utility.yul\":8342:8351   */\n      dup2\n        /* \"#utility.yul\":8336:8340   */\n      dup2\n        /* \"#utility.yul\":8332:8352   */\n      sub\n        /* \"#utility.yul\":8328:8329   */\n      0x00\n        /* \"#utility.yul\":8317:8326   */\n      dup4\n        /* \"#utility.yul\":8313:8330   */\n      add\n        /* \"#utility.yul\":8306:8353   */\n      mstore\n        /* \"#utility.yul\":8370:8501   */\n      tag_588\n        /* \"#utility.yul\":8496:8500   */\n      dup2\n        /* \"#utility.yul\":8370:8501   */\n      tag_464\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":8362:8501   */\n      swap1\n      pop\n        /* \"#utility.yul\":8089:8508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8514:8739   */\n    tag_465:\n        /* \"#utility.yul\":8654:8688   */\n      0x416d6f756e742069732062656c6f77206d696e696d756d207075726368617365\n        /* \"#utility.yul\":8650:8651   */\n      0x00\n        /* \"#utility.yul\":8642:8648   */\n      dup3\n        /* \"#utility.yul\":8638:8652   */\n      add\n        /* \"#utility.yul\":8631:8689   */\n      mstore\n        /* \"#utility.yul\":8723:8731   */\n      0x206c696d69740000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8718:8720   */\n      0x20\n        /* \"#utility.yul\":8710:8716   */\n      dup3\n        /* \"#utility.yul\":8706:8721   */\n      add\n        /* \"#utility.yul\":8699:8732   */\n      mstore\n        /* \"#utility.yul\":8514:8739   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8745:9111   */\n    tag_466:\n        /* \"#utility.yul\":8887:8890   */\n      0x00\n        /* \"#utility.yul\":8908:8975   */\n      tag_591\n        /* \"#utility.yul\":8972:8974   */\n      0x26\n        /* \"#utility.yul\":8967:8970   */\n      dup4\n        /* \"#utility.yul\":8908:8975   */\n      tag_444\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":8901:8975   */\n      swap2\n      pop\n        /* \"#utility.yul\":8984:9077   */\n      tag_592\n        /* \"#utility.yul\":9073:9076   */\n      dup3\n        /* \"#utility.yul\":8984:9077   */\n      tag_465\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":9102:9104   */\n      0x40\n        /* \"#utility.yul\":9097:9100   */\n      dup3\n        /* \"#utility.yul\":9093:9105   */\n      add\n        /* \"#utility.yul\":9086:9105   */\n      swap1\n      pop\n        /* \"#utility.yul\":8745:9111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9117:9536   */\n    tag_257:\n        /* \"#utility.yul\":9283:9287   */\n      0x00\n        /* \"#utility.yul\":9321:9323   */\n      0x20\n        /* \"#utility.yul\":9310:9319   */\n      dup3\n        /* \"#utility.yul\":9306:9324   */\n      add\n        /* \"#utility.yul\":9298:9324   */\n      swap1\n      pop\n        /* \"#utility.yul\":9370:9379   */\n      dup2\n        /* \"#utility.yul\":9364:9368   */\n      dup2\n        /* \"#utility.yul\":9360:9380   */\n      sub\n        /* \"#utility.yul\":9356:9357   */\n      0x00\n        /* \"#utility.yul\":9345:9354   */\n      dup4\n        /* \"#utility.yul\":9341:9358   */\n      add\n        /* \"#utility.yul\":9334:9381   */\n      mstore\n        /* \"#utility.yul\":9398:9529   */\n      tag_594\n        /* \"#utility.yul\":9524:9528   */\n      dup2\n        /* \"#utility.yul\":9398:9529   */\n      tag_466\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":9390:9529   */\n      swap1\n      pop\n        /* \"#utility.yul\":9117:9536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9542:9766   */\n    tag_467:\n        /* \"#utility.yul\":9682:9716   */\n      0x416d6f756e742065786365656473206d6178696d756d20707572636861736520\n        /* \"#utility.yul\":9678:9679   */\n      0x00\n        /* \"#utility.yul\":9670:9676   */\n      dup3\n        /* \"#utility.yul\":9666:9680   */\n      add\n        /* \"#utility.yul\":9659:9717   */\n      mstore\n        /* \"#utility.yul\":9751:9758   */\n      0x6c696d6974000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9746:9748   */\n      0x20\n        /* \"#utility.yul\":9738:9744   */\n      dup3\n        /* \"#utility.yul\":9734:9749   */\n      add\n        /* \"#utility.yul\":9727:9759   */\n      mstore\n        /* \"#utility.yul\":9542:9766   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9772:10138   */\n    tag_468:\n        /* \"#utility.yul\":9914:9917   */\n      0x00\n        /* \"#utility.yul\":9935:10002   */\n      tag_597\n        /* \"#utility.yul\":9999:10001   */\n      0x25\n        /* \"#utility.yul\":9994:9997   */\n      dup4\n        /* \"#utility.yul\":9935:10002   */\n      tag_444\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":9928:10002   */\n      swap2\n      pop\n        /* \"#utility.yul\":10011:10104   */\n      tag_598\n        /* \"#utility.yul\":10100:10103   */\n      dup3\n        /* \"#utility.yul\":10011:10104   */\n      tag_467\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":10129:10131   */\n      0x40\n        /* \"#utility.yul\":10124:10127   */\n      dup3\n        /* \"#utility.yul\":10120:10132   */\n      add\n        /* \"#utility.yul\":10113:10132   */\n      swap1\n      pop\n        /* \"#utility.yul\":9772:10138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10144:10563   */\n    tag_260:\n        /* \"#utility.yul\":10310:10314   */\n      0x00\n        /* \"#utility.yul\":10348:10350   */\n      0x20\n        /* \"#utility.yul\":10337:10346   */\n      dup3\n        /* \"#utility.yul\":10333:10351   */\n      add\n        /* \"#utility.yul\":10325:10351   */\n      swap1\n      pop\n        /* \"#utility.yul\":10397:10406   */\n      dup2\n        /* \"#utility.yul\":10391:10395   */\n      dup2\n        /* \"#utility.yul\":10387:10407   */\n      sub\n        /* \"#utility.yul\":10383:10384   */\n      0x00\n        /* \"#utility.yul\":10372:10381   */\n      dup4\n        /* \"#utility.yul\":10368:10385   */\n      add\n        /* \"#utility.yul\":10361:10408   */\n      mstore\n        /* \"#utility.yul\":10425:10556   */\n      tag_600\n        /* \"#utility.yul\":10551:10555   */\n      dup2\n        /* \"#utility.yul\":10425:10556   */\n      tag_468\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":10417:10556   */\n      swap1\n      pop\n        /* \"#utility.yul\":10144:10563   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10569:10749   */\n    tag_469:\n        /* \"#utility.yul\":10617:10694   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10614:10615   */\n      0x00\n        /* \"#utility.yul\":10607:10695   */\n      mstore\n        /* \"#utility.yul\":10714:10718   */\n      0x11\n        /* \"#utility.yul\":10711:10712   */\n      0x04\n        /* \"#utility.yul\":10704:10719   */\n      mstore\n        /* \"#utility.yul\":10738:10742   */\n      0x24\n        /* \"#utility.yul\":10735:10736   */\n      0x00\n        /* \"#utility.yul\":10728:10743   */\n      revert\n        /* \"#utility.yul\":10755:10946   */\n    tag_263:\n        /* \"#utility.yul\":10795:10798   */\n      0x00\n        /* \"#utility.yul\":10814:10834   */\n      tag_603\n        /* \"#utility.yul\":10832:10833   */\n      dup3\n        /* \"#utility.yul\":10814:10834   */\n      tag_441\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":10809:10834   */\n      swap2\n      pop\n        /* \"#utility.yul\":10848:10868   */\n      tag_604\n        /* \"#utility.yul\":10866:10867   */\n      dup4\n        /* \"#utility.yul\":10848:10868   */\n      tag_441\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":10843:10868   */\n      swap3\n      pop\n        /* \"#utility.yul\":10891:10892   */\n      dup3\n        /* \"#utility.yul\":10888:10889   */\n      dup3\n        /* \"#utility.yul\":10884:10893   */\n      add\n        /* \"#utility.yul\":10877:10893   */\n      swap1\n      pop\n        /* \"#utility.yul\":10912:10915   */\n      dup1\n        /* \"#utility.yul\":10909:10910   */\n      dup3\n        /* \"#utility.yul\":10906:10916   */\n      gt\n        /* \"#utility.yul\":10903:10939   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":10919:10937   */\n      tag_606\n      tag_469\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":10903:10939   */\n    tag_605:\n        /* \"#utility.yul\":10755:10946   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10952:11130   */\n    tag_470:\n        /* \"#utility.yul\":11092:11122   */\n      0x45786365656473205072652d53616c6520746f6b656e206c696d697400000000\n        /* \"#utility.yul\":11088:11089   */\n      0x00\n        /* \"#utility.yul\":11080:11086   */\n      dup3\n        /* \"#utility.yul\":11076:11090   */\n      add\n        /* \"#utility.yul\":11069:11123   */\n      mstore\n        /* \"#utility.yul\":10952:11130   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11136:11502   */\n    tag_471:\n        /* \"#utility.yul\":11278:11281   */\n      0x00\n        /* \"#utility.yul\":11299:11366   */\n      tag_609\n        /* \"#utility.yul\":11363:11365   */\n      0x1c\n        /* \"#utility.yul\":11358:11361   */\n      dup4\n        /* \"#utility.yul\":11299:11366   */\n      tag_444\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":11292:11366   */\n      swap2\n      pop\n        /* \"#utility.yul\":11375:11468   */\n      tag_610\n        /* \"#utility.yul\":11464:11467   */\n      dup3\n        /* \"#utility.yul\":11375:11468   */\n      tag_470\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":11493:11495   */\n      0x20\n        /* \"#utility.yul\":11488:11491   */\n      dup3\n        /* \"#utility.yul\":11484:11496   */\n      add\n        /* \"#utility.yul\":11477:11496   */\n      swap1\n      pop\n        /* \"#utility.yul\":11136:11502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11508:11927   */\n    tag_266:\n        /* \"#utility.yul\":11674:11678   */\n      0x00\n        /* \"#utility.yul\":11712:11714   */\n      0x20\n        /* \"#utility.yul\":11701:11710   */\n      dup3\n        /* \"#utility.yul\":11697:11715   */\n      add\n        /* \"#utility.yul\":11689:11715   */\n      swap1\n      pop\n        /* \"#utility.yul\":11761:11770   */\n      dup2\n        /* \"#utility.yul\":11755:11759   */\n      dup2\n        /* \"#utility.yul\":11751:11771   */\n      sub\n        /* \"#utility.yul\":11747:11748   */\n      0x00\n        /* \"#utility.yul\":11736:11745   */\n      dup4\n        /* \"#utility.yul\":11732:11749   */\n      add\n        /* \"#utility.yul\":11725:11772   */\n      mstore\n        /* \"#utility.yul\":11789:11920   */\n      tag_612\n        /* \"#utility.yul\":11915:11919   */\n      dup2\n        /* \"#utility.yul\":11789:11920   */\n      tag_471\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":11781:11920   */\n      swap1\n      pop\n        /* \"#utility.yul\":11508:11927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11933:12109   */\n    tag_472:\n        /* \"#utility.yul\":12073:12101   */\n      0x5072652d53616c6520697320616c726561647920616374697665000000000000\n        /* \"#utility.yul\":12069:12070   */\n      0x00\n        /* \"#utility.yul\":12061:12067   */\n      dup3\n        /* \"#utility.yul\":12057:12071   */\n      add\n        /* \"#utility.yul\":12050:12102   */\n      mstore\n        /* \"#utility.yul\":11933:12109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12115:12481   */\n    tag_473:\n        /* \"#utility.yul\":12257:12260   */\n      0x00\n        /* \"#utility.yul\":12278:12345   */\n      tag_615\n        /* \"#utility.yul\":12342:12344   */\n      0x1a\n        /* \"#utility.yul\":12337:12340   */\n      dup4\n        /* \"#utility.yul\":12278:12345   */\n      tag_444\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":12271:12345   */\n      swap2\n      pop\n        /* \"#utility.yul\":12354:12447   */\n      tag_616\n        /* \"#utility.yul\":12443:12446   */\n      dup3\n        /* \"#utility.yul\":12354:12447   */\n      tag_472\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":12472:12474   */\n      0x20\n        /* \"#utility.yul\":12467:12470   */\n      dup3\n        /* \"#utility.yul\":12463:12475   */\n      add\n        /* \"#utility.yul\":12456:12475   */\n      swap1\n      pop\n        /* \"#utility.yul\":12115:12481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12487:12906   */\n    tag_278:\n        /* \"#utility.yul\":12653:12657   */\n      0x00\n        /* \"#utility.yul\":12691:12693   */\n      0x20\n        /* \"#utility.yul\":12680:12689   */\n      dup3\n        /* \"#utility.yul\":12676:12694   */\n      add\n        /* \"#utility.yul\":12668:12694   */\n      swap1\n      pop\n        /* \"#utility.yul\":12740:12749   */\n      dup2\n        /* \"#utility.yul\":12734:12738   */\n      dup2\n        /* \"#utility.yul\":12730:12750   */\n      sub\n        /* \"#utility.yul\":12726:12727   */\n      0x00\n        /* \"#utility.yul\":12715:12724   */\n      dup4\n        /* \"#utility.yul\":12711:12728   */\n      add\n        /* \"#utility.yul\":12704:12751   */\n      mstore\n        /* \"#utility.yul\":12768:12899   */\n      tag_618\n        /* \"#utility.yul\":12894:12898   */\n      dup2\n        /* \"#utility.yul\":12768:12899   */\n      tag_473\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":12760:12899   */\n      swap1\n      pop\n        /* \"#utility.yul\":12487:12906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12912:13083   */\n    tag_474:\n        /* \"#utility.yul\":13052:13075   */\n      0x4e6f20746f6b656e7320746f2077697468647261770000000000000000000000\n        /* \"#utility.yul\":13048:13049   */\n      0x00\n        /* \"#utility.yul\":13040:13046   */\n      dup3\n        /* \"#utility.yul\":13036:13050   */\n      add\n        /* \"#utility.yul\":13029:13076   */\n      mstore\n        /* \"#utility.yul\":12912:13083   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13089:13455   */\n    tag_475:\n        /* \"#utility.yul\":13231:13234   */\n      0x00\n        /* \"#utility.yul\":13252:13319   */\n      tag_621\n        /* \"#utility.yul\":13316:13318   */\n      0x15\n        /* \"#utility.yul\":13311:13314   */\n      dup4\n        /* \"#utility.yul\":13252:13319   */\n      tag_444\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":13245:13319   */\n      swap2\n      pop\n        /* \"#utility.yul\":13328:13421   */\n      tag_622\n        /* \"#utility.yul\":13417:13420   */\n      dup3\n        /* \"#utility.yul\":13328:13421   */\n      tag_474\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":13446:13448   */\n      0x20\n        /* \"#utility.yul\":13441:13444   */\n      dup3\n        /* \"#utility.yul\":13437:13449   */\n      add\n        /* \"#utility.yul\":13430:13449   */\n      swap1\n      pop\n        /* \"#utility.yul\":13089:13455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13461:13880   */\n    tag_293:\n        /* \"#utility.yul\":13627:13631   */\n      0x00\n        /* \"#utility.yul\":13665:13667   */\n      0x20\n        /* \"#utility.yul\":13654:13663   */\n      dup3\n        /* \"#utility.yul\":13650:13668   */\n      add\n        /* \"#utility.yul\":13642:13668   */\n      swap1\n      pop\n        /* \"#utility.yul\":13714:13723   */\n      dup2\n        /* \"#utility.yul\":13708:13712   */\n      dup2\n        /* \"#utility.yul\":13704:13724   */\n      sub\n        /* \"#utility.yul\":13700:13701   */\n      0x00\n        /* \"#utility.yul\":13689:13698   */\n      dup4\n        /* \"#utility.yul\":13685:13702   */\n      add\n        /* \"#utility.yul\":13678:13725   */\n      mstore\n        /* \"#utility.yul\":13742:13873   */\n      tag_624\n        /* \"#utility.yul\":13868:13872   */\n      dup2\n        /* \"#utility.yul\":13742:13873   */\n      tag_475\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":13734:13873   */\n      swap1\n      pop\n        /* \"#utility.yul\":13461:13880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13886:14063   */\n    tag_476:\n        /* \"#utility.yul\":14026:14055   */\n      0x507269766174652053616c6520616c7265616479206163746976650000000000\n        /* \"#utility.yul\":14022:14023   */\n      0x00\n        /* \"#utility.yul\":14014:14020   */\n      dup3\n        /* \"#utility.yul\":14010:14024   */\n      add\n        /* \"#utility.yul\":14003:14056   */\n      mstore\n        /* \"#utility.yul\":13886:14063   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14069:14435   */\n    tag_477:\n        /* \"#utility.yul\":14211:14214   */\n      0x00\n        /* \"#utility.yul\":14232:14299   */\n      tag_627\n        /* \"#utility.yul\":14296:14298   */\n      0x1b\n        /* \"#utility.yul\":14291:14294   */\n      dup4\n        /* \"#utility.yul\":14232:14299   */\n      tag_444\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":14225:14299   */\n      swap2\n      pop\n        /* \"#utility.yul\":14308:14401   */\n      tag_628\n        /* \"#utility.yul\":14397:14400   */\n      dup3\n        /* \"#utility.yul\":14308:14401   */\n      tag_476\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":14426:14428   */\n      0x20\n        /* \"#utility.yul\":14421:14424   */\n      dup3\n        /* \"#utility.yul\":14417:14429   */\n      add\n        /* \"#utility.yul\":14410:14429   */\n      swap1\n      pop\n        /* \"#utility.yul\":14069:14435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14441:14860   */\n    tag_309:\n        /* \"#utility.yul\":14607:14611   */\n      0x00\n        /* \"#utility.yul\":14645:14647   */\n      0x20\n        /* \"#utility.yul\":14634:14643   */\n      dup3\n        /* \"#utility.yul\":14630:14648   */\n      add\n        /* \"#utility.yul\":14622:14648   */\n      swap1\n      pop\n        /* \"#utility.yul\":14694:14703   */\n      dup2\n        /* \"#utility.yul\":14688:14692   */\n      dup2\n        /* \"#utility.yul\":14684:14704   */\n      sub\n        /* \"#utility.yul\":14680:14681   */\n      0x00\n        /* \"#utility.yul\":14669:14678   */\n      dup4\n        /* \"#utility.yul\":14665:14682   */\n      add\n        /* \"#utility.yul\":14658:14705   */\n      mstore\n        /* \"#utility.yul\":14722:14853   */\n      tag_630\n        /* \"#utility.yul\":14848:14852   */\n      dup2\n        /* \"#utility.yul\":14722:14853   */\n      tag_477\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":14714:14853   */\n      swap1\n      pop\n        /* \"#utility.yul\":14441:14860   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14866:15034   */\n    tag_478:\n        /* \"#utility.yul\":15006:15026   */\n      0x496e76616c69642070657263656e746167650000000000000000000000000000\n        /* \"#utility.yul\":15002:15003   */\n      0x00\n        /* \"#utility.yul\":14994:15000   */\n      dup3\n        /* \"#utility.yul\":14990:15004   */\n      add\n        /* \"#utility.yul\":14983:15027   */\n      mstore\n        /* \"#utility.yul\":14866:15034   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15040:15406   */\n    tag_479:\n        /* \"#utility.yul\":15182:15185   */\n      0x00\n        /* \"#utility.yul\":15203:15270   */\n      tag_633\n        /* \"#utility.yul\":15267:15269   */\n      0x12\n        /* \"#utility.yul\":15262:15265   */\n      dup4\n        /* \"#utility.yul\":15203:15270   */\n      tag_444\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":15196:15270   */\n      swap2\n      pop\n        /* \"#utility.yul\":15279:15372   */\n      tag_634\n        /* \"#utility.yul\":15368:15371   */\n      dup3\n        /* \"#utility.yul\":15279:15372   */\n      tag_478\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":15397:15399   */\n      0x20\n        /* \"#utility.yul\":15392:15395   */\n      dup3\n        /* \"#utility.yul\":15388:15400   */\n      add\n        /* \"#utility.yul\":15381:15400   */\n      swap1\n      pop\n        /* \"#utility.yul\":15040:15406   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15412:15831   */\n    tag_313:\n        /* \"#utility.yul\":15578:15582   */\n      0x00\n        /* \"#utility.yul\":15616:15618   */\n      0x20\n        /* \"#utility.yul\":15605:15614   */\n      dup3\n        /* \"#utility.yul\":15601:15619   */\n      add\n        /* \"#utility.yul\":15593:15619   */\n      swap1\n      pop\n        /* \"#utility.yul\":15665:15674   */\n      dup2\n        /* \"#utility.yul\":15659:15663   */\n      dup2\n        /* \"#utility.yul\":15655:15675   */\n      sub\n        /* \"#utility.yul\":15651:15652   */\n      0x00\n        /* \"#utility.yul\":15640:15649   */\n      dup4\n        /* \"#utility.yul\":15636:15653   */\n      add\n        /* \"#utility.yul\":15629:15676   */\n      mstore\n        /* \"#utility.yul\":15693:15824   */\n      tag_636\n        /* \"#utility.yul\":15819:15823   */\n      dup2\n        /* \"#utility.yul\":15693:15824   */\n      tag_479\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":15685:15824   */\n      swap1\n      pop\n        /* \"#utility.yul\":15412:15831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15837:16169   */\n    tag_315:\n        /* \"#utility.yul\":15958:15962   */\n      0x00\n        /* \"#utility.yul\":15996:15998   */\n      0x40\n        /* \"#utility.yul\":15985:15994   */\n      dup3\n        /* \"#utility.yul\":15981:15999   */\n      add\n        /* \"#utility.yul\":15973:15999   */\n      swap1\n      pop\n        /* \"#utility.yul\":16009:16080   */\n      tag_638\n        /* \"#utility.yul\":16077:16078   */\n      0x00\n        /* \"#utility.yul\":16066:16075   */\n      dup4\n        /* \"#utility.yul\":16062:16079   */\n      add\n        /* \"#utility.yul\":16053:16059   */\n      dup6\n        /* \"#utility.yul\":16009:16080   */\n      tag_442\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":16090:16162   */\n      tag_639\n        /* \"#utility.yul\":16158:16160   */\n      0x20\n        /* \"#utility.yul\":16147:16156   */\n      dup4\n        /* \"#utility.yul\":16143:16161   */\n      add\n        /* \"#utility.yul\":16134:16140   */\n      dup5\n        /* \"#utility.yul\":16090:16162   */\n      tag_442\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":15837:16169   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16175:16369   */\n    tag_321:\n        /* \"#utility.yul\":16215:16219   */\n      0x00\n        /* \"#utility.yul\":16235:16255   */\n      tag_641\n        /* \"#utility.yul\":16253:16254   */\n      dup3\n        /* \"#utility.yul\":16235:16255   */\n      tag_441\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":16230:16255   */\n      swap2\n      pop\n        /* \"#utility.yul\":16269:16289   */\n      tag_642\n        /* \"#utility.yul\":16287:16288   */\n      dup4\n        /* \"#utility.yul\":16269:16289   */\n      tag_441\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":16264:16289   */\n      swap3\n      pop\n        /* \"#utility.yul\":16313:16314   */\n      dup3\n        /* \"#utility.yul\":16310:16311   */\n      dup3\n        /* \"#utility.yul\":16306:16315   */\n      sub\n        /* \"#utility.yul\":16298:16315   */\n      swap1\n      pop\n        /* \"#utility.yul\":16337:16338   */\n      dup2\n        /* \"#utility.yul\":16331:16335   */\n      dup2\n        /* \"#utility.yul\":16328:16339   */\n      gt\n        /* \"#utility.yul\":16325:16362   */\n      iszero\n      tag_643\n      jumpi\n        /* \"#utility.yul\":16342:16360   */\n      tag_644\n      tag_469\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":16325:16362   */\n    tag_643:\n        /* \"#utility.yul\":16175:16369   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16375:16785   */\n    tag_323:\n        /* \"#utility.yul\":16415:16422   */\n      0x00\n        /* \"#utility.yul\":16438:16458   */\n      tag_646\n        /* \"#utility.yul\":16456:16457   */\n      dup3\n        /* \"#utility.yul\":16438:16458   */\n      tag_441\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":16433:16458   */\n      swap2\n      pop\n        /* \"#utility.yul\":16472:16492   */\n      tag_647\n        /* \"#utility.yul\":16490:16491   */\n      dup4\n        /* \"#utility.yul\":16472:16492   */\n      tag_441\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":16467:16492   */\n      swap3\n      pop\n        /* \"#utility.yul\":16527:16528   */\n      dup3\n        /* \"#utility.yul\":16524:16525   */\n      dup3\n        /* \"#utility.yul\":16520:16529   */\n      mul\n        /* \"#utility.yul\":16549:16579   */\n      tag_648\n        /* \"#utility.yul\":16567:16578   */\n      dup2\n        /* \"#utility.yul\":16549:16579   */\n      tag_441\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":16538:16579   */\n      swap2\n      pop\n        /* \"#utility.yul\":16728:16729   */\n      dup3\n        /* \"#utility.yul\":16719:16726   */\n      dup3\n        /* \"#utility.yul\":16715:16730   */\n      div\n        /* \"#utility.yul\":16712:16713   */\n      dup5\n        /* \"#utility.yul\":16709:16731   */\n      eq\n        /* \"#utility.yul\":16689:16690   */\n      dup4\n        /* \"#utility.yul\":16682:16691   */\n      iszero\n        /* \"#utility.yul\":16662:16745   */\n      or\n        /* \"#utility.yul\":16639:16778   */\n      tag_649\n      jumpi\n        /* \"#utility.yul\":16758:16776   */\n      tag_650\n      tag_469\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":16639:16778   */\n    tag_649:\n        /* \"#utility.yul\":16423:16785   */\n      pop\n        /* \"#utility.yul\":16375:16785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16791:16971   */\n    tag_480:\n        /* \"#utility.yul\":16839:16916   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16836:16837   */\n      0x00\n        /* \"#utility.yul\":16829:16917   */\n      mstore\n        /* \"#utility.yul\":16936:16940   */\n      0x12\n        /* \"#utility.yul\":16933:16934   */\n      0x04\n        /* \"#utility.yul\":16926:16941   */\n      mstore\n        /* \"#utility.yul\":16960:16964   */\n      0x24\n        /* \"#utility.yul\":16957:16958   */\n      0x00\n        /* \"#utility.yul\":16950:16965   */\n      revert\n        /* \"#utility.yul\":16977:17162   */\n    tag_325:\n        /* \"#utility.yul\":17017:17018   */\n      0x00\n        /* \"#utility.yul\":17034:17054   */\n      tag_653\n        /* \"#utility.yul\":17052:17053   */\n      dup3\n        /* \"#utility.yul\":17034:17054   */\n      tag_441\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":17029:17054   */\n      swap2\n      pop\n        /* \"#utility.yul\":17068:17088   */\n      tag_654\n        /* \"#utility.yul\":17086:17087   */\n      dup4\n        /* \"#utility.yul\":17068:17088   */\n      tag_441\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":17063:17088   */\n      swap3\n      pop\n        /* \"#utility.yul\":17107:17108   */\n      dup3\n        /* \"#utility.yul\":17097:17132   */\n      tag_655\n      jumpi\n        /* \"#utility.yul\":17112:17130   */\n      tag_656\n      tag_480\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":17097:17132   */\n    tag_655:\n        /* \"#utility.yul\":17154:17155   */\n      dup3\n        /* \"#utility.yul\":17151:17152   */\n      dup3\n        /* \"#utility.yul\":17147:17156   */\n      div\n        /* \"#utility.yul\":17142:17156   */\n      swap1\n      pop\n        /* \"#utility.yul\":16977:17162   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17168:17344   */\n    tag_481:\n        /* \"#utility.yul\":17308:17336   */\n      0x507269766174652053616c65206973206e6f7420616374697665000000000000\n        /* \"#utility.yul\":17304:17305   */\n      0x00\n        /* \"#utility.yul\":17296:17302   */\n      dup3\n        /* \"#utility.yul\":17292:17306   */\n      add\n        /* \"#utility.yul\":17285:17337   */\n      mstore\n        /* \"#utility.yul\":17168:17344   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17350:17716   */\n    tag_482:\n        /* \"#utility.yul\":17492:17495   */\n      0x00\n        /* \"#utility.yul\":17513:17580   */\n      tag_659\n        /* \"#utility.yul\":17577:17579   */\n      0x1a\n        /* \"#utility.yul\":17572:17575   */\n      dup4\n        /* \"#utility.yul\":17513:17580   */\n      tag_444\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":17506:17580   */\n      swap2\n      pop\n        /* \"#utility.yul\":17589:17682   */\n      tag_660\n        /* \"#utility.yul\":17678:17681   */\n      dup3\n        /* \"#utility.yul\":17589:17682   */\n      tag_481\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":17707:17709   */\n      0x20\n        /* \"#utility.yul\":17702:17705   */\n      dup3\n        /* \"#utility.yul\":17698:17710   */\n      add\n        /* \"#utility.yul\":17691:17710   */\n      swap1\n      pop\n        /* \"#utility.yul\":17350:17716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17722:18141   */\n    tag_335:\n        /* \"#utility.yul\":17888:17892   */\n      0x00\n        /* \"#utility.yul\":17926:17928   */\n      0x20\n        /* \"#utility.yul\":17915:17924   */\n      dup3\n        /* \"#utility.yul\":17911:17929   */\n      add\n        /* \"#utility.yul\":17903:17929   */\n      swap1\n      pop\n        /* \"#utility.yul\":17975:17984   */\n      dup2\n        /* \"#utility.yul\":17969:17973   */\n      dup2\n        /* \"#utility.yul\":17965:17985   */\n      sub\n        /* \"#utility.yul\":17961:17962   */\n      0x00\n        /* \"#utility.yul\":17950:17959   */\n      dup4\n        /* \"#utility.yul\":17946:17963   */\n      add\n        /* \"#utility.yul\":17939:17986   */\n      mstore\n        /* \"#utility.yul\":18003:18134   */\n      tag_662\n        /* \"#utility.yul\":18129:18133   */\n      dup2\n        /* \"#utility.yul\":18003:18134   */\n      tag_482\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":17995:18134   */\n      swap1\n      pop\n        /* \"#utility.yul\":17722:18141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18147:18371   */\n    tag_483:\n        /* \"#utility.yul\":18287:18321   */\n      0x4d696e696d756d2055534420616d6f756e742072657175697265642069732035\n        /* \"#utility.yul\":18283:18284   */\n      0x00\n        /* \"#utility.yul\":18275:18281   */\n      dup3\n        /* \"#utility.yul\":18271:18285   */\n      add\n        /* \"#utility.yul\":18264:18322   */\n      mstore\n        /* \"#utility.yul\":18356:18363   */\n      0x3020555344000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18351:18353   */\n      0x20\n        /* \"#utility.yul\":18343:18349   */\n      dup3\n        /* \"#utility.yul\":18339:18354   */\n      add\n        /* \"#utility.yul\":18332:18364   */\n      mstore\n        /* \"#utility.yul\":18147:18371   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18377:18743   */\n    tag_484:\n        /* \"#utility.yul\":18519:18522   */\n      0x00\n        /* \"#utility.yul\":18540:18607   */\n      tag_665\n        /* \"#utility.yul\":18604:18606   */\n      0x25\n        /* \"#utility.yul\":18599:18602   */\n      dup4\n        /* \"#utility.yul\":18540:18607   */\n      tag_444\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":18533:18607   */\n      swap2\n      pop\n        /* \"#utility.yul\":18616:18709   */\n      tag_666\n        /* \"#utility.yul\":18705:18708   */\n      dup3\n        /* \"#utility.yul\":18616:18709   */\n      tag_483\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":18734:18736   */\n      0x40\n        /* \"#utility.yul\":18729:18732   */\n      dup3\n        /* \"#utility.yul\":18725:18737   */\n      add\n        /* \"#utility.yul\":18718:18737   */\n      swap1\n      pop\n        /* \"#utility.yul\":18377:18743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18749:19168   */\n    tag_338:\n        /* \"#utility.yul\":18915:18919   */\n      0x00\n        /* \"#utility.yul\":18953:18955   */\n      0x20\n        /* \"#utility.yul\":18942:18951   */\n      dup3\n        /* \"#utility.yul\":18938:18956   */\n      add\n        /* \"#utility.yul\":18930:18956   */\n      swap1\n      pop\n        /* \"#utility.yul\":19002:19011   */\n      dup2\n        /* \"#utility.yul\":18996:19000   */\n      dup2\n        /* \"#utility.yul\":18992:19012   */\n      sub\n        /* \"#utility.yul\":18988:18989   */\n      0x00\n        /* \"#utility.yul\":18977:18986   */\n      dup4\n        /* \"#utility.yul\":18973:18990   */\n      add\n        /* \"#utility.yul\":18966:19013   */\n      mstore\n        /* \"#utility.yul\":19030:19161   */\n      tag_668\n        /* \"#utility.yul\":19156:19160   */\n      dup2\n        /* \"#utility.yul\":19030:19161   */\n      tag_484\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":19022:19161   */\n      swap1\n      pop\n        /* \"#utility.yul\":18749:19168   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19174:19397   */\n    tag_485:\n        /* \"#utility.yul\":19314:19348   */\n      0x45786365656473206d6178696d756d20746f6b656e207075726368617365206c\n        /* \"#utility.yul\":19310:19311   */\n      0x00\n        /* \"#utility.yul\":19302:19308   */\n      dup3\n        /* \"#utility.yul\":19298:19312   */\n      add\n        /* \"#utility.yul\":19291:19349   */\n      mstore\n        /* \"#utility.yul\":19383:19389   */\n      0x696d697400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19378:19380   */\n      0x20\n        /* \"#utility.yul\":19370:19376   */\n      dup3\n        /* \"#utility.yul\":19366:19381   */\n      add\n        /* \"#utility.yul\":19359:19390   */\n      mstore\n        /* \"#utility.yul\":19174:19397   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19403:19769   */\n    tag_486:\n        /* \"#utility.yul\":19545:19548   */\n      0x00\n        /* \"#utility.yul\":19566:19633   */\n      tag_671\n        /* \"#utility.yul\":19630:19632   */\n      0x24\n        /* \"#utility.yul\":19625:19628   */\n      dup4\n        /* \"#utility.yul\":19566:19633   */\n      tag_444\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":19559:19633   */\n      swap2\n      pop\n        /* \"#utility.yul\":19642:19735   */\n      tag_672\n        /* \"#utility.yul\":19731:19734   */\n      dup3\n        /* \"#utility.yul\":19642:19735   */\n      tag_485\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":19760:19762   */\n      0x40\n        /* \"#utility.yul\":19755:19758   */\n      dup3\n        /* \"#utility.yul\":19751:19763   */\n      add\n        /* \"#utility.yul\":19744:19763   */\n      swap1\n      pop\n        /* \"#utility.yul\":19403:19769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19775:20194   */\n    tag_342:\n        /* \"#utility.yul\":19941:19945   */\n      0x00\n        /* \"#utility.yul\":19979:19981   */\n      0x20\n        /* \"#utility.yul\":19968:19977   */\n      dup3\n        /* \"#utility.yul\":19964:19982   */\n      add\n        /* \"#utility.yul\":19956:19982   */\n      swap1\n      pop\n        /* \"#utility.yul\":20028:20037   */\n      dup2\n        /* \"#utility.yul\":20022:20026   */\n      dup2\n        /* \"#utility.yul\":20018:20038   */\n      sub\n        /* \"#utility.yul\":20014:20015   */\n      0x00\n        /* \"#utility.yul\":20003:20012   */\n      dup4\n        /* \"#utility.yul\":19999:20016   */\n      add\n        /* \"#utility.yul\":19992:20039   */\n      mstore\n        /* \"#utility.yul\":20056:20187   */\n      tag_674\n        /* \"#utility.yul\":20182:20186   */\n      dup2\n        /* \"#utility.yul\":20056:20187   */\n      tag_486\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":20048:20187   */\n      swap1\n      pop\n        /* \"#utility.yul\":19775:20194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20200:20368   */\n    tag_487:\n        /* \"#utility.yul\":20340:20360   */\n      0x4e6f2045544820746f2077697468647261770000000000000000000000000000\n        /* \"#utility.yul\":20336:20337   */\n      0x00\n        /* \"#utility.yul\":20328:20334   */\n      dup3\n        /* \"#utility.yul\":20324:20338   */\n      add\n        /* \"#utility.yul\":20317:20361   */\n      mstore\n        /* \"#utility.yul\":20200:20368   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20374:20740   */\n    tag_488:\n        /* \"#utility.yul\":20516:20519   */\n      0x00\n        /* \"#utility.yul\":20537:20604   */\n      tag_677\n        /* \"#utility.yul\":20601:20603   */\n      0x12\n        /* \"#utility.yul\":20596:20599   */\n      dup4\n        /* \"#utility.yul\":20537:20604   */\n      tag_444\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":20530:20604   */\n      swap2\n      pop\n        /* \"#utility.yul\":20613:20706   */\n      tag_678\n        /* \"#utility.yul\":20702:20705   */\n      dup3\n        /* \"#utility.yul\":20613:20706   */\n      tag_487\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":20731:20733   */\n      0x20\n        /* \"#utility.yul\":20726:20729   */\n      dup3\n        /* \"#utility.yul\":20722:20734   */\n      add\n        /* \"#utility.yul\":20715:20734   */\n      swap1\n      pop\n        /* \"#utility.yul\":20374:20740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20746:21165   */\n    tag_355:\n        /* \"#utility.yul\":20912:20916   */\n      0x00\n        /* \"#utility.yul\":20950:20952   */\n      0x20\n        /* \"#utility.yul\":20939:20948   */\n      dup3\n        /* \"#utility.yul\":20935:20953   */\n      add\n        /* \"#utility.yul\":20927:20953   */\n      swap1\n      pop\n        /* \"#utility.yul\":20999:21008   */\n      dup2\n        /* \"#utility.yul\":20993:20997   */\n      dup2\n        /* \"#utility.yul\":20989:21009   */\n      sub\n        /* \"#utility.yul\":20985:20986   */\n      0x00\n        /* \"#utility.yul\":20974:20983   */\n      dup4\n        /* \"#utility.yul\":20970:20987   */\n      add\n        /* \"#utility.yul\":20963:21010   */\n      mstore\n        /* \"#utility.yul\":21027:21158   */\n      tag_680\n        /* \"#utility.yul\":21153:21157   */\n      dup2\n        /* \"#utility.yul\":21027:21158   */\n      tag_488\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":21019:21158   */\n      swap1\n      pop\n        /* \"#utility.yul\":20746:21165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21171:21318   */\n    tag_489:\n        /* \"#utility.yul\":21272:21283   */\n      0x00\n        /* \"#utility.yul\":21309:21312   */\n      dup2\n        /* \"#utility.yul\":21294:21312   */\n      swap1\n      pop\n        /* \"#utility.yul\":21171:21318   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21324:21438   */\n    tag_490:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21444:21842   */\n    tag_491:\n        /* \"#utility.yul\":21603:21606   */\n      0x00\n        /* \"#utility.yul\":21624:21707   */\n      tag_684\n        /* \"#utility.yul\":21705:21706   */\n      0x00\n        /* \"#utility.yul\":21700:21703   */\n      dup4\n        /* \"#utility.yul\":21624:21707   */\n      tag_489\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":21617:21707   */\n      swap2\n      pop\n        /* \"#utility.yul\":21716:21809   */\n      tag_685\n        /* \"#utility.yul\":21805:21808   */\n      dup3\n        /* \"#utility.yul\":21716:21809   */\n      tag_490\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":21834:21835   */\n      0x00\n        /* \"#utility.yul\":21829:21832   */\n      dup3\n        /* \"#utility.yul\":21825:21836   */\n      add\n        /* \"#utility.yul\":21818:21836   */\n      swap1\n      pop\n        /* \"#utility.yul\":21444:21842   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21848:22227   */\n    tag_358:\n        /* \"#utility.yul\":22032:22035   */\n      0x00\n        /* \"#utility.yul\":22054:22201   */\n      tag_687\n        /* \"#utility.yul\":22197:22200   */\n      dup3\n        /* \"#utility.yul\":22054:22201   */\n      tag_491\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":22047:22201   */\n      swap2\n      pop\n        /* \"#utility.yul\":22218:22221   */\n      dup2\n        /* \"#utility.yul\":22211:22221   */\n      swap1\n      pop\n        /* \"#utility.yul\":21848:22227   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22233:22398   */\n    tag_492:\n        /* \"#utility.yul\":22373:22390   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":22369:22370   */\n      0x00\n        /* \"#utility.yul\":22361:22367   */\n      dup3\n        /* \"#utility.yul\":22357:22371   */\n      add\n        /* \"#utility.yul\":22350:22391   */\n      mstore\n        /* \"#utility.yul\":22233:22398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22404:22770   */\n    tag_493:\n        /* \"#utility.yul\":22546:22549   */\n      0x00\n        /* \"#utility.yul\":22567:22634   */\n      tag_690\n        /* \"#utility.yul\":22631:22633   */\n      0x0f\n        /* \"#utility.yul\":22626:22629   */\n      dup4\n        /* \"#utility.yul\":22567:22634   */\n      tag_444\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":22560:22634   */\n      swap2\n      pop\n        /* \"#utility.yul\":22643:22736   */\n      tag_691\n        /* \"#utility.yul\":22732:22735   */\n      dup3\n        /* \"#utility.yul\":22643:22736   */\n      tag_492\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":22761:22763   */\n      0x20\n        /* \"#utility.yul\":22756:22759   */\n      dup3\n        /* \"#utility.yul\":22752:22764   */\n      add\n        /* \"#utility.yul\":22745:22764   */\n      swap1\n      pop\n        /* \"#utility.yul\":22404:22770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22776:23195   */\n    tag_364:\n        /* \"#utility.yul\":22942:22946   */\n      0x00\n        /* \"#utility.yul\":22980:22982   */\n      0x20\n        /* \"#utility.yul\":22969:22978   */\n      dup3\n        /* \"#utility.yul\":22965:22983   */\n      add\n        /* \"#utility.yul\":22957:22983   */\n      swap1\n      pop\n        /* \"#utility.yul\":23029:23038   */\n      dup2\n        /* \"#utility.yul\":23023:23027   */\n      dup2\n        /* \"#utility.yul\":23019:23039   */\n      sub\n        /* \"#utility.yul\":23015:23016   */\n      0x00\n        /* \"#utility.yul\":23004:23013   */\n      dup4\n        /* \"#utility.yul\":23000:23017   */\n      add\n        /* \"#utility.yul\":22993:23040   */\n      mstore\n        /* \"#utility.yul\":23057:23188   */\n      tag_693\n        /* \"#utility.yul\":23183:23187   */\n      dup2\n        /* \"#utility.yul\":23057:23188   */\n      tag_493\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":23049:23188   */\n      swap1\n      pop\n        /* \"#utility.yul\":22776:23195   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23201:23643   */\n    tag_397:\n        /* \"#utility.yul\":23350:23354   */\n      0x00\n        /* \"#utility.yul\":23388:23390   */\n      0x60\n        /* \"#utility.yul\":23377:23386   */\n      dup3\n        /* \"#utility.yul\":23373:23391   */\n      add\n        /* \"#utility.yul\":23365:23391   */\n      swap1\n      pop\n        /* \"#utility.yul\":23401:23472   */\n      tag_695\n        /* \"#utility.yul\":23469:23470   */\n      0x00\n        /* \"#utility.yul\":23458:23467   */\n      dup4\n        /* \"#utility.yul\":23454:23471   */\n      add\n        /* \"#utility.yul\":23445:23451   */\n      dup7\n        /* \"#utility.yul\":23401:23472   */\n      tag_461\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":23482:23554   */\n      tag_696\n        /* \"#utility.yul\":23550:23552   */\n      0x20\n        /* \"#utility.yul\":23539:23548   */\n      dup4\n        /* \"#utility.yul\":23535:23553   */\n      add\n        /* \"#utility.yul\":23526:23532   */\n      dup6\n        /* \"#utility.yul\":23482:23554   */\n      tag_442\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":23564:23636   */\n      tag_697\n        /* \"#utility.yul\":23632:23634   */\n      0x40\n        /* \"#utility.yul\":23621:23630   */\n      dup4\n        /* \"#utility.yul\":23617:23635   */\n      add\n        /* \"#utility.yul\":23608:23614   */\n      dup5\n        /* \"#utility.yul\":23564:23636   */\n      tag_442\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":23201:23643   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23649:23830   */\n    tag_494:\n        /* \"#utility.yul\":23789:23822   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":23785:23786   */\n      0x00\n        /* \"#utility.yul\":23777:23783   */\n      dup3\n        /* \"#utility.yul\":23773:23787   */\n      add\n        /* \"#utility.yul\":23766:23823   */\n      mstore\n        /* \"#utility.yul\":23649:23830   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23836:24202   */\n    tag_495:\n        /* \"#utility.yul\":23978:23981   */\n      0x00\n        /* \"#utility.yul\":23999:24066   */\n      tag_700\n        /* \"#utility.yul\":24063:24065   */\n      0x1f\n        /* \"#utility.yul\":24058:24061   */\n      dup4\n        /* \"#utility.yul\":23999:24066   */\n      tag_444\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":23992:24066   */\n      swap2\n      pop\n        /* \"#utility.yul\":24075:24168   */\n      tag_701\n        /* \"#utility.yul\":24164:24167   */\n      dup3\n        /* \"#utility.yul\":24075:24168   */\n      tag_494\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":24193:24195   */\n      0x20\n        /* \"#utility.yul\":24188:24191   */\n      dup3\n        /* \"#utility.yul\":24184:24196   */\n      add\n        /* \"#utility.yul\":24177:24196   */\n      swap1\n      pop\n        /* \"#utility.yul\":23836:24202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24208:24627   */\n    tag_409:\n        /* \"#utility.yul\":24374:24378   */\n      0x00\n        /* \"#utility.yul\":24412:24414   */\n      0x20\n        /* \"#utility.yul\":24401:24410   */\n      dup3\n        /* \"#utility.yul\":24397:24415   */\n      add\n        /* \"#utility.yul\":24389:24415   */\n      swap1\n      pop\n        /* \"#utility.yul\":24461:24470   */\n      dup2\n        /* \"#utility.yul\":24455:24459   */\n      dup2\n        /* \"#utility.yul\":24451:24471   */\n      sub\n        /* \"#utility.yul\":24447:24448   */\n      0x00\n        /* \"#utility.yul\":24436:24445   */\n      dup4\n        /* \"#utility.yul\":24432:24449   */\n      add\n        /* \"#utility.yul\":24425:24472   */\n      mstore\n        /* \"#utility.yul\":24489:24620   */\n      tag_703\n        /* \"#utility.yul\":24615:24619   */\n      dup2\n        /* \"#utility.yul\":24489:24620   */\n      tag_495\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":24481:24620   */\n      swap1\n      pop\n        /* \"#utility.yul\":24208:24627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24633:24799   */\n    tag_496:\n        /* \"#utility.yul\":24773:24791   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":24769:24770   */\n      0x00\n        /* \"#utility.yul\":24761:24767   */\n      dup3\n        /* \"#utility.yul\":24757:24771   */\n      add\n        /* \"#utility.yul\":24750:24792   */\n      mstore\n        /* \"#utility.yul\":24633:24799   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24805:25171   */\n    tag_497:\n        /* \"#utility.yul\":24947:24950   */\n      0x00\n        /* \"#utility.yul\":24968:25035   */\n      tag_706\n        /* \"#utility.yul\":25032:25034   */\n      0x10\n        /* \"#utility.yul\":25027:25030   */\n      dup4\n        /* \"#utility.yul\":24968:25035   */\n      tag_444\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":24961:25035   */\n      swap2\n      pop\n        /* \"#utility.yul\":25044:25137   */\n      tag_707\n        /* \"#utility.yul\":25133:25136   */\n      dup3\n        /* \"#utility.yul\":25044:25137   */\n      tag_496\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":25162:25164   */\n      0x20\n        /* \"#utility.yul\":25157:25160   */\n      dup3\n        /* \"#utility.yul\":25153:25165   */\n      add\n        /* \"#utility.yul\":25146:25165   */\n      swap1\n      pop\n        /* \"#utility.yul\":24805:25171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25177:25596   */\n    tag_414:\n        /* \"#utility.yul\":25343:25347   */\n      0x00\n        /* \"#utility.yul\":25381:25383   */\n      0x20\n        /* \"#utility.yul\":25370:25379   */\n      dup3\n        /* \"#utility.yul\":25366:25384   */\n      add\n        /* \"#utility.yul\":25358:25384   */\n      swap1\n      pop\n        /* \"#utility.yul\":25430:25439   */\n      dup2\n        /* \"#utility.yul\":25424:25428   */\n      dup2\n        /* \"#utility.yul\":25420:25440   */\n      sub\n        /* \"#utility.yul\":25416:25417   */\n      0x00\n        /* \"#utility.yul\":25405:25414   */\n      dup4\n        /* \"#utility.yul\":25401:25418   */\n      add\n        /* \"#utility.yul\":25394:25441   */\n      mstore\n        /* \"#utility.yul\":25458:25589   */\n      tag_709\n        /* \"#utility.yul\":25584:25588   */\n      dup2\n        /* \"#utility.yul\":25458:25589   */\n      tag_497\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":25450:25589   */\n      swap1\n      pop\n        /* \"#utility.yul\":25177:25596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202c575f5312aa1bd8d265f6ad810122ae121b03ce3360551c16897f42f03fffea64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1292": {
									"entryPoint": null,
									"id": 1292,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_311": {
									"entryPoint": null,
									"id": 311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_509": {
									"entryPoint": null,
									"id": 509,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_812": {
									"entryPoint": 735,
									"id": 812,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 537,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_779": {
									"entryPoint": 871,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2428,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2314,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1478,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1431,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1624,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7000:9",
										"nodeType": "YulBlock",
										"src": "0:7000:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "140:152:9",
													"nodeType": "YulBlock",
													"src": "140:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:9",
																		"nodeType": "YulLiteral",
																		"src": "157:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:9",
																		"nodeType": "YulLiteral",
																		"src": "160:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:9"
																},
																"nativeSrc": "150:88:9",
																"nodeType": "YulFunctionCall",
																"src": "150:88:9"
															},
															"nativeSrc": "150:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:9",
																		"nodeType": "YulLiteral",
																		"src": "254:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:9",
																		"nodeType": "YulLiteral",
																		"src": "257:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:9"
																},
																"nativeSrc": "247:15:9",
																"nodeType": "YulFunctionCall",
																"src": "247:15:9"
															},
															"nativeSrc": "247:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:9",
																		"nodeType": "YulLiteral",
																		"src": "278:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:9",
																		"nodeType": "YulLiteral",
																		"src": "281:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:9"
																},
																"nativeSrc": "271:15:9",
																"nodeType": "YulFunctionCall",
																"src": "271:15:9"
															},
															"nativeSrc": "271:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:9"
											},
											{
												"body": {
													"nativeSrc": "326:152:9",
													"nodeType": "YulBlock",
													"src": "326:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:9",
																		"nodeType": "YulLiteral",
																		"src": "343:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:9",
																		"nodeType": "YulLiteral",
																		"src": "346:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:9"
																},
																"nativeSrc": "336:88:9",
																"nodeType": "YulFunctionCall",
																"src": "336:88:9"
															},
															"nativeSrc": "336:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:9",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:9",
																		"nodeType": "YulLiteral",
																		"src": "443:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nativeSrc": "433:15:9",
																"nodeType": "YulFunctionCall",
																"src": "433:15:9"
															},
															"nativeSrc": "433:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:9",
																		"nodeType": "YulLiteral",
																		"src": "464:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:9",
																		"nodeType": "YulLiteral",
																		"src": "467:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:9"
																},
																"nativeSrc": "457:15:9",
																"nodeType": "YulFunctionCall",
																"src": "457:15:9"
															},
															"nativeSrc": "457:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:9"
											},
											{
												"body": {
													"nativeSrc": "535:269:9",
													"nodeType": "YulBlock",
													"src": "535:269:9",
													"statements": [
														{
															"nativeSrc": "545:22:9",
															"nodeType": "YulAssignment",
															"src": "545:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:9",
																		"nodeType": "YulLiteral",
																		"src": "565:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:9"
																},
																"nativeSrc": "555:12:9",
																"nodeType": "YulFunctionCall",
																"src": "555:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:9"
																}
															]
														},
														{
															"nativeSrc": "576:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:9",
																		"nodeType": "YulLiteral",
																		"src": "612:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:9"
																},
																"nativeSrc": "602:12:9",
																"nodeType": "YulFunctionCall",
																"src": "602:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:9",
																	"nodeType": "YulTypedName",
																	"src": "580:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:9",
																"nodeType": "YulBlock",
																"src": "653:51:9",
																"statements": [
																	{
																		"nativeSrc": "667:27:9",
																		"nodeType": "YulAssignment",
																		"src": "667:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:9",
																					"nodeType": "YulLiteral",
																					"src": "689:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:9"
																			},
																			"nativeSrc": "677:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:9"
																},
																"nativeSrc": "626:26:9",
																"nodeType": "YulFunctionCall",
																"src": "626:26:9"
															},
															"nativeSrc": "623:81:9",
															"nodeType": "YulIf",
															"src": "623:81:9"
														},
														{
															"body": {
																"nativeSrc": "756:42:9",
																"nodeType": "YulBlock",
																"src": "756:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:9"
																			},
																			"nativeSrc": "770:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:9"
																		},
																		"nativeSrc": "770:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:9",
																				"nodeType": "YulLiteral",
																				"src": "751:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:9"
																		},
																		"nativeSrc": "740:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:9"
																},
																"nativeSrc": "717:38:9",
																"nodeType": "YulFunctionCall",
																"src": "717:38:9"
															},
															"nativeSrc": "714:84:9",
															"nodeType": "YulIf",
															"src": "714:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:9",
														"nodeType": "YulTypedName",
														"src": "519:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:9",
														"nodeType": "YulTypedName",
														"src": "528:6:9",
														"type": ""
													}
												],
												"src": "484:320:9"
											},
											{
												"body": {
													"nativeSrc": "864:87:9",
													"nodeType": "YulBlock",
													"src": "864:87:9",
													"statements": [
														{
															"nativeSrc": "874:11:9",
															"nodeType": "YulAssignment",
															"src": "874:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:9",
																"nodeType": "YulIdentifier",
																"src": "882:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:9",
																		"nodeType": "YulLiteral",
																		"src": "902:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:9"
																},
																"nativeSrc": "895:14:9",
																"nodeType": "YulFunctionCall",
																"src": "895:14:9"
															},
															"nativeSrc": "895:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:9"
														},
														{
															"nativeSrc": "918:26:9",
															"nodeType": "YulAssignment",
															"src": "918:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:9",
																		"nodeType": "YulLiteral",
																		"src": "936:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:9",
																		"nodeType": "YulLiteral",
																		"src": "939:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:9"
																},
																"nativeSrc": "926:18:9",
																"nodeType": "YulFunctionCall",
																"src": "926:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:9",
														"nodeType": "YulTypedName",
														"src": "851:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:9",
														"nodeType": "YulTypedName",
														"src": "859:4:9",
														"type": ""
													}
												],
												"src": "810:141:9"
											},
											{
												"body": {
													"nativeSrc": "1001:49:9",
													"nodeType": "YulBlock",
													"src": "1001:49:9",
													"statements": [
														{
															"nativeSrc": "1011:33:9",
															"nodeType": "YulAssignment",
															"src": "1011:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:9"
																		},
																		"nativeSrc": "1025:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:9"
																},
																"nativeSrc": "1021:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:9",
														"nodeType": "YulTypedName",
														"src": "984:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:9",
														"nodeType": "YulTypedName",
														"src": "994:6:9",
														"type": ""
													}
												],
												"src": "957:93:9"
											},
											{
												"body": {
													"nativeSrc": "1109:54:9",
													"nodeType": "YulBlock",
													"src": "1109:54:9",
													"statements": [
														{
															"nativeSrc": "1119:37:9",
															"nodeType": "YulAssignment",
															"src": "1119:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:9"
																},
																"nativeSrc": "1140:16:9",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:9",
														"nodeType": "YulTypedName",
														"src": "1084:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:9",
														"nodeType": "YulTypedName",
														"src": "1090:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:9",
														"nodeType": "YulTypedName",
														"src": "1100:8:9",
														"type": ""
													}
												],
												"src": "1056:107:9"
											},
											{
												"body": {
													"nativeSrc": "1245:317:9",
													"nodeType": "YulBlock",
													"src": "1245:317:9",
													"statements": [
														{
															"nativeSrc": "1255:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:9"
																},
																"nativeSrc": "1272:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:9",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:9",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:9"
																},
																"nativeSrc": "1311:97:9",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:9",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:9",
															"nodeType": "YulAssignment",
															"src": "1417:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:9"
																},
																"nativeSrc": "1429:39:9",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:9"
																}
															]
														},
														{
															"nativeSrc": "1477:30:9",
															"nodeType": "YulAssignment",
															"src": "1477:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:9"
																		},
																		"nativeSrc": "1497:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:9"
																},
																"nativeSrc": "1486:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:9"
																}
															]
														},
														{
															"nativeSrc": "1516:40:9",
															"nodeType": "YulAssignment",
															"src": "1516:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:9"
																		},
																		"nativeSrc": "1536:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:9"
																},
																"nativeSrc": "1526:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:9",
														"nodeType": "YulTypedName",
														"src": "1206:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:9",
														"nodeType": "YulTypedName",
														"src": "1213:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:9",
														"nodeType": "YulTypedName",
														"src": "1225:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:9",
														"nodeType": "YulTypedName",
														"src": "1238:6:9",
														"type": ""
													}
												],
												"src": "1169:393:9"
											},
											{
												"body": {
													"nativeSrc": "1613:32:9",
													"nodeType": "YulBlock",
													"src": "1613:32:9",
													"statements": [
														{
															"nativeSrc": "1623:16:9",
															"nodeType": "YulAssignment",
															"src": "1623:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:9",
																"nodeType": "YulIdentifier",
																"src": "1634:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:9",
														"nodeType": "YulTypedName",
														"src": "1595:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:9",
														"nodeType": "YulTypedName",
														"src": "1605:7:9",
														"type": ""
													}
												],
												"src": "1568:77:9"
											},
											{
												"body": {
													"nativeSrc": "1683:28:9",
													"nodeType": "YulBlock",
													"src": "1683:28:9",
													"statements": [
														{
															"nativeSrc": "1693:12:9",
															"nodeType": "YulAssignment",
															"src": "1693:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:9",
																"nodeType": "YulIdentifier",
																"src": "1700:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:9",
														"nodeType": "YulTypedName",
														"src": "1669:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:9",
														"nodeType": "YulTypedName",
														"src": "1679:3:9",
														"type": ""
													}
												],
												"src": "1651:60:9"
											},
											{
												"body": {
													"nativeSrc": "1777:82:9",
													"nodeType": "YulBlock",
													"src": "1777:82:9",
													"statements": [
														{
															"nativeSrc": "1787:66:9",
															"nodeType": "YulAssignment",
															"src": "1787:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:9"
																				},
																				"nativeSrc": "1827:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:9"
																		},
																		"nativeSrc": "1818:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:9"
																},
																"nativeSrc": "1800:53:9",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:9",
														"nodeType": "YulTypedName",
														"src": "1757:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:9",
														"nodeType": "YulTypedName",
														"src": "1767:9:9",
														"type": ""
													}
												],
												"src": "1717:142:9"
											},
											{
												"body": {
													"nativeSrc": "1912:28:9",
													"nodeType": "YulBlock",
													"src": "1912:28:9",
													"statements": [
														{
															"nativeSrc": "1922:12:9",
															"nodeType": "YulAssignment",
															"src": "1922:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:9",
																"nodeType": "YulIdentifier",
																"src": "1929:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:9",
														"nodeType": "YulTypedName",
														"src": "1898:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:9",
														"nodeType": "YulTypedName",
														"src": "1908:3:9",
														"type": ""
													}
												],
												"src": "1865:75:9"
											},
											{
												"body": {
													"nativeSrc": "2022:193:9",
													"nodeType": "YulBlock",
													"src": "2022:193:9",
													"statements": [
														{
															"nativeSrc": "2032:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:9"
																},
																"nativeSrc": "2056:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:9",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:9"
																				},
																				"nativeSrc": "2145:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:9"
																				},
																				"nativeSrc": "2166:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:9"
																		},
																		"nativeSrc": "2117:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:9"
																},
																"nativeSrc": "2104:105:9",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:9"
															},
															"nativeSrc": "2104:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:9",
														"nodeType": "YulTypedName",
														"src": "1999:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:9",
														"nodeType": "YulTypedName",
														"src": "2005:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:9",
														"nodeType": "YulTypedName",
														"src": "2013:7:9",
														"type": ""
													}
												],
												"src": "1946:269:9"
											},
											{
												"body": {
													"nativeSrc": "2270:24:9",
													"nodeType": "YulBlock",
													"src": "2270:24:9",
													"statements": [
														{
															"nativeSrc": "2280:8:9",
															"nodeType": "YulAssignment",
															"src": "2280:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:9",
																"nodeType": "YulLiteral",
																"src": "2287:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:9",
														"nodeType": "YulTypedName",
														"src": "2266:3:9",
														"type": ""
													}
												],
												"src": "2221:73:9"
											},
											{
												"body": {
													"nativeSrc": "2353:136:9",
													"nodeType": "YulBlock",
													"src": "2353:136:9",
													"statements": [
														{
															"nativeSrc": "2363:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:9"
																},
																"nativeSrc": "2377:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:9",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:9"
																},
																"nativeSrc": "2418:65:9",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:9"
															},
															"nativeSrc": "2418:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:9",
														"nodeType": "YulTypedName",
														"src": "2339:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:9",
														"nodeType": "YulTypedName",
														"src": "2345:6:9",
														"type": ""
													}
												],
												"src": "2300:189:9"
											},
											{
												"body": {
													"nativeSrc": "2545:136:9",
													"nodeType": "YulBlock",
													"src": "2545:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:9",
																"nodeType": "YulBlock",
																"src": "2612:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:9"
																			},
																			"nativeSrc": "2626:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:9"
																		},
																		"nativeSrc": "2626:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:9"
																},
																"nativeSrc": "2562:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:9"
															},
															"nativeSrc": "2555:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:9",
																"nodeType": "YulBlock",
																"src": "2577:26:9",
																"statements": [
																	{
																		"nativeSrc": "2579:22:9",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:9"
																			},
																			"nativeSrc": "2588:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:9",
																"nodeType": "YulBlock",
																"src": "2559:2:9",
																"statements": []
															},
															"src": "2555:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:9",
														"nodeType": "YulTypedName",
														"src": "2533:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:9",
														"nodeType": "YulTypedName",
														"src": "2540:3:9",
														"type": ""
													}
												],
												"src": "2495:186:9"
											},
											{
												"body": {
													"nativeSrc": "2766:464:9",
													"nodeType": "YulBlock",
													"src": "2766:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:9",
																"nodeType": "YulBlock",
																"src": "2792:431:9",
																"statements": [
																	{
																		"nativeSrc": "2806:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:9"
																			},
																			"nativeSrc": "2822:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:9",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:9"
																					},
																					"nativeSrc": "2906:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:9"
																			},
																			"nativeSrc": "2892:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:9",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:9",
																			"nodeType": "YulBlock",
																			"src": "3093:27:9",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:9",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:9",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:9"
																			},
																			"nativeSrc": "3074:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:9"
																		},
																		"nativeSrc": "3071:49:9",
																		"nodeType": "YulIf",
																		"src": "3071:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:9"
																							},
																							"nativeSrc": "3189:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:9"
																					},
																					"nativeSrc": "3175:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:9"
																			},
																			"nativeSrc": "3133:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:9"
																		},
																		"nativeSrc": "3133:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:9"
																},
																"nativeSrc": "2780:11:9",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:9"
															},
															"nativeSrc": "2777:446:9",
															"nodeType": "YulIf",
															"src": "2777:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:9",
														"nodeType": "YulTypedName",
														"src": "2742:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:9",
														"nodeType": "YulTypedName",
														"src": "2749:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:9",
														"nodeType": "YulTypedName",
														"src": "2754:10:9",
														"type": ""
													}
												],
												"src": "2687:543:9"
											},
											{
												"body": {
													"nativeSrc": "3299:54:9",
													"nodeType": "YulBlock",
													"src": "3299:54:9",
													"statements": [
														{
															"nativeSrc": "3309:37:9",
															"nodeType": "YulAssignment",
															"src": "3309:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:9"
																},
																"nativeSrc": "3330:16:9",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:9",
														"nodeType": "YulTypedName",
														"src": "3274:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:9",
														"nodeType": "YulTypedName",
														"src": "3280:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:9",
														"nodeType": "YulTypedName",
														"src": "3290:8:9",
														"type": ""
													}
												],
												"src": "3236:117:9"
											},
											{
												"body": {
													"nativeSrc": "3410:118:9",
													"nodeType": "YulBlock",
													"src": "3410:118:9",
													"statements": [
														{
															"nativeSrc": "3420:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:9"
																				},
																				"nativeSrc": "3465:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:9",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:9"
																				},
																				"nativeSrc": "3480:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:9"
																		},
																		"nativeSrc": "3436:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:9"
																},
																"nativeSrc": "3432:56:9",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:9",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:9",
															"nodeType": "YulAssignment",
															"src": "3497:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:9"
																},
																"nativeSrc": "3507:15:9",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:9",
														"nodeType": "YulTypedName",
														"src": "3387:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:9",
														"nodeType": "YulTypedName",
														"src": "3393:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:9",
														"nodeType": "YulTypedName",
														"src": "3403:6:9",
														"type": ""
													}
												],
												"src": "3359:169:9"
											},
											{
												"body": {
													"nativeSrc": "3614:214:9",
													"nodeType": "YulBlock",
													"src": "3614:214:9",
													"statements": [
														{
															"nativeSrc": "3747:37:9",
															"nodeType": "YulAssignment",
															"src": "3747:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:9"
																},
																"nativeSrc": "3755:29:9",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:9"
																}
															]
														},
														{
															"nativeSrc": "3793:29:9",
															"nodeType": "YulAssignment",
															"src": "3793:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:9"
																		},
																		"nativeSrc": "3810:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:9"
																},
																"nativeSrc": "3801:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:9",
														"nodeType": "YulTypedName",
														"src": "3595:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:9",
														"nodeType": "YulTypedName",
														"src": "3601:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:9",
														"nodeType": "YulTypedName",
														"src": "3609:4:9",
														"type": ""
													}
												],
												"src": "3533:295:9"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:9",
													"nodeType": "YulBlock",
													"src": "3925:1303:9",
													"statements": [
														{
															"nativeSrc": "3936:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:9"
																},
																"nativeSrc": "3950:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:9",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:9",
																"nodeType": "YulBlock",
																"src": "4072:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:9"
																			},
																			"nativeSrc": "4074:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:9"
																		},
																		"nativeSrc": "4074:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:9",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:9"
																},
																"nativeSrc": "4041:30:9",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:9"
															},
															"nativeSrc": "4038:56:9",
															"nodeType": "YulIf",
															"src": "4038:56:9"
														},
														{
															"nativeSrc": "4104:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:9"
																		},
																		"nativeSrc": "4144:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:9"
																},
																"nativeSrc": "4118:38:9",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:9",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:9"
																},
																"nativeSrc": "4203:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:9"
															},
															"nativeSrc": "4203:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:9"
														},
														{
															"nativeSrc": "4280:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:9",
																"nodeType": "YulLiteral",
																"src": "4297:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:9",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:9",
															"nodeType": "YulAssignment",
															"src": "4308:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:9",
																"nodeType": "YulLiteral",
																"src": "4321:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:9",
																		"nodeType": "YulBlock",
																		"src": "4372:611:9",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:9",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:9"
																							},
																							"nativeSrc": "4413:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:9"
																					},
																					"nativeSrc": "4401:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:9",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:9"
																					},
																					"nativeSrc": "4451:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:9",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:9",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:9",
																					"nodeType": "YulBlock",
																					"src": "4569:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:9"
																												},
																												"nativeSrc": "4608:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:9"
																										},
																										"nativeSrc": "4602:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:9"
																								},
																								"nativeSrc": "4587:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:9"
																							},
																							"nativeSrc": "4587:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:9"
																						},
																						{
																							"nativeSrc": "4646:24:9",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:9",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:9"
																								},
																								"nativeSrc": "4656:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:9",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:9",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:9"
																								},
																								"nativeSrc": "4700:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:9"
																					},
																					"nativeSrc": "4532:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:9"
																				},
																				"nativeSrc": "4524:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:9",
																					"nodeType": "YulBlock",
																					"src": "4547:21:9",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:9",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:9",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:9"
																								},
																								"nativeSrc": "4554:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:9",
																					"nodeType": "YulBlock",
																					"src": "4528:3:9",
																					"statements": []
																				},
																				"src": "4524:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:9",
																					"nodeType": "YulBlock",
																					"src": "4768:156:9",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:9"
																										},
																										"nativeSrc": "4809:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:9"
																								},
																								"nativeSrc": "4803:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:9",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:9",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:9"
																												},
																												"nativeSrc": "4891:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:9"
																										},
																										"nativeSrc": "4861:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:9"
																								},
																								"nativeSrc": "4846:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:9"
																							},
																							"nativeSrc": "4846:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:9"
																					},
																					"nativeSrc": "4748:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:9"
																				},
																				"nativeSrc": "4745:179:9",
																				"nodeType": "YulIf",
																				"src": "4745:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:9",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:9"
																									},
																									"nativeSrc": "4954:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:9",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:9"
																							},
																							"nativeSrc": "4950:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:9"
																					},
																					"nativeSrc": "4937:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:9"
																				},
																				"nativeSrc": "4937:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:9"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:9",
																	"nodeType": "YulCase",
																	"src": "4365:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:9",
																		"nodeType": "YulBlock",
																		"src": "5000:222:9",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:9",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:9",
																					"nodeType": "YulBlock",
																					"src": "5051:67:9",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:9",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:9"
																										},
																										"nativeSrc": "5084:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:9"
																								},
																								"nativeSrc": "5078:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:9"
																				},
																				"nativeSrc": "5041:77:9",
																				"nodeType": "YulIf",
																				"src": "5041:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:9"
																							},
																							"nativeSrc": "5144:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:9"
																					},
																					"nativeSrc": "5131:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:9"
																				},
																				"nativeSrc": "5131:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:9"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:9",
																	"nodeType": "YulCase",
																	"src": "4992:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:9"
																},
																"nativeSrc": "4342:14:9",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:9"
															},
															"nativeSrc": "4335:887:9",
															"nodeType": "YulSwitch",
															"src": "4335:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:9",
														"nodeType": "YulTypedName",
														"src": "3914:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:9",
														"nodeType": "YulTypedName",
														"src": "3920:3:9",
														"type": ""
													}
												],
												"src": "3833:1395:9"
											},
											{
												"body": {
													"nativeSrc": "5279:81:9",
													"nodeType": "YulBlock",
													"src": "5279:81:9",
													"statements": [
														{
															"nativeSrc": "5289:65:9",
															"nodeType": "YulAssignment",
															"src": "5289:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:9",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:9"
																},
																"nativeSrc": "5300:54:9",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:9",
														"nodeType": "YulTypedName",
														"src": "5261:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:9",
														"nodeType": "YulTypedName",
														"src": "5271:7:9",
														"type": ""
													}
												],
												"src": "5234:126:9"
											},
											{
												"body": {
													"nativeSrc": "5411:51:9",
													"nodeType": "YulBlock",
													"src": "5411:51:9",
													"statements": [
														{
															"nativeSrc": "5421:35:9",
															"nodeType": "YulAssignment",
															"src": "5421:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:9"
																},
																"nativeSrc": "5432:24:9",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:9",
														"nodeType": "YulTypedName",
														"src": "5393:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:9",
														"nodeType": "YulTypedName",
														"src": "5403:7:9",
														"type": ""
													}
												],
												"src": "5366:96:9"
											},
											{
												"body": {
													"nativeSrc": "5533:53:9",
													"nodeType": "YulBlock",
													"src": "5533:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:9"
																		},
																		"nativeSrc": "5555:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:9"
																},
																"nativeSrc": "5543:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:9"
															},
															"nativeSrc": "5543:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:9",
														"nodeType": "YulTypedName",
														"src": "5521:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:9",
														"nodeType": "YulTypedName",
														"src": "5528:3:9",
														"type": ""
													}
												],
												"src": "5468:118:9"
											},
											{
												"body": {
													"nativeSrc": "5690:124:9",
													"nodeType": "YulBlock",
													"src": "5690:124:9",
													"statements": [
														{
															"nativeSrc": "5700:26:9",
															"nodeType": "YulAssignment",
															"src": "5700:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:9"
																},
																"nativeSrc": "5708:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:9"
																		},
																		"nativeSrc": "5789:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:9"
																},
																"nativeSrc": "5736:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:9"
															},
															"nativeSrc": "5736:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:9",
														"nodeType": "YulTypedName",
														"src": "5662:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:9",
														"nodeType": "YulTypedName",
														"src": "5674:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:9",
														"nodeType": "YulTypedName",
														"src": "5685:4:9",
														"type": ""
													}
												],
												"src": "5592:222:9"
											},
											{
												"body": {
													"nativeSrc": "5848:152:9",
													"nodeType": "YulBlock",
													"src": "5848:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5865:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:77:9",
																		"nodeType": "YulLiteral",
																		"src": "5868:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5858:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:9"
																},
																"nativeSrc": "5858:88:9",
																"nodeType": "YulFunctionCall",
																"src": "5858:88:9"
															},
															"nativeSrc": "5858:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "5858:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5962:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5965:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5965:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:9"
																},
																"nativeSrc": "5955:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5955:15:9"
															},
															"nativeSrc": "5955:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "5955:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5986:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5986:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5989:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5979:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:9"
																},
																"nativeSrc": "5979:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5979:15:9"
															},
															"nativeSrc": "5979:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "5979:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5820:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "5820:180:9"
											},
											{
												"body": {
													"nativeSrc": "6050:147:9",
													"nodeType": "YulBlock",
													"src": "6050:147:9",
													"statements": [
														{
															"nativeSrc": "6060:25:9",
															"nodeType": "YulAssignment",
															"src": "6060:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6083:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6083:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6065:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "6065:17:9"
																},
																"nativeSrc": "6065:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6065:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6060:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "6060:1:9"
																}
															]
														},
														{
															"nativeSrc": "6094:25:9",
															"nodeType": "YulAssignment",
															"src": "6094:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6117:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6117:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6099:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "6099:17:9"
																},
																"nativeSrc": "6099:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6099:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6094:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "6094:1:9"
																}
															]
														},
														{
															"nativeSrc": "6128:16:9",
															"nodeType": "YulAssignment",
															"src": "6128:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6139:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6139:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6142:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6142:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6135:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6135:3:9"
																},
																"nativeSrc": "6135:9:9",
																"nodeType": "YulFunctionCall",
																"src": "6135:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6128:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6128:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6168:22:9",
																"nodeType": "YulBlock",
																"src": "6168:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6170:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "6170:16:9"
																			},
																			"nativeSrc": "6170:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6170:18:9"
																		},
																		"nativeSrc": "6170:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6170:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6160:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "6160:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6163:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6163:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6157:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6157:2:9"
																},
																"nativeSrc": "6157:10:9",
																"nodeType": "YulFunctionCall",
																"src": "6157:10:9"
															},
															"nativeSrc": "6154:36:9",
															"nodeType": "YulIf",
															"src": "6154:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6006:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6037:1:9",
														"nodeType": "YulTypedName",
														"src": "6037:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6040:1:9",
														"nodeType": "YulTypedName",
														"src": "6040:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6046:3:9",
														"nodeType": "YulTypedName",
														"src": "6046:3:9",
														"type": ""
													}
												],
												"src": "6006:191:9"
											},
											{
												"body": {
													"nativeSrc": "6268:53:9",
													"nodeType": "YulBlock",
													"src": "6268:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6285:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6285:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6308:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6308:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6290:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "6290:17:9"
																		},
																		"nativeSrc": "6290:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6290:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6278:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6278:6:9"
																},
																"nativeSrc": "6278:37:9",
																"nodeType": "YulFunctionCall",
																"src": "6278:37:9"
															},
															"nativeSrc": "6278:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "6278:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6203:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6256:5:9",
														"nodeType": "YulTypedName",
														"src": "6256:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6263:3:9",
														"nodeType": "YulTypedName",
														"src": "6263:3:9",
														"type": ""
													}
												],
												"src": "6203:118:9"
											},
											{
												"body": {
													"nativeSrc": "6481:288:9",
													"nodeType": "YulBlock",
													"src": "6481:288:9",
													"statements": [
														{
															"nativeSrc": "6491:26:9",
															"nodeType": "YulAssignment",
															"src": "6491:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6503:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6503:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6514:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6514:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6499:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6499:3:9"
																},
																"nativeSrc": "6499:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6499:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6491:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6491:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6571:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6571:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6584:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6584:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6595:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6595:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6580:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6580:3:9"
																		},
																		"nativeSrc": "6580:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6580:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6527:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6527:43:9"
																},
																"nativeSrc": "6527:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6527:71:9"
															},
															"nativeSrc": "6527:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6527:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6652:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6652:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6665:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6665:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6676:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6676:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6661:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6661:3:9"
																		},
																		"nativeSrc": "6661:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6661:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6608:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6608:43:9"
																},
																"nativeSrc": "6608:72:9",
																"nodeType": "YulFunctionCall",
																"src": "6608:72:9"
															},
															"nativeSrc": "6608:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "6608:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6734:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6734:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6747:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6747:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6758:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6758:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6743:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:9"
																		},
																		"nativeSrc": "6743:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6743:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6690:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6690:43:9"
																},
																"nativeSrc": "6690:72:9",
																"nodeType": "YulFunctionCall",
																"src": "6690:72:9"
															},
															"nativeSrc": "6690:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "6690:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6327:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6437:9:9",
														"nodeType": "YulTypedName",
														"src": "6437:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6449:6:9",
														"nodeType": "YulTypedName",
														"src": "6449:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6457:6:9",
														"nodeType": "YulTypedName",
														"src": "6457:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6465:6:9",
														"nodeType": "YulTypedName",
														"src": "6465:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6476:4:9",
														"nodeType": "YulTypedName",
														"src": "6476:4:9",
														"type": ""
													}
												],
												"src": "6327:442:9"
											},
											{
												"body": {
													"nativeSrc": "6873:124:9",
													"nodeType": "YulBlock",
													"src": "6873:124:9",
													"statements": [
														{
															"nativeSrc": "6883:26:9",
															"nodeType": "YulAssignment",
															"src": "6883:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6895:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6895:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6906:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6906:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6891:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6891:3:9"
																},
																"nativeSrc": "6891:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6891:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6883:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6883:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6963:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6963:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6976:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6976:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6987:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6987:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6972:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:9"
																		},
																		"nativeSrc": "6972:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6972:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6919:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6919:43:9"
																},
																"nativeSrc": "6919:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6919:71:9"
															},
															"nativeSrc": "6919:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6919:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6775:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6845:9:9",
														"nodeType": "YulTypedName",
														"src": "6845:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6857:6:9",
														"nodeType": "YulTypedName",
														"src": "6857:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6868:4:9",
														"nodeType": "YulTypedName",
														"src": "6868:4:9",
														"type": ""
													}
												],
												"src": "6775:222:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH11 0x201FCAFC2577D298500000 PUSH1 0x8 SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0x9 SSTORE PUSH7 0xB3697B81284000 PUSH1 0xA SSTORE PUSH1 0x0 PUSH1 0xB SSTORE PUSH11 0x854FDABD6AA1D32FB00000 PUSH1 0xE SSTORE PUSH11 0xFB768105935A2F3000000 PUSH1 0xF SSTORE PUSH7 0xB3697B81284000 PUSH1 0x10 SSTORE PUSH8 0x16345785D8A0000 PUSH1 0x11 SSTORE PUSH1 0x0 PUSH1 0x12 SSTORE PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH9 0x56BC75E2D63100000 PUSH1 0x15 SSTORE PUSH9 0xA2A15D09519BE00000 PUSH1 0x16 SSTORE PUSH1 0x0 PUSH1 0x18 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426574746F6B656E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4245545400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x7DC JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x7DC JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D5 DUP2 PUSH2 0x219 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x214 ADDRESS PUSH11 0xA56FA5B99019A5C8000000 PUSH2 0x2DF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x351 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x8EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x363 PUSH1 0x0 DUP4 DUP4 PUSH2 0x367 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3B9 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x939 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x48C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x445 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D5 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x522 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x57F SWAP2 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x60D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x620 JUMPI PUSH2 0x61F PUSH2 0x5C6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x688 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x64B JUMP JUMPDEST PUSH2 0x692 DUP7 DUP4 PUSH2 0x64B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D9 PUSH2 0x6D4 PUSH2 0x6CF DUP5 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F3 DUP4 PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x707 PUSH2 0x6FF DUP3 PUSH2 0x6E0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x658 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x71C PUSH2 0x70F JUMP JUMPDEST PUSH2 0x727 DUP2 DUP5 DUP5 PUSH2 0x6EA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x74B JUMPI PUSH2 0x740 PUSH1 0x0 DUP3 PUSH2 0x714 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x72D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x790 JUMPI PUSH2 0x761 DUP2 PUSH2 0x626 JUMP JUMPDEST PUSH2 0x76A DUP5 PUSH2 0x63B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x779 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x78D PUSH2 0x785 DUP6 PUSH2 0x63B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x72C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B3 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x795 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CC DUP4 DUP4 PUSH2 0x7A2 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7E5 DUP3 PUSH2 0x58C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7FE JUMPI PUSH2 0x7FD PUSH2 0x597 JUMP JUMPDEST JUMPDEST PUSH2 0x808 DUP3 SLOAD PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x813 DUP3 DUP3 DUP6 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x846 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x834 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x83E DUP6 DUP3 PUSH2 0x7C0 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x854 DUP7 PUSH2 0x626 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x87C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x857 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x899 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x895 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x7A2 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D9 DUP3 PUSH2 0x8AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E9 DUP2 PUSH2 0x8CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x904 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x944 DUP3 PUSH2 0x6AA JUMP JUMPDEST SWAP2 POP PUSH2 0x94F DUP4 PUSH2 0x6AA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x967 JUMPI PUSH2 0x966 PUSH2 0x90A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x976 DUP2 PUSH2 0x6AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x991 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x99E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x96D JUMP JUMPDEST PUSH2 0x9AB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x96D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x96D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B36 DUP1 PUSH2 0x9DD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x246 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x920168B3 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xCB8DCFE6 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xE6A23C3D GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xE6A23C3D EQ PUSH2 0x828 JUMPI DUP1 PUSH4 0xEE889ED0 EQ PUSH2 0x83F JUMPI DUP1 PUSH4 0xEF5B329C EQ PUSH2 0x856 JUMPI DUP1 PUSH4 0xF15A41F6 EQ PUSH2 0x881 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0xFDB20CCB EQ PUSH2 0x8E7 JUMPI PUSH2 0x246 JUMP JUMPDEST DUP1 PUSH4 0xCB8DCFE6 EQ PUSH2 0x750 JUMPI DUP1 PUSH4 0xD414890A EQ PUSH2 0x78D JUMPI DUP1 PUSH4 0xD50234C4 EQ PUSH2 0x7A9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7D4 JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x811 JUMPI PUSH2 0x246 JUMP JUMPDEST DUP1 PUSH4 0xAC21694C GT PUSH2 0xFD JUMPI DUP1 PUSH4 0xAC21694C EQ PUSH2 0x679 JUMPI DUP1 PUSH4 0xB0E68630 EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xB68ED11F EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0xBDA95633 EQ PUSH2 0x6FA JUMPI DUP1 PUSH4 0xC552E04B EQ PUSH2 0x725 JUMPI PUSH2 0x246 JUMP JUMPDEST DUP1 PUSH4 0x920168B3 EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0x940DE97E EQ PUSH2 0x5BD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0xA089DE2F EQ PUSH2 0x613 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x63C JUMPI PUSH2 0x246 JUMP JUMPDEST DUP1 PUSH4 0x55DD574C GT PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x84494708 GT PUSH2 0x18B JUMPI DUP1 PUSH4 0x84494708 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x8D8F2ADB EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x8F7713FF EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x567 JUMPI PUSH2 0x246 JUMP JUMPDEST DUP1 PUSH4 0x55DD574C EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x5FB3B944 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4B8 JUMPI PUSH2 0x246 JUMP JUMPDEST DUP1 PUSH4 0x1ECF8F4D GT PUSH2 0x20E JUMPI DUP1 PUSH4 0x1ECF8F4D EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x2A237BB6 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0x466C3F93 EQ PUSH2 0x3F2 JUMPI PUSH2 0x246 JUMP JUMPDEST DUP1 PUSH4 0x6D65AF3 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xFE83BB8 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x309 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x349 PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DC PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x20A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0xC0F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43A PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x465 PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x20EB JUMP JUMPDEST PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CD PUSH2 0xD29 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E4 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50F PUSH2 0xD50 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x551 PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57C PUSH2 0xE24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A7 PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D2 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FD PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0xED1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x663 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65E SWAP2 SWAP1 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x670 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68E PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B9 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C6 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E4 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F1 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70F PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71C SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x73A PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x747 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x777 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x772 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x784 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0x1079 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7BE PUSH2 0x1217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F6 SWAP2 SWAP1 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x121D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x808 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x826 PUSH2 0x12A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83D PUSH2 0x13E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x854 PUSH2 0x1482 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86B PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x878 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8E0 SWAP2 SWAP1 PUSH2 0x20EB JUMP JUMPDEST PUSH2 0x157E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x90E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x909 SWAP2 SWAP1 PUSH2 0x20EB JUMP JUMPDEST PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x93D SWAP1 PUSH2 0x2204 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x969 SWAP1 PUSH2 0x2204 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x98B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x999 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9CB PUSH2 0x163A JUMP JUMPDEST SWAP1 POP PUSH2 0x9D8 DUP2 DUP6 DUP6 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA04 PUSH2 0x163A JUMP JUMPDEST SWAP1 POP PUSH2 0xA11 DUP6 DUP3 DUP6 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0xA1C DUP6 DUP6 DUP6 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x18 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA4C PUSH2 0x17DC JUMP JUMPDEST PUSH2 0xA54 PUSH2 0x182B JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9A SWAP1 PUSH2 0x2281 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADF SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x16 SLOAD DUP2 GT ISZERO PUSH2 0xB2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB38 DUP3 PUSH2 0x1023 JUMP JUMPDEST SWAP1 POP PUSH1 0xE SLOAD DUP2 PUSH1 0x12 SLOAD PUSH2 0xB4B SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST GT ISZERO PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB83 SWAP1 PUSH2 0x2474 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x12 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB9E SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xE SLOAD PUSH1 0x12 SLOAD LT PUSH2 0xBF8 JUMPI PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC82E6055D31DE9B552CD0014F23A8B8CE120C288ED1AFCE01ADB97150EFC0185 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH2 0xC03 ADDRESS CALLER DUP4 PUSH2 0x16E8 JUMP JUMPDEST POP PUSH2 0xC0C PUSH2 0x1875 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC17 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5E SWAP1 PUSH2 0x24E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x14 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x13 DUP2 SWAP1 SSTORE POP PUSH32 0x71D9B86CD8E742CC8D4D6B9D25C84D4E42F8BA8138C6EE54914285F4A9540056 PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH2 0xCBA SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD31 PUSH2 0x187F JUMP JUMPDEST PUSH2 0xD3B PUSH1 0x0 PUSH2 0x1906 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xD58 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD63 ADDRESS PUSH2 0xCE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xDA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9F SWAP1 PUSH2 0x254C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDBA ADDRESS PUSH2 0xDB4 PUSH2 0xDF4 JUMP JUMPDEST DUP4 PUSH2 0x16E8 JUMP JUMPDEST PUSH32 0x9C6393F251205F9E03559951CAB4C9AE71767B6174F77944A5B0C2FA51FBDA9F DUP2 PUSH1 0x40 MLOAD PUSH2 0xDE9 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH11 0xA56FA5B99019A5C8000000 DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xE4E SWAP1 PUSH2 0x2204 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE7A SWAP1 PUSH2 0x2204 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEC7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE9C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEC7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEAA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xED9 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x18 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF20 SWAP1 PUSH2 0x25B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xF3A JUMPI POP PUSH1 0x64 DUP2 GT ISZERO JUMPDEST PUSH2 0xF79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF70 SWAP1 PUSH2 0x2624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH32 0xCBE7B2993D671FF089495AE9D90AE7A115F123DB134C0A6D3C4BC6E0C72CF7E5 PUSH1 0xD SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH2 0xFD7 SWAP3 SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFED PUSH2 0x163A JUMP JUMPDEST SWAP1 POP PUSH2 0xFFA DUP2 DUP6 DUP6 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE SLOAD PUSH1 0x12 SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH2 0x103C SWAP2 SWAP1 PUSH2 0x266D JUMP JUMPDEST PUSH2 0x1046 SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH2 0x1050 SWAP2 SWAP1 PUSH2 0x2712 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x105D SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH2 0x106D SWAP2 SWAP1 PUSH2 0x2712 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1081 PUSH2 0x17DC JUMP JUMPDEST PUSH2 0x1089 PUSH2 0x182B JUMP JUMPDEST PUSH1 0x18 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CF SWAP1 PUSH2 0x278F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH9 0x2B5E3AF16B1880000 DUP2 LT ISZERO PUSH2 0x1124 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111B SWAP1 PUSH2 0x2821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x112F DUP3 PUSH2 0x1528 JUMP JUMPDEST SWAP1 POP PUSH9 0x3635C9ADC5DEA00000 DUP2 GT ISZERO PUSH2 0x117D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1174 SWAP1 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x118F SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0xB SLOAD LT PUSH2 0x11E9 JUMPI PUSH1 0x0 PUSH1 0x18 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x8D80F5BE79E7DD88D69814B57E8F5C7DD249B3D6BAC194EB9144B8CA639DB036 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH2 0x120B CALLER DUP3 PUSH4 0x1E13380 TIMESTAMP PUSH2 0x11FE SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST PUSH3 0xED4E00 PUSH3 0x278D00 PUSH2 0x19CC JUMP JUMPDEST POP PUSH2 0x1214 PUSH2 0x1875 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12AC PUSH2 0x187F JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x12F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EB SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12FE PUSH2 0xDF4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1321 SWAP1 PUSH2 0x2970 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x135E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x13A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139E SWAP1 PUSH2 0x29D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x43F607A14D3B4F0A11A0B2E192BBFCD894298BA5ABF22553BE6081406DB28AA DUP3 PUSH1 0x40 MLOAD PUSH2 0x13D6 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x13EA PUSH2 0x187F JUMP JUMPDEST PUSH1 0x18 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1439 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1430 SWAP1 PUSH2 0x278F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x18 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x8D80F5BE79E7DD88D69814B57E8F5C7DD249B3D6BAC194EB9144B8CA639DB036 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x148A PUSH2 0x187F JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x14D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D0 SWAP1 PUSH2 0x2281 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC82E6055D31DE9B552CD0014F23A8B8CE120C288ED1AFCE01ADB97150EFC0185 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 SLOAD PUSH1 0xB SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x1541 SWAP2 SWAP1 PUSH2 0x266D JUMP JUMPDEST PUSH2 0x154B SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH2 0x1555 SWAP2 SWAP1 PUSH2 0x2712 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1562 SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH2 0x1572 SWAP2 SWAP1 PUSH2 0x2712 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1586 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15F8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15EF SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1601 DUP2 PUSH2 0x1906 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x164F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1A4D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1660 DUP5 DUP5 PUSH2 0x121D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x16E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x16D2 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16E1 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1A4D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x175A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1751 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17CC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C3 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17D7 DUP4 DUP4 DUP4 PUSH2 0x1C24 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1821 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1818 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1833 PUSH2 0xCC4 JUMP JUMPDEST ISZERO PUSH2 0x1873 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x186A SWAP1 PUSH2 0x2AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1887 PUSH2 0x163A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18A5 PUSH2 0xDF4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1904 JUMPI PUSH2 0x18C8 PUSH2 0x163A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18FB SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x17 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A23 SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ABF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB6 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B31 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B28 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1C1E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C15 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C76 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C6A SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1D02 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D92 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1DDF JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E3C SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E5C DUP2 PUSH2 0x1E49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E77 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EB7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E9C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EDF DUP3 PUSH2 0x1E7D JUMP JUMPDEST PUSH2 0x1EE9 DUP2 DUP6 PUSH2 0x1E88 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EF9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0x1F02 DUP2 PUSH2 0x1EC3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F27 DUP2 DUP5 PUSH2 0x1ED4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5F DUP3 PUSH2 0x1F34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F6F DUP2 PUSH2 0x1F54 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F8C DUP2 PUSH2 0x1F66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F9B DUP2 PUSH2 0x1E49 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FB8 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FD5 JUMPI PUSH2 0x1FD4 PUSH2 0x1F2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FE3 DUP6 DUP3 DUP7 ADD PUSH2 0x1F7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FF4 DUP6 DUP3 DUP7 ADD PUSH2 0x1FA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2013 DUP2 PUSH2 0x1FFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x202E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x200A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x204D JUMPI PUSH2 0x204C PUSH2 0x1F2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x205B DUP7 DUP3 DUP8 ADD PUSH2 0x1F7D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x206C DUP7 DUP3 DUP8 ADD PUSH2 0x1F7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x207D DUP7 DUP3 DUP8 ADD PUSH2 0x1FA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x209D DUP2 PUSH2 0x2087 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2094 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D4 JUMPI PUSH2 0x20D3 PUSH2 0x1F2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20E2 DUP5 DUP3 DUP6 ADD PUSH2 0x1FA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2101 JUMPI PUSH2 0x2100 PUSH2 0x1F2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x210F DUP5 DUP3 DUP6 ADD PUSH2 0x1F7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2121 DUP2 PUSH2 0x1F54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x213C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2118 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2159 JUMPI PUSH2 0x2158 PUSH2 0x1F2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2167 DUP6 DUP3 DUP7 ADD PUSH2 0x1F7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2178 DUP6 DUP3 DUP7 ADD PUSH2 0x1F7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2197 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x21A4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x21B1 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x21BE PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x21CB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1E53 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x221C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x222F JUMPI PUSH2 0x222E PUSH2 0x21D5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072652D53616C65206973206E6F742061637469766500000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226B PUSH1 0x16 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2276 DUP3 PUSH2 0x2235 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x229A DUP2 PUSH2 0x225E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742069732062656C6F77206D696E696D756D207075726368617365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206C696D69740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FD PUSH1 0x26 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2308 DUP3 PUSH2 0x22A1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x232C DUP2 PUSH2 0x22F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742065786365656473206D6178696D756D20707572636861736520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C696D6974000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x238F PUSH1 0x25 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x239A DUP3 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23BE DUP2 PUSH2 0x2382 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23FF DUP3 PUSH2 0x1E49 JUMP JUMPDEST SWAP2 POP PUSH2 0x240A DUP4 PUSH2 0x1E49 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2422 JUMPI PUSH2 0x2421 PUSH2 0x23C5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473205072652D53616C6520746F6B656E206C696D697400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245E PUSH1 0x1C DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2469 DUP3 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x248D DUP2 PUSH2 0x2451 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072652D53616C6520697320616C726561647920616374697665000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24CA PUSH1 0x1A DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x24D5 DUP3 PUSH2 0x2494 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24F9 DUP2 PUSH2 0x24BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2536 PUSH1 0x15 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2541 DUP3 PUSH2 0x2500 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2565 DUP2 PUSH2 0x2529 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520616C7265616479206163746976650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A2 PUSH1 0x1B DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x25AD DUP3 PUSH2 0x256C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25D1 DUP2 PUSH2 0x2595 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642070657263656E746167650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260E PUSH1 0x12 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2619 DUP3 PUSH2 0x25D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x263D DUP2 PUSH2 0x2601 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2659 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x2666 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E53 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2678 DUP3 PUSH2 0x1E49 JUMP JUMPDEST SWAP2 POP PUSH2 0x2683 DUP4 PUSH2 0x1E49 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x269B JUMPI PUSH2 0x269A PUSH2 0x23C5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AC DUP3 PUSH2 0x1E49 JUMP JUMPDEST SWAP2 POP PUSH2 0x26B7 DUP4 PUSH2 0x1E49 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x26C5 DUP2 PUSH2 0x1E49 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x26DC JUMPI PUSH2 0x26DB PUSH2 0x23C5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x271D DUP3 PUSH2 0x1E49 JUMP JUMPDEST SWAP2 POP PUSH2 0x2728 DUP4 PUSH2 0x1E49 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2738 JUMPI PUSH2 0x2737 PUSH2 0x26E3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x507269766174652053616C65206973206E6F7420616374697665000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2779 PUSH1 0x1A DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2784 DUP3 PUSH2 0x2743 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27A8 DUP2 PUSH2 0x276C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E696D756D2055534420616D6F756E742072657175697265642069732035 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3020555344000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280B PUSH1 0x25 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2816 DUP3 PUSH2 0x27AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x283A DUP2 PUSH2 0x27FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D20746F6B656E207075726368617365206C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696D697400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289D PUSH1 0x24 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x28A8 DUP3 PUSH2 0x2841 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28CC DUP2 PUSH2 0x2890 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2045544820746F2077697468647261770000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2909 PUSH1 0x12 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2914 DUP3 PUSH2 0x28D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2938 DUP2 PUSH2 0x28FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295A PUSH1 0x0 DUP4 PUSH2 0x293F JUMP JUMPDEST SWAP2 POP PUSH2 0x2965 DUP3 PUSH2 0x294A JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297B DUP3 PUSH2 0x294D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29BB PUSH1 0xF DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x29C6 DUP3 PUSH2 0x2985 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29EA DUP2 PUSH2 0x29AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A06 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2118 JUMP JUMPDEST PUSH2 0x2A13 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x2A20 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E53 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5E PUSH1 0x1F DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A69 DUP3 PUSH2 0x2A28 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A8D DUP2 PUSH2 0x2A51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ACA PUSH1 0x10 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AD5 DUP3 PUSH2 0x2A94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AF9 DUP2 PUSH2 0x2ABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C JUMPI PUSH0 MSTORE8 SLT 0xAA SHL 0xD8 0xD2 PUSH6 0xF6AD810122AE SLT SHL SUB 0xCE CALLER PUSH1 0x55 SHR AND DUP10 PUSH32 0x42F03FFFEA64736F6C634300081A003300000000000000000000000000000000 ",
							"sourceMap": "286:8014:8:-:0;;;523:21;488:56;;589:16;550:55;;682:17;645:54;;773:1;734:40;;1054:22;1023:53;;1167:21;1131:57;;1272:17;1237:52;;1361:14;1328:47;;1443:1;1408:36;;1548:5;1520:33;;;;;;;;;;;;;;;;;;;;1665:14;1623:56;;1769:15;1727:57;;2177:5;2145:37;;;;;;;;;;;;;;;;;;;;2836:111;;;;;;;;;;2884:10;1896:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:3;1821:7;:22;;;;1006:5:2;996:7;;:15;;;;;;;;;;;;;;;;;;2906:34:8::2;2920:4;424:22;2906:5;;;:34;;:::i;:::-;286:8014:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:4:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:191;6046:3;6065:20;6083:1;6065:20;:::i;:::-;6060:25;;6099:20;6117:1;6099:20;:::i;:::-;6094:25;;6142:1;6139;6135:9;6128:16;;6163:3;6160:1;6157:10;6154:36;;;6170:18;;:::i;:::-;6154:36;6006:191;;;;:::o;6203:118::-;6290:24;6308:5;6290:24;:::i;:::-;6285:3;6278:37;6203:118;;:::o;6327:442::-;6476:4;6514:2;6503:9;6499:18;6491:26;;6527:71;6595:1;6584:9;6580:17;6571:6;6527:71;:::i;:::-;6608:72;6676:2;6665:9;6661:18;6652:6;6608:72;:::i;:::-;6690;6758:2;6747:9;6743:18;6734:6;6690:72;:::i;:::-;6327:442;;;;;;:::o;6775:222::-;6868:4;6906:2;6895:9;6891:18;6883:26;;6919:71;6987:1;6976:9;6972:17;6963:6;6919:71;:::i;:::-;6775:222;;;;:::o;286:8014:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TOTAL_SUPPLY_1127": {
									"entryPoint": 3620,
									"id": 1127,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_863": {
									"entryPoint": 5698,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_923": {
									"entryPoint": 6733,
									"id": 923,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 6271,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1088": {
									"entryPoint": 5690,
									"id": 1088,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_445": {
									"entryPoint": 6261,
									"id": 445,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_437": {
									"entryPoint": 6108,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_348": {
									"entryPoint": 6187,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_971": {
									"entryPoint": 5716,
									"id": 971,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 6406,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_702": {
									"entryPoint": 5864,
									"id": 702,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_779": {
									"entryPoint": 7204,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@affiliateRewardPercentage_1155": {
									"entryPoint": 4631,
									"id": 1155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_599": {
									"entryPoint": 4637,
									"id": 599,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_623": {
									"entryPoint": 2496,
									"id": 623,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_558": {
									"entryPoint": 3297,
									"id": 558,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyTokensPreSale_1505": {
									"entryPoint": 2628,
									"id": 1505,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyTokensPrivateSale_1408": {
									"entryPoint": 4217,
									"id": 1408,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateTokensPreSale_1536": {
									"entryPoint": 4131,
									"id": 1536,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateTokensPrivateSale_1567": {
									"entryPoint": 5416,
									"id": 1567,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@createVestingSchedule_1613": {
									"entryPoint": 6604,
									"id": 1613,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@decimals_536": {
									"entryPoint": 2619,
									"id": 536,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@endPreSale_1651": {
									"entryPoint": 5250,
									"id": 1651,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@endPrivateSale_1632": {
									"entryPoint": 5090,
									"id": 1632,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxPurchaseAmountPreSale_1205": {
									"entryPoint": 4101,
									"id": 1205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minPurchaseAmountPreSale_1198": {
									"entryPoint": 2547,
									"id": 1198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_518": {
									"entryPoint": 2350,
									"id": 518,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 3572,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_336": {
									"entryPoint": 3268,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@preSaleActive_1191": {
									"entryPoint": 3389,
									"id": 1191,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleEndPrice_1183": {
									"entryPoint": 3614,
									"id": 1183,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleSoldTokens_1186": {
									"entryPoint": 4113,
									"id": 1186,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleStartPrice_1176": {
									"entryPoint": 3635,
									"id": 1176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleStartTime_1188": {
									"entryPoint": 2344,
									"id": 1188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleTargetFunds_1169": {
									"entryPoint": 5410,
									"id": 1169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleTokens_1162": {
									"entryPoint": 2531,
									"id": 1162,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleActive_1224": {
									"entryPoint": 2600,
									"id": 1224,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleEndPrice_1148": {
									"entryPoint": 4119,
									"id": 1148,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleSoldTokens_1151": {
									"entryPoint": 3291,
									"id": 1151,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleStartPrice_1141": {
									"entryPoint": 4107,
									"id": 1141,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleStartTime_1153": {
									"entryPoint": 3641,
									"id": 1153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleTokens_1134": {
									"entryPoint": 4125,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 3369,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startPreSale_1434": {
									"entryPoint": 3087,
									"id": 1434,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startPrivateSale_1336": {
									"entryPoint": 3793,
									"id": 1336,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_527": {
									"entryPoint": 3647,
									"id": 527,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_545": {
									"entryPoint": 2537,
									"id": 545,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_655": {
									"entryPoint": 2553,
									"id": 655,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 5502,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_582": {
									"entryPoint": 4066,
									"id": 582,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@vestingSchedules_1221": {
									"entryPoint": 5636,
									"id": 1221,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawETH_1729": {
									"entryPoint": 4772,
									"id": 1729,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawTokens_1688": {
									"entryPoint": 3408,
									"id": 1688,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_149fc2f6d9d0004e99a811381712889395320b603e5c66522b26c56511b82020_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_231cfa2b1ee3162fd72ea47cdb9f36a33e37eaee65ad5b803c7b92380ed9c7bd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2aca0dda29ce8259de35f4c7fbb579f5f208445253d404472728673406706fd3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_400b214ee1a1a93cf01fb3c9ef7cf58d124b38839c5c840b50ef058141623410_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_830458c11bcdb4f40cbff2f42c3fab42ea823db00be9aa5e6bb4a5fbd14f6155_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_83ab5b2b5d49cf4328cac2cffda83e0458a2b9571cc02569f86cb90099aed62d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b8ec7f987188bef06f64e6ac12bf8951d0fa7337751db1feb89585da05fb6ea7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c123d62fd86e1eb44afc70124744d1e32d529839eb044ed770129d4522c1d247_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10573,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_df280954953c79d750ef99714a7fa9695b0308e506cbcf3ade5f228691300673_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10737,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149fc2f6d9d0004e99a811381712889395320b603e5c66522b26c56511b82020__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_231cfa2b1ee3162fd72ea47cdb9f36a33e37eaee65ad5b803c7b92380ed9c7bd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2aca0dda29ce8259de35f4c7fbb579f5f208445253d404472728673406706fd3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_400b214ee1a1a93cf01fb3c9ef7cf58d124b38839c5c840b50ef058141623410__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_830458c11bcdb4f40cbff2f42c3fab42ea823db00be9aa5e6bb4a5fbd14f6155__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_83ab5b2b5d49cf4328cac2cffda83e0458a2b9571cc02569f86cb90099aed62d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b8ec7f987188bef06f64e6ac12bf8951d0fa7337751db1feb89585da05fb6ea7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c123d62fd86e1eb44afc70124744d1e32d529839eb044ed770129d4522c1d247__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df280954953c79d750ef99714a7fa9695b0308e506cbcf3ade5f228691300673__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8578,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9157,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8661,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7983,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_149fc2f6d9d0004e99a811381712889395320b603e5c66522b26c56511b82020": {
									"entryPoint": 9580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_231cfa2b1ee3162fd72ea47cdb9f36a33e37eaee65ad5b803c7b92380ed9c7bd": {
									"entryPoint": 9364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 10629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2aca0dda29ce8259de35f4c7fbb579f5f208445253d404472728673406706fd3": {
									"entryPoint": 10051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04": {
									"entryPoint": 9688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_400b214ee1a1a93cf01fb3c9ef7cf58d124b38839c5c840b50ef058141623410": {
									"entryPoint": 8757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 10900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db": {
									"entryPoint": 9472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_830458c11bcdb4f40cbff2f42c3fab42ea823db00be9aa5e6bb4a5fbd14f6155": {
									"entryPoint": 8865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_83ab5b2b5d49cf4328cac2cffda83e0458a2b9571cc02569f86cb90099aed62d": {
									"entryPoint": 10305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95": {
									"entryPoint": 10451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b8ec7f987188bef06f64e6ac12bf8951d0fa7337751db1feb89585da05fb6ea7": {
									"entryPoint": 9256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c123d62fd86e1eb44afc70124744d1e32d529839eb044ed770129d4522c1d247": {
									"entryPoint": 10159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 10570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_df280954953c79d750ef99714a7fa9695b0308e506cbcf3ade5f228691300673": {
									"entryPoint": 9011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 10792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25599:9",
										"nodeType": "YulBlock",
										"src": "0:25599:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:9",
													"nodeType": "YulBlock",
													"src": "52:32:9",
													"statements": [
														{
															"nativeSrc": "62:16:9",
															"nodeType": "YulAssignment",
															"src": "62:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:9",
																"nodeType": "YulIdentifier",
																"src": "73:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:9",
														"nodeType": "YulTypedName",
														"src": "34:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:9",
														"nodeType": "YulTypedName",
														"src": "44:7:9",
														"type": ""
													}
												],
												"src": "7:77:9"
											},
											{
												"body": {
													"nativeSrc": "155:53:9",
													"nodeType": "YulBlock",
													"src": "155:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:9"
																		},
																		"nativeSrc": "177:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:9"
																},
																"nativeSrc": "165:37:9",
																"nodeType": "YulFunctionCall",
																"src": "165:37:9"
															},
															"nativeSrc": "165:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:9",
														"nodeType": "YulTypedName",
														"src": "143:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:9",
														"nodeType": "YulTypedName",
														"src": "150:3:9",
														"type": ""
													}
												],
												"src": "90:118:9"
											},
											{
												"body": {
													"nativeSrc": "312:124:9",
													"nodeType": "YulBlock",
													"src": "312:124:9",
													"statements": [
														{
															"nativeSrc": "322:26:9",
															"nodeType": "YulAssignment",
															"src": "322:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:9",
																		"nodeType": "YulLiteral",
																		"src": "345:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:9"
																},
																"nativeSrc": "330:18:9",
																"nodeType": "YulFunctionCall",
																"src": "330:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:9",
																				"nodeType": "YulLiteral",
																				"src": "426:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:9"
																		},
																		"nativeSrc": "411:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:9"
																},
																"nativeSrc": "358:71:9",
																"nodeType": "YulFunctionCall",
																"src": "358:71:9"
															},
															"nativeSrc": "358:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:9",
														"nodeType": "YulTypedName",
														"src": "284:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:9",
														"nodeType": "YulTypedName",
														"src": "296:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:9",
														"nodeType": "YulTypedName",
														"src": "307:4:9",
														"type": ""
													}
												],
												"src": "214:222:9"
											},
											{
												"body": {
													"nativeSrc": "501:40:9",
													"nodeType": "YulBlock",
													"src": "501:40:9",
													"statements": [
														{
															"nativeSrc": "512:22:9",
															"nodeType": "YulAssignment",
															"src": "512:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "528:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "522:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:9"
																},
																"nativeSrc": "522:12:9",
																"nodeType": "YulFunctionCall",
																"src": "522:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "512:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "442:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "484:5:9",
														"nodeType": "YulTypedName",
														"src": "484:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "494:6:9",
														"nodeType": "YulTypedName",
														"src": "494:6:9",
														"type": ""
													}
												],
												"src": "442:99:9"
											},
											{
												"body": {
													"nativeSrc": "643:73:9",
													"nodeType": "YulBlock",
													"src": "643:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "660:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "665:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "653:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:9"
																},
																"nativeSrc": "653:19:9",
																"nodeType": "YulFunctionCall",
																"src": "653:19:9"
															},
															"nativeSrc": "653:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "653:19:9"
														},
														{
															"nativeSrc": "681:29:9",
															"nodeType": "YulAssignment",
															"src": "681:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "700:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "700:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:4:9",
																		"nodeType": "YulLiteral",
																		"src": "705:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "696:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:9"
																},
																"nativeSrc": "696:14:9",
																"nodeType": "YulFunctionCall",
																"src": "696:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "681:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "681:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "547:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "615:3:9",
														"nodeType": "YulTypedName",
														"src": "615:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "620:6:9",
														"nodeType": "YulTypedName",
														"src": "620:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "631:11:9",
														"nodeType": "YulTypedName",
														"src": "631:11:9",
														"type": ""
													}
												],
												"src": "547:169:9"
											},
											{
												"body": {
													"nativeSrc": "784:186:9",
													"nodeType": "YulBlock",
													"src": "784:186:9",
													"statements": [
														{
															"nativeSrc": "795:10:9",
															"nodeType": "YulVariableDeclaration",
															"src": "795:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "804:1:9",
																"nodeType": "YulLiteral",
																"src": "804:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "799:1:9",
																	"nodeType": "YulTypedName",
																	"src": "799:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "864:63:9",
																"nodeType": "YulBlock",
																"src": "864:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "889:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "889:3:9"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "894:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "894:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "885:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "885:3:9"
																					},
																					"nativeSrc": "885:11:9",
																					"nodeType": "YulFunctionCall",
																					"src": "885:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "908:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "908:3:9"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "913:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "913:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "904:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "904:3:9"
																							},
																							"nativeSrc": "904:11:9",
																							"nodeType": "YulFunctionCall",
																							"src": "904:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "898:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "898:5:9"
																					},
																					"nativeSrc": "898:18:9",
																					"nodeType": "YulFunctionCall",
																					"src": "898:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "878:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "878:6:9"
																			},
																			"nativeSrc": "878:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "878:39:9"
																		},
																		"nativeSrc": "878:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "878:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "825:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "825:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "828:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "828:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "822:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "822:2:9"
																},
																"nativeSrc": "822:13:9",
																"nodeType": "YulFunctionCall",
																"src": "822:13:9"
															},
															"nativeSrc": "814:113:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "836:19:9",
																"nodeType": "YulBlock",
																"src": "836:19:9",
																"statements": [
																	{
																		"nativeSrc": "838:15:9",
																		"nodeType": "YulAssignment",
																		"src": "838:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "847:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "847:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "850:2:9",
																					"nodeType": "YulLiteral",
																					"src": "850:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "843:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "843:3:9"
																			},
																			"nativeSrc": "843:10:9",
																			"nodeType": "YulFunctionCall",
																			"src": "843:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "838:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "838:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "818:3:9",
																"nodeType": "YulBlock",
																"src": "818:3:9",
																"statements": []
															},
															"src": "814:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "947:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "947:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "952:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "952:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "943:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "943:3:9"
																		},
																		"nativeSrc": "943:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "943:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "961:1:9",
																		"nodeType": "YulLiteral",
																		"src": "961:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "936:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "936:6:9"
																},
																"nativeSrc": "936:27:9",
																"nodeType": "YulFunctionCall",
																"src": "936:27:9"
															},
															"nativeSrc": "936:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "936:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "722:248:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "766:3:9",
														"nodeType": "YulTypedName",
														"src": "766:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "771:3:9",
														"nodeType": "YulTypedName",
														"src": "771:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "776:6:9",
														"nodeType": "YulTypedName",
														"src": "776:6:9",
														"type": ""
													}
												],
												"src": "722:248:9"
											},
											{
												"body": {
													"nativeSrc": "1024:54:9",
													"nodeType": "YulBlock",
													"src": "1024:54:9",
													"statements": [
														{
															"nativeSrc": "1034:38:9",
															"nodeType": "YulAssignment",
															"src": "1034:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1052:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1052:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1059:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1059:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1048:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1048:3:9"
																		},
																		"nativeSrc": "1048:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1048:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1068:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1068:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1064:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1064:3:9"
																		},
																		"nativeSrc": "1064:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1064:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1044:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1044:3:9"
																},
																"nativeSrc": "1044:28:9",
																"nodeType": "YulFunctionCall",
																"src": "1044:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1034:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1034:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "976:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1007:5:9",
														"nodeType": "YulTypedName",
														"src": "1007:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1017:6:9",
														"nodeType": "YulTypedName",
														"src": "1017:6:9",
														"type": ""
													}
												],
												"src": "976:102:9"
											},
											{
												"body": {
													"nativeSrc": "1176:285:9",
													"nodeType": "YulBlock",
													"src": "1176:285:9",
													"statements": [
														{
															"nativeSrc": "1186:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1186:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1233:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1233:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1200:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "1200:32:9"
																},
																"nativeSrc": "1200:39:9",
																"nodeType": "YulFunctionCall",
																"src": "1200:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1190:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1190:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1248:78:9",
															"nodeType": "YulAssignment",
															"src": "1248:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1314:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1314:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1319:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1319:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1255:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "1255:58:9"
																},
																"nativeSrc": "1255:71:9",
																"nodeType": "YulFunctionCall",
																"src": "1255:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1248:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1248:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1374:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1374:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1381:4:9",
																				"nodeType": "YulLiteral",
																				"src": "1381:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1370:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1370:3:9"
																		},
																		"nativeSrc": "1370:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1370:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1388:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1388:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1393:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1393:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1335:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "1335:34:9"
																},
																"nativeSrc": "1335:65:9",
																"nodeType": "YulFunctionCall",
																"src": "1335:65:9"
															},
															"nativeSrc": "1335:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "1335:65:9"
														},
														{
															"nativeSrc": "1409:46:9",
															"nodeType": "YulAssignment",
															"src": "1409:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1420:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1420:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1447:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1447:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1425:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "1425:21:9"
																		},
																		"nativeSrc": "1425:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1425:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1416:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:9"
																},
																"nativeSrc": "1416:39:9",
																"nodeType": "YulFunctionCall",
																"src": "1416:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1409:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1409:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1084:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1157:5:9",
														"nodeType": "YulTypedName",
														"src": "1157:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1164:3:9",
														"nodeType": "YulTypedName",
														"src": "1164:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1172:3:9",
														"nodeType": "YulTypedName",
														"src": "1172:3:9",
														"type": ""
													}
												],
												"src": "1084:377:9"
											},
											{
												"body": {
													"nativeSrc": "1585:195:9",
													"nodeType": "YulBlock",
													"src": "1585:195:9",
													"statements": [
														{
															"nativeSrc": "1595:26:9",
															"nodeType": "YulAssignment",
															"src": "1595:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1607:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1607:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1618:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1618:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1603:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1603:3:9"
																},
																"nativeSrc": "1603:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1603:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1595:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1595:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1642:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1642:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1653:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1653:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1638:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1638:3:9"
																		},
																		"nativeSrc": "1638:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1638:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1661:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1661:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1667:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1667:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1657:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:9"
																		},
																		"nativeSrc": "1657:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1657:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1631:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1631:6:9"
																},
																"nativeSrc": "1631:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1631:47:9"
															},
															"nativeSrc": "1631:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1631:47:9"
														},
														{
															"nativeSrc": "1687:86:9",
															"nodeType": "YulAssignment",
															"src": "1687:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1759:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1759:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1768:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1768:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1695:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1695:63:9"
																},
																"nativeSrc": "1695:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1695:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1687:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1687:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1467:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1557:9:9",
														"nodeType": "YulTypedName",
														"src": "1557:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1569:6:9",
														"nodeType": "YulTypedName",
														"src": "1569:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1580:4:9",
														"nodeType": "YulTypedName",
														"src": "1580:4:9",
														"type": ""
													}
												],
												"src": "1467:313:9"
											},
											{
												"body": {
													"nativeSrc": "1826:35:9",
													"nodeType": "YulBlock",
													"src": "1826:35:9",
													"statements": [
														{
															"nativeSrc": "1836:19:9",
															"nodeType": "YulAssignment",
															"src": "1836:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1852:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1852:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1846:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1846:5:9"
																},
																"nativeSrc": "1846:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1846:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1836:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1786:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1819:6:9",
														"nodeType": "YulTypedName",
														"src": "1819:6:9",
														"type": ""
													}
												],
												"src": "1786:75:9"
											},
											{
												"body": {
													"nativeSrc": "1956:28:9",
													"nodeType": "YulBlock",
													"src": "1956:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1973:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1973:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1976:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1976:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1966:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:9"
																},
																"nativeSrc": "1966:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1966:12:9"
															},
															"nativeSrc": "1966:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1966:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1867:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1867:117:9"
											},
											{
												"body": {
													"nativeSrc": "2079:28:9",
													"nodeType": "YulBlock",
													"src": "2079:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2096:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2096:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2099:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2099:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2089:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2089:6:9"
																},
																"nativeSrc": "2089:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2089:12:9"
															},
															"nativeSrc": "2089:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "2089:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1990:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1990:117:9"
											},
											{
												"body": {
													"nativeSrc": "2158:81:9",
													"nodeType": "YulBlock",
													"src": "2158:81:9",
													"statements": [
														{
															"nativeSrc": "2168:65:9",
															"nodeType": "YulAssignment",
															"src": "2168:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2183:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2183:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2190:42:9",
																		"nodeType": "YulLiteral",
																		"src": "2190:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2179:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2179:3:9"
																},
																"nativeSrc": "2179:54:9",
																"nodeType": "YulFunctionCall",
																"src": "2179:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2168:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2168:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2113:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2140:5:9",
														"nodeType": "YulTypedName",
														"src": "2140:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2150:7:9",
														"nodeType": "YulTypedName",
														"src": "2150:7:9",
														"type": ""
													}
												],
												"src": "2113:126:9"
											},
											{
												"body": {
													"nativeSrc": "2290:51:9",
													"nodeType": "YulBlock",
													"src": "2290:51:9",
													"statements": [
														{
															"nativeSrc": "2300:35:9",
															"nodeType": "YulAssignment",
															"src": "2300:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2329:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2329:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2311:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2311:17:9"
																},
																"nativeSrc": "2311:24:9",
																"nodeType": "YulFunctionCall",
																"src": "2311:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2300:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2300:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2245:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2272:5:9",
														"nodeType": "YulTypedName",
														"src": "2272:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2282:7:9",
														"nodeType": "YulTypedName",
														"src": "2282:7:9",
														"type": ""
													}
												],
												"src": "2245:96:9"
											},
											{
												"body": {
													"nativeSrc": "2390:79:9",
													"nodeType": "YulBlock",
													"src": "2390:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2447:16:9",
																"nodeType": "YulBlock",
																"src": "2447:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2456:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2456:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2459:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2459:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2449:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2449:6:9"
																			},
																			"nativeSrc": "2449:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2449:12:9"
																		},
																		"nativeSrc": "2449:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2449:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2413:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2413:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2438:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2438:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2420:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2420:17:9"
																				},
																				"nativeSrc": "2420:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2420:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2410:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2410:2:9"
																		},
																		"nativeSrc": "2410:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2410:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2403:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2403:6:9"
																},
																"nativeSrc": "2403:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2403:43:9"
															},
															"nativeSrc": "2400:63:9",
															"nodeType": "YulIf",
															"src": "2400:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2347:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2383:5:9",
														"nodeType": "YulTypedName",
														"src": "2383:5:9",
														"type": ""
													}
												],
												"src": "2347:122:9"
											},
											{
												"body": {
													"nativeSrc": "2527:87:9",
													"nodeType": "YulBlock",
													"src": "2527:87:9",
													"statements": [
														{
															"nativeSrc": "2537:29:9",
															"nodeType": "YulAssignment",
															"src": "2537:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2559:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2559:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2546:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2546:12:9"
																},
																"nativeSrc": "2546:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2546:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2537:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2537:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2602:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2602:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2575:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2575:26:9"
																},
																"nativeSrc": "2575:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2575:33:9"
															},
															"nativeSrc": "2575:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2575:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2475:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2505:6:9",
														"nodeType": "YulTypedName",
														"src": "2505:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2513:3:9",
														"nodeType": "YulTypedName",
														"src": "2513:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2521:5:9",
														"nodeType": "YulTypedName",
														"src": "2521:5:9",
														"type": ""
													}
												],
												"src": "2475:139:9"
											},
											{
												"body": {
													"nativeSrc": "2663:79:9",
													"nodeType": "YulBlock",
													"src": "2663:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2720:16:9",
																"nodeType": "YulBlock",
																"src": "2720:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2729:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2729:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2732:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2732:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2722:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2722:6:9"
																			},
																			"nativeSrc": "2722:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2722:12:9"
																		},
																		"nativeSrc": "2722:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2722:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2686:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2686:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2711:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2711:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2693:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2693:17:9"
																				},
																				"nativeSrc": "2693:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2693:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2683:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2683:2:9"
																		},
																		"nativeSrc": "2683:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2683:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2676:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2676:6:9"
																},
																"nativeSrc": "2676:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2676:43:9"
															},
															"nativeSrc": "2673:63:9",
															"nodeType": "YulIf",
															"src": "2673:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2620:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2656:5:9",
														"nodeType": "YulTypedName",
														"src": "2656:5:9",
														"type": ""
													}
												],
												"src": "2620:122:9"
											},
											{
												"body": {
													"nativeSrc": "2800:87:9",
													"nodeType": "YulBlock",
													"src": "2800:87:9",
													"statements": [
														{
															"nativeSrc": "2810:29:9",
															"nodeType": "YulAssignment",
															"src": "2810:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2832:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2832:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2819:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2819:12:9"
																},
																"nativeSrc": "2819:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2819:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2810:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2810:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2875:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2875:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2848:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2848:26:9"
																},
																"nativeSrc": "2848:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2848:33:9"
															},
															"nativeSrc": "2848:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2848:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2748:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2778:6:9",
														"nodeType": "YulTypedName",
														"src": "2778:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2786:3:9",
														"nodeType": "YulTypedName",
														"src": "2786:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2794:5:9",
														"nodeType": "YulTypedName",
														"src": "2794:5:9",
														"type": ""
													}
												],
												"src": "2748:139:9"
											},
											{
												"body": {
													"nativeSrc": "2976:391:9",
													"nodeType": "YulBlock",
													"src": "2976:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3022:83:9",
																"nodeType": "YulBlock",
																"src": "3022:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3024:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3024:77:9"
																			},
																			"nativeSrc": "3024:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3024:79:9"
																		},
																		"nativeSrc": "3024:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3024:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2997:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2997:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3006:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3006:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2993:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2993:3:9"
																		},
																		"nativeSrc": "2993:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2993:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3018:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3018:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2989:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2989:3:9"
																},
																"nativeSrc": "2989:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2989:32:9"
															},
															"nativeSrc": "2986:119:9",
															"nodeType": "YulIf",
															"src": "2986:119:9"
														},
														{
															"nativeSrc": "3115:117:9",
															"nodeType": "YulBlock",
															"src": "3115:117:9",
															"statements": [
																{
																	"nativeSrc": "3130:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3130:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3144:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3144:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3134:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3134:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3159:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3159:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3194:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3194:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3205:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3205:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3190:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3190:3:9"
																				},
																				"nativeSrc": "3190:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3190:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3214:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3214:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3169:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3169:20:9"
																		},
																		"nativeSrc": "3169:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3159:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3159:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3242:118:9",
															"nodeType": "YulBlock",
															"src": "3242:118:9",
															"statements": [
																{
																	"nativeSrc": "3257:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3257:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3271:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3271:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3261:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3261:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3287:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3287:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3322:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3322:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3333:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3333:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3318:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3318:3:9"
																				},
																				"nativeSrc": "3318:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3318:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3342:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3342:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3297:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3297:20:9"
																		},
																		"nativeSrc": "3297:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3297:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3287:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3287:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2893:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2938:9:9",
														"nodeType": "YulTypedName",
														"src": "2938:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2949:7:9",
														"nodeType": "YulTypedName",
														"src": "2949:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2961:6:9",
														"nodeType": "YulTypedName",
														"src": "2961:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2969:6:9",
														"nodeType": "YulTypedName",
														"src": "2969:6:9",
														"type": ""
													}
												],
												"src": "2893:474:9"
											},
											{
												"body": {
													"nativeSrc": "3415:48:9",
													"nodeType": "YulBlock",
													"src": "3415:48:9",
													"statements": [
														{
															"nativeSrc": "3425:32:9",
															"nodeType": "YulAssignment",
															"src": "3425:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3450:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3450:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3443:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3443:6:9"
																		},
																		"nativeSrc": "3443:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3443:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3436:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3436:6:9"
																},
																"nativeSrc": "3436:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3436:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3425:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3425:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3373:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3397:5:9",
														"nodeType": "YulTypedName",
														"src": "3397:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3407:7:9",
														"nodeType": "YulTypedName",
														"src": "3407:7:9",
														"type": ""
													}
												],
												"src": "3373:90:9"
											},
											{
												"body": {
													"nativeSrc": "3528:50:9",
													"nodeType": "YulBlock",
													"src": "3528:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3545:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3545:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3565:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3565:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3550:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3550:14:9"
																		},
																		"nativeSrc": "3550:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3550:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3538:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3538:6:9"
																},
																"nativeSrc": "3538:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3538:34:9"
															},
															"nativeSrc": "3538:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3538:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3469:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3516:5:9",
														"nodeType": "YulTypedName",
														"src": "3516:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3523:3:9",
														"nodeType": "YulTypedName",
														"src": "3523:3:9",
														"type": ""
													}
												],
												"src": "3469:109:9"
											},
											{
												"body": {
													"nativeSrc": "3676:118:9",
													"nodeType": "YulBlock",
													"src": "3676:118:9",
													"statements": [
														{
															"nativeSrc": "3686:26:9",
															"nodeType": "YulAssignment",
															"src": "3686:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3698:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3698:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3709:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3709:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3694:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3694:3:9"
																},
																"nativeSrc": "3694:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3694:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3686:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3686:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3760:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3760:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3773:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3773:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3784:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3784:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3769:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3769:3:9"
																		},
																		"nativeSrc": "3769:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3769:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3722:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3722:37:9"
																},
																"nativeSrc": "3722:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3722:65:9"
															},
															"nativeSrc": "3722:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3722:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3584:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3648:9:9",
														"nodeType": "YulTypedName",
														"src": "3648:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3660:6:9",
														"nodeType": "YulTypedName",
														"src": "3660:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3671:4:9",
														"nodeType": "YulTypedName",
														"src": "3671:4:9",
														"type": ""
													}
												],
												"src": "3584:210:9"
											},
											{
												"body": {
													"nativeSrc": "3900:519:9",
													"nodeType": "YulBlock",
													"src": "3900:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3946:83:9",
																"nodeType": "YulBlock",
																"src": "3946:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3948:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3948:77:9"
																			},
																			"nativeSrc": "3948:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3948:79:9"
																		},
																		"nativeSrc": "3948:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3948:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3921:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3921:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3930:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3930:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3917:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:9"
																		},
																		"nativeSrc": "3917:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3917:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3942:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3942:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3913:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3913:3:9"
																},
																"nativeSrc": "3913:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3913:32:9"
															},
															"nativeSrc": "3910:119:9",
															"nodeType": "YulIf",
															"src": "3910:119:9"
														},
														{
															"nativeSrc": "4039:117:9",
															"nodeType": "YulBlock",
															"src": "4039:117:9",
															"statements": [
																{
																	"nativeSrc": "4054:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4054:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4068:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4068:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4058:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4058:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4083:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4083:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4118:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4118:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4129:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4129:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4114:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4114:3:9"
																				},
																				"nativeSrc": "4114:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4114:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4138:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4138:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4093:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4093:20:9"
																		},
																		"nativeSrc": "4093:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4083:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4083:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4166:118:9",
															"nodeType": "YulBlock",
															"src": "4166:118:9",
															"statements": [
																{
																	"nativeSrc": "4181:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4181:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4195:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4195:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4185:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4185:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4211:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4211:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4246:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4246:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4257:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4257:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4242:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4242:3:9"
																				},
																				"nativeSrc": "4242:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4242:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4266:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4266:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4221:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4221:20:9"
																		},
																		"nativeSrc": "4221:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4221:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4211:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4211:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4294:118:9",
															"nodeType": "YulBlock",
															"src": "4294:118:9",
															"statements": [
																{
																	"nativeSrc": "4309:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4309:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4323:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4323:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4313:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4313:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4339:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4339:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4374:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4374:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4385:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4385:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4370:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4370:3:9"
																				},
																				"nativeSrc": "4370:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4370:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4394:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4394:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4349:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4349:20:9"
																		},
																		"nativeSrc": "4349:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4339:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4339:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3800:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3854:9:9",
														"nodeType": "YulTypedName",
														"src": "3854:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3865:7:9",
														"nodeType": "YulTypedName",
														"src": "3865:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3877:6:9",
														"nodeType": "YulTypedName",
														"src": "3877:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3885:6:9",
														"nodeType": "YulTypedName",
														"src": "3885:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3893:6:9",
														"nodeType": "YulTypedName",
														"src": "3893:6:9",
														"type": ""
													}
												],
												"src": "3800:619:9"
											},
											{
												"body": {
													"nativeSrc": "4468:43:9",
													"nodeType": "YulBlock",
													"src": "4468:43:9",
													"statements": [
														{
															"nativeSrc": "4478:27:9",
															"nodeType": "YulAssignment",
															"src": "4478:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4493:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4500:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4500:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4489:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4489:3:9"
																},
																"nativeSrc": "4489:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4489:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4478:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4478:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4425:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4450:5:9",
														"nodeType": "YulTypedName",
														"src": "4450:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4460:7:9",
														"nodeType": "YulTypedName",
														"src": "4460:7:9",
														"type": ""
													}
												],
												"src": "4425:86:9"
											},
											{
												"body": {
													"nativeSrc": "4578:51:9",
													"nodeType": "YulBlock",
													"src": "4578:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4595:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4595:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4616:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4616:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4600:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "4600:15:9"
																		},
																		"nativeSrc": "4600:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4600:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4588:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4588:6:9"
																},
																"nativeSrc": "4588:35:9",
																"nodeType": "YulFunctionCall",
																"src": "4588:35:9"
															},
															"nativeSrc": "4588:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "4588:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4517:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4566:5:9",
														"nodeType": "YulTypedName",
														"src": "4566:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4573:3:9",
														"nodeType": "YulTypedName",
														"src": "4573:3:9",
														"type": ""
													}
												],
												"src": "4517:112:9"
											},
											{
												"body": {
													"nativeSrc": "4729:120:9",
													"nodeType": "YulBlock",
													"src": "4729:120:9",
													"statements": [
														{
															"nativeSrc": "4739:26:9",
															"nodeType": "YulAssignment",
															"src": "4739:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4751:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4751:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4762:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4762:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4747:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4747:3:9"
																},
																"nativeSrc": "4747:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4747:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4739:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4739:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4815:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4815:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4828:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4828:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4839:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4839:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4824:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4824:3:9"
																		},
																		"nativeSrc": "4824:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4824:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4775:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "4775:39:9"
																},
																"nativeSrc": "4775:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4775:67:9"
															},
															"nativeSrc": "4775:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "4775:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4635:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4701:9:9",
														"nodeType": "YulTypedName",
														"src": "4701:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4713:6:9",
														"nodeType": "YulTypedName",
														"src": "4713:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4724:4:9",
														"nodeType": "YulTypedName",
														"src": "4724:4:9",
														"type": ""
													}
												],
												"src": "4635:214:9"
											},
											{
												"body": {
													"nativeSrc": "4921:263:9",
													"nodeType": "YulBlock",
													"src": "4921:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4967:83:9",
																"nodeType": "YulBlock",
																"src": "4967:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4969:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4969:77:9"
																			},
																			"nativeSrc": "4969:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4969:79:9"
																		},
																		"nativeSrc": "4969:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4969:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4942:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4942:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4951:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4951:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4938:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4938:3:9"
																		},
																		"nativeSrc": "4938:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4938:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4963:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4963:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4934:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4934:3:9"
																},
																"nativeSrc": "4934:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4934:32:9"
															},
															"nativeSrc": "4931:119:9",
															"nodeType": "YulIf",
															"src": "4931:119:9"
														},
														{
															"nativeSrc": "5060:117:9",
															"nodeType": "YulBlock",
															"src": "5060:117:9",
															"statements": [
																{
																	"nativeSrc": "5075:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5075:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5089:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5089:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5079:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5079:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5104:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5104:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5139:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5139:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5150:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5150:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5135:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5135:3:9"
																				},
																				"nativeSrc": "5135:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5135:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5159:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5159:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5114:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5114:20:9"
																		},
																		"nativeSrc": "5114:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5114:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5104:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5104:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4855:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4891:9:9",
														"nodeType": "YulTypedName",
														"src": "4891:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4902:7:9",
														"nodeType": "YulTypedName",
														"src": "4902:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4914:6:9",
														"nodeType": "YulTypedName",
														"src": "4914:6:9",
														"type": ""
													}
												],
												"src": "4855:329:9"
											},
											{
												"body": {
													"nativeSrc": "5256:263:9",
													"nodeType": "YulBlock",
													"src": "5256:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5302:83:9",
																"nodeType": "YulBlock",
																"src": "5302:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5304:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5304:77:9"
																			},
																			"nativeSrc": "5304:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5304:79:9"
																		},
																		"nativeSrc": "5304:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5304:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5277:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5277:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5286:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5286:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5273:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5273:3:9"
																		},
																		"nativeSrc": "5273:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5273:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5298:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5298:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5269:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5269:3:9"
																},
																"nativeSrc": "5269:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5269:32:9"
															},
															"nativeSrc": "5266:119:9",
															"nodeType": "YulIf",
															"src": "5266:119:9"
														},
														{
															"nativeSrc": "5395:117:9",
															"nodeType": "YulBlock",
															"src": "5395:117:9",
															"statements": [
																{
																	"nativeSrc": "5410:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5410:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5424:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5424:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5414:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5414:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5439:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5439:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5474:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5474:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5485:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5485:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5470:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5470:3:9"
																				},
																				"nativeSrc": "5470:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5470:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5494:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5494:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5449:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5449:20:9"
																		},
																		"nativeSrc": "5449:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5449:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5439:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5439:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5190:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5226:9:9",
														"nodeType": "YulTypedName",
														"src": "5226:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5237:7:9",
														"nodeType": "YulTypedName",
														"src": "5237:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5249:6:9",
														"nodeType": "YulTypedName",
														"src": "5249:6:9",
														"type": ""
													}
												],
												"src": "5190:329:9"
											},
											{
												"body": {
													"nativeSrc": "5590:53:9",
													"nodeType": "YulBlock",
													"src": "5590:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5607:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5607:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5630:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5630:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5612:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5612:17:9"
																		},
																		"nativeSrc": "5612:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5612:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5600:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5600:6:9"
																},
																"nativeSrc": "5600:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5600:37:9"
															},
															"nativeSrc": "5600:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5600:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5525:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5578:5:9",
														"nodeType": "YulTypedName",
														"src": "5578:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5585:3:9",
														"nodeType": "YulTypedName",
														"src": "5585:3:9",
														"type": ""
													}
												],
												"src": "5525:118:9"
											},
											{
												"body": {
													"nativeSrc": "5747:124:9",
													"nodeType": "YulBlock",
													"src": "5747:124:9",
													"statements": [
														{
															"nativeSrc": "5757:26:9",
															"nodeType": "YulAssignment",
															"src": "5757:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5769:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5769:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5780:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5780:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5765:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5765:3:9"
																},
																"nativeSrc": "5765:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5765:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5757:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5757:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5837:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5837:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5850:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5850:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5861:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5861:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5846:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5846:3:9"
																		},
																		"nativeSrc": "5846:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5846:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5793:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5793:43:9"
																},
																"nativeSrc": "5793:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5793:71:9"
															},
															"nativeSrc": "5793:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5793:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5649:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5719:9:9",
														"nodeType": "YulTypedName",
														"src": "5719:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5731:6:9",
														"nodeType": "YulTypedName",
														"src": "5731:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5742:4:9",
														"nodeType": "YulTypedName",
														"src": "5742:4:9",
														"type": ""
													}
												],
												"src": "5649:222:9"
											},
											{
												"body": {
													"nativeSrc": "5960:391:9",
													"nodeType": "YulBlock",
													"src": "5960:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6006:83:9",
																"nodeType": "YulBlock",
																"src": "6006:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6008:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6008:77:9"
																			},
																			"nativeSrc": "6008:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6008:79:9"
																		},
																		"nativeSrc": "6008:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6008:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5981:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5981:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5990:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5990:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5977:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5977:3:9"
																		},
																		"nativeSrc": "5977:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5977:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6002:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6002:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5973:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5973:3:9"
																},
																"nativeSrc": "5973:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5973:32:9"
															},
															"nativeSrc": "5970:119:9",
															"nodeType": "YulIf",
															"src": "5970:119:9"
														},
														{
															"nativeSrc": "6099:117:9",
															"nodeType": "YulBlock",
															"src": "6099:117:9",
															"statements": [
																{
																	"nativeSrc": "6114:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6114:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6128:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6128:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6118:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6118:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6143:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6143:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6178:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6178:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6189:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6189:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6174:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6174:3:9"
																				},
																				"nativeSrc": "6174:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6174:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6198:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6198:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6153:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6153:20:9"
																		},
																		"nativeSrc": "6153:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6153:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6143:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6143:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6226:118:9",
															"nodeType": "YulBlock",
															"src": "6226:118:9",
															"statements": [
																{
																	"nativeSrc": "6241:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6241:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6255:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6255:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6245:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6245:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6271:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6271:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6306:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6306:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6317:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6317:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6302:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6302:3:9"
																				},
																				"nativeSrc": "6302:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6302:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6326:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6326:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6281:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6281:20:9"
																		},
																		"nativeSrc": "6281:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6281:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6271:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6271:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5877:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5922:9:9",
														"nodeType": "YulTypedName",
														"src": "5922:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5933:7:9",
														"nodeType": "YulTypedName",
														"src": "5933:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5945:6:9",
														"nodeType": "YulTypedName",
														"src": "5945:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5953:6:9",
														"nodeType": "YulTypedName",
														"src": "5953:6:9",
														"type": ""
													}
												],
												"src": "5877:474:9"
											},
											{
												"body": {
													"nativeSrc": "6567:454:9",
													"nodeType": "YulBlock",
													"src": "6567:454:9",
													"statements": [
														{
															"nativeSrc": "6577:27:9",
															"nodeType": "YulAssignment",
															"src": "6577:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6589:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6589:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6600:3:9",
																		"nodeType": "YulLiteral",
																		"src": "6600:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6585:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6585:3:9"
																},
																"nativeSrc": "6585:19:9",
																"nodeType": "YulFunctionCall",
																"src": "6585:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6577:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6577:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6658:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6658:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6671:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6671:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6682:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6682:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6667:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6667:3:9"
																		},
																		"nativeSrc": "6667:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6667:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6614:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6614:43:9"
																},
																"nativeSrc": "6614:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6614:71:9"
															},
															"nativeSrc": "6614:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6614:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6739:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6739:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6752:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6752:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6763:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6763:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6748:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6748:3:9"
																		},
																		"nativeSrc": "6748:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6748:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6695:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6695:43:9"
																},
																"nativeSrc": "6695:72:9",
																"nodeType": "YulFunctionCall",
																"src": "6695:72:9"
															},
															"nativeSrc": "6695:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "6695:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6821:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6821:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6834:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6834:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6845:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6845:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6830:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6830:3:9"
																		},
																		"nativeSrc": "6830:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6830:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6777:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6777:43:9"
																},
																"nativeSrc": "6777:72:9",
																"nodeType": "YulFunctionCall",
																"src": "6777:72:9"
															},
															"nativeSrc": "6777:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "6777:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6903:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6903:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6916:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6916:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6927:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6927:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6912:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6912:3:9"
																		},
																		"nativeSrc": "6912:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6912:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6859:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6859:43:9"
																},
																"nativeSrc": "6859:72:9",
																"nodeType": "YulFunctionCall",
																"src": "6859:72:9"
															},
															"nativeSrc": "6859:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "6859:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "6985:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6985:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6998:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6998:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7009:3:9",
																				"nodeType": "YulLiteral",
																				"src": "7009:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6994:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6994:3:9"
																		},
																		"nativeSrc": "6994:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6994:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6941:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6941:43:9"
																},
																"nativeSrc": "6941:73:9",
																"nodeType": "YulFunctionCall",
																"src": "6941:73:9"
															},
															"nativeSrc": "6941:73:9",
															"nodeType": "YulExpressionStatement",
															"src": "6941:73:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6357:664:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6507:9:9",
														"nodeType": "YulTypedName",
														"src": "6507:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6519:6:9",
														"nodeType": "YulTypedName",
														"src": "6519:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6527:6:9",
														"nodeType": "YulTypedName",
														"src": "6527:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6535:6:9",
														"nodeType": "YulTypedName",
														"src": "6535:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6543:6:9",
														"nodeType": "YulTypedName",
														"src": "6543:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6551:6:9",
														"nodeType": "YulTypedName",
														"src": "6551:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6562:4:9",
														"nodeType": "YulTypedName",
														"src": "6562:4:9",
														"type": ""
													}
												],
												"src": "6357:664:9"
											},
											{
												"body": {
													"nativeSrc": "7055:152:9",
													"nodeType": "YulBlock",
													"src": "7055:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7072:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7072:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7075:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7075:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7065:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7065:6:9"
																},
																"nativeSrc": "7065:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7065:88:9"
															},
															"nativeSrc": "7065:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7065:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7169:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7172:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7172:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7162:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7162:6:9"
																},
																"nativeSrc": "7162:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7162:15:9"
															},
															"nativeSrc": "7162:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7162:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7193:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7193:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7196:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7196:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7186:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7186:6:9"
																},
																"nativeSrc": "7186:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7186:15:9"
															},
															"nativeSrc": "7186:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7186:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7027:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7027:180:9"
											},
											{
												"body": {
													"nativeSrc": "7264:269:9",
													"nodeType": "YulBlock",
													"src": "7264:269:9",
													"statements": [
														{
															"nativeSrc": "7274:22:9",
															"nodeType": "YulAssignment",
															"src": "7274:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7288:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7288:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7294:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7294:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7284:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7284:3:9"
																},
																"nativeSrc": "7284:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7284:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7274:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7274:6:9"
																}
															]
														},
														{
															"nativeSrc": "7305:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7305:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7335:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7335:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7341:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7341:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7331:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7331:3:9"
																},
																"nativeSrc": "7331:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7331:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7309:18:9",
																	"nodeType": "YulTypedName",
																	"src": "7309:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7382:51:9",
																"nodeType": "YulBlock",
																"src": "7382:51:9",
																"statements": [
																	{
																		"nativeSrc": "7396:27:9",
																		"nodeType": "YulAssignment",
																		"src": "7396:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7410:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "7410:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7418:4:9",
																					"nodeType": "YulLiteral",
																					"src": "7418:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7406:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7406:3:9"
																			},
																			"nativeSrc": "7406:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7406:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7396:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7396:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7362:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "7362:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7355:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7355:6:9"
																},
																"nativeSrc": "7355:26:9",
																"nodeType": "YulFunctionCall",
																"src": "7355:26:9"
															},
															"nativeSrc": "7352:81:9",
															"nodeType": "YulIf",
															"src": "7352:81:9"
														},
														{
															"body": {
																"nativeSrc": "7485:42:9",
																"nodeType": "YulBlock",
																"src": "7485:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7499:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7499:16:9"
																			},
																			"nativeSrc": "7499:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7499:18:9"
																		},
																		"nativeSrc": "7499:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7499:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7449:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "7449:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7472:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7472:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7480:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7480:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7469:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7469:2:9"
																		},
																		"nativeSrc": "7469:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7469:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7446:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7446:2:9"
																},
																"nativeSrc": "7446:38:9",
																"nodeType": "YulFunctionCall",
																"src": "7446:38:9"
															},
															"nativeSrc": "7443:84:9",
															"nodeType": "YulIf",
															"src": "7443:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7213:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7248:4:9",
														"nodeType": "YulTypedName",
														"src": "7248:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7257:6:9",
														"nodeType": "YulTypedName",
														"src": "7257:6:9",
														"type": ""
													}
												],
												"src": "7213:320:9"
											},
											{
												"body": {
													"nativeSrc": "7645:66:9",
													"nodeType": "YulBlock",
													"src": "7645:66:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7667:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7667:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7675:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7675:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7663:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7663:3:9"
																		},
																		"nativeSrc": "7663:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7663:14:9"
																	},
																	{
																		"hexValue": "5072652d53616c65206973206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "7679:24:9",
																		"nodeType": "YulLiteral",
																		"src": "7679:24:9",
																		"type": "",
																		"value": "Pre-Sale is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7656:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7656:6:9"
																},
																"nativeSrc": "7656:48:9",
																"nodeType": "YulFunctionCall",
																"src": "7656:48:9"
															},
															"nativeSrc": "7656:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "7656:48:9"
														}
													]
												},
												"name": "store_literal_in_memory_400b214ee1a1a93cf01fb3c9ef7cf58d124b38839c5c840b50ef058141623410",
												"nativeSrc": "7539:172:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7637:6:9",
														"nodeType": "YulTypedName",
														"src": "7637:6:9",
														"type": ""
													}
												],
												"src": "7539:172:9"
											},
											{
												"body": {
													"nativeSrc": "7863:220:9",
													"nodeType": "YulBlock",
													"src": "7863:220:9",
													"statements": [
														{
															"nativeSrc": "7873:74:9",
															"nodeType": "YulAssignment",
															"src": "7873:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7939:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7939:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7944:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7944:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7880:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "7880:58:9"
																},
																"nativeSrc": "7880:67:9",
																"nodeType": "YulFunctionCall",
																"src": "7880:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7873:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7873:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8045:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8045:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_400b214ee1a1a93cf01fb3c9ef7cf58d124b38839c5c840b50ef058141623410",
																	"nativeSrc": "7956:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "7956:88:9"
																},
																"nativeSrc": "7956:93:9",
																"nodeType": "YulFunctionCall",
																"src": "7956:93:9"
															},
															"nativeSrc": "7956:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "7956:93:9"
														},
														{
															"nativeSrc": "8058:19:9",
															"nodeType": "YulAssignment",
															"src": "8058:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8069:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8069:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8074:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8074:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8065:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8065:3:9"
																},
																"nativeSrc": "8065:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8065:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8058:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8058:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_400b214ee1a1a93cf01fb3c9ef7cf58d124b38839c5c840b50ef058141623410_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7717:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7851:3:9",
														"nodeType": "YulTypedName",
														"src": "7851:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7859:3:9",
														"nodeType": "YulTypedName",
														"src": "7859:3:9",
														"type": ""
													}
												],
												"src": "7717:366:9"
											},
											{
												"body": {
													"nativeSrc": "8260:248:9",
													"nodeType": "YulBlock",
													"src": "8260:248:9",
													"statements": [
														{
															"nativeSrc": "8270:26:9",
															"nodeType": "YulAssignment",
															"src": "8270:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8282:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8282:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8293:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8293:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8278:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8278:3:9"
																},
																"nativeSrc": "8278:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8278:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8270:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8270:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8317:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8317:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8328:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8328:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8313:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8313:3:9"
																		},
																		"nativeSrc": "8313:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8313:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8336:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8336:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8342:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8342:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8332:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8332:3:9"
																		},
																		"nativeSrc": "8332:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8332:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8306:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8306:6:9"
																},
																"nativeSrc": "8306:47:9",
																"nodeType": "YulFunctionCall",
																"src": "8306:47:9"
															},
															"nativeSrc": "8306:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "8306:47:9"
														},
														{
															"nativeSrc": "8362:139:9",
															"nodeType": "YulAssignment",
															"src": "8362:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8496:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8496:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_400b214ee1a1a93cf01fb3c9ef7cf58d124b38839c5c840b50ef058141623410_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8370:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "8370:124:9"
																},
																"nativeSrc": "8370:131:9",
																"nodeType": "YulFunctionCall",
																"src": "8370:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8362:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8362:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_400b214ee1a1a93cf01fb3c9ef7cf58d124b38839c5c840b50ef058141623410__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8089:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8240:9:9",
														"nodeType": "YulTypedName",
														"src": "8240:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8255:4:9",
														"nodeType": "YulTypedName",
														"src": "8255:4:9",
														"type": ""
													}
												],
												"src": "8089:419:9"
											},
											{
												"body": {
													"nativeSrc": "8620:119:9",
													"nodeType": "YulBlock",
													"src": "8620:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8642:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8642:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8650:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8650:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8638:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8638:3:9"
																		},
																		"nativeSrc": "8638:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8638:14:9"
																	},
																	{
																		"hexValue": "416d6f756e742069732062656c6f77206d696e696d756d207075726368617365",
																		"kind": "string",
																		"nativeSrc": "8654:34:9",
																		"nodeType": "YulLiteral",
																		"src": "8654:34:9",
																		"type": "",
																		"value": "Amount is below minimum purchase"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8631:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8631:6:9"
																},
																"nativeSrc": "8631:58:9",
																"nodeType": "YulFunctionCall",
																"src": "8631:58:9"
															},
															"nativeSrc": "8631:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "8631:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8710:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8710:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8718:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8718:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8706:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8706:3:9"
																		},
																		"nativeSrc": "8706:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8706:15:9"
																	},
																	{
																		"hexValue": "206c696d6974",
																		"kind": "string",
																		"nativeSrc": "8723:8:9",
																		"nodeType": "YulLiteral",
																		"src": "8723:8:9",
																		"type": "",
																		"value": " limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8699:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8699:6:9"
																},
																"nativeSrc": "8699:33:9",
																"nodeType": "YulFunctionCall",
																"src": "8699:33:9"
															},
															"nativeSrc": "8699:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "8699:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_830458c11bcdb4f40cbff2f42c3fab42ea823db00be9aa5e6bb4a5fbd14f6155",
												"nativeSrc": "8514:225:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8612:6:9",
														"nodeType": "YulTypedName",
														"src": "8612:6:9",
														"type": ""
													}
												],
												"src": "8514:225:9"
											},
											{
												"body": {
													"nativeSrc": "8891:220:9",
													"nodeType": "YulBlock",
													"src": "8891:220:9",
													"statements": [
														{
															"nativeSrc": "8901:74:9",
															"nodeType": "YulAssignment",
															"src": "8901:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8967:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8967:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8972:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8972:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8908:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "8908:58:9"
																},
																"nativeSrc": "8908:67:9",
																"nodeType": "YulFunctionCall",
																"src": "8908:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8901:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8901:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9073:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9073:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_830458c11bcdb4f40cbff2f42c3fab42ea823db00be9aa5e6bb4a5fbd14f6155",
																	"nativeSrc": "8984:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "8984:88:9"
																},
																"nativeSrc": "8984:93:9",
																"nodeType": "YulFunctionCall",
																"src": "8984:93:9"
															},
															"nativeSrc": "8984:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "8984:93:9"
														},
														{
															"nativeSrc": "9086:19:9",
															"nodeType": "YulAssignment",
															"src": "9086:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9097:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9097:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9102:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9102:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9093:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9093:3:9"
																},
																"nativeSrc": "9093:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9093:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9086:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9086:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_830458c11bcdb4f40cbff2f42c3fab42ea823db00be9aa5e6bb4a5fbd14f6155_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8745:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8879:3:9",
														"nodeType": "YulTypedName",
														"src": "8879:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8887:3:9",
														"nodeType": "YulTypedName",
														"src": "8887:3:9",
														"type": ""
													}
												],
												"src": "8745:366:9"
											},
											{
												"body": {
													"nativeSrc": "9288:248:9",
													"nodeType": "YulBlock",
													"src": "9288:248:9",
													"statements": [
														{
															"nativeSrc": "9298:26:9",
															"nodeType": "YulAssignment",
															"src": "9298:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9310:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9310:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9321:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9321:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9306:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9306:3:9"
																},
																"nativeSrc": "9306:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9306:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9298:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9298:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9345:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9345:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9356:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9356:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9341:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9341:3:9"
																		},
																		"nativeSrc": "9341:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9341:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9364:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9364:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9370:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9370:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9360:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9360:3:9"
																		},
																		"nativeSrc": "9360:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9360:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9334:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9334:6:9"
																},
																"nativeSrc": "9334:47:9",
																"nodeType": "YulFunctionCall",
																"src": "9334:47:9"
															},
															"nativeSrc": "9334:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "9334:47:9"
														},
														{
															"nativeSrc": "9390:139:9",
															"nodeType": "YulAssignment",
															"src": "9390:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9524:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9524:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_830458c11bcdb4f40cbff2f42c3fab42ea823db00be9aa5e6bb4a5fbd14f6155_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9398:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "9398:124:9"
																},
																"nativeSrc": "9398:131:9",
																"nodeType": "YulFunctionCall",
																"src": "9398:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9390:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9390:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_830458c11bcdb4f40cbff2f42c3fab42ea823db00be9aa5e6bb4a5fbd14f6155__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9117:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9268:9:9",
														"nodeType": "YulTypedName",
														"src": "9268:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9283:4:9",
														"nodeType": "YulTypedName",
														"src": "9283:4:9",
														"type": ""
													}
												],
												"src": "9117:419:9"
											},
											{
												"body": {
													"nativeSrc": "9648:118:9",
													"nodeType": "YulBlock",
													"src": "9648:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9670:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9678:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9678:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9666:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9666:3:9"
																		},
																		"nativeSrc": "9666:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9666:14:9"
																	},
																	{
																		"hexValue": "416d6f756e742065786365656473206d6178696d756d20707572636861736520",
																		"kind": "string",
																		"nativeSrc": "9682:34:9",
																		"nodeType": "YulLiteral",
																		"src": "9682:34:9",
																		"type": "",
																		"value": "Amount exceeds maximum purchase "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9659:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9659:6:9"
																},
																"nativeSrc": "9659:58:9",
																"nodeType": "YulFunctionCall",
																"src": "9659:58:9"
															},
															"nativeSrc": "9659:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "9659:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9738:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9738:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9746:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9746:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9734:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9734:3:9"
																		},
																		"nativeSrc": "9734:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9734:15:9"
																	},
																	{
																		"hexValue": "6c696d6974",
																		"kind": "string",
																		"nativeSrc": "9751:7:9",
																		"nodeType": "YulLiteral",
																		"src": "9751:7:9",
																		"type": "",
																		"value": "limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9727:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9727:6:9"
																},
																"nativeSrc": "9727:32:9",
																"nodeType": "YulFunctionCall",
																"src": "9727:32:9"
															},
															"nativeSrc": "9727:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "9727:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_df280954953c79d750ef99714a7fa9695b0308e506cbcf3ade5f228691300673",
												"nativeSrc": "9542:224:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9640:6:9",
														"nodeType": "YulTypedName",
														"src": "9640:6:9",
														"type": ""
													}
												],
												"src": "9542:224:9"
											},
											{
												"body": {
													"nativeSrc": "9918:220:9",
													"nodeType": "YulBlock",
													"src": "9918:220:9",
													"statements": [
														{
															"nativeSrc": "9928:74:9",
															"nodeType": "YulAssignment",
															"src": "9928:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9994:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9994:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9999:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9999:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9935:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9935:58:9"
																},
																"nativeSrc": "9935:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9935:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9928:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9928:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10100:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10100:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_df280954953c79d750ef99714a7fa9695b0308e506cbcf3ade5f228691300673",
																	"nativeSrc": "10011:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10011:88:9"
																},
																"nativeSrc": "10011:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10011:93:9"
															},
															"nativeSrc": "10011:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10011:93:9"
														},
														{
															"nativeSrc": "10113:19:9",
															"nodeType": "YulAssignment",
															"src": "10113:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10124:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10124:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10129:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10129:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10120:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10120:3:9"
																},
																"nativeSrc": "10120:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10120:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10113:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10113:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_df280954953c79d750ef99714a7fa9695b0308e506cbcf3ade5f228691300673_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9772:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9906:3:9",
														"nodeType": "YulTypedName",
														"src": "9906:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9914:3:9",
														"nodeType": "YulTypedName",
														"src": "9914:3:9",
														"type": ""
													}
												],
												"src": "9772:366:9"
											},
											{
												"body": {
													"nativeSrc": "10315:248:9",
													"nodeType": "YulBlock",
													"src": "10315:248:9",
													"statements": [
														{
															"nativeSrc": "10325:26:9",
															"nodeType": "YulAssignment",
															"src": "10325:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10337:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10337:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10348:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10348:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10333:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10333:3:9"
																},
																"nativeSrc": "10333:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10333:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10325:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10325:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10372:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10372:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10383:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10383:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10368:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10368:3:9"
																		},
																		"nativeSrc": "10368:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10368:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10391:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10391:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10397:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10397:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10387:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10387:3:9"
																		},
																		"nativeSrc": "10387:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10387:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10361:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10361:6:9"
																},
																"nativeSrc": "10361:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10361:47:9"
															},
															"nativeSrc": "10361:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10361:47:9"
														},
														{
															"nativeSrc": "10417:139:9",
															"nodeType": "YulAssignment",
															"src": "10417:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10551:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10551:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_df280954953c79d750ef99714a7fa9695b0308e506cbcf3ade5f228691300673_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10425:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "10425:124:9"
																},
																"nativeSrc": "10425:131:9",
																"nodeType": "YulFunctionCall",
																"src": "10425:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10417:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10417:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df280954953c79d750ef99714a7fa9695b0308e506cbcf3ade5f228691300673__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10144:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10295:9:9",
														"nodeType": "YulTypedName",
														"src": "10295:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10310:4:9",
														"nodeType": "YulTypedName",
														"src": "10310:4:9",
														"type": ""
													}
												],
												"src": "10144:419:9"
											},
											{
												"body": {
													"nativeSrc": "10597:152:9",
													"nodeType": "YulBlock",
													"src": "10597:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10614:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10614:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10617:77:9",
																		"nodeType": "YulLiteral",
																		"src": "10617:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10607:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10607:6:9"
																},
																"nativeSrc": "10607:88:9",
																"nodeType": "YulFunctionCall",
																"src": "10607:88:9"
															},
															"nativeSrc": "10607:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "10607:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10711:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10711:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10714:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10714:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10704:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10704:6:9"
																},
																"nativeSrc": "10704:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10704:15:9"
															},
															"nativeSrc": "10704:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10704:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10735:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10735:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10738:4:9",
																		"nodeType": "YulLiteral",
																		"src": "10738:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10728:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10728:6:9"
																},
																"nativeSrc": "10728:15:9",
																"nodeType": "YulFunctionCall",
																"src": "10728:15:9"
															},
															"nativeSrc": "10728:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "10728:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10569:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "10569:180:9"
											},
											{
												"body": {
													"nativeSrc": "10799:147:9",
													"nodeType": "YulBlock",
													"src": "10799:147:9",
													"statements": [
														{
															"nativeSrc": "10809:25:9",
															"nodeType": "YulAssignment",
															"src": "10809:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10832:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10832:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10814:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10814:17:9"
																},
																"nativeSrc": "10814:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10814:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10809:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10809:1:9"
																}
															]
														},
														{
															"nativeSrc": "10843:25:9",
															"nodeType": "YulAssignment",
															"src": "10843:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10866:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10866:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10848:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10848:17:9"
																},
																"nativeSrc": "10848:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10848:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10843:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10843:1:9"
																}
															]
														},
														{
															"nativeSrc": "10877:16:9",
															"nodeType": "YulAssignment",
															"src": "10877:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10888:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10888:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10891:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10891:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10884:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10884:3:9"
																},
																"nativeSrc": "10884:9:9",
																"nodeType": "YulFunctionCall",
																"src": "10884:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10877:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10877:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10917:22:9",
																"nodeType": "YulBlock",
																"src": "10917:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10919:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10919:16:9"
																			},
																			"nativeSrc": "10919:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10919:18:9"
																		},
																		"nativeSrc": "10919:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10919:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10909:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10909:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10912:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10912:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10906:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "10906:2:9"
																},
																"nativeSrc": "10906:10:9",
																"nodeType": "YulFunctionCall",
																"src": "10906:10:9"
															},
															"nativeSrc": "10903:36:9",
															"nodeType": "YulIf",
															"src": "10903:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10755:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10786:1:9",
														"nodeType": "YulTypedName",
														"src": "10786:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10789:1:9",
														"nodeType": "YulTypedName",
														"src": "10789:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10795:3:9",
														"nodeType": "YulTypedName",
														"src": "10795:3:9",
														"type": ""
													}
												],
												"src": "10755:191:9"
											},
											{
												"body": {
													"nativeSrc": "11058:72:9",
													"nodeType": "YulBlock",
													"src": "11058:72:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11080:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11080:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11088:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11088:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11076:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11076:3:9"
																		},
																		"nativeSrc": "11076:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11076:14:9"
																	},
																	{
																		"hexValue": "45786365656473205072652d53616c6520746f6b656e206c696d6974",
																		"kind": "string",
																		"nativeSrc": "11092:30:9",
																		"nodeType": "YulLiteral",
																		"src": "11092:30:9",
																		"type": "",
																		"value": "Exceeds Pre-Sale token limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11069:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11069:6:9"
																},
																"nativeSrc": "11069:54:9",
																"nodeType": "YulFunctionCall",
																"src": "11069:54:9"
															},
															"nativeSrc": "11069:54:9",
															"nodeType": "YulExpressionStatement",
															"src": "11069:54:9"
														}
													]
												},
												"name": "store_literal_in_memory_b8ec7f987188bef06f64e6ac12bf8951d0fa7337751db1feb89585da05fb6ea7",
												"nativeSrc": "10952:178:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11050:6:9",
														"nodeType": "YulTypedName",
														"src": "11050:6:9",
														"type": ""
													}
												],
												"src": "10952:178:9"
											},
											{
												"body": {
													"nativeSrc": "11282:220:9",
													"nodeType": "YulBlock",
													"src": "11282:220:9",
													"statements": [
														{
															"nativeSrc": "11292:74:9",
															"nodeType": "YulAssignment",
															"src": "11292:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11358:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11358:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11363:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11363:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11299:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11299:58:9"
																},
																"nativeSrc": "11299:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11299:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11292:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11292:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11464:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11464:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b8ec7f987188bef06f64e6ac12bf8951d0fa7337751db1feb89585da05fb6ea7",
																	"nativeSrc": "11375:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11375:88:9"
																},
																"nativeSrc": "11375:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11375:93:9"
															},
															"nativeSrc": "11375:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11375:93:9"
														},
														{
															"nativeSrc": "11477:19:9",
															"nodeType": "YulAssignment",
															"src": "11477:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11488:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11488:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11493:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11493:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11484:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11484:3:9"
																},
																"nativeSrc": "11484:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11484:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11477:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11477:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b8ec7f987188bef06f64e6ac12bf8951d0fa7337751db1feb89585da05fb6ea7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11136:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11270:3:9",
														"nodeType": "YulTypedName",
														"src": "11270:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11278:3:9",
														"nodeType": "YulTypedName",
														"src": "11278:3:9",
														"type": ""
													}
												],
												"src": "11136:366:9"
											},
											{
												"body": {
													"nativeSrc": "11679:248:9",
													"nodeType": "YulBlock",
													"src": "11679:248:9",
													"statements": [
														{
															"nativeSrc": "11689:26:9",
															"nodeType": "YulAssignment",
															"src": "11689:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11701:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11701:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11712:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11712:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11697:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11697:3:9"
																},
																"nativeSrc": "11697:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11697:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11689:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11689:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11736:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11736:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11747:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11747:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11732:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11732:3:9"
																		},
																		"nativeSrc": "11732:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11732:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11755:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11755:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11761:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11761:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11751:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11751:3:9"
																		},
																		"nativeSrc": "11751:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11751:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11725:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11725:6:9"
																},
																"nativeSrc": "11725:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11725:47:9"
															},
															"nativeSrc": "11725:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11725:47:9"
														},
														{
															"nativeSrc": "11781:139:9",
															"nodeType": "YulAssignment",
															"src": "11781:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11915:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11915:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b8ec7f987188bef06f64e6ac12bf8951d0fa7337751db1feb89585da05fb6ea7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11789:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11789:124:9"
																},
																"nativeSrc": "11789:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11789:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11781:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11781:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b8ec7f987188bef06f64e6ac12bf8951d0fa7337751db1feb89585da05fb6ea7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11508:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11659:9:9",
														"nodeType": "YulTypedName",
														"src": "11659:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11674:4:9",
														"nodeType": "YulTypedName",
														"src": "11674:4:9",
														"type": ""
													}
												],
												"src": "11508:419:9"
											},
											{
												"body": {
													"nativeSrc": "12039:70:9",
													"nodeType": "YulBlock",
													"src": "12039:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12061:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12061:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12069:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12069:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12057:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12057:3:9"
																		},
																		"nativeSrc": "12057:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12057:14:9"
																	},
																	{
																		"hexValue": "5072652d53616c6520697320616c726561647920616374697665",
																		"kind": "string",
																		"nativeSrc": "12073:28:9",
																		"nodeType": "YulLiteral",
																		"src": "12073:28:9",
																		"type": "",
																		"value": "Pre-Sale is already active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12050:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12050:6:9"
																},
																"nativeSrc": "12050:52:9",
																"nodeType": "YulFunctionCall",
																"src": "12050:52:9"
															},
															"nativeSrc": "12050:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "12050:52:9"
														}
													]
												},
												"name": "store_literal_in_memory_231cfa2b1ee3162fd72ea47cdb9f36a33e37eaee65ad5b803c7b92380ed9c7bd",
												"nativeSrc": "11933:176:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12031:6:9",
														"nodeType": "YulTypedName",
														"src": "12031:6:9",
														"type": ""
													}
												],
												"src": "11933:176:9"
											},
											{
												"body": {
													"nativeSrc": "12261:220:9",
													"nodeType": "YulBlock",
													"src": "12261:220:9",
													"statements": [
														{
															"nativeSrc": "12271:74:9",
															"nodeType": "YulAssignment",
															"src": "12271:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12337:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12337:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12342:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12342:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12278:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "12278:58:9"
																},
																"nativeSrc": "12278:67:9",
																"nodeType": "YulFunctionCall",
																"src": "12278:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12271:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12271:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12443:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12443:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_231cfa2b1ee3162fd72ea47cdb9f36a33e37eaee65ad5b803c7b92380ed9c7bd",
																	"nativeSrc": "12354:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "12354:88:9"
																},
																"nativeSrc": "12354:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12354:93:9"
															},
															"nativeSrc": "12354:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "12354:93:9"
														},
														{
															"nativeSrc": "12456:19:9",
															"nodeType": "YulAssignment",
															"src": "12456:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12467:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12467:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12472:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12472:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12463:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12463:3:9"
																},
																"nativeSrc": "12463:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12463:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12456:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12456:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_231cfa2b1ee3162fd72ea47cdb9f36a33e37eaee65ad5b803c7b92380ed9c7bd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12115:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12249:3:9",
														"nodeType": "YulTypedName",
														"src": "12249:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12257:3:9",
														"nodeType": "YulTypedName",
														"src": "12257:3:9",
														"type": ""
													}
												],
												"src": "12115:366:9"
											},
											{
												"body": {
													"nativeSrc": "12658:248:9",
													"nodeType": "YulBlock",
													"src": "12658:248:9",
													"statements": [
														{
															"nativeSrc": "12668:26:9",
															"nodeType": "YulAssignment",
															"src": "12668:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12680:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12680:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12691:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12691:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12676:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12676:3:9"
																},
																"nativeSrc": "12676:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12676:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12668:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12668:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12715:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12715:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12726:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12726:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12711:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12711:3:9"
																		},
																		"nativeSrc": "12711:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12711:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12734:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12734:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12740:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12740:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12730:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12730:3:9"
																		},
																		"nativeSrc": "12730:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12730:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12704:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12704:6:9"
																},
																"nativeSrc": "12704:47:9",
																"nodeType": "YulFunctionCall",
																"src": "12704:47:9"
															},
															"nativeSrc": "12704:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "12704:47:9"
														},
														{
															"nativeSrc": "12760:139:9",
															"nodeType": "YulAssignment",
															"src": "12760:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12894:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12894:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_231cfa2b1ee3162fd72ea47cdb9f36a33e37eaee65ad5b803c7b92380ed9c7bd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12768:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "12768:124:9"
																},
																"nativeSrc": "12768:131:9",
																"nodeType": "YulFunctionCall",
																"src": "12768:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12760:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12760:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_231cfa2b1ee3162fd72ea47cdb9f36a33e37eaee65ad5b803c7b92380ed9c7bd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12487:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12638:9:9",
														"nodeType": "YulTypedName",
														"src": "12638:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12653:4:9",
														"nodeType": "YulTypedName",
														"src": "12653:4:9",
														"type": ""
													}
												],
												"src": "12487:419:9"
											},
											{
												"body": {
													"nativeSrc": "13018:65:9",
													"nodeType": "YulBlock",
													"src": "13018:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13040:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13040:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13048:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13048:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13036:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13036:3:9"
																		},
																		"nativeSrc": "13036:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13036:14:9"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "13052:23:9",
																		"nodeType": "YulLiteral",
																		"src": "13052:23:9",
																		"type": "",
																		"value": "No tokens to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13029:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13029:6:9"
																},
																"nativeSrc": "13029:47:9",
																"nodeType": "YulFunctionCall",
																"src": "13029:47:9"
															},
															"nativeSrc": "13029:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "13029:47:9"
														}
													]
												},
												"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
												"nativeSrc": "12912:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13010:6:9",
														"nodeType": "YulTypedName",
														"src": "13010:6:9",
														"type": ""
													}
												],
												"src": "12912:171:9"
											},
											{
												"body": {
													"nativeSrc": "13235:220:9",
													"nodeType": "YulBlock",
													"src": "13235:220:9",
													"statements": [
														{
															"nativeSrc": "13245:74:9",
															"nodeType": "YulAssignment",
															"src": "13245:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13311:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13311:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13316:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13316:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13252:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13252:58:9"
																},
																"nativeSrc": "13252:67:9",
																"nodeType": "YulFunctionCall",
																"src": "13252:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13245:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13245:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13417:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13417:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																	"nativeSrc": "13328:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13328:88:9"
																},
																"nativeSrc": "13328:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13328:93:9"
															},
															"nativeSrc": "13328:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13328:93:9"
														},
														{
															"nativeSrc": "13430:19:9",
															"nodeType": "YulAssignment",
															"src": "13430:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13441:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13441:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13446:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13446:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13437:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13437:3:9"
																},
																"nativeSrc": "13437:12:9",
																"nodeType": "YulFunctionCall",
																"src": "13437:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13430:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13430:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13089:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13223:3:9",
														"nodeType": "YulTypedName",
														"src": "13223:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13231:3:9",
														"nodeType": "YulTypedName",
														"src": "13231:3:9",
														"type": ""
													}
												],
												"src": "13089:366:9"
											},
											{
												"body": {
													"nativeSrc": "13632:248:9",
													"nodeType": "YulBlock",
													"src": "13632:248:9",
													"statements": [
														{
															"nativeSrc": "13642:26:9",
															"nodeType": "YulAssignment",
															"src": "13642:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13654:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13654:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13665:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13665:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13650:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13650:3:9"
																},
																"nativeSrc": "13650:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13650:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13642:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13642:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13689:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13689:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13700:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13700:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13685:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13685:3:9"
																		},
																		"nativeSrc": "13685:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13685:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13708:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "13708:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13714:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13714:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13704:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13704:3:9"
																		},
																		"nativeSrc": "13704:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13704:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13678:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13678:6:9"
																},
																"nativeSrc": "13678:47:9",
																"nodeType": "YulFunctionCall",
																"src": "13678:47:9"
															},
															"nativeSrc": "13678:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "13678:47:9"
														},
														{
															"nativeSrc": "13734:139:9",
															"nodeType": "YulAssignment",
															"src": "13734:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13868:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13868:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13742:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "13742:124:9"
																},
																"nativeSrc": "13742:131:9",
																"nodeType": "YulFunctionCall",
																"src": "13742:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13734:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13734:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13461:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13612:9:9",
														"nodeType": "YulTypedName",
														"src": "13612:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13627:4:9",
														"nodeType": "YulTypedName",
														"src": "13627:4:9",
														"type": ""
													}
												],
												"src": "13461:419:9"
											},
											{
												"body": {
													"nativeSrc": "13992:71:9",
													"nodeType": "YulBlock",
													"src": "13992:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14014:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14014:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14022:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14022:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14010:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14010:3:9"
																		},
																		"nativeSrc": "14010:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14010:14:9"
																	},
																	{
																		"hexValue": "507269766174652053616c6520616c726561647920616374697665",
																		"kind": "string",
																		"nativeSrc": "14026:29:9",
																		"nodeType": "YulLiteral",
																		"src": "14026:29:9",
																		"type": "",
																		"value": "Private Sale already active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14003:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14003:6:9"
																},
																"nativeSrc": "14003:53:9",
																"nodeType": "YulFunctionCall",
																"src": "14003:53:9"
															},
															"nativeSrc": "14003:53:9",
															"nodeType": "YulExpressionStatement",
															"src": "14003:53:9"
														}
													]
												},
												"name": "store_literal_in_memory_149fc2f6d9d0004e99a811381712889395320b603e5c66522b26c56511b82020",
												"nativeSrc": "13886:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13984:6:9",
														"nodeType": "YulTypedName",
														"src": "13984:6:9",
														"type": ""
													}
												],
												"src": "13886:177:9"
											},
											{
												"body": {
													"nativeSrc": "14215:220:9",
													"nodeType": "YulBlock",
													"src": "14215:220:9",
													"statements": [
														{
															"nativeSrc": "14225:74:9",
															"nodeType": "YulAssignment",
															"src": "14225:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14291:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14291:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14296:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14296:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14232:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "14232:58:9"
																},
																"nativeSrc": "14232:67:9",
																"nodeType": "YulFunctionCall",
																"src": "14232:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14225:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14225:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14397:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14397:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_149fc2f6d9d0004e99a811381712889395320b603e5c66522b26c56511b82020",
																	"nativeSrc": "14308:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "14308:88:9"
																},
																"nativeSrc": "14308:93:9",
																"nodeType": "YulFunctionCall",
																"src": "14308:93:9"
															},
															"nativeSrc": "14308:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "14308:93:9"
														},
														{
															"nativeSrc": "14410:19:9",
															"nodeType": "YulAssignment",
															"src": "14410:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14421:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14421:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14426:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14426:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14417:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14417:3:9"
																},
																"nativeSrc": "14417:12:9",
																"nodeType": "YulFunctionCall",
																"src": "14417:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14410:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14410:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_149fc2f6d9d0004e99a811381712889395320b603e5c66522b26c56511b82020_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14069:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14203:3:9",
														"nodeType": "YulTypedName",
														"src": "14203:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14211:3:9",
														"nodeType": "YulTypedName",
														"src": "14211:3:9",
														"type": ""
													}
												],
												"src": "14069:366:9"
											},
											{
												"body": {
													"nativeSrc": "14612:248:9",
													"nodeType": "YulBlock",
													"src": "14612:248:9",
													"statements": [
														{
															"nativeSrc": "14622:26:9",
															"nodeType": "YulAssignment",
															"src": "14622:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14634:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14634:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14645:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14645:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14630:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14630:3:9"
																},
																"nativeSrc": "14630:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14630:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14622:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14622:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14669:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14669:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14680:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14680:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14665:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14665:3:9"
																		},
																		"nativeSrc": "14665:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14665:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14688:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14688:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14694:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14694:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14684:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14684:3:9"
																		},
																		"nativeSrc": "14684:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14684:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14658:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14658:6:9"
																},
																"nativeSrc": "14658:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14658:47:9"
															},
															"nativeSrc": "14658:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14658:47:9"
														},
														{
															"nativeSrc": "14714:139:9",
															"nodeType": "YulAssignment",
															"src": "14714:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14848:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14848:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_149fc2f6d9d0004e99a811381712889395320b603e5c66522b26c56511b82020_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14722:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "14722:124:9"
																},
																"nativeSrc": "14722:131:9",
																"nodeType": "YulFunctionCall",
																"src": "14722:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14714:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14714:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149fc2f6d9d0004e99a811381712889395320b603e5c66522b26c56511b82020__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14441:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14592:9:9",
														"nodeType": "YulTypedName",
														"src": "14592:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14607:4:9",
														"nodeType": "YulTypedName",
														"src": "14607:4:9",
														"type": ""
													}
												],
												"src": "14441:419:9"
											},
											{
												"body": {
													"nativeSrc": "14972:62:9",
													"nodeType": "YulBlock",
													"src": "14972:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14994:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14994:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15002:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15002:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14990:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14990:3:9"
																		},
																		"nativeSrc": "14990:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14990:14:9"
																	},
																	{
																		"hexValue": "496e76616c69642070657263656e74616765",
																		"kind": "string",
																		"nativeSrc": "15006:20:9",
																		"nodeType": "YulLiteral",
																		"src": "15006:20:9",
																		"type": "",
																		"value": "Invalid percentage"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14983:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14983:6:9"
																},
																"nativeSrc": "14983:44:9",
																"nodeType": "YulFunctionCall",
																"src": "14983:44:9"
															},
															"nativeSrc": "14983:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "14983:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04",
												"nativeSrc": "14866:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14964:6:9",
														"nodeType": "YulTypedName",
														"src": "14964:6:9",
														"type": ""
													}
												],
												"src": "14866:168:9"
											},
											{
												"body": {
													"nativeSrc": "15186:220:9",
													"nodeType": "YulBlock",
													"src": "15186:220:9",
													"statements": [
														{
															"nativeSrc": "15196:74:9",
															"nodeType": "YulAssignment",
															"src": "15196:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15262:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15262:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15267:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15267:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15203:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "15203:58:9"
																},
																"nativeSrc": "15203:67:9",
																"nodeType": "YulFunctionCall",
																"src": "15203:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15196:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15196:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15368:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15368:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04",
																	"nativeSrc": "15279:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "15279:88:9"
																},
																"nativeSrc": "15279:93:9",
																"nodeType": "YulFunctionCall",
																"src": "15279:93:9"
															},
															"nativeSrc": "15279:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "15279:93:9"
														},
														{
															"nativeSrc": "15381:19:9",
															"nodeType": "YulAssignment",
															"src": "15381:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15392:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15392:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15397:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15397:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15388:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15388:3:9"
																},
																"nativeSrc": "15388:12:9",
																"nodeType": "YulFunctionCall",
																"src": "15388:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15381:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15381:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15040:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15174:3:9",
														"nodeType": "YulTypedName",
														"src": "15174:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15182:3:9",
														"nodeType": "YulTypedName",
														"src": "15182:3:9",
														"type": ""
													}
												],
												"src": "15040:366:9"
											},
											{
												"body": {
													"nativeSrc": "15583:248:9",
													"nodeType": "YulBlock",
													"src": "15583:248:9",
													"statements": [
														{
															"nativeSrc": "15593:26:9",
															"nodeType": "YulAssignment",
															"src": "15593:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15605:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15605:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15616:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15616:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15601:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15601:3:9"
																},
																"nativeSrc": "15601:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15601:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15593:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15593:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15640:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15640:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15651:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15651:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15636:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15636:3:9"
																		},
																		"nativeSrc": "15636:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15636:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15659:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "15659:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15665:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15665:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15655:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15655:3:9"
																		},
																		"nativeSrc": "15655:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15655:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15629:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15629:6:9"
																},
																"nativeSrc": "15629:47:9",
																"nodeType": "YulFunctionCall",
																"src": "15629:47:9"
															},
															"nativeSrc": "15629:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "15629:47:9"
														},
														{
															"nativeSrc": "15685:139:9",
															"nodeType": "YulAssignment",
															"src": "15685:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15819:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "15819:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15693:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "15693:124:9"
																},
																"nativeSrc": "15693:131:9",
																"nodeType": "YulFunctionCall",
																"src": "15693:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15685:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15685:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15412:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15563:9:9",
														"nodeType": "YulTypedName",
														"src": "15563:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15578:4:9",
														"nodeType": "YulTypedName",
														"src": "15578:4:9",
														"type": ""
													}
												],
												"src": "15412:419:9"
											},
											{
												"body": {
													"nativeSrc": "15963:206:9",
													"nodeType": "YulBlock",
													"src": "15963:206:9",
													"statements": [
														{
															"nativeSrc": "15973:26:9",
															"nodeType": "YulAssignment",
															"src": "15973:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15985:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15985:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15996:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15996:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15981:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15981:3:9"
																},
																"nativeSrc": "15981:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15981:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15973:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15973:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16053:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16053:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16066:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16066:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16077:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16077:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16062:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16062:3:9"
																		},
																		"nativeSrc": "16062:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16062:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16009:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "16009:43:9"
																},
																"nativeSrc": "16009:71:9",
																"nodeType": "YulFunctionCall",
																"src": "16009:71:9"
															},
															"nativeSrc": "16009:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "16009:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16134:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16134:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16147:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16147:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16158:2:9",
																				"nodeType": "YulLiteral",
																				"src": "16158:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16143:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16143:3:9"
																		},
																		"nativeSrc": "16143:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16143:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16090:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "16090:43:9"
																},
																"nativeSrc": "16090:72:9",
																"nodeType": "YulFunctionCall",
																"src": "16090:72:9"
															},
															"nativeSrc": "16090:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "16090:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15837:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15927:9:9",
														"nodeType": "YulTypedName",
														"src": "15927:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15939:6:9",
														"nodeType": "YulTypedName",
														"src": "15939:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15947:6:9",
														"nodeType": "YulTypedName",
														"src": "15947:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15958:4:9",
														"nodeType": "YulTypedName",
														"src": "15958:4:9",
														"type": ""
													}
												],
												"src": "15837:332:9"
											},
											{
												"body": {
													"nativeSrc": "16220:149:9",
													"nodeType": "YulBlock",
													"src": "16220:149:9",
													"statements": [
														{
															"nativeSrc": "16230:25:9",
															"nodeType": "YulAssignment",
															"src": "16230:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16253:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16253:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16235:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16235:17:9"
																},
																"nativeSrc": "16235:20:9",
																"nodeType": "YulFunctionCall",
																"src": "16235:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16230:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16230:1:9"
																}
															]
														},
														{
															"nativeSrc": "16264:25:9",
															"nodeType": "YulAssignment",
															"src": "16264:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16287:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16287:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16269:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16269:17:9"
																},
																"nativeSrc": "16269:20:9",
																"nodeType": "YulFunctionCall",
																"src": "16269:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16264:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16264:1:9"
																}
															]
														},
														{
															"nativeSrc": "16298:17:9",
															"nodeType": "YulAssignment",
															"src": "16298:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16310:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16310:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16313:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16313:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16306:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16306:3:9"
																},
																"nativeSrc": "16306:9:9",
																"nodeType": "YulFunctionCall",
																"src": "16306:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16298:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16298:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16340:22:9",
																"nodeType": "YulBlock",
																"src": "16340:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16342:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "16342:16:9"
																			},
																			"nativeSrc": "16342:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16342:18:9"
																		},
																		"nativeSrc": "16342:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16342:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16331:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16331:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "16337:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16337:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16328:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "16328:2:9"
																},
																"nativeSrc": "16328:11:9",
																"nodeType": "YulFunctionCall",
																"src": "16328:11:9"
															},
															"nativeSrc": "16325:37:9",
															"nodeType": "YulIf",
															"src": "16325:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "16175:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16206:1:9",
														"nodeType": "YulTypedName",
														"src": "16206:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16209:1:9",
														"nodeType": "YulTypedName",
														"src": "16209:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16215:4:9",
														"nodeType": "YulTypedName",
														"src": "16215:4:9",
														"type": ""
													}
												],
												"src": "16175:194:9"
											},
											{
												"body": {
													"nativeSrc": "16423:362:9",
													"nodeType": "YulBlock",
													"src": "16423:362:9",
													"statements": [
														{
															"nativeSrc": "16433:25:9",
															"nodeType": "YulAssignment",
															"src": "16433:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16456:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16456:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16438:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16438:17:9"
																},
																"nativeSrc": "16438:20:9",
																"nodeType": "YulFunctionCall",
																"src": "16438:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16433:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16433:1:9"
																}
															]
														},
														{
															"nativeSrc": "16467:25:9",
															"nodeType": "YulAssignment",
															"src": "16467:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16490:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16490:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16472:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16472:17:9"
																},
																"nativeSrc": "16472:20:9",
																"nodeType": "YulFunctionCall",
																"src": "16472:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16467:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "16467:1:9"
																}
															]
														},
														{
															"nativeSrc": "16501:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "16501:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16524:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16524:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16527:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "16527:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16520:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16520:3:9"
																},
																"nativeSrc": "16520:9:9",
																"nodeType": "YulFunctionCall",
																"src": "16520:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "16505:11:9",
																	"nodeType": "YulTypedName",
																	"src": "16505:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16538:41:9",
															"nodeType": "YulAssignment",
															"src": "16538:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "16567:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "16567:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16549:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "16549:17:9"
																},
																"nativeSrc": "16549:30:9",
																"nodeType": "YulFunctionCall",
																"src": "16549:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "16538:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "16538:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16756:22:9",
																"nodeType": "YulBlock",
																"src": "16756:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16758:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "16758:16:9"
																			},
																			"nativeSrc": "16758:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16758:18:9"
																		},
																		"nativeSrc": "16758:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16758:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "16689:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "16689:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "16682:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "16682:6:9"
																				},
																				"nativeSrc": "16682:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "16682:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "16712:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "16712:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "16719:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "16719:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "16728:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "16728:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "16715:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "16715:3:9"
																						},
																						"nativeSrc": "16715:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "16715:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "16709:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "16709:2:9"
																				},
																				"nativeSrc": "16709:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "16709:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "16662:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "16662:2:9"
																		},
																		"nativeSrc": "16662:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16662:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16642:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16642:6:9"
																},
																"nativeSrc": "16642:113:9",
																"nodeType": "YulFunctionCall",
																"src": "16642:113:9"
															},
															"nativeSrc": "16639:139:9",
															"nodeType": "YulIf",
															"src": "16639:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "16375:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16406:1:9",
														"nodeType": "YulTypedName",
														"src": "16406:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16409:1:9",
														"nodeType": "YulTypedName",
														"src": "16409:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "16415:7:9",
														"nodeType": "YulTypedName",
														"src": "16415:7:9",
														"type": ""
													}
												],
												"src": "16375:410:9"
											},
											{
												"body": {
													"nativeSrc": "16819:152:9",
													"nodeType": "YulBlock",
													"src": "16819:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16836:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16836:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16839:77:9",
																		"nodeType": "YulLiteral",
																		"src": "16839:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16829:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16829:6:9"
																},
																"nativeSrc": "16829:88:9",
																"nodeType": "YulFunctionCall",
																"src": "16829:88:9"
															},
															"nativeSrc": "16829:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "16829:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16933:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16933:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16936:4:9",
																		"nodeType": "YulLiteral",
																		"src": "16936:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16926:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16926:6:9"
																},
																"nativeSrc": "16926:15:9",
																"nodeType": "YulFunctionCall",
																"src": "16926:15:9"
															},
															"nativeSrc": "16926:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "16926:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16957:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16957:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16960:4:9",
																		"nodeType": "YulLiteral",
																		"src": "16960:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16950:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16950:6:9"
																},
																"nativeSrc": "16950:15:9",
																"nodeType": "YulFunctionCall",
																"src": "16950:15:9"
															},
															"nativeSrc": "16950:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "16950:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "16791:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "16791:180:9"
											},
											{
												"body": {
													"nativeSrc": "17019:143:9",
													"nodeType": "YulBlock",
													"src": "17019:143:9",
													"statements": [
														{
															"nativeSrc": "17029:25:9",
															"nodeType": "YulAssignment",
															"src": "17029:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17052:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17052:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17034:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "17034:17:9"
																},
																"nativeSrc": "17034:20:9",
																"nodeType": "YulFunctionCall",
																"src": "17034:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17029:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "17029:1:9"
																}
															]
														},
														{
															"nativeSrc": "17063:25:9",
															"nodeType": "YulAssignment",
															"src": "17063:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17086:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17086:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17068:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "17068:17:9"
																},
																"nativeSrc": "17068:20:9",
																"nodeType": "YulFunctionCall",
																"src": "17068:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17063:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "17063:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17110:22:9",
																"nodeType": "YulBlock",
																"src": "17110:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "17112:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "17112:16:9"
																			},
																			"nativeSrc": "17112:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "17112:18:9"
																		},
																		"nativeSrc": "17112:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "17112:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17107:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17107:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17100:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17100:6:9"
																},
																"nativeSrc": "17100:9:9",
																"nodeType": "YulFunctionCall",
																"src": "17100:9:9"
															},
															"nativeSrc": "17097:35:9",
															"nodeType": "YulIf",
															"src": "17097:35:9"
														},
														{
															"nativeSrc": "17142:14:9",
															"nodeType": "YulAssignment",
															"src": "17142:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17151:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17151:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17154:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "17154:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "17147:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17147:3:9"
																},
																"nativeSrc": "17147:9:9",
																"nodeType": "YulFunctionCall",
																"src": "17147:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "17142:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "17142:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "16977:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17008:1:9",
														"nodeType": "YulTypedName",
														"src": "17008:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17011:1:9",
														"nodeType": "YulTypedName",
														"src": "17011:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "17017:1:9",
														"nodeType": "YulTypedName",
														"src": "17017:1:9",
														"type": ""
													}
												],
												"src": "16977:185:9"
											},
											{
												"body": {
													"nativeSrc": "17274:70:9",
													"nodeType": "YulBlock",
													"src": "17274:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17296:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "17296:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17304:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17304:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17292:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17292:3:9"
																		},
																		"nativeSrc": "17292:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17292:14:9"
																	},
																	{
																		"hexValue": "507269766174652053616c65206973206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "17308:28:9",
																		"nodeType": "YulLiteral",
																		"src": "17308:28:9",
																		"type": "",
																		"value": "Private Sale is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17285:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17285:6:9"
																},
																"nativeSrc": "17285:52:9",
																"nodeType": "YulFunctionCall",
																"src": "17285:52:9"
															},
															"nativeSrc": "17285:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "17285:52:9"
														}
													]
												},
												"name": "store_literal_in_memory_2aca0dda29ce8259de35f4c7fbb579f5f208445253d404472728673406706fd3",
												"nativeSrc": "17168:176:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17266:6:9",
														"nodeType": "YulTypedName",
														"src": "17266:6:9",
														"type": ""
													}
												],
												"src": "17168:176:9"
											},
											{
												"body": {
													"nativeSrc": "17496:220:9",
													"nodeType": "YulBlock",
													"src": "17496:220:9",
													"statements": [
														{
															"nativeSrc": "17506:74:9",
															"nodeType": "YulAssignment",
															"src": "17506:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17572:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17572:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17577:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17577:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17513:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "17513:58:9"
																},
																"nativeSrc": "17513:67:9",
																"nodeType": "YulFunctionCall",
																"src": "17513:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17506:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17506:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17678:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17678:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2aca0dda29ce8259de35f4c7fbb579f5f208445253d404472728673406706fd3",
																	"nativeSrc": "17589:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "17589:88:9"
																},
																"nativeSrc": "17589:93:9",
																"nodeType": "YulFunctionCall",
																"src": "17589:93:9"
															},
															"nativeSrc": "17589:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "17589:93:9"
														},
														{
															"nativeSrc": "17691:19:9",
															"nodeType": "YulAssignment",
															"src": "17691:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17702:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17702:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17707:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17707:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17698:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17698:3:9"
																},
																"nativeSrc": "17698:12:9",
																"nodeType": "YulFunctionCall",
																"src": "17698:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17691:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17691:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2aca0dda29ce8259de35f4c7fbb579f5f208445253d404472728673406706fd3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17350:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17484:3:9",
														"nodeType": "YulTypedName",
														"src": "17484:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17492:3:9",
														"nodeType": "YulTypedName",
														"src": "17492:3:9",
														"type": ""
													}
												],
												"src": "17350:366:9"
											},
											{
												"body": {
													"nativeSrc": "17893:248:9",
													"nodeType": "YulBlock",
													"src": "17893:248:9",
													"statements": [
														{
															"nativeSrc": "17903:26:9",
															"nodeType": "YulAssignment",
															"src": "17903:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17915:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17915:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17926:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17926:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17911:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17911:3:9"
																},
																"nativeSrc": "17911:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17911:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17903:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17903:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17950:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17950:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17961:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17961:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17946:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17946:3:9"
																		},
																		"nativeSrc": "17946:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17946:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17969:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "17969:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17975:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17975:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17965:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17965:3:9"
																		},
																		"nativeSrc": "17965:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17965:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17939:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17939:6:9"
																},
																"nativeSrc": "17939:47:9",
																"nodeType": "YulFunctionCall",
																"src": "17939:47:9"
															},
															"nativeSrc": "17939:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "17939:47:9"
														},
														{
															"nativeSrc": "17995:139:9",
															"nodeType": "YulAssignment",
															"src": "17995:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18129:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "18129:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2aca0dda29ce8259de35f4c7fbb579f5f208445253d404472728673406706fd3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18003:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "18003:124:9"
																},
																"nativeSrc": "18003:131:9",
																"nodeType": "YulFunctionCall",
																"src": "18003:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17995:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17995:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2aca0dda29ce8259de35f4c7fbb579f5f208445253d404472728673406706fd3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17722:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17873:9:9",
														"nodeType": "YulTypedName",
														"src": "17873:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17888:4:9",
														"nodeType": "YulTypedName",
														"src": "17888:4:9",
														"type": ""
													}
												],
												"src": "17722:419:9"
											},
											{
												"body": {
													"nativeSrc": "18253:118:9",
													"nodeType": "YulBlock",
													"src": "18253:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18275:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18275:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18283:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18283:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18271:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18271:3:9"
																		},
																		"nativeSrc": "18271:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18271:14:9"
																	},
																	{
																		"hexValue": "4d696e696d756d2055534420616d6f756e742072657175697265642069732035",
																		"kind": "string",
																		"nativeSrc": "18287:34:9",
																		"nodeType": "YulLiteral",
																		"src": "18287:34:9",
																		"type": "",
																		"value": "Minimum USD amount required is 5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18264:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18264:6:9"
																},
																"nativeSrc": "18264:58:9",
																"nodeType": "YulFunctionCall",
																"src": "18264:58:9"
															},
															"nativeSrc": "18264:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "18264:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18343:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18343:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18351:2:9",
																				"nodeType": "YulLiteral",
																				"src": "18351:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18339:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18339:3:9"
																		},
																		"nativeSrc": "18339:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18339:15:9"
																	},
																	{
																		"hexValue": "3020555344",
																		"kind": "string",
																		"nativeSrc": "18356:7:9",
																		"nodeType": "YulLiteral",
																		"src": "18356:7:9",
																		"type": "",
																		"value": "0 USD"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18332:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18332:6:9"
																},
																"nativeSrc": "18332:32:9",
																"nodeType": "YulFunctionCall",
																"src": "18332:32:9"
															},
															"nativeSrc": "18332:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "18332:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_c123d62fd86e1eb44afc70124744d1e32d529839eb044ed770129d4522c1d247",
												"nativeSrc": "18147:224:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18245:6:9",
														"nodeType": "YulTypedName",
														"src": "18245:6:9",
														"type": ""
													}
												],
												"src": "18147:224:9"
											},
											{
												"body": {
													"nativeSrc": "18523:220:9",
													"nodeType": "YulBlock",
													"src": "18523:220:9",
													"statements": [
														{
															"nativeSrc": "18533:74:9",
															"nodeType": "YulAssignment",
															"src": "18533:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18599:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18599:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18604:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18604:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18540:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "18540:58:9"
																},
																"nativeSrc": "18540:67:9",
																"nodeType": "YulFunctionCall",
																"src": "18540:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18533:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18533:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18705:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18705:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c123d62fd86e1eb44afc70124744d1e32d529839eb044ed770129d4522c1d247",
																	"nativeSrc": "18616:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "18616:88:9"
																},
																"nativeSrc": "18616:93:9",
																"nodeType": "YulFunctionCall",
																"src": "18616:93:9"
															},
															"nativeSrc": "18616:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "18616:93:9"
														},
														{
															"nativeSrc": "18718:19:9",
															"nodeType": "YulAssignment",
															"src": "18718:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18729:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18729:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18734:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18734:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18725:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18725:3:9"
																},
																"nativeSrc": "18725:12:9",
																"nodeType": "YulFunctionCall",
																"src": "18725:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18718:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18718:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c123d62fd86e1eb44afc70124744d1e32d529839eb044ed770129d4522c1d247_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18377:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18511:3:9",
														"nodeType": "YulTypedName",
														"src": "18511:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18519:3:9",
														"nodeType": "YulTypedName",
														"src": "18519:3:9",
														"type": ""
													}
												],
												"src": "18377:366:9"
											},
											{
												"body": {
													"nativeSrc": "18920:248:9",
													"nodeType": "YulBlock",
													"src": "18920:248:9",
													"statements": [
														{
															"nativeSrc": "18930:26:9",
															"nodeType": "YulAssignment",
															"src": "18930:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18942:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18942:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18953:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18953:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18938:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18938:3:9"
																},
																"nativeSrc": "18938:18:9",
																"nodeType": "YulFunctionCall",
																"src": "18938:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18930:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18930:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18977:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18977:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18988:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18988:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18973:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18973:3:9"
																		},
																		"nativeSrc": "18973:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18973:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18996:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "18996:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19002:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19002:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18992:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18992:3:9"
																		},
																		"nativeSrc": "18992:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18992:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18966:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18966:6:9"
																},
																"nativeSrc": "18966:47:9",
																"nodeType": "YulFunctionCall",
																"src": "18966:47:9"
															},
															"nativeSrc": "18966:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "18966:47:9"
														},
														{
															"nativeSrc": "19022:139:9",
															"nodeType": "YulAssignment",
															"src": "19022:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19156:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "19156:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c123d62fd86e1eb44afc70124744d1e32d529839eb044ed770129d4522c1d247_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19030:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "19030:124:9"
																},
																"nativeSrc": "19030:131:9",
																"nodeType": "YulFunctionCall",
																"src": "19030:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19022:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19022:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c123d62fd86e1eb44afc70124744d1e32d529839eb044ed770129d4522c1d247__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18749:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18900:9:9",
														"nodeType": "YulTypedName",
														"src": "18900:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18915:4:9",
														"nodeType": "YulTypedName",
														"src": "18915:4:9",
														"type": ""
													}
												],
												"src": "18749:419:9"
											},
											{
												"body": {
													"nativeSrc": "19280:117:9",
													"nodeType": "YulBlock",
													"src": "19280:117:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19302:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "19302:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19310:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19310:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19298:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19298:3:9"
																		},
																		"nativeSrc": "19298:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19298:14:9"
																	},
																	{
																		"hexValue": "45786365656473206d6178696d756d20746f6b656e207075726368617365206c",
																		"kind": "string",
																		"nativeSrc": "19314:34:9",
																		"nodeType": "YulLiteral",
																		"src": "19314:34:9",
																		"type": "",
																		"value": "Exceeds maximum token purchase l"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19291:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19291:6:9"
																},
																"nativeSrc": "19291:58:9",
																"nodeType": "YulFunctionCall",
																"src": "19291:58:9"
															},
															"nativeSrc": "19291:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "19291:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19370:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "19370:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19378:2:9",
																				"nodeType": "YulLiteral",
																				"src": "19378:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19366:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19366:3:9"
																		},
																		"nativeSrc": "19366:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19366:15:9"
																	},
																	{
																		"hexValue": "696d6974",
																		"kind": "string",
																		"nativeSrc": "19383:6:9",
																		"nodeType": "YulLiteral",
																		"src": "19383:6:9",
																		"type": "",
																		"value": "imit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19359:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19359:6:9"
																},
																"nativeSrc": "19359:31:9",
																"nodeType": "YulFunctionCall",
																"src": "19359:31:9"
															},
															"nativeSrc": "19359:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "19359:31:9"
														}
													]
												},
												"name": "store_literal_in_memory_83ab5b2b5d49cf4328cac2cffda83e0458a2b9571cc02569f86cb90099aed62d",
												"nativeSrc": "19174:223:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19272:6:9",
														"nodeType": "YulTypedName",
														"src": "19272:6:9",
														"type": ""
													}
												],
												"src": "19174:223:9"
											},
											{
												"body": {
													"nativeSrc": "19549:220:9",
													"nodeType": "YulBlock",
													"src": "19549:220:9",
													"statements": [
														{
															"nativeSrc": "19559:74:9",
															"nodeType": "YulAssignment",
															"src": "19559:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19625:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19625:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19630:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19630:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19566:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "19566:58:9"
																},
																"nativeSrc": "19566:67:9",
																"nodeType": "YulFunctionCall",
																"src": "19566:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19559:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19559:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19731:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19731:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_83ab5b2b5d49cf4328cac2cffda83e0458a2b9571cc02569f86cb90099aed62d",
																	"nativeSrc": "19642:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "19642:88:9"
																},
																"nativeSrc": "19642:93:9",
																"nodeType": "YulFunctionCall",
																"src": "19642:93:9"
															},
															"nativeSrc": "19642:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "19642:93:9"
														},
														{
															"nativeSrc": "19744:19:9",
															"nodeType": "YulAssignment",
															"src": "19744:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19755:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19755:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19760:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19760:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19751:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19751:3:9"
																},
																"nativeSrc": "19751:12:9",
																"nodeType": "YulFunctionCall",
																"src": "19751:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19744:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19744:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_83ab5b2b5d49cf4328cac2cffda83e0458a2b9571cc02569f86cb90099aed62d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19403:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19537:3:9",
														"nodeType": "YulTypedName",
														"src": "19537:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19545:3:9",
														"nodeType": "YulTypedName",
														"src": "19545:3:9",
														"type": ""
													}
												],
												"src": "19403:366:9"
											},
											{
												"body": {
													"nativeSrc": "19946:248:9",
													"nodeType": "YulBlock",
													"src": "19946:248:9",
													"statements": [
														{
															"nativeSrc": "19956:26:9",
															"nodeType": "YulAssignment",
															"src": "19956:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19968:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "19968:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19979:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19979:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19964:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19964:3:9"
																},
																"nativeSrc": "19964:18:9",
																"nodeType": "YulFunctionCall",
																"src": "19964:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19956:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19956:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20003:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20003:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20014:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20014:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19999:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19999:3:9"
																		},
																		"nativeSrc": "19999:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19999:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20022:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "20022:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20028:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20028:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20018:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20018:3:9"
																		},
																		"nativeSrc": "20018:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20018:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19992:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19992:6:9"
																},
																"nativeSrc": "19992:47:9",
																"nodeType": "YulFunctionCall",
																"src": "19992:47:9"
															},
															"nativeSrc": "19992:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "19992:47:9"
														},
														{
															"nativeSrc": "20048:139:9",
															"nodeType": "YulAssignment",
															"src": "20048:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20182:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "20182:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_83ab5b2b5d49cf4328cac2cffda83e0458a2b9571cc02569f86cb90099aed62d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20056:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "20056:124:9"
																},
																"nativeSrc": "20056:131:9",
																"nodeType": "YulFunctionCall",
																"src": "20056:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20048:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20048:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_83ab5b2b5d49cf4328cac2cffda83e0458a2b9571cc02569f86cb90099aed62d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19775:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19926:9:9",
														"nodeType": "YulTypedName",
														"src": "19926:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19941:4:9",
														"nodeType": "YulTypedName",
														"src": "19941:4:9",
														"type": ""
													}
												],
												"src": "19775:419:9"
											},
											{
												"body": {
													"nativeSrc": "20306:62:9",
													"nodeType": "YulBlock",
													"src": "20306:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20328:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "20328:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20336:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20336:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20324:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20324:3:9"
																		},
																		"nativeSrc": "20324:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20324:14:9"
																	},
																	{
																		"hexValue": "4e6f2045544820746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "20340:20:9",
																		"nodeType": "YulLiteral",
																		"src": "20340:20:9",
																		"type": "",
																		"value": "No ETH to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20317:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20317:6:9"
																},
																"nativeSrc": "20317:44:9",
																"nodeType": "YulFunctionCall",
																"src": "20317:44:9"
															},
															"nativeSrc": "20317:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "20317:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
												"nativeSrc": "20200:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20298:6:9",
														"nodeType": "YulTypedName",
														"src": "20298:6:9",
														"type": ""
													}
												],
												"src": "20200:168:9"
											},
											{
												"body": {
													"nativeSrc": "20520:220:9",
													"nodeType": "YulBlock",
													"src": "20520:220:9",
													"statements": [
														{
															"nativeSrc": "20530:74:9",
															"nodeType": "YulAssignment",
															"src": "20530:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20596:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20596:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20601:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20601:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20537:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "20537:58:9"
																},
																"nativeSrc": "20537:67:9",
																"nodeType": "YulFunctionCall",
																"src": "20537:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20530:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20530:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20702:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20702:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
																	"nativeSrc": "20613:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "20613:88:9"
																},
																"nativeSrc": "20613:93:9",
																"nodeType": "YulFunctionCall",
																"src": "20613:93:9"
															},
															"nativeSrc": "20613:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "20613:93:9"
														},
														{
															"nativeSrc": "20715:19:9",
															"nodeType": "YulAssignment",
															"src": "20715:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20726:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20726:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20731:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20731:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20722:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20722:3:9"
																},
																"nativeSrc": "20722:12:9",
																"nodeType": "YulFunctionCall",
																"src": "20722:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20715:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20715:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20374:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20508:3:9",
														"nodeType": "YulTypedName",
														"src": "20508:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20516:3:9",
														"nodeType": "YulTypedName",
														"src": "20516:3:9",
														"type": ""
													}
												],
												"src": "20374:366:9"
											},
											{
												"body": {
													"nativeSrc": "20917:248:9",
													"nodeType": "YulBlock",
													"src": "20917:248:9",
													"statements": [
														{
															"nativeSrc": "20927:26:9",
															"nodeType": "YulAssignment",
															"src": "20927:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20939:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "20939:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20950:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20950:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20935:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20935:3:9"
																},
																"nativeSrc": "20935:18:9",
																"nodeType": "YulFunctionCall",
																"src": "20935:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20927:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20927:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20974:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20974:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20985:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20985:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20970:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20970:3:9"
																		},
																		"nativeSrc": "20970:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20970:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20993:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "20993:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20999:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20999:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20989:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20989:3:9"
																		},
																		"nativeSrc": "20989:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20989:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20963:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20963:6:9"
																},
																"nativeSrc": "20963:47:9",
																"nodeType": "YulFunctionCall",
																"src": "20963:47:9"
															},
															"nativeSrc": "20963:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "20963:47:9"
														},
														{
															"nativeSrc": "21019:139:9",
															"nodeType": "YulAssignment",
															"src": "21019:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21153:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "21153:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21027:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "21027:124:9"
																},
																"nativeSrc": "21027:131:9",
																"nodeType": "YulFunctionCall",
																"src": "21027:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21019:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21019:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20746:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20897:9:9",
														"nodeType": "YulTypedName",
														"src": "20897:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20912:4:9",
														"nodeType": "YulTypedName",
														"src": "20912:4:9",
														"type": ""
													}
												],
												"src": "20746:419:9"
											},
											{
												"body": {
													"nativeSrc": "21284:34:9",
													"nodeType": "YulBlock",
													"src": "21284:34:9",
													"statements": [
														{
															"nativeSrc": "21294:18:9",
															"nodeType": "YulAssignment",
															"src": "21294:18:9",
															"value": {
																"name": "pos",
																"nativeSrc": "21309:3:9",
																"nodeType": "YulIdentifier",
																"src": "21309:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "21294:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "21294:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "21171:147:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21256:3:9",
														"nodeType": "YulTypedName",
														"src": "21256:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "21261:6:9",
														"nodeType": "YulTypedName",
														"src": "21261:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "21272:11:9",
														"nodeType": "YulTypedName",
														"src": "21272:11:9",
														"type": ""
													}
												],
												"src": "21171:147:9"
											},
											{
												"body": {
													"nativeSrc": "21430:8:9",
													"nodeType": "YulBlock",
													"src": "21430:8:9",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "21324:114:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21422:6:9",
														"nodeType": "YulTypedName",
														"src": "21422:6:9",
														"type": ""
													}
												],
												"src": "21324:114:9"
											},
											{
												"body": {
													"nativeSrc": "21607:235:9",
													"nodeType": "YulBlock",
													"src": "21607:235:9",
													"statements": [
														{
															"nativeSrc": "21617:90:9",
															"nodeType": "YulAssignment",
															"src": "21617:90:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21700:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21700:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21705:1:9",
																		"nodeType": "YulLiteral",
																		"src": "21705:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "21624:75:9",
																	"nodeType": "YulIdentifier",
																	"src": "21624:75:9"
																},
																"nativeSrc": "21624:83:9",
																"nodeType": "YulFunctionCall",
																"src": "21624:83:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21617:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21617:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21805:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21805:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "21716:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "21716:88:9"
																},
																"nativeSrc": "21716:93:9",
																"nodeType": "YulFunctionCall",
																"src": "21716:93:9"
															},
															"nativeSrc": "21716:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "21716:93:9"
														},
														{
															"nativeSrc": "21818:18:9",
															"nodeType": "YulAssignment",
															"src": "21818:18:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21829:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21829:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21834:1:9",
																		"nodeType": "YulLiteral",
																		"src": "21834:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21825:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21825:3:9"
																},
																"nativeSrc": "21825:11:9",
																"nodeType": "YulFunctionCall",
																"src": "21825:11:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21818:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21818:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "21444:398:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21595:3:9",
														"nodeType": "YulTypedName",
														"src": "21595:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21603:3:9",
														"nodeType": "YulTypedName",
														"src": "21603:3:9",
														"type": ""
													}
												],
												"src": "21444:398:9"
											},
											{
												"body": {
													"nativeSrc": "22036:191:9",
													"nodeType": "YulBlock",
													"src": "22036:191:9",
													"statements": [
														{
															"nativeSrc": "22047:154:9",
															"nodeType": "YulAssignment",
															"src": "22047:154:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22197:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22197:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "22054:141:9",
																	"nodeType": "YulIdentifier",
																	"src": "22054:141:9"
																},
																"nativeSrc": "22054:147:9",
																"nodeType": "YulFunctionCall",
																"src": "22054:147:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22047:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22047:3:9"
																}
															]
														},
														{
															"nativeSrc": "22211:10:9",
															"nodeType": "YulAssignment",
															"src": "22211:10:9",
															"value": {
																"name": "pos",
																"nativeSrc": "22218:3:9",
																"nodeType": "YulIdentifier",
																"src": "22218:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22211:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22211:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "21848:379:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22023:3:9",
														"nodeType": "YulTypedName",
														"src": "22023:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22032:3:9",
														"nodeType": "YulTypedName",
														"src": "22032:3:9",
														"type": ""
													}
												],
												"src": "21848:379:9"
											},
											{
												"body": {
													"nativeSrc": "22339:59:9",
													"nodeType": "YulBlock",
													"src": "22339:59:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22361:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "22361:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22369:1:9",
																				"nodeType": "YulLiteral",
																				"src": "22369:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22357:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22357:3:9"
																		},
																		"nativeSrc": "22357:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22357:14:9"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "22373:17:9",
																		"nodeType": "YulLiteral",
																		"src": "22373:17:9",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22350:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22350:6:9"
																},
																"nativeSrc": "22350:41:9",
																"nodeType": "YulFunctionCall",
																"src": "22350:41:9"
															},
															"nativeSrc": "22350:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "22350:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "22233:165:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22331:6:9",
														"nodeType": "YulTypedName",
														"src": "22331:6:9",
														"type": ""
													}
												],
												"src": "22233:165:9"
											},
											{
												"body": {
													"nativeSrc": "22550:220:9",
													"nodeType": "YulBlock",
													"src": "22550:220:9",
													"statements": [
														{
															"nativeSrc": "22560:74:9",
															"nodeType": "YulAssignment",
															"src": "22560:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22626:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22626:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22631:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22631:2:9",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22567:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "22567:58:9"
																},
																"nativeSrc": "22567:67:9",
																"nodeType": "YulFunctionCall",
																"src": "22567:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22560:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22560:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22732:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22732:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "22643:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "22643:88:9"
																},
																"nativeSrc": "22643:93:9",
																"nodeType": "YulFunctionCall",
																"src": "22643:93:9"
															},
															"nativeSrc": "22643:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "22643:93:9"
														},
														{
															"nativeSrc": "22745:19:9",
															"nodeType": "YulAssignment",
															"src": "22745:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22756:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22756:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22761:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22761:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22752:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22752:3:9"
																},
																"nativeSrc": "22752:12:9",
																"nodeType": "YulFunctionCall",
																"src": "22752:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22745:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22745:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22404:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22538:3:9",
														"nodeType": "YulTypedName",
														"src": "22538:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22546:3:9",
														"nodeType": "YulTypedName",
														"src": "22546:3:9",
														"type": ""
													}
												],
												"src": "22404:366:9"
											},
											{
												"body": {
													"nativeSrc": "22947:248:9",
													"nodeType": "YulBlock",
													"src": "22947:248:9",
													"statements": [
														{
															"nativeSrc": "22957:26:9",
															"nodeType": "YulAssignment",
															"src": "22957:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22969:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "22969:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22980:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22980:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22965:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22965:3:9"
																},
																"nativeSrc": "22965:18:9",
																"nodeType": "YulFunctionCall",
																"src": "22965:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22957:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "22957:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23004:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23004:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23015:1:9",
																				"nodeType": "YulLiteral",
																				"src": "23015:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23000:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23000:3:9"
																		},
																		"nativeSrc": "23000:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23000:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23023:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "23023:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23029:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23029:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23019:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23019:3:9"
																		},
																		"nativeSrc": "23019:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23019:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22993:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22993:6:9"
																},
																"nativeSrc": "22993:47:9",
																"nodeType": "YulFunctionCall",
																"src": "22993:47:9"
															},
															"nativeSrc": "22993:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "22993:47:9"
														},
														{
															"nativeSrc": "23049:139:9",
															"nodeType": "YulAssignment",
															"src": "23049:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23183:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "23183:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23057:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "23057:124:9"
																},
																"nativeSrc": "23057:131:9",
																"nodeType": "YulFunctionCall",
																"src": "23057:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23049:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23049:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22776:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22927:9:9",
														"nodeType": "YulTypedName",
														"src": "22927:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22942:4:9",
														"nodeType": "YulTypedName",
														"src": "22942:4:9",
														"type": ""
													}
												],
												"src": "22776:419:9"
											},
											{
												"body": {
													"nativeSrc": "23355:288:9",
													"nodeType": "YulBlock",
													"src": "23355:288:9",
													"statements": [
														{
															"nativeSrc": "23365:26:9",
															"nodeType": "YulAssignment",
															"src": "23365:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23377:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "23377:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23388:2:9",
																		"nodeType": "YulLiteral",
																		"src": "23388:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23373:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23373:3:9"
																},
																"nativeSrc": "23373:18:9",
																"nodeType": "YulFunctionCall",
																"src": "23373:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23365:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23365:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23445:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "23445:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23458:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23458:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23469:1:9",
																				"nodeType": "YulLiteral",
																				"src": "23469:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23454:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23454:3:9"
																		},
																		"nativeSrc": "23454:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23454:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23401:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "23401:43:9"
																},
																"nativeSrc": "23401:71:9",
																"nodeType": "YulFunctionCall",
																"src": "23401:71:9"
															},
															"nativeSrc": "23401:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "23401:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23526:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "23526:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23539:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23539:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23550:2:9",
																				"nodeType": "YulLiteral",
																				"src": "23550:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23535:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23535:3:9"
																		},
																		"nativeSrc": "23535:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23535:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23482:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "23482:43:9"
																},
																"nativeSrc": "23482:72:9",
																"nodeType": "YulFunctionCall",
																"src": "23482:72:9"
															},
															"nativeSrc": "23482:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "23482:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23608:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "23608:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23621:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23621:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23632:2:9",
																				"nodeType": "YulLiteral",
																				"src": "23632:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23617:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23617:3:9"
																		},
																		"nativeSrc": "23617:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23617:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23564:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "23564:43:9"
																},
																"nativeSrc": "23564:72:9",
																"nodeType": "YulFunctionCall",
																"src": "23564:72:9"
															},
															"nativeSrc": "23564:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "23564:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "23201:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23311:9:9",
														"nodeType": "YulTypedName",
														"src": "23311:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23323:6:9",
														"nodeType": "YulTypedName",
														"src": "23323:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23331:6:9",
														"nodeType": "YulTypedName",
														"src": "23331:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23339:6:9",
														"nodeType": "YulTypedName",
														"src": "23339:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23350:4:9",
														"nodeType": "YulTypedName",
														"src": "23350:4:9",
														"type": ""
													}
												],
												"src": "23201:442:9"
											},
											{
												"body": {
													"nativeSrc": "23755:75:9",
													"nodeType": "YulBlock",
													"src": "23755:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23777:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "23777:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23785:1:9",
																				"nodeType": "YulLiteral",
																				"src": "23785:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23773:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23773:3:9"
																		},
																		"nativeSrc": "23773:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23773:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "23789:33:9",
																		"nodeType": "YulLiteral",
																		"src": "23789:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23766:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "23766:6:9"
																},
																"nativeSrc": "23766:57:9",
																"nodeType": "YulFunctionCall",
																"src": "23766:57:9"
															},
															"nativeSrc": "23766:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "23766:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "23649:181:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23747:6:9",
														"nodeType": "YulTypedName",
														"src": "23747:6:9",
														"type": ""
													}
												],
												"src": "23649:181:9"
											},
											{
												"body": {
													"nativeSrc": "23982:220:9",
													"nodeType": "YulBlock",
													"src": "23982:220:9",
													"statements": [
														{
															"nativeSrc": "23992:74:9",
															"nodeType": "YulAssignment",
															"src": "23992:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24058:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24058:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24063:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24063:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23999:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "23999:58:9"
																},
																"nativeSrc": "23999:67:9",
																"nodeType": "YulFunctionCall",
																"src": "23999:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23992:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23992:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24164:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24164:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "24075:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "24075:88:9"
																},
																"nativeSrc": "24075:93:9",
																"nodeType": "YulFunctionCall",
																"src": "24075:93:9"
															},
															"nativeSrc": "24075:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "24075:93:9"
														},
														{
															"nativeSrc": "24177:19:9",
															"nodeType": "YulAssignment",
															"src": "24177:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24188:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24188:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24193:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24193:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24184:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24184:3:9"
																},
																"nativeSrc": "24184:12:9",
																"nodeType": "YulFunctionCall",
																"src": "24184:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24177:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24177:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23836:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23970:3:9",
														"nodeType": "YulTypedName",
														"src": "23970:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23978:3:9",
														"nodeType": "YulTypedName",
														"src": "23978:3:9",
														"type": ""
													}
												],
												"src": "23836:366:9"
											},
											{
												"body": {
													"nativeSrc": "24379:248:9",
													"nodeType": "YulBlock",
													"src": "24379:248:9",
													"statements": [
														{
															"nativeSrc": "24389:26:9",
															"nodeType": "YulAssignment",
															"src": "24389:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24401:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "24401:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24412:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24412:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24397:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24397:3:9"
																},
																"nativeSrc": "24397:18:9",
																"nodeType": "YulFunctionCall",
																"src": "24397:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24389:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "24389:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24436:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "24436:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24447:1:9",
																				"nodeType": "YulLiteral",
																				"src": "24447:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24432:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24432:3:9"
																		},
																		"nativeSrc": "24432:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24432:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24455:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "24455:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24461:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "24461:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24451:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24451:3:9"
																		},
																		"nativeSrc": "24451:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24451:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24425:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24425:6:9"
																},
																"nativeSrc": "24425:47:9",
																"nodeType": "YulFunctionCall",
																"src": "24425:47:9"
															},
															"nativeSrc": "24425:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "24425:47:9"
														},
														{
															"nativeSrc": "24481:139:9",
															"nodeType": "YulAssignment",
															"src": "24481:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24615:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "24615:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24489:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "24489:124:9"
																},
																"nativeSrc": "24489:131:9",
																"nodeType": "YulFunctionCall",
																"src": "24489:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24481:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "24481:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24208:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24359:9:9",
														"nodeType": "YulTypedName",
														"src": "24359:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24374:4:9",
														"nodeType": "YulTypedName",
														"src": "24374:4:9",
														"type": ""
													}
												],
												"src": "24208:419:9"
											},
											{
												"body": {
													"nativeSrc": "24739:60:9",
													"nodeType": "YulBlock",
													"src": "24739:60:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24761:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "24761:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24769:1:9",
																				"nodeType": "YulLiteral",
																				"src": "24769:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24757:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24757:3:9"
																		},
																		"nativeSrc": "24757:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24757:14:9"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "24773:18:9",
																		"nodeType": "YulLiteral",
																		"src": "24773:18:9",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24750:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24750:6:9"
																},
																"nativeSrc": "24750:42:9",
																"nodeType": "YulFunctionCall",
																"src": "24750:42:9"
															},
															"nativeSrc": "24750:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "24750:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "24633:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24731:6:9",
														"nodeType": "YulTypedName",
														"src": "24731:6:9",
														"type": ""
													}
												],
												"src": "24633:166:9"
											},
											{
												"body": {
													"nativeSrc": "24951:220:9",
													"nodeType": "YulBlock",
													"src": "24951:220:9",
													"statements": [
														{
															"nativeSrc": "24961:74:9",
															"nodeType": "YulAssignment",
															"src": "24961:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25027:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "25027:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25032:2:9",
																		"nodeType": "YulLiteral",
																		"src": "25032:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24968:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "24968:58:9"
																},
																"nativeSrc": "24968:67:9",
																"nodeType": "YulFunctionCall",
																"src": "24968:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24961:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24961:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25133:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "25133:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "25044:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "25044:88:9"
																},
																"nativeSrc": "25044:93:9",
																"nodeType": "YulFunctionCall",
																"src": "25044:93:9"
															},
															"nativeSrc": "25044:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "25044:93:9"
														},
														{
															"nativeSrc": "25146:19:9",
															"nodeType": "YulAssignment",
															"src": "25146:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25157:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "25157:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25162:2:9",
																		"nodeType": "YulLiteral",
																		"src": "25162:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25153:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "25153:3:9"
																},
																"nativeSrc": "25153:12:9",
																"nodeType": "YulFunctionCall",
																"src": "25153:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25146:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "25146:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24805:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24939:3:9",
														"nodeType": "YulTypedName",
														"src": "24939:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24947:3:9",
														"nodeType": "YulTypedName",
														"src": "24947:3:9",
														"type": ""
													}
												],
												"src": "24805:366:9"
											},
											{
												"body": {
													"nativeSrc": "25348:248:9",
													"nodeType": "YulBlock",
													"src": "25348:248:9",
													"statements": [
														{
															"nativeSrc": "25358:26:9",
															"nodeType": "YulAssignment",
															"src": "25358:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25370:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "25370:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25381:2:9",
																		"nodeType": "YulLiteral",
																		"src": "25381:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25366:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "25366:3:9"
																},
																"nativeSrc": "25366:18:9",
																"nodeType": "YulFunctionCall",
																"src": "25366:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25358:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "25358:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25405:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "25405:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25416:1:9",
																				"nodeType": "YulLiteral",
																				"src": "25416:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25401:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "25401:3:9"
																		},
																		"nativeSrc": "25401:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25401:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25424:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "25424:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25430:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "25430:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25420:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "25420:3:9"
																		},
																		"nativeSrc": "25420:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25420:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25394:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "25394:6:9"
																},
																"nativeSrc": "25394:47:9",
																"nodeType": "YulFunctionCall",
																"src": "25394:47:9"
															},
															"nativeSrc": "25394:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "25394:47:9"
														},
														{
															"nativeSrc": "25450:139:9",
															"nodeType": "YulAssignment",
															"src": "25450:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25584:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "25584:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25458:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "25458:124:9"
																},
																"nativeSrc": "25458:131:9",
																"nodeType": "YulFunctionCall",
																"src": "25458:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25450:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "25450:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25177:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25328:9:9",
														"nodeType": "YulTypedName",
														"src": "25328:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25343:4:9",
														"nodeType": "YulTypedName",
														"src": "25343:4:9",
														"type": ""
													}
												],
												"src": "25177:419:9"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_400b214ee1a1a93cf01fb3c9ef7cf58d124b38839c5c840b50ef058141623410(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pre-Sale is not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_400b214ee1a1a93cf01fb3c9ef7cf58d124b38839c5c840b50ef058141623410_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_400b214ee1a1a93cf01fb3c9ef7cf58d124b38839c5c840b50ef058141623410(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_400b214ee1a1a93cf01fb3c9ef7cf58d124b38839c5c840b50ef058141623410__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_400b214ee1a1a93cf01fb3c9ef7cf58d124b38839c5c840b50ef058141623410_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_830458c11bcdb4f40cbff2f42c3fab42ea823db00be9aa5e6bb4a5fbd14f6155(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount is below minimum purchase\")\n\n        mstore(add(memPtr, 32), \" limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_830458c11bcdb4f40cbff2f42c3fab42ea823db00be9aa5e6bb4a5fbd14f6155_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_830458c11bcdb4f40cbff2f42c3fab42ea823db00be9aa5e6bb4a5fbd14f6155(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_830458c11bcdb4f40cbff2f42c3fab42ea823db00be9aa5e6bb4a5fbd14f6155__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_830458c11bcdb4f40cbff2f42c3fab42ea823db00be9aa5e6bb4a5fbd14f6155_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_df280954953c79d750ef99714a7fa9695b0308e506cbcf3ade5f228691300673(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount exceeds maximum purchase \")\n\n        mstore(add(memPtr, 32), \"limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_df280954953c79d750ef99714a7fa9695b0308e506cbcf3ade5f228691300673_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_df280954953c79d750ef99714a7fa9695b0308e506cbcf3ade5f228691300673(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df280954953c79d750ef99714a7fa9695b0308e506cbcf3ade5f228691300673__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df280954953c79d750ef99714a7fa9695b0308e506cbcf3ade5f228691300673_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_b8ec7f987188bef06f64e6ac12bf8951d0fa7337751db1feb89585da05fb6ea7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds Pre-Sale token limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_b8ec7f987188bef06f64e6ac12bf8951d0fa7337751db1feb89585da05fb6ea7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_b8ec7f987188bef06f64e6ac12bf8951d0fa7337751db1feb89585da05fb6ea7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b8ec7f987188bef06f64e6ac12bf8951d0fa7337751db1feb89585da05fb6ea7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b8ec7f987188bef06f64e6ac12bf8951d0fa7337751db1feb89585da05fb6ea7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_231cfa2b1ee3162fd72ea47cdb9f36a33e37eaee65ad5b803c7b92380ed9c7bd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pre-Sale is already active\")\n\n    }\n\n    function abi_encode_t_stringliteral_231cfa2b1ee3162fd72ea47cdb9f36a33e37eaee65ad5b803c7b92380ed9c7bd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_231cfa2b1ee3162fd72ea47cdb9f36a33e37eaee65ad5b803c7b92380ed9c7bd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_231cfa2b1ee3162fd72ea47cdb9f36a33e37eaee65ad5b803c7b92380ed9c7bd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_231cfa2b1ee3162fd72ea47cdb9f36a33e37eaee65ad5b803c7b92380ed9c7bd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149fc2f6d9d0004e99a811381712889395320b603e5c66522b26c56511b82020(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale already active\")\n\n    }\n\n    function abi_encode_t_stringliteral_149fc2f6d9d0004e99a811381712889395320b603e5c66522b26c56511b82020_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_149fc2f6d9d0004e99a811381712889395320b603e5c66522b26c56511b82020(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149fc2f6d9d0004e99a811381712889395320b603e5c66522b26c56511b82020__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149fc2f6d9d0004e99a811381712889395320b603e5c66522b26c56511b82020_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid percentage\")\n\n    }\n\n    function abi_encode_t_stringliteral_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_2aca0dda29ce8259de35f4c7fbb579f5f208445253d404472728673406706fd3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale is not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_2aca0dda29ce8259de35f4c7fbb579f5f208445253d404472728673406706fd3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_2aca0dda29ce8259de35f4c7fbb579f5f208445253d404472728673406706fd3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2aca0dda29ce8259de35f4c7fbb579f5f208445253d404472728673406706fd3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2aca0dda29ce8259de35f4c7fbb579f5f208445253d404472728673406706fd3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c123d62fd86e1eb44afc70124744d1e32d529839eb044ed770129d4522c1d247(memPtr) {\n\n        mstore(add(memPtr, 0), \"Minimum USD amount required is 5\")\n\n        mstore(add(memPtr, 32), \"0 USD\")\n\n    }\n\n    function abi_encode_t_stringliteral_c123d62fd86e1eb44afc70124744d1e32d529839eb044ed770129d4522c1d247_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_c123d62fd86e1eb44afc70124744d1e32d529839eb044ed770129d4522c1d247(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c123d62fd86e1eb44afc70124744d1e32d529839eb044ed770129d4522c1d247__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c123d62fd86e1eb44afc70124744d1e32d529839eb044ed770129d4522c1d247_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_83ab5b2b5d49cf4328cac2cffda83e0458a2b9571cc02569f86cb90099aed62d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds maximum token purchase l\")\n\n        mstore(add(memPtr, 32), \"imit\")\n\n    }\n\n    function abi_encode_t_stringliteral_83ab5b2b5d49cf4328cac2cffda83e0458a2b9571cc02569f86cb90099aed62d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_83ab5b2b5d49cf4328cac2cffda83e0458a2b9571cc02569f86cb90099aed62d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_83ab5b2b5d49cf4328cac2cffda83e0458a2b9571cc02569f86cb90099aed62d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_83ab5b2b5d49cf4328cac2cffda83e0458a2b9571cc02569f86cb90099aed62d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95(memPtr) {\n\n        mstore(add(memPtr, 0), \"No ETH to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106102465760003560e01c8063920168b311610139578063cb8dcfe6116100b6578063e6a23c3d1161007a578063e6a23c3d14610828578063ee889ed01461083f578063ef5b329c14610856578063f15a41f614610881578063f2fde38b146108be578063fdb20ccb146108e757610246565b8063cb8dcfe614610750578063d414890a1461078d578063d50234c4146107a9578063dd62ed3e146107d4578063e086e5ec1461081157610246565b8063ac21694c116100fd578063ac21694c14610679578063b0e68630146106a4578063b68ed11f146106cf578063bda95633146106fa578063c552e04b1461072557610246565b8063920168b314610592578063940de97e146105bd57806395d89b41146105e8578063a089de2f14610613578063a9059cbb1461063c57610246565b806355dd574c116101c7578063844947081161018b57806384494708146104cf5780638d8f2adb146104fa5780638da5cb5b146105115780638f7713ff1461053c578063902d55a51461056757610246565b806355dd574c1461040e5780635c975abb146104255780635fb3b9441461045057806370a082311461047b578063715018a6146104b857610246565b80631ecf8f4d1161020e5780631ecf8f4d1461033457806323b872dd1461035f5780632a237bb61461039c578063313ce567146103c7578063466c3f93146103f257610246565b806306d65af31461024b57806306fdde0314610276578063095ea7b3146102a15780630fe83bb8146102de57806318160ddd14610309575b600080fd5b34801561025757600080fd5b50610260610928565b60405161026d9190611e62565b60405180910390f35b34801561028257600080fd5b5061028b61092e565b6040516102989190611f0d565b60405180910390f35b3480156102ad57600080fd5b506102c860048036038101906102c39190611fbe565b6109c0565b6040516102d59190612019565b60405180910390f35b3480156102ea57600080fd5b506102f36109e3565b6040516103009190611e62565b60405180910390f35b34801561031557600080fd5b5061031e6109e9565b60405161032b9190611e62565b60405180910390f35b34801561034057600080fd5b506103496109f3565b6040516103569190611e62565b60405180910390f35b34801561036b57600080fd5b5061038660048036038101906103819190612034565b6109f9565b6040516103939190612019565b60405180910390f35b3480156103a857600080fd5b506103b1610a28565b6040516103be9190612019565b60405180910390f35b3480156103d357600080fd5b506103dc610a3b565b6040516103e991906120a3565b60405180910390f35b61040c600480360381019061040791906120be565b610a44565b005b34801561041a57600080fd5b50610423610c0f565b005b34801561043157600080fd5b5061043a610cc4565b6040516104479190612019565b60405180910390f35b34801561045c57600080fd5b50610465610cdb565b6040516104729190611e62565b60405180910390f35b34801561048757600080fd5b506104a2600480360381019061049d91906120eb565b610ce1565b6040516104af9190611e62565b60405180910390f35b3480156104c457600080fd5b506104cd610d29565b005b3480156104db57600080fd5b506104e4610d3d565b6040516104f19190612019565b60405180910390f35b34801561050657600080fd5b5061050f610d50565b005b34801561051d57600080fd5b50610526610df4565b6040516105339190612127565b60405180910390f35b34801561054857600080fd5b50610551610e1e565b60405161055e9190611e62565b60405180910390f35b34801561057357600080fd5b5061057c610e24565b6040516105899190611e62565b60405180910390f35b34801561059e57600080fd5b506105a7610e33565b6040516105b49190611e62565b60405180910390f35b3480156105c957600080fd5b506105d2610e39565b6040516105df9190611e62565b60405180910390f35b3480156105f457600080fd5b506105fd610e3f565b60405161060a9190611f0d565b60405180910390f35b34801561061f57600080fd5b5061063a600480360381019061063591906120be565b610ed1565b005b34801561064857600080fd5b50610663600480360381019061065e9190611fbe565b610fe2565b6040516106709190612019565b60405180910390f35b34801561068557600080fd5b5061068e611005565b60405161069b9190611e62565b60405180910390f35b3480156106b057600080fd5b506106b961100b565b6040516106c69190611e62565b60405180910390f35b3480156106db57600080fd5b506106e4611011565b6040516106f19190611e62565b60405180910390f35b34801561070657600080fd5b5061070f611017565b60405161071c9190611e62565b60405180910390f35b34801561073157600080fd5b5061073a61101d565b6040516107479190611e62565b60405180910390f35b34801561075c57600080fd5b50610777600480360381019061077291906120be565b611023565b6040516107849190611e62565b60405180910390f35b6107a760048036038101906107a291906120be565b611079565b005b3480156107b557600080fd5b506107be611217565b6040516107cb9190611e62565b60405180910390f35b3480156107e057600080fd5b506107fb60048036038101906107f69190612142565b61121d565b6040516108089190611e62565b60405180910390f35b34801561081d57600080fd5b506108266112a4565b005b34801561083457600080fd5b5061083d6113e2565b005b34801561084b57600080fd5b50610854611482565b005b34801561086257600080fd5b5061086b611522565b6040516108789190611e62565b60405180910390f35b34801561088d57600080fd5b506108a860048036038101906108a391906120be565b611528565b6040516108b59190611e62565b60405180910390f35b3480156108ca57600080fd5b506108e560048036038101906108e091906120eb565b61157e565b005b3480156108f357600080fd5b5061090e600480360381019061090991906120eb565b611604565b60405161091f959493929190612182565b60405180910390f35b60135481565b60606003805461093d90612204565b80601f016020809104026020016040519081016040528092919081815260200182805461096990612204565b80156109b65780601f1061098b576101008083540402835291602001916109b6565b820191906000526020600020905b81548152906001019060200180831161099957829003601f168201915b5050505050905090565b6000806109cb61163a565b90506109d8818585611642565b600191505092915050565b600e5481565b6000600254905090565b60155481565b600080610a0461163a565b9050610a11858285611654565b610a1c8585856116e8565b60019150509392505050565b601860009054906101000a900460ff1681565b60006012905090565b610a4c6117dc565b610a5461182b565b601460009054906101000a900460ff16610aa3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9a90612281565b60405180910390fd5b601554811015610ae8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adf90612313565b60405180910390fd5b601654811115610b2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b24906123a5565b60405180910390fd5b6000610b3882611023565b9050600e5481601254610b4b91906123f4565b1115610b8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8390612474565b60405180910390fd5b8060126000828254610b9e91906123f4565b92505081905550600e5460125410610bf8576000601460006101000a81548160ff0219169083151502179055507fc82e6055d31de9b552cd0014f23a8b8ce120c288ed1afce01adb97150efc018560405160405180910390a15b610c033033836116e8565b50610c0c611875565b50565b610c1761187f565b601460009054906101000a900460ff1615610c67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5e906124e0565b60405180910390fd5b6001601460006101000a81548160ff021916908315150217905550426013819055507f71d9b86cd8e742cc8d4d6b9d25c84d4e42f8ba8138c6ee54914285f4a9540056601354604051610cba9190611e62565b60405180910390a1565b6000600760009054906101000a900460ff16905090565b600b5481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610d3161187f565b610d3b6000611906565b565b601460009054906101000a900460ff1681565b610d5861187f565b6000610d6330610ce1565b905060008111610da8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9f9061254c565b60405180910390fd5b610dba30610db4610df4565b836116e8565b7f9c6393f251205f9e03559951cab4c9ae71767b6174f77944a5b0c2fa51fbda9f81604051610de99190611e62565b60405180910390a150565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60115481565b6aa56fa5b99019a5c800000081565b60105481565b600c5481565b606060048054610e4e90612204565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7a90612204565b8015610ec75780601f10610e9c57610100808354040283529160200191610ec7565b820191906000526020600020905b815481529060010190602001808311610eaa57829003601f168201915b5050505050905090565b610ed961187f565b601860009054906101000a900460ff1615610f29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f20906125b8565b60405180910390fd5b600081118015610f3a575060648111155b610f79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7090612624565b60405180910390fd5b80600d819055506001601860006101000a81548160ff02191690831515021790555042600c819055507fcbe7b2993d671ff089495ae9d90ae7a115f123db134c0a6d3c4bc6e0c72cf7e5600d54600c54604051610fd7929190612644565b60405180910390a150565b600080610fed61163a565b9050610ffa8185856116e8565b600191505092915050565b60165481565b60095481565b60125481565b600a5481565b60085481565b600080600e5460125460105460115461103c919061266d565b61104691906126a1565b6110509190612712565b60105461105d91906123f4565b90506000818461106d9190612712565b90508092505050919050565b6110816117dc565b61108961182b565b601860009054906101000a900460ff166110d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110cf9061278f565b60405180910390fd5b6802b5e3af16b1880000811015611124576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111b90612821565b60405180910390fd5b600061112f82611528565b9050683635c9adc5dea0000081111561117d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611174906128b3565b60405180910390fd5b80600b600082825461118f91906123f4565b92505081905550600854600b54106111e9576000601860006101000a81548160ff0219169083151502179055507f8d80f5be79e7dd88d69814b57e8f5c7dd249b3d6bac194eb9144b8ca639db03660405160405180910390a15b61120b33826301e13380426111fe91906123f4565b62ed4e0062278d006119cc565b50611214611875565b50565b600d5481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6112ac61187f565b6000479050600081116112f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112eb9061291f565b60405180910390fd5b60006112fe610df4565b73ffffffffffffffffffffffffffffffffffffffff168260405161132190612970565b60006040518083038185875af1925050503d806000811461135e576040519150601f19603f3d011682016040523d82523d6000602084013e611363565b606091505b50509050806113a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139e906129d1565b60405180910390fd5b7f043f607a14d3b4f0a11a0b2e192bbfcd894298ba5abf22553be6081406db28aa826040516113d69190611e62565b60405180910390a15050565b6113ea61187f565b601860009054906101000a900460ff16611439576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114309061278f565b60405180910390fd5b6000601860006101000a81548160ff0219169083151502179055507f8d80f5be79e7dd88d69814b57e8f5c7dd249b3d6bac194eb9144b8ca639db03660405160405180910390a1565b61148a61187f565b601460009054906101000a900460ff166114d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d090612281565b60405180910390fd5b6000601460006101000a81548160ff0219169083151502179055507fc82e6055d31de9b552cd0014f23a8b8ce120c288ed1afce01adb97150efc018560405160405180910390a1565b600f5481565b600080600854600b54600954600a54611541919061266d565b61154b91906126a1565b6115559190612712565b60095461156291906123f4565b9050600081846115729190612712565b90508092505050919050565b61158661187f565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036115f85760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016115ef9190612127565b60405180910390fd5b61160181611906565b50565b60176020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154905085565b600033905090565b61164f8383836001611a4d565b505050565b6000611660848461121d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146116e257818110156116d2578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016116c9939291906129f1565b60405180910390fd5b6116e184848484036000611a4d565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361175a5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117519190612127565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117cc5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016117c39190612127565b60405180910390fd5b6117d7838383611c24565b505050565b600260065403611821576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181890612a74565b60405180910390fd5b6002600681905550565b611833610cc4565b15611873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186a90612ae0565b60405180910390fd5b565b6001600681905550565b61188761163a565b73ffffffffffffffffffffffffffffffffffffffff166118a5610df4565b73ffffffffffffffffffffffffffffffffffffffff1614611904576118c861163a565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016118fb9190612127565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000601760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905084816000016000828254611a2391906123f4565b92505081905550838160020181905550828160030181905550818160040181905550505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611abf5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611ab69190612127565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b315760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611b289190612127565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611c1e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611c159190611e62565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c76578060026000828254611c6a91906123f4565b92505081905550611d49565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611d02578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611cf9939291906129f1565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d925780600260008282540392505081905550611ddf565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e3c9190611e62565b60405180910390a3505050565b6000819050919050565b611e5c81611e49565b82525050565b6000602082019050611e776000830184611e53565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611eb7578082015181840152602081019050611e9c565b60008484015250505050565b6000601f19601f8301169050919050565b6000611edf82611e7d565b611ee98185611e88565b9350611ef9818560208601611e99565b611f0281611ec3565b840191505092915050565b60006020820190508181036000830152611f278184611ed4565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611f5f82611f34565b9050919050565b611f6f81611f54565b8114611f7a57600080fd5b50565b600081359050611f8c81611f66565b92915050565b611f9b81611e49565b8114611fa657600080fd5b50565b600081359050611fb881611f92565b92915050565b60008060408385031215611fd557611fd4611f2f565b5b6000611fe385828601611f7d565b9250506020611ff485828601611fa9565b9150509250929050565b60008115159050919050565b61201381611ffe565b82525050565b600060208201905061202e600083018461200a565b92915050565b60008060006060848603121561204d5761204c611f2f565b5b600061205b86828701611f7d565b935050602061206c86828701611f7d565b925050604061207d86828701611fa9565b9150509250925092565b600060ff82169050919050565b61209d81612087565b82525050565b60006020820190506120b86000830184612094565b92915050565b6000602082840312156120d4576120d3611f2f565b5b60006120e284828501611fa9565b91505092915050565b60006020828403121561210157612100611f2f565b5b600061210f84828501611f7d565b91505092915050565b61212181611f54565b82525050565b600060208201905061213c6000830184612118565b92915050565b6000806040838503121561215957612158611f2f565b5b600061216785828601611f7d565b925050602061217885828601611f7d565b9150509250929050565b600060a0820190506121976000830188611e53565b6121a46020830187611e53565b6121b16040830186611e53565b6121be6060830185611e53565b6121cb6080830184611e53565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061221c57607f821691505b60208210810361222f5761222e6121d5565b5b50919050565b7f5072652d53616c65206973206e6f742061637469766500000000000000000000600082015250565b600061226b601683611e88565b915061227682612235565b602082019050919050565b6000602082019050818103600083015261229a8161225e565b9050919050565b7f416d6f756e742069732062656c6f77206d696e696d756d20707572636861736560008201527f206c696d69740000000000000000000000000000000000000000000000000000602082015250565b60006122fd602683611e88565b9150612308826122a1565b604082019050919050565b6000602082019050818103600083015261232c816122f0565b9050919050565b7f416d6f756e742065786365656473206d6178696d756d2070757263686173652060008201527f6c696d6974000000000000000000000000000000000000000000000000000000602082015250565b600061238f602583611e88565b915061239a82612333565b604082019050919050565b600060208201905081810360008301526123be81612382565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123ff82611e49565b915061240a83611e49565b9250828201905080821115612422576124216123c5565b5b92915050565b7f45786365656473205072652d53616c6520746f6b656e206c696d697400000000600082015250565b600061245e601c83611e88565b915061246982612428565b602082019050919050565b6000602082019050818103600083015261248d81612451565b9050919050565b7f5072652d53616c6520697320616c726561647920616374697665000000000000600082015250565b60006124ca601a83611e88565b91506124d582612494565b602082019050919050565b600060208201905081810360008301526124f9816124bd565b9050919050565b7f4e6f20746f6b656e7320746f2077697468647261770000000000000000000000600082015250565b6000612536601583611e88565b915061254182612500565b602082019050919050565b6000602082019050818103600083015261256581612529565b9050919050565b7f507269766174652053616c6520616c7265616479206163746976650000000000600082015250565b60006125a2601b83611e88565b91506125ad8261256c565b602082019050919050565b600060208201905081810360008301526125d181612595565b9050919050565b7f496e76616c69642070657263656e746167650000000000000000000000000000600082015250565b600061260e601283611e88565b9150612619826125d8565b602082019050919050565b6000602082019050818103600083015261263d81612601565b9050919050565b60006040820190506126596000830185611e53565b6126666020830184611e53565b9392505050565b600061267882611e49565b915061268383611e49565b925082820390508181111561269b5761269a6123c5565b5b92915050565b60006126ac82611e49565b91506126b783611e49565b92508282026126c581611e49565b915082820484148315176126dc576126db6123c5565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061271d82611e49565b915061272883611e49565b925082612738576127376126e3565b5b828204905092915050565b7f507269766174652053616c65206973206e6f7420616374697665000000000000600082015250565b6000612779601a83611e88565b915061278482612743565b602082019050919050565b600060208201905081810360008301526127a88161276c565b9050919050565b7f4d696e696d756d2055534420616d6f756e74207265717569726564206973203560008201527f3020555344000000000000000000000000000000000000000000000000000000602082015250565b600061280b602583611e88565b9150612816826127af565b604082019050919050565b6000602082019050818103600083015261283a816127fe565b9050919050565b7f45786365656473206d6178696d756d20746f6b656e207075726368617365206c60008201527f696d697400000000000000000000000000000000000000000000000000000000602082015250565b600061289d602483611e88565b91506128a882612841565b604082019050919050565b600060208201905081810360008301526128cc81612890565b9050919050565b7f4e6f2045544820746f2077697468647261770000000000000000000000000000600082015250565b6000612909601283611e88565b9150612914826128d3565b602082019050919050565b60006020820190508181036000830152612938816128fc565b9050919050565b600081905092915050565b50565b600061295a60008361293f565b91506129658261294a565b600082019050919050565b600061297b8261294d565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b60006129bb600f83611e88565b91506129c682612985565b602082019050919050565b600060208201905081810360008301526129ea816129ae565b9050919050565b6000606082019050612a066000830186612118565b612a136020830185611e53565b612a206040830184611e53565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612a5e601f83611e88565b9150612a6982612a28565b602082019050919050565b60006020820190508181036000830152612a8d81612a51565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000612aca601083611e88565b9150612ad582612a94565b602082019050919050565b60006020820190508181036000830152612af981612abd565b905091905056fea26469706673582212202c575f5312aa1bd8d265f6ad810122ae121b03ce3360551c16897f42f03fffea64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x246 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x920168B3 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xCB8DCFE6 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xE6A23C3D GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xE6A23C3D EQ PUSH2 0x828 JUMPI DUP1 PUSH4 0xEE889ED0 EQ PUSH2 0x83F JUMPI DUP1 PUSH4 0xEF5B329C EQ PUSH2 0x856 JUMPI DUP1 PUSH4 0xF15A41F6 EQ PUSH2 0x881 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8BE JUMPI DUP1 PUSH4 0xFDB20CCB EQ PUSH2 0x8E7 JUMPI PUSH2 0x246 JUMP JUMPDEST DUP1 PUSH4 0xCB8DCFE6 EQ PUSH2 0x750 JUMPI DUP1 PUSH4 0xD414890A EQ PUSH2 0x78D JUMPI DUP1 PUSH4 0xD50234C4 EQ PUSH2 0x7A9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7D4 JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x811 JUMPI PUSH2 0x246 JUMP JUMPDEST DUP1 PUSH4 0xAC21694C GT PUSH2 0xFD JUMPI DUP1 PUSH4 0xAC21694C EQ PUSH2 0x679 JUMPI DUP1 PUSH4 0xB0E68630 EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xB68ED11F EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0xBDA95633 EQ PUSH2 0x6FA JUMPI DUP1 PUSH4 0xC552E04B EQ PUSH2 0x725 JUMPI PUSH2 0x246 JUMP JUMPDEST DUP1 PUSH4 0x920168B3 EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0x940DE97E EQ PUSH2 0x5BD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5E8 JUMPI DUP1 PUSH4 0xA089DE2F EQ PUSH2 0x613 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x63C JUMPI PUSH2 0x246 JUMP JUMPDEST DUP1 PUSH4 0x55DD574C GT PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x84494708 GT PUSH2 0x18B JUMPI DUP1 PUSH4 0x84494708 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x8D8F2ADB EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x8F7713FF EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x567 JUMPI PUSH2 0x246 JUMP JUMPDEST DUP1 PUSH4 0x55DD574C EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x5FB3B944 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4B8 JUMPI PUSH2 0x246 JUMP JUMPDEST DUP1 PUSH4 0x1ECF8F4D GT PUSH2 0x20E JUMPI DUP1 PUSH4 0x1ECF8F4D EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x2A237BB6 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0x466C3F93 EQ PUSH2 0x3F2 JUMPI PUSH2 0x246 JUMP JUMPDEST DUP1 PUSH4 0x6D65AF3 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xFE83BB8 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x309 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28B PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31E PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32B SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x349 PUSH2 0x9F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x2034 JUMP JUMPDEST PUSH2 0x9F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B1 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DC PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x20A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x407 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0xA44 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0xC0F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43A PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x465 PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x20EB JUMP JUMPDEST PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CD PUSH2 0xD29 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E4 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50F PUSH2 0xD50 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x526 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x551 PUSH2 0xE1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57C PUSH2 0xE24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A7 PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D2 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DF SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FD PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x1F0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x63A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x635 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0xED1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x663 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65E SWAP2 SWAP1 PUSH2 0x1FBE JUMP JUMPDEST PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x670 SWAP2 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68E PUSH2 0x1005 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6B9 PUSH2 0x100B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C6 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E4 PUSH2 0x1011 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F1 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x70F PUSH2 0x1017 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71C SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x73A PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x747 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x777 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x772 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x784 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0x1079 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7BE PUSH2 0x1217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F6 SWAP2 SWAP1 PUSH2 0x2142 JUMP JUMPDEST PUSH2 0x121D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x808 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x826 PUSH2 0x12A4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83D PUSH2 0x13E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x854 PUSH2 0x1482 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86B PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x878 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8E0 SWAP2 SWAP1 PUSH2 0x20EB JUMP JUMPDEST PUSH2 0x157E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x90E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x909 SWAP2 SWAP1 PUSH2 0x20EB JUMP JUMPDEST PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x91F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x93D SWAP1 PUSH2 0x2204 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x969 SWAP1 PUSH2 0x2204 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x98B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x999 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9CB PUSH2 0x163A JUMP JUMPDEST SWAP1 POP PUSH2 0x9D8 DUP2 DUP6 DUP6 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA04 PUSH2 0x163A JUMP JUMPDEST SWAP1 POP PUSH2 0xA11 DUP6 DUP3 DUP6 PUSH2 0x1654 JUMP JUMPDEST PUSH2 0xA1C DUP6 DUP6 DUP6 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x18 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA4C PUSH2 0x17DC JUMP JUMPDEST PUSH2 0xA54 PUSH2 0x182B JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9A SWAP1 PUSH2 0x2281 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADF SWAP1 PUSH2 0x2313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x16 SLOAD DUP2 GT ISZERO PUSH2 0xB2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP1 PUSH2 0x23A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB38 DUP3 PUSH2 0x1023 JUMP JUMPDEST SWAP1 POP PUSH1 0xE SLOAD DUP2 PUSH1 0x12 SLOAD PUSH2 0xB4B SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST GT ISZERO PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB83 SWAP1 PUSH2 0x2474 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x12 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB9E SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xE SLOAD PUSH1 0x12 SLOAD LT PUSH2 0xBF8 JUMPI PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC82E6055D31DE9B552CD0014F23A8B8CE120C288ED1AFCE01ADB97150EFC0185 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH2 0xC03 ADDRESS CALLER DUP4 PUSH2 0x16E8 JUMP JUMPDEST POP PUSH2 0xC0C PUSH2 0x1875 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC17 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5E SWAP1 PUSH2 0x24E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x14 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x13 DUP2 SWAP1 SSTORE POP PUSH32 0x71D9B86CD8E742CC8D4D6B9D25C84D4E42F8BA8138C6EE54914285F4A9540056 PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD PUSH2 0xCBA SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD31 PUSH2 0x187F JUMP JUMPDEST PUSH2 0xD3B PUSH1 0x0 PUSH2 0x1906 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xD58 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD63 ADDRESS PUSH2 0xCE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xDA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD9F SWAP1 PUSH2 0x254C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDBA ADDRESS PUSH2 0xDB4 PUSH2 0xDF4 JUMP JUMPDEST DUP4 PUSH2 0x16E8 JUMP JUMPDEST PUSH32 0x9C6393F251205F9E03559951CAB4C9AE71767B6174F77944A5B0C2FA51FBDA9F DUP2 PUSH1 0x40 MLOAD PUSH2 0xDE9 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH11 0xA56FA5B99019A5C8000000 DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xE4E SWAP1 PUSH2 0x2204 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE7A SWAP1 PUSH2 0x2204 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEC7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE9C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEC7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEAA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xED9 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x18 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF20 SWAP1 PUSH2 0x25B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0xF3A JUMPI POP PUSH1 0x64 DUP2 GT ISZERO JUMPDEST PUSH2 0xF79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF70 SWAP1 PUSH2 0x2624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x18 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH32 0xCBE7B2993D671FF089495AE9D90AE7A115F123DB134C0A6D3C4BC6E0C72CF7E5 PUSH1 0xD SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH2 0xFD7 SWAP3 SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFED PUSH2 0x163A JUMP JUMPDEST SWAP1 POP PUSH2 0xFFA DUP2 DUP6 DUP6 PUSH2 0x16E8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE SLOAD PUSH1 0x12 SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH2 0x103C SWAP2 SWAP1 PUSH2 0x266D JUMP JUMPDEST PUSH2 0x1046 SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH2 0x1050 SWAP2 SWAP1 PUSH2 0x2712 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0x105D SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH2 0x106D SWAP2 SWAP1 PUSH2 0x2712 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1081 PUSH2 0x17DC JUMP JUMPDEST PUSH2 0x1089 PUSH2 0x182B JUMP JUMPDEST PUSH1 0x18 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10CF SWAP1 PUSH2 0x278F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH9 0x2B5E3AF16B1880000 DUP2 LT ISZERO PUSH2 0x1124 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111B SWAP1 PUSH2 0x2821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x112F DUP3 PUSH2 0x1528 JUMP JUMPDEST SWAP1 POP PUSH9 0x3635C9ADC5DEA00000 DUP2 GT ISZERO PUSH2 0x117D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1174 SWAP1 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x118F SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0xB SLOAD LT PUSH2 0x11E9 JUMPI PUSH1 0x0 PUSH1 0x18 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x8D80F5BE79E7DD88D69814B57E8F5C7DD249B3D6BAC194EB9144B8CA639DB036 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH2 0x120B CALLER DUP3 PUSH4 0x1E13380 TIMESTAMP PUSH2 0x11FE SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST PUSH3 0xED4E00 PUSH3 0x278D00 PUSH2 0x19CC JUMP JUMPDEST POP PUSH2 0x1214 PUSH2 0x1875 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12AC PUSH2 0x187F JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x12F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EB SWAP1 PUSH2 0x291F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12FE PUSH2 0xDF4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1321 SWAP1 PUSH2 0x2970 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x135E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x13A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139E SWAP1 PUSH2 0x29D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x43F607A14D3B4F0A11A0B2E192BBFCD894298BA5ABF22553BE6081406DB28AA DUP3 PUSH1 0x40 MLOAD PUSH2 0x13D6 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x13EA PUSH2 0x187F JUMP JUMPDEST PUSH1 0x18 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1439 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1430 SWAP1 PUSH2 0x278F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x18 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x8D80F5BE79E7DD88D69814B57E8F5C7DD249B3D6BAC194EB9144B8CA639DB036 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x148A PUSH2 0x187F JUMP JUMPDEST PUSH1 0x14 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x14D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D0 SWAP1 PUSH2 0x2281 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC82E6055D31DE9B552CD0014F23A8B8CE120C288ED1AFCE01ADB97150EFC0185 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 SLOAD PUSH1 0xB SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x1541 SWAP2 SWAP1 PUSH2 0x266D JUMP JUMPDEST PUSH2 0x154B SWAP2 SWAP1 PUSH2 0x26A1 JUMP JUMPDEST PUSH2 0x1555 SWAP2 SWAP1 PUSH2 0x2712 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1562 SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP5 PUSH2 0x1572 SWAP2 SWAP1 PUSH2 0x2712 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1586 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15F8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15EF SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1601 DUP2 PUSH2 0x1906 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x164F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1A4D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1660 DUP5 DUP5 PUSH2 0x121D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x16E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x16D2 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16E1 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1A4D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x175A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1751 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17CC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C3 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17D7 DUP4 DUP4 DUP4 PUSH2 0x1C24 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1821 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1818 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1833 PUSH2 0xCC4 JUMP JUMPDEST ISZERO PUSH2 0x1873 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x186A SWAP1 PUSH2 0x2AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1887 PUSH2 0x163A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18A5 PUSH2 0xDF4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1904 JUMPI PUSH2 0x18C8 PUSH2 0x163A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18FB SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x17 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A23 SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ABF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB6 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B31 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B28 SWAP2 SWAP1 PUSH2 0x2127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1C1E JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C15 SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C76 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C6A SWAP2 SWAP1 PUSH2 0x23F4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D49 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1D02 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D92 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1DDF JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E3C SWAP2 SWAP1 PUSH2 0x1E62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E5C DUP2 PUSH2 0x1E49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E77 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EB7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E9C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EDF DUP3 PUSH2 0x1E7D JUMP JUMPDEST PUSH2 0x1EE9 DUP2 DUP6 PUSH2 0x1E88 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EF9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0x1F02 DUP2 PUSH2 0x1EC3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F27 DUP2 DUP5 PUSH2 0x1ED4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F5F DUP3 PUSH2 0x1F34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F6F DUP2 PUSH2 0x1F54 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F8C DUP2 PUSH2 0x1F66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F9B DUP2 PUSH2 0x1E49 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FB8 DUP2 PUSH2 0x1F92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FD5 JUMPI PUSH2 0x1FD4 PUSH2 0x1F2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FE3 DUP6 DUP3 DUP7 ADD PUSH2 0x1F7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FF4 DUP6 DUP3 DUP7 ADD PUSH2 0x1FA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2013 DUP2 PUSH2 0x1FFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x202E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x200A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x204D JUMPI PUSH2 0x204C PUSH2 0x1F2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x205B DUP7 DUP3 DUP8 ADD PUSH2 0x1F7D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x206C DUP7 DUP3 DUP8 ADD PUSH2 0x1F7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x207D DUP7 DUP3 DUP8 ADD PUSH2 0x1FA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x209D DUP2 PUSH2 0x2087 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20B8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2094 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D4 JUMPI PUSH2 0x20D3 PUSH2 0x1F2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20E2 DUP5 DUP3 DUP6 ADD PUSH2 0x1FA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2101 JUMPI PUSH2 0x2100 PUSH2 0x1F2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x210F DUP5 DUP3 DUP6 ADD PUSH2 0x1F7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2121 DUP2 PUSH2 0x1F54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x213C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2118 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2159 JUMPI PUSH2 0x2158 PUSH2 0x1F2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2167 DUP6 DUP3 DUP7 ADD PUSH2 0x1F7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2178 DUP6 DUP3 DUP7 ADD PUSH2 0x1F7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2197 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x21A4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x21B1 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x21BE PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x21CB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1E53 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x221C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x222F JUMPI PUSH2 0x222E PUSH2 0x21D5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072652D53616C65206973206E6F742061637469766500000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x226B PUSH1 0x16 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2276 DUP3 PUSH2 0x2235 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x229A DUP2 PUSH2 0x225E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742069732062656C6F77206D696E696D756D207075726368617365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206C696D69740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22FD PUSH1 0x26 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2308 DUP3 PUSH2 0x22A1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x232C DUP2 PUSH2 0x22F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742065786365656473206D6178696D756D20707572636861736520 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C696D6974000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x238F PUSH1 0x25 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x239A DUP3 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23BE DUP2 PUSH2 0x2382 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23FF DUP3 PUSH2 0x1E49 JUMP JUMPDEST SWAP2 POP PUSH2 0x240A DUP4 PUSH2 0x1E49 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2422 JUMPI PUSH2 0x2421 PUSH2 0x23C5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473205072652D53616C6520746F6B656E206C696D697400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245E PUSH1 0x1C DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2469 DUP3 PUSH2 0x2428 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x248D DUP2 PUSH2 0x2451 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072652D53616C6520697320616C726561647920616374697665000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24CA PUSH1 0x1A DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x24D5 DUP3 PUSH2 0x2494 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24F9 DUP2 PUSH2 0x24BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2536 PUSH1 0x15 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2541 DUP3 PUSH2 0x2500 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2565 DUP2 PUSH2 0x2529 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520616C7265616479206163746976650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A2 PUSH1 0x1B DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x25AD DUP3 PUSH2 0x256C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25D1 DUP2 PUSH2 0x2595 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642070657263656E746167650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260E PUSH1 0x12 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2619 DUP3 PUSH2 0x25D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x263D DUP2 PUSH2 0x2601 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2659 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x2666 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E53 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2678 DUP3 PUSH2 0x1E49 JUMP JUMPDEST SWAP2 POP PUSH2 0x2683 DUP4 PUSH2 0x1E49 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x269B JUMPI PUSH2 0x269A PUSH2 0x23C5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AC DUP3 PUSH2 0x1E49 JUMP JUMPDEST SWAP2 POP PUSH2 0x26B7 DUP4 PUSH2 0x1E49 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x26C5 DUP2 PUSH2 0x1E49 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x26DC JUMPI PUSH2 0x26DB PUSH2 0x23C5 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x271D DUP3 PUSH2 0x1E49 JUMP JUMPDEST SWAP2 POP PUSH2 0x2728 DUP4 PUSH2 0x1E49 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2738 JUMPI PUSH2 0x2737 PUSH2 0x26E3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x507269766174652053616C65206973206E6F7420616374697665000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2779 PUSH1 0x1A DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2784 DUP3 PUSH2 0x2743 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27A8 DUP2 PUSH2 0x276C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D696E696D756D2055534420616D6F756E742072657175697265642069732035 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x3020555344000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280B PUSH1 0x25 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2816 DUP3 PUSH2 0x27AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x283A DUP2 PUSH2 0x27FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D20746F6B656E207075726368617365206C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696D697400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289D PUSH1 0x24 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x28A8 DUP3 PUSH2 0x2841 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28CC DUP2 PUSH2 0x2890 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2045544820746F2077697468647261770000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2909 PUSH1 0x12 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2914 DUP3 PUSH2 0x28D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2938 DUP2 PUSH2 0x28FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x295A PUSH1 0x0 DUP4 PUSH2 0x293F JUMP JUMPDEST SWAP2 POP PUSH2 0x2965 DUP3 PUSH2 0x294A JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297B DUP3 PUSH2 0x294D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29BB PUSH1 0xF DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x29C6 DUP3 PUSH2 0x2985 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29EA DUP2 PUSH2 0x29AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A06 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2118 JUMP JUMPDEST PUSH2 0x2A13 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x2A20 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E53 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A5E PUSH1 0x1F DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A69 DUP3 PUSH2 0x2A28 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A8D DUP2 PUSH2 0x2A51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ACA PUSH1 0x10 DUP4 PUSH2 0x1E88 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AD5 DUP3 PUSH2 0x2A94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AF9 DUP2 PUSH2 0x2ABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C JUMPI PUSH0 MSTORE8 SLT 0xAA SHL 0xD8 0xD2 PUSH6 0xF6AD810122AE SLT SHL SUB 0xCE CALLER PUSH1 0x55 SHR AND DUP10 PUSH32 0x42F03FFFEA64736F6C634300081A003300000000000000000000000000000000 ",
							"sourceMap": "286:8014:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1450:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1023:53:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1623:56:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2145:37:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4931:746:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4600:234;;;;;;;;;;;;;:::i;:::-;;1615:84:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;734:40:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1520:33:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7681:250;;;;;;;;;;;;;:::i;:::-;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1328:47:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;385:61;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1237:52;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;780:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3116:619:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3610:178:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1727:57:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;550:55;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1408:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;645:54;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;488:56;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5905:312;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3836:706;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;892:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8006:292:8;;;;;;;;;;;;;:::i;:::-;;7190:186;;;;;;;;;;;;;:::i;:::-;;7436:166;;;;;;;;;;;;;:::i;:::-;;1131:57;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6311:336;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2042:59:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;1450:31;;;;:::o;2074:89:4:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;1023:53:8:-;;;;:::o;3144:97:4:-;3196:7;3222:12;;3215:19;;3144:97;:::o;1623:56:8:-;;;;:::o;5039:244:4:-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;2145:37:8:-;;;;;;;;;;;;;:::o;3002:82:4:-;3051:5;3075:2;3068:9;;3002:82;:::o;4931:746:8:-;2261:21:3;:19;:21::i;:::-;1239:19:2::1;:17;:19::i;:::-;5038:13:8::2;;;;;;;;;;;5030:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;5109:24;;5096:9;:37;;5088:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;5207:24;;5194:9;:37;;5186:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;5284:19;5306:33;5329:9;5306:22;:33::i;:::-;5284:55;;5392:13;;5377:11;5357:17;;:31;;;;:::i;:::-;:48;;5349:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;5470:11;5449:17;;:32;;;;;;;:::i;:::-;;;;;;;;5517:13;;5496:17;;:34;5492:119;;5562:5;5546:13;;:21;;;;;;;;;;;;;;;;;;5586:14;;;;;;;;;;5492:119;5621:49;5639:4;5646:10;5658:11;5621:9;:49::i;:::-;5020:657;2303:20:3::0;:18;:20::i;:::-;4931:746:8;:::o;4600:234::-;1531:13:0;:11;:13::i;:::-;4662::8::1;;;;;;;;;;;4661:14;4653:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4732:4;4716:13;;:20;;;;;;;;;;;;;;;;;;4765:15;4746:16;:34;;;;4795:32;4810:16;;4795:32;;;;;;:::i;:::-;;;;;;;;4600:234::o:0;1615:84:2:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;734:40:8:-;;;;:::o;3299:116:4:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1520:33:8:-;;;;;;;;;;;;;:::o;7681:250::-;1531:13:0;:11;:13::i;:::-;7736:15:8::1;7754:24;7772:4;7754:9;:24::i;:::-;7736:42;;7806:1;7796:7;:11;7788:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;7843:42;7861:4;7868:7;:5;:7::i;:::-;7877;7843:9;:42::i;:::-;7900:24;7916:7;7900:24;;;;;;:::i;:::-;;;;;;;;7726:205;7681:250::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1328:47:8:-;;;;:::o;385:61::-;424:22;385:61;:::o;1237:52::-;;;;:::o;780:35::-;;;;:::o;2276:93:4:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3116:619:8:-;1531:13:0;:11;:13::i;:::-;3216:17:8::1;;;;;;;;;;;3215:18;3207:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3312:1;3283:26;:30;:67;;;;;3347:3;3317:26;:33;;3283:67;3275:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;3412:26;3384:25;:54;;;;3499:4;3479:17;;:24;;;;;;;;;;;;;;;;;;3558:15;3535:20;:38;;;;3623:67;3642:25;;3669:20;;3623:67;;;;;;;:::i;:::-;;;;;;;;3116:619:::0;:::o;3610:178:4:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1727:57:8:-;;;;:::o;550:55::-;;;;:::o;1408:36::-;;;;:::o;645:54::-;;;;:::o;488:56::-;;;;:::o;5905:312::-;5977:7;5996:20;6113:13;;6093:17;;6072;;6054:15;;:35;;;;:::i;:::-;6053:57;;;;:::i;:::-;:73;;;;:::i;:::-;6019:17;;:117;;;;:::i;:::-;5996:140;;6146:14;6175:12;6163:9;:24;;;;:::i;:::-;6146:41;;6204:6;6197:13;;;;5905:312;;;:::o;3836:706::-;2261:21:3;:19;:21::i;:::-;1239:19:2::1;:17;:19::i;:::-;3947:17:8::2;;;;;;;;;;;3939:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;4026:13;4013:9;:26;;4005:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;4091:19;4113:37;4140:9;4113:26;:37::i;:::-;4091:59;;4183:15;4168:11;:30;;4160:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;4275:11;4250:21;;:36;;;;;;;:::i;:::-;;;;;;;;4326:17;;4301:21;;:42;4297:135;;4379:5;4359:17;;:25;;;;;;;;;;;;;;;;;;4403:18;;;;;;;;;;4297:135;4442:93;4464:10;4476:11;4507:8;4489:15;:26;;;;:::i;:::-;4517:8;4527:7;4442:21;:93::i;:::-;3929:613;2303:20:3::0;:18;:20::i;:::-;3836:706:8;:::o;892:40::-;;;;:::o;3846:140:4:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;8006:292:8:-;1531:13:0;:11;:13::i;:::-;8058:15:8::1;8076:21;8058:39;;8125:1;8115:7;:11;8107:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;8160:12;8178:7;:5;:7::i;:::-;:12;;8198:7;8178:32;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8159:51;;;8228:7;8220:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;8270:21;8283:7;8270:21;;;;;;:::i;:::-;;;;;;;;8048:250;;8006:292::o:0;7190:186::-;1531:13:0;:11;:13::i;:::-;7253:17:8::1;;;;;;;;;;;7245:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;7331:5;7311:17;;:25;;;;;;;;;;;;;;;;;;7351:18;;;;;;;;;;7190:186::o:0;7436:166::-;1531:13:0;:11;:13::i;:::-;7495::8::1;;;;;;;;;;;7487:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;7561:5;7545:13;;:21;;;;;;;;;;;;;;;;;;7581:14;;;;;;;;;;7436:166::o:0;1131:57::-;;;;:::o;6311:336::-;6387:7;6406:20;6539:17;;6515:21;;6490;;6468:19;;:43;;;;:::i;:::-;6467:69;;;;:::i;:::-;:89;;;;:::i;:::-;6429:21;;:137;;;;:::i;:::-;6406:160;;6576:14;6605:12;6593:9;:24;;;;:::i;:::-;6576:41;;6634:6;6627:13;;;;6311:336;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2042:59:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8989:128:4:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;2336:287:3:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1767:106:2:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;2629:209:3:-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;6711:415:8:-;6899:32;6934:16;:29;6951:11;6934:29;;;;;;;;;;;;;;;6899:64;;6997:6;6973:8;:20;;;:30;;;;;;;:::i;:::-;;;;;;;;7034:9;7013:8;:18;;:30;;;;7073:8;7053;:17;;:28;;;;7111:8;7091;:17;;:28;;;;6889:237;6711:415;;;;;:::o;9949:432:4:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:77:9:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:248::-;804:1;814:113;828:6;825:1;822:13;814:113;;;913:1;908:3;904:11;898:18;894:1;889:3;885:11;878:39;850:2;847:1;843:10;838:15;;814:113;;;961:1;952:6;947:3;943:16;936:27;784:186;722:248;;;:::o;976:102::-;1017:6;1068:2;1064:7;1059:2;1052:5;1048:14;1044:28;1034:38;;976:102;;;:::o;1084:377::-;1172:3;1200:39;1233:5;1200:39;:::i;:::-;1255:71;1319:6;1314:3;1255:71;:::i;:::-;1248:78;;1335:65;1393:6;1388:3;1381:4;1374:5;1370:16;1335:65;:::i;:::-;1425:29;1447:6;1425:29;:::i;:::-;1420:3;1416:39;1409:46;;1176:285;1084:377;;;;:::o;1467:313::-;1580:4;1618:2;1607:9;1603:18;1595:26;;1667:9;1661:4;1657:20;1653:1;1642:9;1638:17;1631:47;1695:78;1768:4;1759:6;1695:78;:::i;:::-;1687:86;;1467:313;;;;:::o;1867:117::-;1976:1;1973;1966:12;2113:126;2150:7;2190:42;2183:5;2179:54;2168:65;;2113:126;;;:::o;2245:96::-;2282:7;2311:24;2329:5;2311:24;:::i;:::-;2300:35;;2245:96;;;:::o;2347:122::-;2420:24;2438:5;2420:24;:::i;:::-;2413:5;2410:35;2400:63;;2459:1;2456;2449:12;2400:63;2347:122;:::o;2475:139::-;2521:5;2559:6;2546:20;2537:29;;2575:33;2602:5;2575:33;:::i;:::-;2475:139;;;;:::o;2620:122::-;2693:24;2711:5;2693:24;:::i;:::-;2686:5;2683:35;2673:63;;2732:1;2729;2722:12;2673:63;2620:122;:::o;2748:139::-;2794:5;2832:6;2819:20;2810:29;;2848:33;2875:5;2848:33;:::i;:::-;2748:139;;;;:::o;2893:474::-;2961:6;2969;3018:2;3006:9;2997:7;2993:23;2989:32;2986:119;;;3024:79;;:::i;:::-;2986:119;3144:1;3169:53;3214:7;3205:6;3194:9;3190:22;3169:53;:::i;:::-;3159:63;;3115:117;3271:2;3297:53;3342:7;3333:6;3322:9;3318:22;3297:53;:::i;:::-;3287:63;;3242:118;2893:474;;;;;:::o;3373:90::-;3407:7;3450:5;3443:13;3436:21;3425:32;;3373:90;;;:::o;3469:109::-;3550:21;3565:5;3550:21;:::i;:::-;3545:3;3538:34;3469:109;;:::o;3584:210::-;3671:4;3709:2;3698:9;3694:18;3686:26;;3722:65;3784:1;3773:9;3769:17;3760:6;3722:65;:::i;:::-;3584:210;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:329::-;4914:6;4963:2;4951:9;4942:7;4938:23;4934:32;4931:119;;;4969:79;;:::i;:::-;4931:119;5089:1;5114:53;5159:7;5150:6;5139:9;5135:22;5114:53;:::i;:::-;5104:63;;5060:117;4855:329;;;;:::o;5190:::-;5249:6;5298:2;5286:9;5277:7;5273:23;5269:32;5266:119;;;5304:79;;:::i;:::-;5266:119;5424:1;5449:53;5494:7;5485:6;5474:9;5470:22;5449:53;:::i;:::-;5439:63;;5395:117;5190:329;;;;:::o;5525:118::-;5612:24;5630:5;5612:24;:::i;:::-;5607:3;5600:37;5525:118;;:::o;5649:222::-;5742:4;5780:2;5769:9;5765:18;5757:26;;5793:71;5861:1;5850:9;5846:17;5837:6;5793:71;:::i;:::-;5649:222;;;;:::o;5877:474::-;5945:6;5953;6002:2;5990:9;5981:7;5977:23;5973:32;5970:119;;;6008:79;;:::i;:::-;5970:119;6128:1;6153:53;6198:7;6189:6;6178:9;6174:22;6153:53;:::i;:::-;6143:63;;6099:117;6255:2;6281:53;6326:7;6317:6;6306:9;6302:22;6281:53;:::i;:::-;6271:63;;6226:118;5877:474;;;;;:::o;6357:664::-;6562:4;6600:3;6589:9;6585:19;6577:27;;6614:71;6682:1;6671:9;6667:17;6658:6;6614:71;:::i;:::-;6695:72;6763:2;6752:9;6748:18;6739:6;6695:72;:::i;:::-;6777;6845:2;6834:9;6830:18;6821:6;6777:72;:::i;:::-;6859;6927:2;6916:9;6912:18;6903:6;6859:72;:::i;:::-;6941:73;7009:3;6998:9;6994:19;6985:6;6941:73;:::i;:::-;6357:664;;;;;;;;:::o;7027:180::-;7075:77;7072:1;7065:88;7172:4;7169:1;7162:15;7196:4;7193:1;7186:15;7213:320;7257:6;7294:1;7288:4;7284:12;7274:22;;7341:1;7335:4;7331:12;7362:18;7352:81;;7418:4;7410:6;7406:17;7396:27;;7352:81;7480:2;7472:6;7469:14;7449:18;7446:38;7443:84;;7499:18;;:::i;:::-;7443:84;7264:269;7213:320;;;:::o;7539:172::-;7679:24;7675:1;7667:6;7663:14;7656:48;7539:172;:::o;7717:366::-;7859:3;7880:67;7944:2;7939:3;7880:67;:::i;:::-;7873:74;;7956:93;8045:3;7956:93;:::i;:::-;8074:2;8069:3;8065:12;8058:19;;7717:366;;;:::o;8089:419::-;8255:4;8293:2;8282:9;8278:18;8270:26;;8342:9;8336:4;8332:20;8328:1;8317:9;8313:17;8306:47;8370:131;8496:4;8370:131;:::i;:::-;8362:139;;8089:419;;;:::o;8514:225::-;8654:34;8650:1;8642:6;8638:14;8631:58;8723:8;8718:2;8710:6;8706:15;8699:33;8514:225;:::o;8745:366::-;8887:3;8908:67;8972:2;8967:3;8908:67;:::i;:::-;8901:74;;8984:93;9073:3;8984:93;:::i;:::-;9102:2;9097:3;9093:12;9086:19;;8745:366;;;:::o;9117:419::-;9283:4;9321:2;9310:9;9306:18;9298:26;;9370:9;9364:4;9360:20;9356:1;9345:9;9341:17;9334:47;9398:131;9524:4;9398:131;:::i;:::-;9390:139;;9117:419;;;:::o;9542:224::-;9682:34;9678:1;9670:6;9666:14;9659:58;9751:7;9746:2;9738:6;9734:15;9727:32;9542:224;:::o;9772:366::-;9914:3;9935:67;9999:2;9994:3;9935:67;:::i;:::-;9928:74;;10011:93;10100:3;10011:93;:::i;:::-;10129:2;10124:3;10120:12;10113:19;;9772:366;;;:::o;10144:419::-;10310:4;10348:2;10337:9;10333:18;10325:26;;10397:9;10391:4;10387:20;10383:1;10372:9;10368:17;10361:47;10425:131;10551:4;10425:131;:::i;:::-;10417:139;;10144:419;;;:::o;10569:180::-;10617:77;10614:1;10607:88;10714:4;10711:1;10704:15;10738:4;10735:1;10728:15;10755:191;10795:3;10814:20;10832:1;10814:20;:::i;:::-;10809:25;;10848:20;10866:1;10848:20;:::i;:::-;10843:25;;10891:1;10888;10884:9;10877:16;;10912:3;10909:1;10906:10;10903:36;;;10919:18;;:::i;:::-;10903:36;10755:191;;;;:::o;10952:178::-;11092:30;11088:1;11080:6;11076:14;11069:54;10952:178;:::o;11136:366::-;11278:3;11299:67;11363:2;11358:3;11299:67;:::i;:::-;11292:74;;11375:93;11464:3;11375:93;:::i;:::-;11493:2;11488:3;11484:12;11477:19;;11136:366;;;:::o;11508:419::-;11674:4;11712:2;11701:9;11697:18;11689:26;;11761:9;11755:4;11751:20;11747:1;11736:9;11732:17;11725:47;11789:131;11915:4;11789:131;:::i;:::-;11781:139;;11508:419;;;:::o;11933:176::-;12073:28;12069:1;12061:6;12057:14;12050:52;11933:176;:::o;12115:366::-;12257:3;12278:67;12342:2;12337:3;12278:67;:::i;:::-;12271:74;;12354:93;12443:3;12354:93;:::i;:::-;12472:2;12467:3;12463:12;12456:19;;12115:366;;;:::o;12487:419::-;12653:4;12691:2;12680:9;12676:18;12668:26;;12740:9;12734:4;12730:20;12726:1;12715:9;12711:17;12704:47;12768:131;12894:4;12768:131;:::i;:::-;12760:139;;12487:419;;;:::o;12912:171::-;13052:23;13048:1;13040:6;13036:14;13029:47;12912:171;:::o;13089:366::-;13231:3;13252:67;13316:2;13311:3;13252:67;:::i;:::-;13245:74;;13328:93;13417:3;13328:93;:::i;:::-;13446:2;13441:3;13437:12;13430:19;;13089:366;;;:::o;13461:419::-;13627:4;13665:2;13654:9;13650:18;13642:26;;13714:9;13708:4;13704:20;13700:1;13689:9;13685:17;13678:47;13742:131;13868:4;13742:131;:::i;:::-;13734:139;;13461:419;;;:::o;13886:177::-;14026:29;14022:1;14014:6;14010:14;14003:53;13886:177;:::o;14069:366::-;14211:3;14232:67;14296:2;14291:3;14232:67;:::i;:::-;14225:74;;14308:93;14397:3;14308:93;:::i;:::-;14426:2;14421:3;14417:12;14410:19;;14069:366;;;:::o;14441:419::-;14607:4;14645:2;14634:9;14630:18;14622:26;;14694:9;14688:4;14684:20;14680:1;14669:9;14665:17;14658:47;14722:131;14848:4;14722:131;:::i;:::-;14714:139;;14441:419;;;:::o;14866:168::-;15006:20;15002:1;14994:6;14990:14;14983:44;14866:168;:::o;15040:366::-;15182:3;15203:67;15267:2;15262:3;15203:67;:::i;:::-;15196:74;;15279:93;15368:3;15279:93;:::i;:::-;15397:2;15392:3;15388:12;15381:19;;15040:366;;;:::o;15412:419::-;15578:4;15616:2;15605:9;15601:18;15593:26;;15665:9;15659:4;15655:20;15651:1;15640:9;15636:17;15629:47;15693:131;15819:4;15693:131;:::i;:::-;15685:139;;15412:419;;;:::o;15837:332::-;15958:4;15996:2;15985:9;15981:18;15973:26;;16009:71;16077:1;16066:9;16062:17;16053:6;16009:71;:::i;:::-;16090:72;16158:2;16147:9;16143:18;16134:6;16090:72;:::i;:::-;15837:332;;;;;:::o;16175:194::-;16215:4;16235:20;16253:1;16235:20;:::i;:::-;16230:25;;16269:20;16287:1;16269:20;:::i;:::-;16264:25;;16313:1;16310;16306:9;16298:17;;16337:1;16331:4;16328:11;16325:37;;;16342:18;;:::i;:::-;16325:37;16175:194;;;;:::o;16375:410::-;16415:7;16438:20;16456:1;16438:20;:::i;:::-;16433:25;;16472:20;16490:1;16472:20;:::i;:::-;16467:25;;16527:1;16524;16520:9;16549:30;16567:11;16549:30;:::i;:::-;16538:41;;16728:1;16719:7;16715:15;16712:1;16709:22;16689:1;16682:9;16662:83;16639:139;;16758:18;;:::i;:::-;16639:139;16423:362;16375:410;;;;:::o;16791:180::-;16839:77;16836:1;16829:88;16936:4;16933:1;16926:15;16960:4;16957:1;16950:15;16977:185;17017:1;17034:20;17052:1;17034:20;:::i;:::-;17029:25;;17068:20;17086:1;17068:20;:::i;:::-;17063:25;;17107:1;17097:35;;17112:18;;:::i;:::-;17097:35;17154:1;17151;17147:9;17142:14;;16977:185;;;;:::o;17168:176::-;17308:28;17304:1;17296:6;17292:14;17285:52;17168:176;:::o;17350:366::-;17492:3;17513:67;17577:2;17572:3;17513:67;:::i;:::-;17506:74;;17589:93;17678:3;17589:93;:::i;:::-;17707:2;17702:3;17698:12;17691:19;;17350:366;;;:::o;17722:419::-;17888:4;17926:2;17915:9;17911:18;17903:26;;17975:9;17969:4;17965:20;17961:1;17950:9;17946:17;17939:47;18003:131;18129:4;18003:131;:::i;:::-;17995:139;;17722:419;;;:::o;18147:224::-;18287:34;18283:1;18275:6;18271:14;18264:58;18356:7;18351:2;18343:6;18339:15;18332:32;18147:224;:::o;18377:366::-;18519:3;18540:67;18604:2;18599:3;18540:67;:::i;:::-;18533:74;;18616:93;18705:3;18616:93;:::i;:::-;18734:2;18729:3;18725:12;18718:19;;18377:366;;;:::o;18749:419::-;18915:4;18953:2;18942:9;18938:18;18930:26;;19002:9;18996:4;18992:20;18988:1;18977:9;18973:17;18966:47;19030:131;19156:4;19030:131;:::i;:::-;19022:139;;18749:419;;;:::o;19174:223::-;19314:34;19310:1;19302:6;19298:14;19291:58;19383:6;19378:2;19370:6;19366:15;19359:31;19174:223;:::o;19403:366::-;19545:3;19566:67;19630:2;19625:3;19566:67;:::i;:::-;19559:74;;19642:93;19731:3;19642:93;:::i;:::-;19760:2;19755:3;19751:12;19744:19;;19403:366;;;:::o;19775:419::-;19941:4;19979:2;19968:9;19964:18;19956:26;;20028:9;20022:4;20018:20;20014:1;20003:9;19999:17;19992:47;20056:131;20182:4;20056:131;:::i;:::-;20048:139;;19775:419;;;:::o;20200:168::-;20340:20;20336:1;20328:6;20324:14;20317:44;20200:168;:::o;20374:366::-;20516:3;20537:67;20601:2;20596:3;20537:67;:::i;:::-;20530:74;;20613:93;20702:3;20613:93;:::i;:::-;20731:2;20726:3;20722:12;20715:19;;20374:366;;;:::o;20746:419::-;20912:4;20950:2;20939:9;20935:18;20927:26;;20999:9;20993:4;20989:20;20985:1;20974:9;20970:17;20963:47;21027:131;21153:4;21027:131;:::i;:::-;21019:139;;20746:419;;;:::o;21171:147::-;21272:11;21309:3;21294:18;;21171:147;;;;:::o;21324:114::-;;:::o;21444:398::-;21603:3;21624:83;21705:1;21700:3;21624:83;:::i;:::-;21617:90;;21716:93;21805:3;21716:93;:::i;:::-;21834:1;21829:3;21825:11;21818:18;;21444:398;;;:::o;21848:379::-;22032:3;22054:147;22197:3;22054:147;:::i;:::-;22047:154;;22218:3;22211:10;;21848:379;;;:::o;22233:165::-;22373:17;22369:1;22361:6;22357:14;22350:41;22233:165;:::o;22404:366::-;22546:3;22567:67;22631:2;22626:3;22567:67;:::i;:::-;22560:74;;22643:93;22732:3;22643:93;:::i;:::-;22761:2;22756:3;22752:12;22745:19;;22404:366;;;:::o;22776:419::-;22942:4;22980:2;22969:9;22965:18;22957:26;;23029:9;23023:4;23019:20;23015:1;23004:9;23000:17;22993:47;23057:131;23183:4;23057:131;:::i;:::-;23049:139;;22776:419;;;:::o;23201:442::-;23350:4;23388:2;23377:9;23373:18;23365:26;;23401:71;23469:1;23458:9;23454:17;23445:6;23401:71;:::i;:::-;23482:72;23550:2;23539:9;23535:18;23526:6;23482:72;:::i;:::-;23564;23632:2;23621:9;23617:18;23608:6;23564:72;:::i;:::-;23201:442;;;;;;:::o;23649:181::-;23789:33;23785:1;23777:6;23773:14;23766:57;23649:181;:::o;23836:366::-;23978:3;23999:67;24063:2;24058:3;23999:67;:::i;:::-;23992:74;;24075:93;24164:3;24075:93;:::i;:::-;24193:2;24188:3;24184:12;24177:19;;23836:366;;;:::o;24208:419::-;24374:4;24412:2;24401:9;24397:18;24389:26;;24461:9;24455:4;24451:20;24447:1;24436:9;24432:17;24425:47;24489:131;24615:4;24489:131;:::i;:::-;24481:139;;24208:419;;;:::o;24633:166::-;24773:18;24769:1;24761:6;24757:14;24750:42;24633:166;:::o;24805:366::-;24947:3;24968:67;25032:2;25027:3;24968:67;:::i;:::-;24961:74;;25044:93;25133:3;25044:93;:::i;:::-;25162:2;25157:3;25153:12;25146:19;;24805:366;;;:::o;25177:419::-;25343:4;25381:2;25370:9;25366:18;25358:26;;25430:9;25424:4;25420:20;25416:1;25405:9;25401:17;25394:47;25458:131;25584:4;25458:131;:::i;:::-;25450:139;;25177:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2212400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TOTAL_SUPPLY()": "462",
								"affiliateRewardPercentage()": "1218",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1653",
								"buyTokensPreSale(uint256)": "infinite",
								"buyTokensPrivateSale(uint256)": "infinite",
								"calculateTokensPreSale(uint256)": "infinite",
								"calculateTokensPrivateSale(uint256)": "infinite",
								"decimals()": "455",
								"endPreSale()": "infinite",
								"endPrivateSale()": "infinite",
								"maxPurchaseAmountPreSale()": "1174",
								"minPurchaseAmountPreSale()": "1175",
								"name()": "infinite",
								"owner()": "1311",
								"paused()": "1247",
								"preSaleActive()": "1216",
								"preSaleEndPrice()": "1240",
								"preSaleSoldTokens()": "1218",
								"preSaleStartPrice()": "1175",
								"preSaleStartTime()": "1176",
								"preSaleTargetFunds()": "1217",
								"preSaleTokens()": "1242",
								"privateSaleActive()": "1261",
								"privateSaleEndPrice()": "1240",
								"privateSaleSoldTokens()": "1219",
								"privateSaleStartPrice()": "1196",
								"privateSaleStartTime()": "1197",
								"privateSaleTokens()": "1262",
								"renounceOwnership()": "infinite",
								"startPreSale()": "infinite",
								"startPrivateSale(uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1272",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"vestingSchedules(address)": "infinite",
								"withdrawETH()": "infinite",
								"withdrawTokens()": "infinite"
							},
							"internal": {
								"createVestingSchedule(address,uint256,uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 286,
									"end": 8300,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 286,
									"end": 8300,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 286,
									"end": 8300,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 523,
									"end": 544,
									"name": "PUSH",
									"source": 8,
									"value": "201FCAFC2577D298500000"
								},
								{
									"begin": 488,
									"end": 544,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 488,
									"end": 544,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 589,
									"end": 605,
									"name": "PUSH",
									"source": 8,
									"value": "38D7EA4C68000"
								},
								{
									"begin": 550,
									"end": 605,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 550,
									"end": 605,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 682,
									"end": 699,
									"name": "PUSH",
									"source": 8,
									"value": "B3697B81284000"
								},
								{
									"begin": 645,
									"end": 699,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 645,
									"end": 699,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 773,
									"end": 774,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 774,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 734,
									"end": 774,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1054,
									"end": 1076,
									"name": "PUSH",
									"source": 8,
									"value": "854FDABD6AA1D32FB00000"
								},
								{
									"begin": 1023,
									"end": 1076,
									"name": "PUSH",
									"source": 8,
									"value": "E"
								},
								{
									"begin": 1023,
									"end": 1076,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1167,
									"end": 1188,
									"name": "PUSH",
									"source": 8,
									"value": "FB768105935A2F3000000"
								},
								{
									"begin": 1131,
									"end": 1188,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1131,
									"end": 1188,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1272,
									"end": 1289,
									"name": "PUSH",
									"source": 8,
									"value": "B3697B81284000"
								},
								{
									"begin": 1237,
									"end": 1289,
									"name": "PUSH",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 1237,
									"end": 1289,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1361,
									"end": 1375,
									"name": "PUSH",
									"source": 8,
									"value": "16345785D8A0000"
								},
								{
									"begin": 1328,
									"end": 1375,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1328,
									"end": 1375,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1443,
									"end": 1444,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1408,
									"end": 1444,
									"name": "PUSH",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 1408,
									"end": 1444,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1548,
									"end": 1553,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1520,
									"end": 1553,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1665,
									"end": 1679,
									"name": "PUSH",
									"source": 8,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 1623,
									"end": 1679,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 1623,
									"end": 1679,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1769,
									"end": 1784,
									"name": "PUSH",
									"source": 8,
									"value": "A2A15D09519BE00000"
								},
								{
									"begin": 1727,
									"end": 1784,
									"name": "PUSH",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 1727,
									"end": 1784,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2177,
									"end": 2182,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "PUSH",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2145,
									"end": 2182,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2836,
									"end": 2947,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 2836,
									"end": 2947,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2836,
									"end": 2947,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2836,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2836,
									"end": 2947,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2836,
									"end": 2947,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2836,
									"end": 2947,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2836,
									"end": 2947,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2836,
									"end": 2947,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2836,
									"end": 2947,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2836,
									"end": 2947,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2884,
									"end": 2894,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "426574746F6B656E000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 4,
									"value": "4245545400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2906,
									"end": 2940,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2920,
									"end": 2924,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 424,
									"end": 446,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "A56FA5B99019A5C8000000"
								},
								{
									"begin": 2906,
									"end": 2911,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 2906,
									"end": 2911,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2906,
									"end": 2911,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2940,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2906,
									"end": 2940,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2940,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2906,
									"end": 2940,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2906,
									"end": 2940,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 286,
									"end": 8300,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 286,
									"end": 8300,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5868,
									"end": 5945,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5858,
									"end": 5946,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5965,
									"end": 5969,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 5962,
									"end": 5963,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 5955,
									"end": 5970,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5989,
									"end": 5993,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 5986,
									"end": 5987,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5979,
									"end": 5994,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6046,
									"end": 6049,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 6083,
									"end": 6084,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 6065,
									"end": 6085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "tag",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 6065,
									"end": 6085,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6060,
									"end": 6085,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 6117,
									"end": 6118,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 6099,
									"end": 6119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "tag",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 6099,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6094,
									"end": 6119,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6142,
									"end": 6143,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6139,
									"end": 6140,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6135,
									"end": 6144,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6128,
									"end": 6144,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6163,
									"end": 6166,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 6160,
									"end": 6161,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6157,
									"end": 6167,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 6170,
									"end": 6188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "tag",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 6170,
									"end": 6188,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 6154,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6197,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6006,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 6308,
									"end": 6313,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 6290,
									"end": 6314,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "tag",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 6290,
									"end": 6314,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6285,
									"end": 6288,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6278,
									"end": 6315,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6203,
									"end": 6321,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6203,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6476,
									"end": 6480,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6514,
									"end": 6516,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 6503,
									"end": 6512,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6499,
									"end": 6517,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6491,
									"end": 6517,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 6595,
									"end": 6596,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6584,
									"end": 6593,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6580,
									"end": 6597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6571,
									"end": 6577,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 6527,
									"end": 6598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "tag",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 6527,
									"end": 6598,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 6676,
									"end": 6678,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6665,
									"end": 6674,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6661,
									"end": 6679,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6652,
									"end": 6658,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 6608,
									"end": 6680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "tag",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 6608,
									"end": 6680,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 6758,
									"end": 6760,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 6747,
									"end": 6756,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6734,
									"end": 6740,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 6690,
									"end": 6762,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "tag",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 6690,
									"end": 6762,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6327,
									"end": 6769,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6327,
									"end": 6769,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6868,
									"end": 6872,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6906,
									"end": 6908,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6895,
									"end": 6904,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6891,
									"end": 6909,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6883,
									"end": 6909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 6987,
									"end": 6988,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 6985,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6972,
									"end": 6989,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6963,
									"end": 6969,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 6919,
									"end": 6990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "tag",
									"source": 9,
									"value": "148"
								},
								{
									"begin": 6919,
									"end": 6990,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6775,
									"end": 6997,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6775,
									"end": 6997,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 286,
									"end": 8300,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 286,
									"end": 8300,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 286,
									"end": 8300,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 286,
									"end": 8300,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 286,
									"end": 8300,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 286,
									"end": 8300,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 8300,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 286,
									"end": 8300,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 286,
									"end": 8300,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c575f5312aa1bd8d265f6ad810122ae121b03ce3360551c16897f42f03fffea64736f6c634300081a0033",
									".code": [
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "920168B3"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "CB8DCFE6"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "E6A23C3D"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "E6A23C3D"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "EE889ED0"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "EF5B329C"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "F15A41F6"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "FDB20CCB"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "CB8DCFE6"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "D414890A"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "D50234C4"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "E086E5EC"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "AC21694C"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "AC21694C"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "B0E68630"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "B68ED11F"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "BDA95633"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "C552E04B"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "920168B3"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "940DE97E"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "A089DE2F"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "55DD574C"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "84494708"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "84494708"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "8D8F2ADB"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "8F7713FF"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "902D55A5"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "55DD574C"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "5C975ABB"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "5FB3B944"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "1ECF8F4D"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "1ECF8F4D"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "2A237BB6"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "466C3F93"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "6D65AF3"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "FE83BB8"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 286,
											"end": 8300,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1450,
											"end": 1481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1450,
											"end": 1481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1023,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1023,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1623,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1623,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2145,
											"end": 2182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2145,
											"end": 2182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 4931,
											"end": 5677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4931,
											"end": 5677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4600,
											"end": 4834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 734,
											"end": 774,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 734,
											"end": 774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 734,
											"end": 774,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 774,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 734,
											"end": 774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 734,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 734,
											"end": 774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 734,
											"end": 774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 734,
											"end": 774,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 734,
											"end": 774,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 734,
											"end": 774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 734,
											"end": 774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 734,
											"end": 774,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1520,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1520,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 7681,
											"end": 7931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 1328,
											"end": 1375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1328,
											"end": 1375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 385,
											"end": 446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 385,
											"end": 446,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 446,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 385,
											"end": 446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 385,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 385,
											"end": 446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 385,
											"end": 446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 446,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 385,
											"end": 446,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 385,
											"end": 446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 385,
											"end": 446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 385,
											"end": 446,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1237,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1237,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 780,
											"end": 815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 780,
											"end": 815,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 815,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 780,
											"end": 815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 780,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 780,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 780,
											"end": 815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 815,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 780,
											"end": 815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 780,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 780,
											"end": 815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 815,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 3116,
											"end": 3735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 3116,
											"end": 3735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 1727,
											"end": 1784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1727,
											"end": 1784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 550,
											"end": 605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 550,
											"end": 605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 1408,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1408,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 645,
											"end": 699,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 645,
											"end": 699,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 699,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 645,
											"end": 699,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 645,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 645,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 645,
											"end": 699,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 699,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 645,
											"end": 699,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 645,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 645,
											"end": 699,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 699,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 488,
											"end": 544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 488,
											"end": 544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 488,
											"end": 544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 488,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 488,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 488,
											"end": 544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 544,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 488,
											"end": 544,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 488,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 488,
											"end": 544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 544,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 5905,
											"end": 6217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 5905,
											"end": 6217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 5905,
											"end": 6217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 3836,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 3836,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 892,
											"end": 932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 892,
											"end": 932,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 932,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 892,
											"end": 932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 892,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 892,
											"end": 932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 892,
											"end": 932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 932,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 892,
											"end": 932,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 892,
											"end": 932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 892,
											"end": 932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 932,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 8006,
											"end": 8298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 7190,
											"end": 7376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 7436,
											"end": 7602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 1131,
											"end": 1188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1131,
											"end": 1188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 6311,
											"end": 6647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 6311,
											"end": 6647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 6311,
											"end": 6647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2042,
											"end": 2101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2042,
											"end": 2101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 2042,
											"end": 2101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1450,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2145,
											"end": 2182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5051,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 5038,
											"end": 5051,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5038,
											"end": 5051,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5038,
											"end": 5051,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5038,
											"end": 5051,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5038,
											"end": 5051,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5038,
											"end": 5051,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5038,
											"end": 5051,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5038,
											"end": 5051,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5038,
											"end": 5051,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5038,
											"end": 5051,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 5030,
											"end": 5078,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 5030,
											"end": 5078,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5109,
											"end": 5133,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 5109,
											"end": 5133,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5105,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5133,
											"modifierDepth": 2,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5096,
											"end": 5133,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 5088,
											"end": 5176,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 5088,
											"end": 5176,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5207,
											"end": 5231,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 5207,
											"end": 5231,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5194,
											"end": 5203,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5194,
											"end": 5231,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5194,
											"end": 5231,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 5186,
											"end": 5273,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 5186,
											"end": 5273,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5284,
											"end": 5303,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5306,
											"end": 5339,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 5329,
											"end": 5338,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5328,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 5306,
											"end": 5339,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5339,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 5306,
											"end": 5339,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5284,
											"end": 5339,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5284,
											"end": 5339,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5392,
											"end": 5405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 5392,
											"end": 5405,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5377,
											"end": 5388,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 5357,
											"end": 5374,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5388,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 5357,
											"end": 5388,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5388,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5388,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 5357,
											"end": 5388,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5388,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 5357,
											"end": 5388,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5405,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5357,
											"end": 5405,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 5349,
											"end": 5438,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 5349,
											"end": 5438,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5470,
											"end": 5481,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5466,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 5449,
											"end": 5466,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5481,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5481,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5481,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5481,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 5449,
											"end": 5481,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5481,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5481,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 5449,
											"end": 5481,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5481,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 5449,
											"end": 5481,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5481,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5481,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5481,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5481,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5481,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5481,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5449,
											"end": 5481,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5517,
											"end": 5530,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 5517,
											"end": 5530,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5496,
											"end": 5513,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 5496,
											"end": 5513,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5496,
											"end": 5530,
											"modifierDepth": 2,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5611,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 5492,
											"end": 5611,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5567,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5546,
											"end": 5559,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 5546,
											"end": 5559,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5546,
											"end": 5567,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5586,
											"end": 5600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "C82E6055D31DE9B552CD0014F23A8B8CE120C288ED1AFCE01ADB97150EFC0185"
										},
										{
											"begin": 5586,
											"end": 5600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5586,
											"end": 5600,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5586,
											"end": 5600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5586,
											"end": 5600,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5586,
											"end": 5600,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5586,
											"end": 5600,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5586,
											"end": 5600,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5586,
											"end": 5600,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5586,
											"end": 5600,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 5492,
											"end": 5611,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 5492,
											"end": 5611,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5621,
											"end": 5670,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 5639,
											"end": 5643,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 5646,
											"end": 5656,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5658,
											"end": 5669,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5621,
											"end": 5630,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 5621,
											"end": 5670,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5621,
											"end": 5670,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 5621,
											"end": 5670,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5020,
											"end": 5677,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4931,
											"end": 5677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4931,
											"end": 5677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4600,
											"end": 4834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4662,
											"end": 4675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 4662,
											"end": 4675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4662,
											"end": 4675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4675,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4662,
											"end": 4675,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4675,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4662,
											"end": 4675,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4661,
											"end": 4675,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 4653,
											"end": 4706,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 4653,
											"end": 4706,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4732,
											"end": 4736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4716,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 4716,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4736,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4765,
											"end": 4780,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 4762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 4746,
											"end": 4780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 4780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 4780,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 4780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "71D9B86CD8E742CC8D4D6B9D25C84D4E42F8BA8138C6EE54914285F4A9540056"
										},
										{
											"begin": 4810,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 4810,
											"end": 4826,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4795,
											"end": 4827,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 4795,
											"end": 4827,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 4795,
											"end": 4827,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4827,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 4795,
											"end": 4827,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4795,
											"end": 4827,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4827,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4827,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4827,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4795,
											"end": 4827,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 734,
											"end": 774,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 734,
											"end": 774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 734,
											"end": 774,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 734,
											"end": 774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 7681,
											"end": 7931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7736,
											"end": 7751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7754,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 7772,
											"end": 7776,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 7754,
											"end": 7763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 7754,
											"end": 7778,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7754,
											"end": 7778,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 7754,
											"end": 7778,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7736,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7736,
											"end": 7778,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7806,
											"end": 7807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7796,
											"end": 7803,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7796,
											"end": 7807,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 7788,
											"end": 7833,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 7788,
											"end": 7833,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7843,
											"end": 7885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 7861,
											"end": 7865,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 7868,
											"end": 7875,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 7868,
											"end": 7873,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 7868,
											"end": 7875,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7868,
											"end": 7875,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 7868,
											"end": 7875,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7877,
											"end": 7884,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7843,
											"end": 7852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 7843,
											"end": 7885,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7843,
											"end": 7885,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 7843,
											"end": 7885,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9C6393F251205F9E03559951CAB4C9AE71767B6174F77944A5B0C2FA51FBDA9F"
										},
										{
											"begin": 7916,
											"end": 7923,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7900,
											"end": 7924,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 7900,
											"end": 7924,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 7900,
											"end": 7924,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 7900,
											"end": 7924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7900,
											"end": 7924,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7924,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7924,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7924,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7924,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 7726,
											"end": 7931,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7681,
											"end": 7931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 385,
											"end": 446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 424,
											"end": 446,
											"name": "PUSH",
											"source": 8,
											"value": "A56FA5B99019A5C8000000"
										},
										{
											"begin": 385,
											"end": 446,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 385,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1237,
											"end": 1289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 780,
											"end": 815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 780,
											"end": 815,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 780,
											"end": 815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3216,
											"end": 3233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3216,
											"end": 3233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 3233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3233,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3216,
											"end": 3233,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3233,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3216,
											"end": 3233,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3215,
											"end": 3233,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 3207,
											"end": 3265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 3207,
											"end": 3265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3312,
											"end": 3313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3309,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3283,
											"end": 3313,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3283,
											"end": 3350,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3283,
											"end": 3350,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3283,
											"end": 3350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 3283,
											"end": 3350,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3283,
											"end": 3350,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3347,
											"end": 3350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3317,
											"end": 3343,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3350,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3350,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3283,
											"end": 3350,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 3283,
											"end": 3350,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 3275,
											"end": 3373,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 3275,
											"end": 3373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3412,
											"end": 3438,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3384,
											"end": 3409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3384,
											"end": 3438,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3384,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3384,
											"end": 3438,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3384,
											"end": 3438,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3479,
											"end": 3496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3479,
											"end": 3496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3479,
											"end": 3503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3558,
											"end": 3573,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3535,
											"end": 3555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3535,
											"end": 3573,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3535,
											"end": 3573,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3535,
											"end": 3573,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3535,
											"end": 3573,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "CBE7B2993D671FF089495AE9D90AE7A115F123DB134C0A6D3C4BC6E0C72CF7E5"
										},
										{
											"begin": 3642,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3642,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3669,
											"end": 3689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3669,
											"end": 3689,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3690,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3690,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 3623,
											"end": 3690,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3690,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3690,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3690,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 3623,
											"end": 3690,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3690,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 3623,
											"end": 3690,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3690,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3690,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3690,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3690,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3690,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3690,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 4,
											"value": "318"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1727,
											"end": 1784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 550,
											"end": 605,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 550,
											"end": 605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1408,
											"end": 1444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 645,
											"end": 699,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 645,
											"end": 699,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 645,
											"end": 699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 488,
											"end": 544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 488,
											"end": 544,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 488,
											"end": 544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5977,
											"end": 5984,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6126,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 6113,
											"end": 6126,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6093,
											"end": 6110,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 6093,
											"end": 6110,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6072,
											"end": 6089,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 6072,
											"end": 6089,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6069,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 6054,
											"end": 6069,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 6054,
											"end": 6089,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6089,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 6054,
											"end": 6089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6089,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 6054,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6053,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 6053,
											"end": 6110,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6053,
											"end": 6110,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6053,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 6053,
											"end": 6110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6053,
											"end": 6110,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 6053,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6053,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 6053,
											"end": 6126,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6053,
											"end": 6126,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6053,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6053,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6053,
											"end": 6126,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 6053,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6019,
											"end": 6036,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 6019,
											"end": 6036,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6019,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 6019,
											"end": 6136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6019,
											"end": 6136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6019,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 6019,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6019,
											"end": 6136,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 6019,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5996,
											"end": 6136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5996,
											"end": 6136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6146,
											"end": 6160,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6187,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6163,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 6163,
											"end": 6187,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6163,
											"end": 6187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6163,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6163,
											"end": 6187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6163,
											"end": 6187,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 6163,
											"end": 6187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6146,
											"end": 6187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6146,
											"end": 6187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6204,
											"end": 6210,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6210,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6210,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6210,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6210,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5905,
											"end": 6217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3964,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3947,
											"end": 3964,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3964,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 3964,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 3964,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 3964,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3947,
											"end": 3964,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 3964,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 3964,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3947,
											"end": 3964,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3947,
											"end": 3964,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 3939,
											"end": 3995,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 3939,
											"end": 3995,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4039,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "2B5E3AF16B1880000"
										},
										{
											"begin": 4013,
											"end": 4022,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4039,
											"modifierDepth": 2,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4013,
											"end": 4039,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 4005,
											"end": 4081,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 4005,
											"end": 4081,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4110,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4113,
											"end": 4150,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 4140,
											"end": 4149,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4139,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 4113,
											"end": 4150,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4113,
											"end": 4150,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 4113,
											"end": 4150,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4150,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4150,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4183,
											"end": 4198,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 4168,
											"end": 4179,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4168,
											"end": 4198,
											"modifierDepth": 2,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4168,
											"end": 4198,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 4160,
											"end": 4239,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 4160,
											"end": 4239,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4286,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4271,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 4250,
											"end": 4271,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4286,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4286,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4286,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4286,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 4250,
											"end": 4286,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4286,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4286,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 4250,
											"end": 4286,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4286,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 4250,
											"end": 4286,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4286,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4286,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4286,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4286,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4286,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4286,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4250,
											"end": 4286,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4343,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4326,
											"end": 4343,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4301,
											"end": 4322,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 4301,
											"end": 4322,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4301,
											"end": 4343,
											"modifierDepth": 2,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4297,
											"end": 4432,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 4297,
											"end": 4432,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4379,
											"end": 4384,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4359,
											"end": 4376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 4359,
											"end": 4376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4359,
											"end": 4384,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4403,
											"end": 4421,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8D80F5BE79E7DD88D69814B57E8F5C7DD249B3D6BAC194EB9144B8CA639DB036"
										},
										{
											"begin": 4403,
											"end": 4421,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4403,
											"end": 4421,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4403,
											"end": 4421,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4403,
											"end": 4421,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4403,
											"end": 4421,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4403,
											"end": 4421,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4403,
											"end": 4421,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4403,
											"end": 4421,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4403,
											"end": 4421,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 4297,
											"end": 4432,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 4297,
											"end": 4432,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4442,
											"end": 4535,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 4464,
											"end": 4474,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4487,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4507,
											"end": 4515,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1E13380"
										},
										{
											"begin": 4489,
											"end": 4504,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4515,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 4489,
											"end": 4515,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4515,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4515,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 4489,
											"end": 4515,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4515,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 4489,
											"end": 4515,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4517,
											"end": 4525,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "ED4E00"
										},
										{
											"begin": 4527,
											"end": 4534,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "278D00"
										},
										{
											"begin": 4442,
											"end": 4463,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 4442,
											"end": 4535,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4442,
											"end": 4535,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 4442,
											"end": 4535,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3929,
											"end": 4542,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 4542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3836,
											"end": 4542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 892,
											"end": 932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 892,
											"end": 932,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 892,
											"end": 932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 8006,
											"end": 8298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8058,
											"end": 8073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8076,
											"end": 8097,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 8058,
											"end": 8097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8058,
											"end": 8097,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8125,
											"end": 8126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8115,
											"end": 8122,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8126,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 8107,
											"end": 8149,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 8107,
											"end": 8149,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8160,
											"end": 8172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8178,
											"end": 8185,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 8178,
											"end": 8183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 8178,
											"end": 8185,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8185,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 8178,
											"end": 8185,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8178,
											"end": 8190,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8198,
											"end": 8205,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 8178,
											"end": 8210,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8178,
											"end": 8210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8159,
											"end": 8210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8159,
											"end": 8210,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8159,
											"end": 8210,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8228,
											"end": 8235,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 8220,
											"end": 8255,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 8220,
											"end": 8255,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8270,
											"end": 8291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "43F607A14D3B4F0A11A0B2E192BBFCD894298BA5ABF22553BE6081406DB28AA"
										},
										{
											"begin": 8283,
											"end": 8290,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8270,
											"end": 8291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8270,
											"end": 8291,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8270,
											"end": 8291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 8270,
											"end": 8291,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8270,
											"end": 8291,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8270,
											"end": 8291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 8270,
											"end": 8291,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8270,
											"end": 8291,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 8270,
											"end": 8291,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8270,
											"end": 8291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8270,
											"end": 8291,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8270,
											"end": 8291,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8270,
											"end": 8291,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8270,
											"end": 8291,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8270,
											"end": 8291,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8270,
											"end": 8291,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 8048,
											"end": 8298,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8048,
											"end": 8298,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 7190,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7253,
											"end": 7270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 7253,
											"end": 7270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7253,
											"end": 7270,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7253,
											"end": 7270,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7253,
											"end": 7270,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7253,
											"end": 7270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 7253,
											"end": 7270,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 7253,
											"end": 7270,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7253,
											"end": 7270,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7253,
											"end": 7270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 7253,
											"end": 7270,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 7245,
											"end": 7301,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 7245,
											"end": 7301,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7331,
											"end": 7336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7311,
											"end": 7328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 7311,
											"end": 7328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7336,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7351,
											"end": 7369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8D80F5BE79E7DD88D69814B57E8F5C7DD249B3D6BAC194EB9144B8CA639DB036"
										},
										{
											"begin": 7351,
											"end": 7369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7351,
											"end": 7369,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7351,
											"end": 7369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7351,
											"end": 7369,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7351,
											"end": 7369,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7351,
											"end": 7369,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7351,
											"end": 7369,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7351,
											"end": 7369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7351,
											"end": 7369,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 7190,
											"end": 7376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 7436,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7495,
											"end": 7508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 7495,
											"end": 7508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7495,
											"end": 7508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7495,
											"end": 7508,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7495,
											"end": 7508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7495,
											"end": 7508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 7495,
											"end": 7508,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 7495,
											"end": 7508,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7495,
											"end": 7508,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7495,
											"end": 7508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 7495,
											"end": 7508,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 7487,
											"end": 7535,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 7487,
											"end": 7535,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7561,
											"end": 7566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 7545,
											"end": 7558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7566,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7581,
											"end": 7595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C82E6055D31DE9B552CD0014F23A8B8CE120C288ED1AFCE01ADB97150EFC0185"
										},
										{
											"begin": 7581,
											"end": 7595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7581,
											"end": 7595,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7581,
											"end": 7595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7581,
											"end": 7595,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7581,
											"end": 7595,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7581,
											"end": 7595,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7581,
											"end": 7595,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7581,
											"end": 7595,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7581,
											"end": 7595,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1131,
											"end": 1188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6387,
											"end": 6394,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6406,
											"end": 6426,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6539,
											"end": 6556,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6539,
											"end": 6556,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 6515,
											"end": 6536,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6490,
											"end": 6511,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 6490,
											"end": 6511,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6487,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 6468,
											"end": 6487,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 6468,
											"end": 6511,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 6468,
											"end": 6511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6468,
											"end": 6511,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 6468,
											"end": 6511,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 6467,
											"end": 6536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 6467,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6536,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 6467,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 6467,
											"end": 6556,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6467,
											"end": 6556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6467,
											"end": 6556,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 6467,
											"end": 6556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6429,
											"end": 6450,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 6429,
											"end": 6450,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6429,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 6429,
											"end": 6566,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6429,
											"end": 6566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6429,
											"end": 6566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 6429,
											"end": 6566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6429,
											"end": 6566,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 6429,
											"end": 6566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6406,
											"end": 6566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6406,
											"end": 6566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6576,
											"end": 6590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6605,
											"end": 6617,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6593,
											"end": 6602,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6593,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 6593,
											"end": 6617,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6593,
											"end": 6617,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6593,
											"end": 6617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 6593,
											"end": 6617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6593,
											"end": 6617,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 6593,
											"end": 6617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6576,
											"end": 6617,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6576,
											"end": 6617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6634,
											"end": 6640,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6640,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6311,
											"end": 6647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2042,
											"end": 2101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "401"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 4,
											"value": "401"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 4,
											"value": "404"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6711,
											"end": 7126,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 6711,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6899,
											"end": 6931,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6950,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6951,
											"end": 6962,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6963,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6899,
											"end": 6963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6899,
											"end": 6963,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6997,
											"end": 7003,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 6981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 6993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6973,
											"end": 6993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 6993,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6973,
											"end": 7003,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7003,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7003,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 6973,
											"end": 7003,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 6973,
											"end": 7003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7003,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 6973,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7003,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7003,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7003,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 7003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7034,
											"end": 7043,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7013,
											"end": 7021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7013,
											"end": 7031,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7013,
											"end": 7031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7013,
											"end": 7043,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7013,
											"end": 7043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7013,
											"end": 7043,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7013,
											"end": 7043,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7073,
											"end": 7081,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7053,
											"end": 7061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7053,
											"end": 7070,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 7053,
											"end": 7070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7053,
											"end": 7081,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7053,
											"end": 7081,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7053,
											"end": 7081,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7053,
											"end": 7081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7111,
											"end": 7119,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7099,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7108,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7091,
											"end": 7108,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7119,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7119,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7119,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7119,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6889,
											"end": 7126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6711,
											"end": 7126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6711,
											"end": 7126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6711,
											"end": 7126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6711,
											"end": 7126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6711,
											"end": 7126,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6711,
											"end": 7126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 4,
											"value": "429"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 4,
											"value": "405"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 4,
											"value": "436"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 4,
											"value": "440"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 522,
											"end": 534,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 512,
											"end": 534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 512,
											"end": 534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 442,
											"end": 541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 442,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 547,
											"end": 716,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 547,
											"end": 716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 653,
											"end": 672,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 696,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 681,
											"end": 710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 547,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 722,
											"end": 970,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 722,
											"end": 970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 804,
											"end": 805,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 927,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 814,
											"end": 927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 825,
											"end": 826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 822,
											"end": 835,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 814,
											"end": 927,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 814,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 814,
											"end": 927,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 913,
											"end": 914,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 908,
											"end": 911,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 904,
											"end": 915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 898,
											"end": 916,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 894,
											"end": 895,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 889,
											"end": 892,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 885,
											"end": 896,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 878,
											"end": 917,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 850,
											"end": 852,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 847,
											"end": 848,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 843,
											"end": 853,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 838,
											"end": 853,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 838,
											"end": 853,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 814,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 814,
											"end": 927,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 814,
											"end": 927,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 814,
											"end": 927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 961,
											"end": 962,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 958,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 947,
											"end": 950,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 943,
											"end": 959,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 936,
											"end": 963,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 784,
											"end": 970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 722,
											"end": 970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 722,
											"end": 970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 722,
											"end": 970,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 722,
											"end": 970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1078,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 976,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1061,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1052,
											"end": 1057,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1048,
											"end": 1062,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1072,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1072,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1034,
											"end": 1072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1078,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 976,
											"end": 1078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1084,
											"end": 1461,
											"name": "tag",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 1084,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1175,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 1233,
											"end": 1238,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 1200,
											"end": 1239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1239,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 1200,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1255,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1314,
											"end": 1317,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1255,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 1255,
											"end": 1326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1255,
											"end": 1326,
											"name": "tag",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 1255,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1326,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1326,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1391,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1381,
											"end": 1385,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1374,
											"end": 1379,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 1335,
											"end": 1400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 1335,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 1425,
											"end": 1454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 1423,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1416,
											"end": 1455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1455,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1409,
											"end": 1455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1176,
											"end": 1461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1084,
											"end": 1461,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1084,
											"end": 1461,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1084,
											"end": 1461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1084,
											"end": 1461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1084,
											"end": 1461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1780,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1467,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 1584,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1607,
											"end": 1616,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1603,
											"end": 1621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1595,
											"end": 1621,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1595,
											"end": 1621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1667,
											"end": 1676,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1661,
											"end": 1665,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1657,
											"end": 1677,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1653,
											"end": 1654,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1651,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1655,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1631,
											"end": 1678,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1695,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 1768,
											"end": 1772,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1695,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "447"
										},
										{
											"begin": 1695,
											"end": 1773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1695,
											"end": 1773,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 1695,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1687,
											"end": 1773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1780,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1780,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1467,
											"end": 1780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 1984,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 1867,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1976,
											"end": 1977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1973,
											"end": 1974,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1966,
											"end": 1978,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2239,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 2113,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2157,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2232,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2183,
											"end": 2188,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2233,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2233,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2233,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2239,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2239,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 2341,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 2245,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2282,
											"end": 2289,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 2311,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "tag",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 2341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 2341,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 2341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 2341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2347,
											"end": 2469,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 2347,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2420,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 2438,
											"end": 2443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2420,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 2420,
											"end": 2444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2420,
											"end": 2444,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 2420,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2410,
											"end": 2445,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 2400,
											"end": 2463,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2459,
											"end": 2460,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2457,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2449,
											"end": 2461,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2463,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 2400,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2347,
											"end": 2469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2347,
											"end": 2469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2614,
											"name": "tag",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 2475,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2565,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2566,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2537,
											"end": 2566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 2575,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2608,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 2575,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2614,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2614,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2614,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2614,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2475,
											"end": 2614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2742,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 2620,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2693,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 2711,
											"end": 2716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2693,
											"end": 2717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 2693,
											"end": 2717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2693,
											"end": 2717,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 2693,
											"end": 2717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 2691,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2718,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 2673,
											"end": 2736,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2732,
											"end": 2733,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2730,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2722,
											"end": 2734,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2736,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 2673,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2742,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2748,
											"end": 2887,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 2748,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2839,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2839,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2839,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2848,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 2875,
											"end": 2880,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2848,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 2848,
											"end": 2881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2848,
											"end": 2881,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 2848,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2748,
											"end": 2887,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2748,
											"end": 2887,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2748,
											"end": 2887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2748,
											"end": 2887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2748,
											"end": 2887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 3367,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2893,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2961,
											"end": 2967,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2975,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3018,
											"end": 3020,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3015,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3004,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2993,
											"end": 3016,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2989,
											"end": 3021,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3105,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 2986,
											"end": 3105,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 3024,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 3024,
											"end": 3103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3103,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 3024,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3105,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 2986,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3145,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 3214,
											"end": 3221,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3211,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3194,
											"end": 3203,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3190,
											"end": 3212,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 3169,
											"end": 3222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3222,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 3169,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3159,
											"end": 3222,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3159,
											"end": 3222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3115,
											"end": 3232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3273,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3297,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 3342,
											"end": 3349,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3339,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3322,
											"end": 3331,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3318,
											"end": 3340,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3297,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 3297,
											"end": 3350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3297,
											"end": 3350,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 3297,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3350,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 3367,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 3367,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 3367,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 3367,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 3367,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 3367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3463,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 3373,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3443,
											"end": 3456,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3436,
											"end": 3457,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3457,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3425,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3463,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3463,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3463,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3578,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 3469,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 3565,
											"end": 3570,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 3550,
											"end": 3571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3571,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 3550,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3545,
											"end": 3548,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3538,
											"end": 3572,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3578,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3578,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3794,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3584,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3675,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3711,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3698,
											"end": 3707,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3694,
											"end": 3712,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3686,
											"end": 3712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3686,
											"end": 3712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3782,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3769,
											"end": 3786,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3760,
											"end": 3766,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 3722,
											"end": 3787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3787,
											"name": "tag",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 3722,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3794,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3794,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3891,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3899,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3930,
											"end": 3939,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3928,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3940,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3913,
											"end": 3945,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 3948,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "tag",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 4138,
											"end": 4145,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4129,
											"end": 4135,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4118,
											"end": 4127,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4114,
											"end": 4136,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 4093,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4156,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4257,
											"end": 4263,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4246,
											"end": 4255,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4242,
											"end": 4264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 4221,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "tag",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4211,
											"end": 4274,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4211,
											"end": 4274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4284,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4323,
											"end": 4325,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 4394,
											"end": 4401,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4385,
											"end": 4391,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4374,
											"end": 4383,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 4349,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "tag",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4402,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4294,
											"end": 4412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3800,
											"end": 4419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4460,
											"end": 4467,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4500,
											"end": 4504,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4489,
											"end": 4505,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4478,
											"end": 4505,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4478,
											"end": 4505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 4600,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "tag",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4595,
											"end": 4598,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4623,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4517,
											"end": 4629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4724,
											"end": 4728,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4764,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4751,
											"end": 4760,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4747,
											"end": 4765,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4765,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4765,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4841,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4821,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 4775,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "tag",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 4960,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4942,
											"end": 4949,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 4961,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4966,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 4969,
											"end": 5048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "tag",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5089,
											"end": 5090,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 5159,
											"end": 5166,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5150,
											"end": 5156,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5148,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5135,
											"end": 5157,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 5114,
											"end": 5167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "tag",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5167,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4855,
											"end": 5184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5519,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 5190,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5249,
											"end": 5255,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5298,
											"end": 5300,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5286,
											"end": 5295,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5284,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5273,
											"end": 5296,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5269,
											"end": 5301,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5385,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 5266,
											"end": 5385,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5304,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 5304,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 5304,
											"end": 5383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5304,
											"end": 5383,
											"name": "tag",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 5304,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5266,
											"end": 5385,
											"name": "tag",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 5266,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5424,
											"end": 5425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 5494,
											"end": 5501,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5485,
											"end": 5491,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5474,
											"end": 5483,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5492,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 5449,
											"end": 5502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5449,
											"end": 5502,
											"name": "tag",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 5449,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5439,
											"end": 5502,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5439,
											"end": 5502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5395,
											"end": 5512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5519,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5519,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5525,
											"end": 5643,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 5525,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5612,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 5630,
											"end": 5635,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5612,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 5612,
											"end": 5636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5612,
											"end": 5636,
											"name": "tag",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 5612,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5610,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5637,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5525,
											"end": 5643,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5525,
											"end": 5643,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5525,
											"end": 5643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5649,
											"end": 5871,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 5649,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5742,
											"end": 5746,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5782,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5769,
											"end": 5778,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5765,
											"end": 5783,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5757,
											"end": 5783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5757,
											"end": 5783,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5793,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 5861,
											"end": 5862,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5850,
											"end": 5859,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5846,
											"end": 5863,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5837,
											"end": 5843,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5793,
											"end": 5864,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 5793,
											"end": 5864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5793,
											"end": 5864,
											"name": "tag",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 5793,
											"end": 5864,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5649,
											"end": 5871,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5649,
											"end": 5871,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5649,
											"end": 5871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5649,
											"end": 5871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5649,
											"end": 5871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5877,
											"end": 6351,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 5877,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5945,
											"end": 5951,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5953,
											"end": 5959,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6004,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5990,
											"end": 5999,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 5988,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 6000,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5973,
											"end": 6005,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5970,
											"end": 6089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5970,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 5970,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6008,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 6008,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 6008,
											"end": 6087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6008,
											"end": 6087,
											"name": "tag",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 6008,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5970,
											"end": 6089,
											"name": "tag",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 5970,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 6198,
											"end": 6205,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6189,
											"end": 6195,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6178,
											"end": 6187,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6174,
											"end": 6196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6153,
											"end": 6206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 6153,
											"end": 6206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6153,
											"end": 6206,
											"name": "tag",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 6153,
											"end": 6206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6206,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6099,
											"end": 6216,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6255,
											"end": 6257,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6281,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 6326,
											"end": 6333,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6317,
											"end": 6323,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6306,
											"end": 6315,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6302,
											"end": 6324,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "454"
										},
										{
											"begin": 6281,
											"end": 6334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6334,
											"name": "tag",
											"source": 9,
											"value": "571"
										},
										{
											"begin": 6281,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6271,
											"end": 6334,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6271,
											"end": 6334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6226,
											"end": 6344,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5877,
											"end": 6351,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5877,
											"end": 6351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5877,
											"end": 6351,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5877,
											"end": 6351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5877,
											"end": 6351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5877,
											"end": 6351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6357,
											"end": 7021,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 6357,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6600,
											"end": 6603,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 6589,
											"end": 6598,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6585,
											"end": 6604,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6604,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6577,
											"end": 6604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6614,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 6682,
											"end": 6683,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6680,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6667,
											"end": 6684,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6658,
											"end": 6664,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6614,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 6614,
											"end": 6685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6614,
											"end": 6685,
											"name": "tag",
											"source": 9,
											"value": "573"
										},
										{
											"begin": 6614,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6695,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 6763,
											"end": 6765,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6752,
											"end": 6761,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6748,
											"end": 6766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6739,
											"end": 6745,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6695,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 6695,
											"end": 6767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6695,
											"end": 6767,
											"name": "tag",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 6695,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6777,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 6845,
											"end": 6847,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6830,
											"end": 6848,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6821,
											"end": 6827,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6777,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 6777,
											"end": 6849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6777,
											"end": 6849,
											"name": "tag",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 6777,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 6931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 6927,
											"end": 6929,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6916,
											"end": 6925,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6912,
											"end": 6930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6909,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 6931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 6859,
											"end": 6931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 6931,
											"name": "tag",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 6859,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 7009,
											"end": 7012,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 6998,
											"end": 7007,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6994,
											"end": 7013,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6985,
											"end": 6991,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 6941,
											"end": 7014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 7014,
											"name": "tag",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 6941,
											"end": 7014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6357,
											"end": 7021,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 6357,
											"end": 7021,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6357,
											"end": 7021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6357,
											"end": 7021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6357,
											"end": 7021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6357,
											"end": 7021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6357,
											"end": 7021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6357,
											"end": 7021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6357,
											"end": 7021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7027,
											"end": 7207,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 7027,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7075,
											"end": 7152,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7072,
											"end": 7073,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7153,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 7176,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7162,
											"end": 7177,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7196,
											"end": 7200,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7193,
											"end": 7194,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7186,
											"end": 7201,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7213,
											"end": 7533,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 7213,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7257,
											"end": 7263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7294,
											"end": 7295,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7288,
											"end": 7292,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7284,
											"end": 7296,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7274,
											"end": 7296,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7274,
											"end": 7296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7341,
											"end": 7342,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7335,
											"end": 7339,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7331,
											"end": 7343,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 7352,
											"end": 7433,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7418,
											"end": 7422,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 7410,
											"end": 7416,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7406,
											"end": 7423,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7396,
											"end": 7423,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7396,
											"end": 7423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7433,
											"name": "tag",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 7352,
											"end": 7433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7480,
											"end": 7482,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7478,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7469,
											"end": 7483,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7449,
											"end": 7467,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7446,
											"end": 7484,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7443,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 7443,
											"end": 7527,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 7499,
											"end": 7517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "tag",
											"source": 9,
											"value": "582"
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7443,
											"end": 7527,
											"name": "tag",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 7443,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7264,
											"end": 7533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7213,
											"end": 7533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7213,
											"end": 7533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7213,
											"end": 7533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7213,
											"end": 7533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7539,
											"end": 7711,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 7539,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7703,
											"name": "PUSH",
											"source": 9,
											"value": "5072652D53616C65206973206E6F742061637469766500000000000000000000"
										},
										{
											"begin": 7675,
											"end": 7676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7667,
											"end": 7673,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7663,
											"end": 7677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7656,
											"end": 7704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7539,
											"end": 7711,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7539,
											"end": 7711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7717,
											"end": 8083,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 7717,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7859,
											"end": 7862,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7880,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 7944,
											"end": 7946,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 7939,
											"end": 7942,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7880,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 7880,
											"end": 7947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7880,
											"end": 7947,
											"name": "tag",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 7880,
											"end": 7947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7873,
											"end": 7947,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7873,
											"end": 7947,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7956,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 8045,
											"end": 8048,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7956,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 7956,
											"end": 8049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7956,
											"end": 8049,
											"name": "tag",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 7956,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8074,
											"end": 8076,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8069,
											"end": 8072,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8065,
											"end": 8077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8058,
											"end": 8077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8058,
											"end": 8077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7717,
											"end": 8083,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7717,
											"end": 8083,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7717,
											"end": 8083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7717,
											"end": 8083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8089,
											"end": 8508,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 8089,
											"end": 8508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8255,
											"end": 8259,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8293,
											"end": 8295,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8282,
											"end": 8291,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8278,
											"end": 8296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8270,
											"end": 8296,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8270,
											"end": 8296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8342,
											"end": 8351,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8336,
											"end": 8340,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8332,
											"end": 8352,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8328,
											"end": 8329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8326,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8313,
											"end": 8330,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8306,
											"end": 8353,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 8496,
											"end": 8500,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 8370,
											"end": 8501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8501,
											"name": "tag",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 8370,
											"end": 8501,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8501,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8501,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8089,
											"end": 8508,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8089,
											"end": 8508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8089,
											"end": 8508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8089,
											"end": 8508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8739,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 8514,
											"end": 8739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8654,
											"end": 8688,
											"name": "PUSH",
											"source": 9,
											"value": "416D6F756E742069732062656C6F77206D696E696D756D207075726368617365"
										},
										{
											"begin": 8650,
											"end": 8651,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8642,
											"end": 8648,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8638,
											"end": 8652,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8631,
											"end": 8689,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8723,
											"end": 8731,
											"name": "PUSH",
											"source": 9,
											"value": "206C696D69740000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8718,
											"end": 8720,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8710,
											"end": 8716,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8706,
											"end": 8721,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8699,
											"end": 8732,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8514,
											"end": 8739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8745,
											"end": 9111,
											"name": "tag",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 8745,
											"end": 9111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8887,
											"end": 8890,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8908,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 8972,
											"end": 8974,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 8967,
											"end": 8970,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8908,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 8908,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8908,
											"end": 8975,
											"name": "tag",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 8908,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8901,
											"end": 8975,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8901,
											"end": 8975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8984,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 9073,
											"end": 9076,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8984,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 8984,
											"end": 9077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8984,
											"end": 9077,
											"name": "tag",
											"source": 9,
											"value": "592"
										},
										{
											"begin": 8984,
											"end": 9077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9102,
											"end": 9104,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9097,
											"end": 9100,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9093,
											"end": 9105,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9086,
											"end": 9105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9086,
											"end": 9105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8745,
											"end": 9111,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8745,
											"end": 9111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8745,
											"end": 9111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8745,
											"end": 9111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9117,
											"end": 9536,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 9117,
											"end": 9536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9283,
											"end": 9287,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9321,
											"end": 9323,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9310,
											"end": 9319,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9306,
											"end": 9324,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9324,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9370,
											"end": 9379,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9364,
											"end": 9368,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9360,
											"end": 9380,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9356,
											"end": 9357,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9345,
											"end": 9354,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9358,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9334,
											"end": 9381,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9398,
											"end": 9529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 9524,
											"end": 9528,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9398,
											"end": 9529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "466"
										},
										{
											"begin": 9398,
											"end": 9529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9398,
											"end": 9529,
											"name": "tag",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 9398,
											"end": 9529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9390,
											"end": 9529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9390,
											"end": 9529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9117,
											"end": 9536,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9117,
											"end": 9536,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9117,
											"end": 9536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9117,
											"end": 9536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9542,
											"end": 9766,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 9542,
											"end": 9766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9682,
											"end": 9716,
											"name": "PUSH",
											"source": 9,
											"value": "416D6F756E742065786365656473206D6178696D756D20707572636861736520"
										},
										{
											"begin": 9678,
											"end": 9679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9670,
											"end": 9676,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 9680,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9659,
											"end": 9717,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9751,
											"end": 9758,
											"name": "PUSH",
											"source": 9,
											"value": "6C696D6974000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9746,
											"end": 9748,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9734,
											"end": 9749,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9727,
											"end": 9759,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9542,
											"end": 9766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9542,
											"end": 9766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 10138,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 9772,
											"end": 10138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9914,
											"end": 9917,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9935,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 9999,
											"end": 10001,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 9994,
											"end": 9997,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9935,
											"end": 10002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 9935,
											"end": 10002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9935,
											"end": 10002,
											"name": "tag",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 9935,
											"end": 10002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 10002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9928,
											"end": 10002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10011,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "598"
										},
										{
											"begin": 10100,
											"end": 10103,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10011,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 10011,
											"end": 10104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10011,
											"end": 10104,
											"name": "tag",
											"source": 9,
											"value": "598"
										},
										{
											"begin": 10011,
											"end": 10104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10129,
											"end": 10131,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10124,
											"end": 10127,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10120,
											"end": 10132,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10132,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10113,
											"end": 10132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 10138,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 10138,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 10138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 10138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10144,
											"end": 10563,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 10144,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10310,
											"end": 10314,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10348,
											"end": 10350,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10333,
											"end": 10351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10325,
											"end": 10351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10325,
											"end": 10351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10397,
											"end": 10406,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10391,
											"end": 10395,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10387,
											"end": 10407,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10383,
											"end": 10384,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10372,
											"end": 10381,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10368,
											"end": 10385,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10361,
											"end": 10408,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10425,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 10551,
											"end": 10555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10425,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 10425,
											"end": 10556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10425,
											"end": 10556,
											"name": "tag",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 10425,
											"end": 10556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10417,
											"end": 10556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10417,
											"end": 10556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10144,
											"end": 10563,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10144,
											"end": 10563,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10144,
											"end": 10563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10144,
											"end": 10563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10569,
											"end": 10749,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 10569,
											"end": 10749,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10617,
											"end": 10694,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10614,
											"end": 10615,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10607,
											"end": 10695,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10714,
											"end": 10718,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 10711,
											"end": 10712,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10704,
											"end": 10719,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10738,
											"end": 10742,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10735,
											"end": 10736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10728,
											"end": 10743,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10755,
											"end": 10946,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 10755,
											"end": 10946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10795,
											"end": 10798,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 10832,
											"end": 10833,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 10814,
											"end": 10834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "tag",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10809,
											"end": 10834,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10809,
											"end": 10834,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "604"
										},
										{
											"begin": 10866,
											"end": 10867,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 10848,
											"end": 10868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10868,
											"name": "tag",
											"source": 9,
											"value": "604"
										},
										{
											"begin": 10848,
											"end": 10868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10843,
											"end": 10868,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10843,
											"end": 10868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10891,
											"end": 10892,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10888,
											"end": 10889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10884,
											"end": 10893,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10912,
											"end": 10915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10909,
											"end": 10910,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10906,
											"end": 10916,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10939,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10939,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 10903,
											"end": 10939,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "606"
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 10919,
											"end": 10937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "tag",
											"source": 9,
											"value": "606"
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10903,
											"end": 10939,
											"name": "tag",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 10903,
											"end": 10939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10755,
											"end": 10946,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10755,
											"end": 10946,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10755,
											"end": 10946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10755,
											"end": 10946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10755,
											"end": 10946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10952,
											"end": 11130,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 10952,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11092,
											"end": 11122,
											"name": "PUSH",
											"source": 9,
											"value": "45786365656473205072652D53616C6520746F6B656E206C696D697400000000"
										},
										{
											"begin": 11088,
											"end": 11089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11080,
											"end": 11086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11076,
											"end": 11090,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11069,
											"end": 11123,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10952,
											"end": 11130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10952,
											"end": 11130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11136,
											"end": 11502,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 11136,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11278,
											"end": 11281,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11299,
											"end": 11366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 11363,
											"end": 11365,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 11358,
											"end": 11361,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11299,
											"end": 11366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 11299,
											"end": 11366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11299,
											"end": 11366,
											"name": "tag",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 11299,
											"end": 11366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11292,
											"end": 11366,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11292,
											"end": 11366,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11375,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 11464,
											"end": 11467,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11375,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 11375,
											"end": 11468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11375,
											"end": 11468,
											"name": "tag",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 11375,
											"end": 11468,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11493,
											"end": 11495,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11488,
											"end": 11491,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11484,
											"end": 11496,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11477,
											"end": 11496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11477,
											"end": 11496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11136,
											"end": 11502,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11136,
											"end": 11502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11136,
											"end": 11502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11136,
											"end": 11502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11508,
											"end": 11927,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 11508,
											"end": 11927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11674,
											"end": 11678,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11712,
											"end": 11714,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11701,
											"end": 11710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11697,
											"end": 11715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11689,
											"end": 11715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11689,
											"end": 11715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11761,
											"end": 11770,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11755,
											"end": 11759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11751,
											"end": 11771,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11747,
											"end": 11748,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11736,
											"end": 11745,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11732,
											"end": 11749,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11725,
											"end": 11772,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11789,
											"end": 11920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "612"
										},
										{
											"begin": 11915,
											"end": 11919,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11789,
											"end": 11920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 11789,
											"end": 11920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11789,
											"end": 11920,
											"name": "tag",
											"source": 9,
											"value": "612"
										},
										{
											"begin": 11789,
											"end": 11920,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11781,
											"end": 11920,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11781,
											"end": 11920,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11508,
											"end": 11927,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11508,
											"end": 11927,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11508,
											"end": 11927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11508,
											"end": 11927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11933,
											"end": 12109,
											"name": "tag",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 11933,
											"end": 12109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12073,
											"end": 12101,
											"name": "PUSH",
											"source": 9,
											"value": "5072652D53616C6520697320616C726561647920616374697665000000000000"
										},
										{
											"begin": 12069,
											"end": 12070,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12061,
											"end": 12067,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12057,
											"end": 12071,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12102,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11933,
											"end": 12109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11933,
											"end": 12109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12481,
											"name": "tag",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 12115,
											"end": 12481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12257,
											"end": 12260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12278,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "615"
										},
										{
											"begin": 12342,
											"end": 12344,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 12337,
											"end": 12340,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12278,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 12278,
											"end": 12345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12278,
											"end": 12345,
											"name": "tag",
											"source": 9,
											"value": "615"
										},
										{
											"begin": 12278,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12271,
											"end": 12345,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12271,
											"end": 12345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12354,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "616"
										},
										{
											"begin": 12443,
											"end": 12446,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12354,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "472"
										},
										{
											"begin": 12354,
											"end": 12447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12354,
											"end": 12447,
											"name": "tag",
											"source": 9,
											"value": "616"
										},
										{
											"begin": 12354,
											"end": 12447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12472,
											"end": 12474,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12467,
											"end": 12470,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12463,
											"end": 12475,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12456,
											"end": 12475,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12456,
											"end": 12475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12481,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12115,
											"end": 12481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12906,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 12487,
											"end": 12906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12653,
											"end": 12657,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12691,
											"end": 12693,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12680,
											"end": 12689,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12676,
											"end": 12694,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12668,
											"end": 12694,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12668,
											"end": 12694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12740,
											"end": 12749,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12734,
											"end": 12738,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12730,
											"end": 12750,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12727,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12715,
											"end": 12724,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12711,
											"end": 12728,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12704,
											"end": 12751,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12768,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "618"
										},
										{
											"begin": 12894,
											"end": 12898,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12768,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "473"
										},
										{
											"begin": 12768,
											"end": 12899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12768,
											"end": 12899,
											"name": "tag",
											"source": 9,
											"value": "618"
										},
										{
											"begin": 12768,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12760,
											"end": 12899,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12760,
											"end": 12899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12906,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12912,
											"end": 13083,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 12912,
											"end": 13083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13052,
											"end": 13075,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F20746F6B656E7320746F2077697468647261770000000000000000000000"
										},
										{
											"begin": 13048,
											"end": 13049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13040,
											"end": 13046,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13036,
											"end": 13050,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13076,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12912,
											"end": 13083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12912,
											"end": 13083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13455,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 13089,
											"end": 13455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13231,
											"end": 13234,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13252,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 13316,
											"end": 13318,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 13311,
											"end": 13314,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13252,
											"end": 13319,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 13252,
											"end": 13319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13252,
											"end": 13319,
											"name": "tag",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 13252,
											"end": 13319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13245,
											"end": 13319,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13245,
											"end": 13319,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13328,
											"end": 13421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "622"
										},
										{
											"begin": 13417,
											"end": 13420,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13328,
											"end": 13421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 13328,
											"end": 13421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13328,
											"end": 13421,
											"name": "tag",
											"source": 9,
											"value": "622"
										},
										{
											"begin": 13328,
											"end": 13421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13446,
											"end": 13448,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13441,
											"end": 13444,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13437,
											"end": 13449,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13430,
											"end": 13449,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13430,
											"end": 13449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13455,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13455,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13089,
											"end": 13455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13461,
											"end": 13880,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 13461,
											"end": 13880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13627,
											"end": 13631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13665,
											"end": 13667,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13654,
											"end": 13663,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13650,
											"end": 13668,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13642,
											"end": 13668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13642,
											"end": 13668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13714,
											"end": 13723,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13708,
											"end": 13712,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13704,
											"end": 13724,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13700,
											"end": 13701,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13689,
											"end": 13698,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13685,
											"end": 13702,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13678,
											"end": 13725,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13742,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "624"
										},
										{
											"begin": 13868,
											"end": 13872,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13742,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 13742,
											"end": 13873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13742,
											"end": 13873,
											"name": "tag",
											"source": 9,
											"value": "624"
										},
										{
											"begin": 13742,
											"end": 13873,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13734,
											"end": 13873,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13734,
											"end": 13873,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13461,
											"end": 13880,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13461,
											"end": 13880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13461,
											"end": 13880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13461,
											"end": 13880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13886,
											"end": 14063,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 13886,
											"end": 14063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14026,
											"end": 14055,
											"name": "PUSH",
											"source": 9,
											"value": "507269766174652053616C6520616C7265616479206163746976650000000000"
										},
										{
											"begin": 14022,
											"end": 14023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14014,
											"end": 14020,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14010,
											"end": 14024,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14003,
											"end": 14056,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13886,
											"end": 14063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13886,
											"end": 14063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14069,
											"end": 14435,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 14069,
											"end": 14435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14211,
											"end": 14214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14232,
											"end": 14299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "627"
										},
										{
											"begin": 14296,
											"end": 14298,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 14291,
											"end": 14294,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14232,
											"end": 14299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 14232,
											"end": 14299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14232,
											"end": 14299,
											"name": "tag",
											"source": 9,
											"value": "627"
										},
										{
											"begin": 14232,
											"end": 14299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14225,
											"end": 14299,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14225,
											"end": 14299,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14308,
											"end": 14401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "628"
										},
										{
											"begin": 14397,
											"end": 14400,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14308,
											"end": 14401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 14308,
											"end": 14401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14308,
											"end": 14401,
											"name": "tag",
											"source": 9,
											"value": "628"
										},
										{
											"begin": 14308,
											"end": 14401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14426,
											"end": 14428,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14421,
											"end": 14424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14417,
											"end": 14429,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14410,
											"end": 14429,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14410,
											"end": 14429,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14069,
											"end": 14435,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14069,
											"end": 14435,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14069,
											"end": 14435,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14069,
											"end": 14435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14441,
											"end": 14860,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 14441,
											"end": 14860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14607,
											"end": 14611,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14645,
											"end": 14647,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14634,
											"end": 14643,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14630,
											"end": 14648,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14622,
											"end": 14648,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14622,
											"end": 14648,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14694,
											"end": 14703,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14688,
											"end": 14692,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14684,
											"end": 14704,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14680,
											"end": 14681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14669,
											"end": 14678,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14665,
											"end": 14682,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14658,
											"end": 14705,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14722,
											"end": 14853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "630"
										},
										{
											"begin": 14848,
											"end": 14852,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14722,
											"end": 14853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 14722,
											"end": 14853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14722,
											"end": 14853,
											"name": "tag",
											"source": 9,
											"value": "630"
										},
										{
											"begin": 14722,
											"end": 14853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14714,
											"end": 14853,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14714,
											"end": 14853,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14441,
											"end": 14860,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14441,
											"end": 14860,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14441,
											"end": 14860,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14441,
											"end": 14860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14866,
											"end": 15034,
											"name": "tag",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 14866,
											"end": 15034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15006,
											"end": 15026,
											"name": "PUSH",
											"source": 9,
											"value": "496E76616C69642070657263656E746167650000000000000000000000000000"
										},
										{
											"begin": 15002,
											"end": 15003,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14994,
											"end": 15000,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14990,
											"end": 15004,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14983,
											"end": 15027,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14866,
											"end": 15034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14866,
											"end": 15034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15040,
											"end": 15406,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 15040,
											"end": 15406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15182,
											"end": 15185,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15203,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "633"
										},
										{
											"begin": 15267,
											"end": 15269,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 15262,
											"end": 15265,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15203,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 15203,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15203,
											"end": 15270,
											"name": "tag",
											"source": 9,
											"value": "633"
										},
										{
											"begin": 15203,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15196,
											"end": 15270,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15196,
											"end": 15270,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15279,
											"end": 15372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "634"
										},
										{
											"begin": 15368,
											"end": 15371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15279,
											"end": 15372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "478"
										},
										{
											"begin": 15279,
											"end": 15372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15279,
											"end": 15372,
											"name": "tag",
											"source": 9,
											"value": "634"
										},
										{
											"begin": 15279,
											"end": 15372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15397,
											"end": 15399,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15392,
											"end": 15395,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15388,
											"end": 15400,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15381,
											"end": 15400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15381,
											"end": 15400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15040,
											"end": 15406,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15040,
											"end": 15406,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15040,
											"end": 15406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15040,
											"end": 15406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15412,
											"end": 15831,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 15412,
											"end": 15831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15578,
											"end": 15582,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15616,
											"end": 15618,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15605,
											"end": 15614,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15601,
											"end": 15619,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15593,
											"end": 15619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15593,
											"end": 15619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15665,
											"end": 15674,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15659,
											"end": 15663,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15655,
											"end": 15675,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15651,
											"end": 15652,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15640,
											"end": 15649,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15636,
											"end": 15653,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15629,
											"end": 15676,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15693,
											"end": 15824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "636"
										},
										{
											"begin": 15819,
											"end": 15823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15693,
											"end": 15824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 15693,
											"end": 15824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15693,
											"end": 15824,
											"name": "tag",
											"source": 9,
											"value": "636"
										},
										{
											"begin": 15693,
											"end": 15824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15685,
											"end": 15824,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15685,
											"end": 15824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15412,
											"end": 15831,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15412,
											"end": 15831,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15412,
											"end": 15831,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15412,
											"end": 15831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15837,
											"end": 16169,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 15837,
											"end": 16169,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15958,
											"end": 15962,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15996,
											"end": 15998,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15985,
											"end": 15994,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15981,
											"end": 15999,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15973,
											"end": 15999,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15973,
											"end": 15999,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16009,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "638"
										},
										{
											"begin": 16077,
											"end": 16078,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16066,
											"end": 16075,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16062,
											"end": 16079,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16053,
											"end": 16059,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16009,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 16009,
											"end": 16080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16009,
											"end": 16080,
											"name": "tag",
											"source": 9,
											"value": "638"
										},
										{
											"begin": 16009,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16090,
											"end": 16162,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "639"
										},
										{
											"begin": 16158,
											"end": 16160,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16147,
											"end": 16156,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16143,
											"end": 16161,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16134,
											"end": 16140,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16090,
											"end": 16162,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 16090,
											"end": 16162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16090,
											"end": 16162,
											"name": "tag",
											"source": 9,
											"value": "639"
										},
										{
											"begin": 16090,
											"end": 16162,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15837,
											"end": 16169,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15837,
											"end": 16169,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15837,
											"end": 16169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15837,
											"end": 16169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15837,
											"end": 16169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15837,
											"end": 16169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16175,
											"end": 16369,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 16175,
											"end": 16369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16215,
											"end": 16219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16235,
											"end": 16255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "641"
										},
										{
											"begin": 16253,
											"end": 16254,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16235,
											"end": 16255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 16235,
											"end": 16255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16235,
											"end": 16255,
											"name": "tag",
											"source": 9,
											"value": "641"
										},
										{
											"begin": 16235,
											"end": 16255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16230,
											"end": 16255,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16230,
											"end": 16255,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16269,
											"end": 16289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "642"
										},
										{
											"begin": 16287,
											"end": 16288,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16269,
											"end": 16289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 16269,
											"end": 16289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16269,
											"end": 16289,
											"name": "tag",
											"source": 9,
											"value": "642"
										},
										{
											"begin": 16269,
											"end": 16289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16264,
											"end": 16289,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16264,
											"end": 16289,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16313,
											"end": 16314,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16310,
											"end": 16311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16306,
											"end": 16315,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16298,
											"end": 16315,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16298,
											"end": 16315,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16337,
											"end": 16338,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16331,
											"end": 16335,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16328,
											"end": 16339,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 16325,
											"end": 16362,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16325,
											"end": 16362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "643"
										},
										{
											"begin": 16325,
											"end": 16362,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16342,
											"end": 16360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "644"
										},
										{
											"begin": 16342,
											"end": 16360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 16342,
											"end": 16360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16342,
											"end": 16360,
											"name": "tag",
											"source": 9,
											"value": "644"
										},
										{
											"begin": 16342,
											"end": 16360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16325,
											"end": 16362,
											"name": "tag",
											"source": 9,
											"value": "643"
										},
										{
											"begin": 16325,
											"end": 16362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16175,
											"end": 16369,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16175,
											"end": 16369,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16175,
											"end": 16369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16175,
											"end": 16369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16175,
											"end": 16369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16375,
											"end": 16785,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 16375,
											"end": 16785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16415,
											"end": 16422,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16438,
											"end": 16458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "646"
										},
										{
											"begin": 16456,
											"end": 16457,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16438,
											"end": 16458,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 16438,
											"end": 16458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16438,
											"end": 16458,
											"name": "tag",
											"source": 9,
											"value": "646"
										},
										{
											"begin": 16438,
											"end": 16458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16433,
											"end": 16458,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16433,
											"end": 16458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16472,
											"end": 16492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "647"
										},
										{
											"begin": 16490,
											"end": 16491,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16472,
											"end": 16492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 16472,
											"end": 16492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16472,
											"end": 16492,
											"name": "tag",
											"source": 9,
											"value": "647"
										},
										{
											"begin": 16472,
											"end": 16492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16467,
											"end": 16492,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16467,
											"end": 16492,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16527,
											"end": 16528,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16524,
											"end": 16525,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16520,
											"end": 16529,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 16549,
											"end": 16579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "648"
										},
										{
											"begin": 16567,
											"end": 16578,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16549,
											"end": 16579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 16549,
											"end": 16579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16549,
											"end": 16579,
											"name": "tag",
											"source": 9,
											"value": "648"
										},
										{
											"begin": 16549,
											"end": 16579,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16538,
											"end": 16579,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16538,
											"end": 16579,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16728,
											"end": 16729,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16719,
											"end": 16726,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16715,
											"end": 16730,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 16712,
											"end": 16713,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16709,
											"end": 16731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 16689,
											"end": 16690,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16682,
											"end": 16691,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16662,
											"end": 16745,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 16639,
											"end": 16778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "649"
										},
										{
											"begin": 16639,
											"end": 16778,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16758,
											"end": 16776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "650"
										},
										{
											"begin": 16758,
											"end": 16776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 16758,
											"end": 16776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16758,
											"end": 16776,
											"name": "tag",
											"source": 9,
											"value": "650"
										},
										{
											"begin": 16758,
											"end": 16776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16639,
											"end": 16778,
											"name": "tag",
											"source": 9,
											"value": "649"
										},
										{
											"begin": 16639,
											"end": 16778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16423,
											"end": 16785,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16375,
											"end": 16785,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16375,
											"end": 16785,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16375,
											"end": 16785,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16375,
											"end": 16785,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16375,
											"end": 16785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16791,
											"end": 16971,
											"name": "tag",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 16791,
											"end": 16971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16839,
											"end": 16916,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16836,
											"end": 16837,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16829,
											"end": 16917,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16936,
											"end": 16940,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 16933,
											"end": 16934,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 16926,
											"end": 16941,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16960,
											"end": 16964,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 16957,
											"end": 16958,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16950,
											"end": 16965,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16977,
											"end": 17162,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 16977,
											"end": 17162,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17017,
											"end": 17018,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "653"
										},
										{
											"begin": 17052,
											"end": 17053,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17034,
											"end": 17054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 17034,
											"end": 17054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17034,
											"end": 17054,
											"name": "tag",
											"source": 9,
											"value": "653"
										},
										{
											"begin": 17034,
											"end": 17054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17029,
											"end": 17054,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17029,
											"end": 17054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17068,
											"end": 17088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "654"
										},
										{
											"begin": 17086,
											"end": 17087,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17068,
											"end": 17088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 17068,
											"end": 17088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17068,
											"end": 17088,
											"name": "tag",
											"source": 9,
											"value": "654"
										},
										{
											"begin": 17068,
											"end": 17088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17063,
											"end": 17088,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17063,
											"end": 17088,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17107,
											"end": 17108,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17097,
											"end": 17132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "655"
										},
										{
											"begin": 17097,
											"end": 17132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17112,
											"end": 17130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "656"
										},
										{
											"begin": 17112,
											"end": 17130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "480"
										},
										{
											"begin": 17112,
											"end": 17130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17112,
											"end": 17130,
											"name": "tag",
											"source": 9,
											"value": "656"
										},
										{
											"begin": 17112,
											"end": 17130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17097,
											"end": 17132,
											"name": "tag",
											"source": 9,
											"value": "655"
										},
										{
											"begin": 17097,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17154,
											"end": 17155,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17151,
											"end": 17152,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17147,
											"end": 17156,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 17142,
											"end": 17156,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17142,
											"end": 17156,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16977,
											"end": 17162,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16977,
											"end": 17162,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16977,
											"end": 17162,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16977,
											"end": 17162,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16977,
											"end": 17162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17168,
											"end": 17344,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 17168,
											"end": 17344,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17308,
											"end": 17336,
											"name": "PUSH",
											"source": 9,
											"value": "507269766174652053616C65206973206E6F7420616374697665000000000000"
										},
										{
											"begin": 17304,
											"end": 17305,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17296,
											"end": 17302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17292,
											"end": 17306,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17285,
											"end": 17337,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17168,
											"end": 17344,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17168,
											"end": 17344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17350,
											"end": 17716,
											"name": "tag",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 17350,
											"end": 17716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17492,
											"end": 17495,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17513,
											"end": 17580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "659"
										},
										{
											"begin": 17577,
											"end": 17579,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 17572,
											"end": 17575,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17513,
											"end": 17580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 17513,
											"end": 17580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17513,
											"end": 17580,
											"name": "tag",
											"source": 9,
											"value": "659"
										},
										{
											"begin": 17513,
											"end": 17580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17506,
											"end": 17580,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17506,
											"end": 17580,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17589,
											"end": 17682,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "660"
										},
										{
											"begin": 17678,
											"end": 17681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17589,
											"end": 17682,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 17589,
											"end": 17682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17589,
											"end": 17682,
											"name": "tag",
											"source": 9,
											"value": "660"
										},
										{
											"begin": 17589,
											"end": 17682,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17707,
											"end": 17709,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17702,
											"end": 17705,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17698,
											"end": 17710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17691,
											"end": 17710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17691,
											"end": 17710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17350,
											"end": 17716,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17350,
											"end": 17716,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17350,
											"end": 17716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17350,
											"end": 17716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17722,
											"end": 18141,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 17722,
											"end": 18141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17888,
											"end": 17892,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17926,
											"end": 17928,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17915,
											"end": 17924,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17911,
											"end": 17929,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17903,
											"end": 17929,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17903,
											"end": 17929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17975,
											"end": 17984,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17969,
											"end": 17973,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17965,
											"end": 17985,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17961,
											"end": 17962,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17950,
											"end": 17959,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17946,
											"end": 17963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17939,
											"end": 17986,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18003,
											"end": 18134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 18129,
											"end": 18133,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18003,
											"end": 18134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 18003,
											"end": 18134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18003,
											"end": 18134,
											"name": "tag",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 18003,
											"end": 18134,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17995,
											"end": 18134,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17995,
											"end": 18134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17722,
											"end": 18141,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17722,
											"end": 18141,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17722,
											"end": 18141,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17722,
											"end": 18141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18147,
											"end": 18371,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 18147,
											"end": 18371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18287,
											"end": 18321,
											"name": "PUSH",
											"source": 9,
											"value": "4D696E696D756D2055534420616D6F756E742072657175697265642069732035"
										},
										{
											"begin": 18283,
											"end": 18284,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18275,
											"end": 18281,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18271,
											"end": 18285,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18264,
											"end": 18322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18356,
											"end": 18363,
											"name": "PUSH",
											"source": 9,
											"value": "3020555344000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18351,
											"end": 18353,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18343,
											"end": 18349,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18339,
											"end": 18354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18332,
											"end": 18364,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18147,
											"end": 18371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18147,
											"end": 18371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18377,
											"end": 18743,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 18377,
											"end": 18743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18519,
											"end": 18522,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18540,
											"end": 18607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "665"
										},
										{
											"begin": 18604,
											"end": 18606,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 18599,
											"end": 18602,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18540,
											"end": 18607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 18540,
											"end": 18607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18540,
											"end": 18607,
											"name": "tag",
											"source": 9,
											"value": "665"
										},
										{
											"begin": 18540,
											"end": 18607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18533,
											"end": 18607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18533,
											"end": 18607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18616,
											"end": 18709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "666"
										},
										{
											"begin": 18705,
											"end": 18708,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18616,
											"end": 18709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 18616,
											"end": 18709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18616,
											"end": 18709,
											"name": "tag",
											"source": 9,
											"value": "666"
										},
										{
											"begin": 18616,
											"end": 18709,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18734,
											"end": 18736,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18729,
											"end": 18732,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18725,
											"end": 18737,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18718,
											"end": 18737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18718,
											"end": 18737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18377,
											"end": 18743,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18377,
											"end": 18743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18377,
											"end": 18743,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18377,
											"end": 18743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18749,
											"end": 19168,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 18749,
											"end": 19168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18915,
											"end": 18919,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18953,
											"end": 18955,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18942,
											"end": 18951,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18938,
											"end": 18956,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18930,
											"end": 18956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18930,
											"end": 18956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19002,
											"end": 19011,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18996,
											"end": 19000,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18992,
											"end": 19012,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18988,
											"end": 18989,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18977,
											"end": 18986,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18973,
											"end": 18990,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18966,
											"end": 19013,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19030,
											"end": 19161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "668"
										},
										{
											"begin": 19156,
											"end": 19160,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19030,
											"end": 19161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 19030,
											"end": 19161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19030,
											"end": 19161,
											"name": "tag",
											"source": 9,
											"value": "668"
										},
										{
											"begin": 19030,
											"end": 19161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19022,
											"end": 19161,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19022,
											"end": 19161,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18749,
											"end": 19168,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18749,
											"end": 19168,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18749,
											"end": 19168,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18749,
											"end": 19168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19174,
											"end": 19397,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 19174,
											"end": 19397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19314,
											"end": 19348,
											"name": "PUSH",
											"source": 9,
											"value": "45786365656473206D6178696D756D20746F6B656E207075726368617365206C"
										},
										{
											"begin": 19310,
											"end": 19311,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19302,
											"end": 19308,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19298,
											"end": 19312,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19291,
											"end": 19349,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19383,
											"end": 19389,
											"name": "PUSH",
											"source": 9,
											"value": "696D697400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19378,
											"end": 19380,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19370,
											"end": 19376,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19366,
											"end": 19381,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19359,
											"end": 19390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19174,
											"end": 19397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19174,
											"end": 19397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19403,
											"end": 19769,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 19403,
											"end": 19769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19545,
											"end": 19548,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19566,
											"end": 19633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "671"
										},
										{
											"begin": 19630,
											"end": 19632,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 19625,
											"end": 19628,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19566,
											"end": 19633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 19566,
											"end": 19633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19566,
											"end": 19633,
											"name": "tag",
											"source": 9,
											"value": "671"
										},
										{
											"begin": 19566,
											"end": 19633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19559,
											"end": 19633,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19559,
											"end": 19633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19642,
											"end": 19735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "672"
										},
										{
											"begin": 19731,
											"end": 19734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19642,
											"end": 19735,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 19642,
											"end": 19735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19642,
											"end": 19735,
											"name": "tag",
											"source": 9,
											"value": "672"
										},
										{
											"begin": 19642,
											"end": 19735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19760,
											"end": 19762,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19755,
											"end": 19758,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19751,
											"end": 19763,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19744,
											"end": 19763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19744,
											"end": 19763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19403,
											"end": 19769,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19403,
											"end": 19769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19403,
											"end": 19769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19403,
											"end": 19769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19775,
											"end": 20194,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 19775,
											"end": 20194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19941,
											"end": 19945,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19979,
											"end": 19981,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19968,
											"end": 19977,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19964,
											"end": 19982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19956,
											"end": 19982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19956,
											"end": 19982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20028,
											"end": 20037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20022,
											"end": 20026,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20018,
											"end": 20038,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20014,
											"end": 20015,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20003,
											"end": 20012,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19999,
											"end": 20016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19992,
											"end": 20039,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20056,
											"end": 20187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "674"
										},
										{
											"begin": 20182,
											"end": 20186,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20056,
											"end": 20187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 20056,
											"end": 20187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20056,
											"end": 20187,
											"name": "tag",
											"source": 9,
											"value": "674"
										},
										{
											"begin": 20056,
											"end": 20187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20048,
											"end": 20187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20048,
											"end": 20187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19775,
											"end": 20194,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19775,
											"end": 20194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19775,
											"end": 20194,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19775,
											"end": 20194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20200,
											"end": 20368,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 20200,
											"end": 20368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20340,
											"end": 20360,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F2045544820746F2077697468647261770000000000000000000000000000"
										},
										{
											"begin": 20336,
											"end": 20337,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20328,
											"end": 20334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20324,
											"end": 20338,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20317,
											"end": 20361,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20200,
											"end": 20368,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20200,
											"end": 20368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20374,
											"end": 20740,
											"name": "tag",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 20374,
											"end": 20740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20516,
											"end": 20519,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20537,
											"end": 20604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "677"
										},
										{
											"begin": 20601,
											"end": 20603,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 20596,
											"end": 20599,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20537,
											"end": 20604,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 20537,
											"end": 20604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20537,
											"end": 20604,
											"name": "tag",
											"source": 9,
											"value": "677"
										},
										{
											"begin": 20537,
											"end": 20604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20530,
											"end": 20604,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20530,
											"end": 20604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20613,
											"end": 20706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "678"
										},
										{
											"begin": 20702,
											"end": 20705,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20613,
											"end": 20706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 20613,
											"end": 20706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20613,
											"end": 20706,
											"name": "tag",
											"source": 9,
											"value": "678"
										},
										{
											"begin": 20613,
											"end": 20706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20731,
											"end": 20733,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20726,
											"end": 20729,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20722,
											"end": 20734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20715,
											"end": 20734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20715,
											"end": 20734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20374,
											"end": 20740,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20374,
											"end": 20740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20374,
											"end": 20740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20374,
											"end": 20740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20746,
											"end": 21165,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 20746,
											"end": 21165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20912,
											"end": 20916,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20950,
											"end": 20952,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20939,
											"end": 20948,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20935,
											"end": 20953,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20927,
											"end": 20953,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20927,
											"end": 20953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20999,
											"end": 21008,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20993,
											"end": 20997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20989,
											"end": 21009,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20985,
											"end": 20986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20974,
											"end": 20983,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20970,
											"end": 20987,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20963,
											"end": 21010,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21027,
											"end": 21158,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "680"
										},
										{
											"begin": 21153,
											"end": 21157,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21027,
											"end": 21158,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 21027,
											"end": 21158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21027,
											"end": 21158,
											"name": "tag",
											"source": 9,
											"value": "680"
										},
										{
											"begin": 21027,
											"end": 21158,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21019,
											"end": 21158,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21019,
											"end": 21158,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20746,
											"end": 21165,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20746,
											"end": 21165,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20746,
											"end": 21165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20746,
											"end": 21165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21171,
											"end": 21318,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 21171,
											"end": 21318,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21272,
											"end": 21283,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21309,
											"end": 21312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21294,
											"end": 21312,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21294,
											"end": 21312,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21171,
											"end": 21318,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 21171,
											"end": 21318,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21171,
											"end": 21318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21171,
											"end": 21318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21171,
											"end": 21318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21324,
											"end": 21438,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 21324,
											"end": 21438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21324,
											"end": 21438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21324,
											"end": 21438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21444,
											"end": 21842,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 21444,
											"end": 21842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21603,
											"end": 21606,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21624,
											"end": 21707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "684"
										},
										{
											"begin": 21705,
											"end": 21706,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21700,
											"end": 21703,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21624,
											"end": 21707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 21624,
											"end": 21707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21624,
											"end": 21707,
											"name": "tag",
											"source": 9,
											"value": "684"
										},
										{
											"begin": 21624,
											"end": 21707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21617,
											"end": 21707,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21617,
											"end": 21707,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21716,
											"end": 21809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "685"
										},
										{
											"begin": 21805,
											"end": 21808,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21716,
											"end": 21809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 21716,
											"end": 21809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21716,
											"end": 21809,
											"name": "tag",
											"source": 9,
											"value": "685"
										},
										{
											"begin": 21716,
											"end": 21809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21834,
											"end": 21835,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21829,
											"end": 21832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21825,
											"end": 21836,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21818,
											"end": 21836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21818,
											"end": 21836,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21444,
											"end": 21842,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21444,
											"end": 21842,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21444,
											"end": 21842,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21444,
											"end": 21842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21848,
											"end": 22227,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 21848,
											"end": 22227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22032,
											"end": 22035,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22054,
											"end": 22201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "687"
										},
										{
											"begin": 22197,
											"end": 22200,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22054,
											"end": 22201,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 22054,
											"end": 22201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22054,
											"end": 22201,
											"name": "tag",
											"source": 9,
											"value": "687"
										},
										{
											"begin": 22054,
											"end": 22201,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22047,
											"end": 22201,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22047,
											"end": 22201,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22218,
											"end": 22221,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22211,
											"end": 22221,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22211,
											"end": 22221,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21848,
											"end": 22227,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21848,
											"end": 22227,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21848,
											"end": 22227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21848,
											"end": 22227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22233,
											"end": 22398,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 22233,
											"end": 22398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22373,
											"end": 22390,
											"name": "PUSH",
											"source": 9,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 22369,
											"end": 22370,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22361,
											"end": 22367,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22357,
											"end": 22371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22350,
											"end": 22391,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22233,
											"end": 22398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22233,
											"end": 22398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22404,
											"end": 22770,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 22404,
											"end": 22770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22546,
											"end": 22549,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22567,
											"end": 22634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "690"
										},
										{
											"begin": 22631,
											"end": 22633,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 22626,
											"end": 22629,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22567,
											"end": 22634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 22567,
											"end": 22634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22567,
											"end": 22634,
											"name": "tag",
											"source": 9,
											"value": "690"
										},
										{
											"begin": 22567,
											"end": 22634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22560,
											"end": 22634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22560,
											"end": 22634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22643,
											"end": 22736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "691"
										},
										{
											"begin": 22732,
											"end": 22735,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22643,
											"end": 22736,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 22643,
											"end": 22736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22643,
											"end": 22736,
											"name": "tag",
											"source": 9,
											"value": "691"
										},
										{
											"begin": 22643,
											"end": 22736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22761,
											"end": 22763,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22756,
											"end": 22759,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22752,
											"end": 22764,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22745,
											"end": 22764,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22745,
											"end": 22764,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22404,
											"end": 22770,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22404,
											"end": 22770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22404,
											"end": 22770,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22404,
											"end": 22770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22776,
											"end": 23195,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 22776,
											"end": 23195,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22942,
											"end": 22946,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22980,
											"end": 22982,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22969,
											"end": 22978,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22965,
											"end": 22983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22957,
											"end": 22983,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22957,
											"end": 22983,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23029,
											"end": 23038,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23023,
											"end": 23027,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23019,
											"end": 23039,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23015,
											"end": 23016,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23004,
											"end": 23013,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23000,
											"end": 23017,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22993,
											"end": 23040,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23057,
											"end": 23188,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "693"
										},
										{
											"begin": 23183,
											"end": 23187,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23057,
											"end": 23188,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 23057,
											"end": 23188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23057,
											"end": 23188,
											"name": "tag",
											"source": 9,
											"value": "693"
										},
										{
											"begin": 23057,
											"end": 23188,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23049,
											"end": 23188,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23049,
											"end": 23188,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22776,
											"end": 23195,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22776,
											"end": 23195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22776,
											"end": 23195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22776,
											"end": 23195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23201,
											"end": 23643,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 23201,
											"end": 23643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23350,
											"end": 23354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23388,
											"end": 23390,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 23377,
											"end": 23386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23373,
											"end": 23391,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23365,
											"end": 23391,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23365,
											"end": 23391,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23401,
											"end": 23472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "695"
										},
										{
											"begin": 23469,
											"end": 23470,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23458,
											"end": 23467,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23454,
											"end": 23471,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23445,
											"end": 23451,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 23401,
											"end": 23472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 23401,
											"end": 23472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23401,
											"end": 23472,
											"name": "tag",
											"source": 9,
											"value": "695"
										},
										{
											"begin": 23401,
											"end": 23472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23482,
											"end": 23554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "696"
										},
										{
											"begin": 23550,
											"end": 23552,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23539,
											"end": 23548,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23535,
											"end": 23553,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23526,
											"end": 23532,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 23482,
											"end": 23554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 23482,
											"end": 23554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23482,
											"end": 23554,
											"name": "tag",
											"source": 9,
											"value": "696"
										},
										{
											"begin": 23482,
											"end": 23554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23564,
											"end": 23636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "697"
										},
										{
											"begin": 23632,
											"end": 23634,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 23621,
											"end": 23630,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23617,
											"end": 23635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23608,
											"end": 23614,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 23564,
											"end": 23636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 23564,
											"end": 23636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23564,
											"end": 23636,
											"name": "tag",
											"source": 9,
											"value": "697"
										},
										{
											"begin": 23564,
											"end": 23636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23201,
											"end": 23643,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 23201,
											"end": 23643,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 23201,
											"end": 23643,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23201,
											"end": 23643,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23201,
											"end": 23643,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23201,
											"end": 23643,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23201,
											"end": 23643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23649,
											"end": 23830,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 23649,
											"end": 23830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23789,
											"end": 23822,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 23785,
											"end": 23786,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23777,
											"end": 23783,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23773,
											"end": 23787,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23766,
											"end": 23823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23649,
											"end": 23830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23649,
											"end": 23830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23836,
											"end": 24202,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 23836,
											"end": 24202,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23978,
											"end": 23981,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23999,
											"end": 24066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "700"
										},
										{
											"begin": 24063,
											"end": 24065,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 24058,
											"end": 24061,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23999,
											"end": 24066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 23999,
											"end": 24066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23999,
											"end": 24066,
											"name": "tag",
											"source": 9,
											"value": "700"
										},
										{
											"begin": 23999,
											"end": 24066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23992,
											"end": 24066,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23992,
											"end": 24066,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24075,
											"end": 24168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "701"
										},
										{
											"begin": 24164,
											"end": 24167,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24075,
											"end": 24168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 24075,
											"end": 24168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24075,
											"end": 24168,
											"name": "tag",
											"source": 9,
											"value": "701"
										},
										{
											"begin": 24075,
											"end": 24168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24193,
											"end": 24195,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24188,
											"end": 24191,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24184,
											"end": 24196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24177,
											"end": 24196,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24177,
											"end": 24196,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23836,
											"end": 24202,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23836,
											"end": 24202,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23836,
											"end": 24202,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23836,
											"end": 24202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24208,
											"end": 24627,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 24208,
											"end": 24627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24374,
											"end": 24378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24412,
											"end": 24414,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24401,
											"end": 24410,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24397,
											"end": 24415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24389,
											"end": 24415,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24389,
											"end": 24415,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24461,
											"end": 24470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24455,
											"end": 24459,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24451,
											"end": 24471,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24447,
											"end": 24448,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24436,
											"end": 24445,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24432,
											"end": 24449,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24425,
											"end": 24472,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24489,
											"end": 24620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "703"
										},
										{
											"begin": 24615,
											"end": 24619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24489,
											"end": 24620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 24489,
											"end": 24620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24489,
											"end": 24620,
											"name": "tag",
											"source": 9,
											"value": "703"
										},
										{
											"begin": 24489,
											"end": 24620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24481,
											"end": 24620,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24481,
											"end": 24620,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24208,
											"end": 24627,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24208,
											"end": 24627,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24208,
											"end": 24627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24208,
											"end": 24627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24633,
											"end": 24799,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 24633,
											"end": 24799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24773,
											"end": 24791,
											"name": "PUSH",
											"source": 9,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 24769,
											"end": 24770,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24761,
											"end": 24767,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24757,
											"end": 24771,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24750,
											"end": 24792,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24633,
											"end": 24799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24633,
											"end": 24799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24805,
											"end": 25171,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 24805,
											"end": 25171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24947,
											"end": 24950,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24968,
											"end": 25035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "706"
										},
										{
											"begin": 25032,
											"end": 25034,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 25027,
											"end": 25030,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24968,
											"end": 25035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 24968,
											"end": 25035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24968,
											"end": 25035,
											"name": "tag",
											"source": 9,
											"value": "706"
										},
										{
											"begin": 24968,
											"end": 25035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24961,
											"end": 25035,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24961,
											"end": 25035,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25044,
											"end": 25137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "707"
										},
										{
											"begin": 25133,
											"end": 25136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25044,
											"end": 25137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 25044,
											"end": 25137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25044,
											"end": 25137,
											"name": "tag",
											"source": 9,
											"value": "707"
										},
										{
											"begin": 25044,
											"end": 25137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25162,
											"end": 25164,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25157,
											"end": 25160,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25153,
											"end": 25165,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25146,
											"end": 25165,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25146,
											"end": 25165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24805,
											"end": 25171,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24805,
											"end": 25171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24805,
											"end": 25171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24805,
											"end": 25171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25177,
											"end": 25596,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 25177,
											"end": 25596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25343,
											"end": 25347,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25381,
											"end": 25383,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25370,
											"end": 25379,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25366,
											"end": 25384,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25358,
											"end": 25384,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25358,
											"end": 25384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25430,
											"end": 25439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25424,
											"end": 25428,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25420,
											"end": 25440,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25416,
											"end": 25417,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25405,
											"end": 25414,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25401,
											"end": 25418,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25394,
											"end": 25441,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25458,
											"end": 25589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "709"
										},
										{
											"begin": 25584,
											"end": 25588,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25458,
											"end": 25589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 25458,
											"end": 25589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25458,
											"end": 25589,
											"name": "tag",
											"source": 9,
											"value": "709"
										},
										{
											"begin": 25458,
											"end": 25589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25450,
											"end": 25589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25450,
											"end": 25589,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25177,
											"end": 25596,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 25177,
											"end": 25596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25177,
											"end": 25596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25177,
											"end": 25596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/bet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TOTAL_SUPPLY()": "902d55a5",
							"affiliateRewardPercentage()": "d50234c4",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyTokensPreSale(uint256)": "466c3f93",
							"buyTokensPrivateSale(uint256)": "d414890a",
							"calculateTokensPreSale(uint256)": "cb8dcfe6",
							"calculateTokensPrivateSale(uint256)": "f15a41f6",
							"decimals()": "313ce567",
							"endPreSale()": "ee889ed0",
							"endPrivateSale()": "e6a23c3d",
							"maxPurchaseAmountPreSale()": "ac21694c",
							"minPurchaseAmountPreSale()": "1ecf8f4d",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"preSaleActive()": "84494708",
							"preSaleEndPrice()": "8f7713ff",
							"preSaleSoldTokens()": "b68ed11f",
							"preSaleStartPrice()": "920168b3",
							"preSaleStartTime()": "06d65af3",
							"preSaleTargetFunds()": "ef5b329c",
							"preSaleTokens()": "0fe83bb8",
							"privateSaleActive()": "2a237bb6",
							"privateSaleEndPrice()": "bda95633",
							"privateSaleSoldTokens()": "5fb3b944",
							"privateSaleStartPrice()": "b0e68630",
							"privateSaleStartTime()": "940de97e",
							"privateSaleTokens()": "c552e04b",
							"renounceOwnership()": "715018a6",
							"startPreSale()": "55dd574c",
							"startPrivateSale(uint256)": "a089de2f",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"vestingSchedules(address)": "fdb20ccb",
							"withdrawETH()": "e086e5ec",
							"withdrawTokens()": "8d8f2adb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"affiliate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"AffiliateRewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ETHWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PreSaleEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"PreSaleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PrivateSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PrivateSaleEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"affiliateRewardPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"PrivateSaleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"VestedTokensReleased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"affiliateRewardPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokensPreSale\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokensPrivateSale\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"}],\"name\":\"calculateTokensPreSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"}],\"name\":\"calculateTokensPrivateSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endPreSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endPrivateSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPurchaseAmountPreSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minPurchaseAmountPreSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleEndPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleSoldTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleStartPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleTargetFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleEndPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleSoldTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleStartPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPreSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_affiliateRewardPercentage\",\"type\":\"uint256\"}],\"name\":\"startPrivateSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingSchedules\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releasedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"buyTokensPreSale(uint256)\":{\"details\":\"Pre-Sale s\\u0131ras\\u0131nda token sat\\u0131n al\\u0131m\\u0131n\\u0131 ger\\u00e7ekle\\u015ftirir.\"},\"buyTokensPrivateSale(uint256)\":{\"details\":\"Private Sale s\\u0131ras\\u0131nda token sat\\u0131n al\\u0131m\\u0131n\\u0131 ger\\u00e7ekle\\u015ftirir.\"},\"calculateTokensPreSale(uint256)\":{\"details\":\"Pre-Sale i\\u00e7in token fiyat\\u0131n\\u0131 USD cinsinden hesaplar.\",\"params\":{\"usdAmount\":\"Sat\\u0131n al\\u0131nacak token miktar\\u0131n\\u0131n hesaplanaca\\u011f\\u0131 USD miktar\\u0131.\"},\"returns\":{\"_0\":\"Sat\\u0131n al\\u0131nacak token miktar\\u0131.\"}},\"calculateTokensPrivateSale(uint256)\":{\"details\":\"Private Sale i\\u00e7in token fiyat\\u0131n\\u0131 USD cinsinden hesaplar.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"endPreSale()\":{\"details\":\"Pre-Sale'i sonland\\u0131r\\u0131r.\"},\"endPrivateSale()\":{\"details\":\"Private Sale'i sonland\\u0131r\\u0131r.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"startPreSale()\":{\"details\":\"Pre-Sale'i ba\\u015flat\\u0131r.\"},\"startPrivateSale(uint256)\":{\"details\":\"Private Sale'i ba\\u015flat\\u0131r ve affiliate \\u00f6d\\u00fcl y\\u00fczdesini belirler.\",\"params\":{\"_affiliateRewardPercentage\":\"Affiliate \\u00f6d\\u00fcl y\\u00fczdesi.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawETH()\":{\"details\":\"Kontratta bulunan ETH'yi \\u00e7ekmeye yarar.\"},\"withdrawTokens()\":{\"details\":\"Kontratta bulunan tokenlar\\u0131 \\u00e7ekmeye yarar.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bet.sol\":\"Bettoken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/bet.sol\":{\"keccak256\":\"0x74cc76bbbe2d5340516352af3d8d98012e3cd46189d4115341fff40bd0c222c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://397196ef4688d574feed1d6dd2975fc1b31a6ae5d36a97bb5cf262a9d94ad1e5\",\"dweb:/ipfs/QmSxfsLHPFV9FYdtZA7NeJzd2FvqEo5orJaMgMmvdzuiZ4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 480,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 486,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 488,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 490,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 492,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 403,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 302,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "_paused",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 1134,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "privateSaleTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1141,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "privateSaleStartPrice",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1148,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "privateSaleEndPrice",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1151,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "privateSaleSoldTokens",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1153,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "privateSaleStartTime",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1155,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "affiliateRewardPercentage",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1162,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "preSaleTokens",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1169,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "preSaleTargetFunds",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 1176,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "preSaleStartPrice",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 1183,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "preSaleEndPrice",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 1186,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "preSaleSoldTokens",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 1188,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "preSaleStartTime",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 1191,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "preSaleActive",
								"offset": 0,
								"slot": "20",
								"type": "t_bool"
							},
							{
								"astId": 1198,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "minPurchaseAmountPreSale",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							},
							{
								"astId": 1205,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "maxPurchaseAmountPreSale",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 1221,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "vestingSchedules",
								"offset": 0,
								"slot": "23",
								"type": "t_mapping(t_address,t_struct(VestingSchedule)1216_storage)"
							},
							{
								"astId": 1224,
								"contract": "contracts/bet.sol:Bettoken",
								"label": "privateSaleActive",
								"offset": 0,
								"slot": "24",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(VestingSchedule)1216_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Bettoken.VestingSchedule)",
								"numberOfBytes": "32",
								"value": "t_struct(VestingSchedule)1216_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(VestingSchedule)1216_storage": {
								"encoding": "inplace",
								"label": "struct Bettoken.VestingSchedule",
								"members": [
									{
										"astId": 1207,
										"contract": "contracts/bet.sol:Bettoken",
										"label": "totalAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1209,
										"contract": "contracts/bet.sol:Bettoken",
										"label": "releasedAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1211,
										"contract": "contracts/bet.sol:Bettoken",
										"label": "startTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1213,
										"contract": "contracts/bet.sol:Bettoken",
										"label": "duration",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1215,
										"contract": "contracts/bet.sol:Bettoken",
										"label": "interval",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1107,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1106,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1106
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1088,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"Pausable": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 1107,
							"src": "130:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 289,
										"name": "Context",
										"nameLocations": [
											"632:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "632:7:2"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392,
								1106
							],
							"name": "Pausable",
							"nameLocation": "620:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 295,
									"name": "Paused",
									"nameLocation": "730:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:2"
									},
									"src": "724:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 300,
									"name": "Unpaused",
									"nameLocation": "841:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "850:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:2"
									},
									"src": "835:32:2"
								},
								{
									"constant": false,
									"id": 302,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 301,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "986:32:2",
										"statements": [
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "996:15:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 311,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 392,
									"src": "972:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1229:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "1239:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:2"
											},
											{
												"id": 317,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 319,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:2"
									},
									"src": "1204:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1476:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 322,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:2"
											},
											{
												"id": 325,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 327,
									"name": "whenPaused",
									"nameLocation": "1463:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:2"
									},
									"src": "1454:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1668:31:2",
										"statements": [
											{
												"expression": {
													"id": 333,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "1685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "1678:14:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 392,
									"src": "1615:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1818:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 341,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "1837:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:2"
									},
									"scope": 392,
									"src": "1767:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1993:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 353,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "2011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:2"
									},
									"scope": 392,
									"src": "1945:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2235:66:2",
										"statements": [
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 365,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2245:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 370,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "2281:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 369,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "2269:25:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 362,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2221:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:2"
									},
									"scope": 392,
									"src": "2186:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2481:69:2",
										"statements": [
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "2530:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 385,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "2516:27:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 327,
												"src": "2470:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:2"
									},
									"scope": 392,
									"src": "2433:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 393,
							"src": "602:1950:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								300
							]
						}
					],
					"src": "105:2448:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							457
						]
					},
					"id": 458,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 395,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 457,
							"linearizedBaseContracts": [
								457
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 398,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 401,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 411,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 457,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 414,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 417,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 418,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 422,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 426,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 427,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 457,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 440,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 441,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 457,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 451,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 452,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 450,
												"id": 454,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 457,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 458,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"ERC20": [
							972
						],
						"IERC20": [
							1050
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1076
						]
					},
					"id": 973,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 461,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1051,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 460,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 463,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1077,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 462,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1076,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1107,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 464,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1106,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 467,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 285,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 466,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 469,
										"name": "Context",
										"nameLocations": [
											"1428:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "1428:7:4"
									},
									"id": 470,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:4"
								},
								{
									"baseName": {
										"id": 471,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "1437:6:4"
									},
									"id": 472,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:4"
								},
								{
									"baseName": {
										"id": 473,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1076,
										"src": "1445:14:4"
									},
									"id": 474,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:4"
								},
								{
									"baseName": {
										"id": 475,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:4"
									},
									"id": 476,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 468,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 972,
							"linearizedBaseContracts": [
								972,
								189,
								1076,
								1050,
								1106
							],
							"name": "ERC20",
							"nameLocation": "1419:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 480,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1480:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 479,
										"keyName": "account",
										"keyNameLocation": "1496:7:4",
										"keyType": {
											"id": 477,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 478,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 486,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1540:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 485,
										"keyName": "account",
										"keyNameLocation": "1556:7:4",
										"keyType": {
											"id": 481,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 484,
											"keyName": "spender",
											"keyNameLocation": "1583:7:4",
											"keyType": {
												"id": 482,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 483,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 488,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1630:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 487,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 490,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1665:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 489,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 492,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1691:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 491,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "1952:57:4",
										"statements": [
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 500,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "1962:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 501,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "1970:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:4"
											},
											{
												"expression": {
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 504,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "1985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 505,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "1995:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:4"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 509,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1908:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1929:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 496,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:4"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:4"
									},
									"scope": 972,
									"src": "1896:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1063
									],
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "2134:29:4",
										"statements": [
											{
												"expression": {
													"id": 515,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 490,
													"src": "2151:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 514,
												"id": 516,
												"nodeType": "Return",
												"src": "2144:12:4"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:4"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2119:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:4"
									},
									"scope": 972,
									"src": "2074:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1069
									],
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "2338:31:4",
										"statements": [
											{
												"expression": {
													"id": 524,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 492,
													"src": "2355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 523,
												"id": 525,
												"nodeType": "Return",
												"src": "2348:14:4"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:4"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2323:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:4"
									},
									"scope": 972,
									"src": "2276:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "3058:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 532,
												"id": 534,
												"nodeType": "Return",
												"src": "3068:9:4"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "3051:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 530,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:4"
									},
									"scope": 972,
									"src": "3002:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										999
									],
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "3205:36:4",
										"statements": [
											{
												"expression": {
													"id": 542,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 488,
													"src": "3222:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 541,
												"id": 543,
												"nodeType": "Return",
												"src": "3215:19:4"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:4"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "3196:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:4"
									},
									"scope": 972,
									"src": "3144:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1007
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "3373:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 553,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3390:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 555,
													"indexExpression": {
														"id": 554,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "3400:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 552,
												"id": 556,
												"nodeType": "Return",
												"src": "3383:25:4"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3318:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:4"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3364:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:4"
									},
									"scope": 972,
									"src": "3299:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1017
									],
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "3685:103:4",
										"statements": [
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "3695:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 568,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 572,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 570,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "3711:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 574,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "3743:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "3750:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "3754:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 573,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3733:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 567,
												"id": 580,
												"nodeType": "Return",
												"src": "3770:11:4"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3628:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3640:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:4"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3679:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:4"
									},
									"scope": 972,
									"src": "3610:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1027
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "3935:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 592,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3952:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 594,
														"indexExpression": {
															"id": 593,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "3964:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 596,
													"indexExpression": {
														"id": 595,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "3971:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 591,
												"id": 597,
												"nodeType": "Return",
												"src": "3945:34:4"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3865:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3880:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:4"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:4"
									},
									"scope": 972,
									"src": "3846:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1037
									],
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "4372:107:4",
										"statements": [
											{
												"assignments": [
													610
												],
												"declarations": [
													{
														"constant": false,
														"id": 610,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "4382:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 609,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 613,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 611,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "4398:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "4429:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4436:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4445:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 614,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															923
														],
														"referencedDeclaration": 863,
														"src": "4420:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 608,
												"id": 621,
												"nodeType": "Return",
												"src": "4461:11:4"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4310:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4327:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:4"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4366:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:4"
									},
									"scope": 972,
									"src": "4293:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1049
									],
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "5132:151:4",
										"statements": [
											{
												"assignments": [
													636
												],
												"declarations": [
													{
														"constant": false,
														"id": 636,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "5142:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 635,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 639,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 637,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "5160:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 641,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5198:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 642,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "5204:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5213:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 640,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "5182:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 647,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5239:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "5245:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5249:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "5229:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 634,
												"id": 653,
												"nodeType": "Return",
												"src": "5265:11:4"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5061:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5075:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5087:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:4"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5126:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:4"
									},
									"scope": 972,
									"src": "5039:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "5725:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 665,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "5739:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 666,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 679,
												"nodeType": "IfStatement",
												"src": "5735:86:4",
												"trueBody": {
													"id": 678,
													"nodeType": "Block",
													"src": "5759:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 672,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 671,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 677,
															"nodeType": "RevertStatement",
															"src": "5773:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 680,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "5834:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 681,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "5830:86:4",
												"trueBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "5852:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 687,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 686,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 692,
															"nodeType": "RevertStatement",
															"src": "5866:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 696,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5933:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 697,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5939:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "5943:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 695,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "5925:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:4"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5701:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:4"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:4"
									},
									"scope": 972,
									"src": "5656:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "6346:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "6360:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "6534:362:4",
													"statements": [
														{
															"assignments": [
																724
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 724,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 749,
																	"src": "6548:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 728,
															"initialValue": {
																"baseExpression": {
																	"id": 725,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "6570:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 727,
																"indexExpression": {
																	"id": 726,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "6580:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 729,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "6603:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 730,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "6617:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 739,
															"nodeType": "IfStatement",
															"src": "6599:115:4",
															"trueBody": {
																"id": 738,
																"nodeType": "Block",
																"src": "6624:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 733,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 705,
																					"src": "6674:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 734,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 724,
																					"src": "6680:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 735,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 709,
																					"src": "6693:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 732,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 737,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:4"
																	}
																]
															}
														},
														{
															"id": 748,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 740,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "6834:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 742,
																			"indexExpression": {
																				"id": 741,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 705,
																				"src": "6844:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 743,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 724,
																				"src": "6852:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 744,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 709,
																				"src": "6866:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 747,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:4"
																}
															]
														}
													]
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "6356:540:4",
												"trueBody": {
													"id": 722,
													"nodeType": "Block",
													"src": "6380:148:4",
													"statements": [
														{
															"expression": {
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 718,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "6496:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 719,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "6512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 721,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 751,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "6910:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 752,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 770,
													"nodeType": "Block",
													"src": "7125:206:4",
													"statements": [
														{
															"id": 769,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 763,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "7284:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 765,
																			"indexExpression": {
																				"id": 764,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 707,
																				"src": "7294:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 766,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "7301:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 768,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:4"
																}
															]
														}
													]
												},
												"id": 771,
												"nodeType": "IfStatement",
												"src": "6906:425:4",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "6928:191:4",
													"statements": [
														{
															"id": 761,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 757,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "7073:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 758,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "7089:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 760,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 773,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "7355:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "7361:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "7365:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 772,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "7346:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "EmitStatement",
												"src": "7341:30:4"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6288:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6302:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6314:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:4"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:4"
									},
									"scope": 972,
									"src": "6271:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "7777:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 787,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "7791:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 788,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "7787:91:4",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "7814:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 794,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 793,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "7828:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 803,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "7907:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "7916:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 802,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "7887:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:4"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "7736:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "7753:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:4"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:4"
									},
									"scope": 972,
									"src": "7721:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "8303:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "8317:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "8313:89:4",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "8340:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 827,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 826,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 832,
															"nodeType": "RevertStatement",
															"src": "8354:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 836,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "8419:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 837,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "8440:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 835,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "8411:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:4"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "8262:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "8279:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:4"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:4"
									},
									"scope": 972,
									"src": "8247:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "9063:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "9082:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "9089:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "9098:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 855,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															923
														],
														"referencedDeclaration": 923,
														"src": "9073:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:4"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "9007:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "9022:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "9039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:4"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:4"
									},
									"scope": 972,
									"src": "8989:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "10047:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "10061:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "10057:89:4",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "10082:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "10096:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "10159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "10155:90:4",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "10182:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "10196:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 905,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "10254:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 908,
															"indexExpression": {
																"id": 906,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "10266:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 909,
														"indexExpression": {
															"id": 907,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "10273:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 910,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "10284:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:4"
											},
											{
												"condition": {
													"id": 913,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 872,
													"src": "10303:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 921,
												"nodeType": "IfStatement",
												"src": "10299:76:4",
												"trueBody": {
													"id": 920,
													"nodeType": "Block",
													"src": "10314:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 915,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "10342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 916,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "10349:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 917,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "10358:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 914,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "10333:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 919,
															"nodeType": "EmitStatement",
															"src": "10328:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9967:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9999:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "10014:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:4"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:4"
									},
									"scope": 972,
									"src": "9949:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "10752:388:4",
										"statements": [
											{
												"assignments": [
													934
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "10762:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 933,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 939,
												"initialValue": {
													"arguments": [
														{
															"id": 936,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10799:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "10806:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 935,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "10789:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "10828:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 942,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 941,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 969,
												"nodeType": "IfStatement",
												"src": "10824:310:4",
												"trueBody": {
													"id": 968,
													"nodeType": "Block",
													"src": "10867:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 947,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "10885:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 948,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "10904:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 957,
															"nodeType": "IfStatement",
															"src": "10881:130:4",
															"trueBody": {
																"id": 956,
																"nodeType": "Block",
																"src": "10911:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 951,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 928,
																					"src": "10963:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 952,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "10972:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 953,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "10990:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 950,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 955,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:4"
																	}
																]
															}
														},
														{
															"id": 967,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 959,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 926,
																				"src": "11061:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 960,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 928,
																				"src": "11068:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 961,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "11077:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 962,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "11096:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 964,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 958,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				863,
																				923
																			],
																			"referencedDeclaration": 923,
																			"src": "11052:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 966,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10688:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10720:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:4"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:4"
									},
									"scope": 972,
									"src": "10663:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 973,
							"src": "1401:9741:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "105:11038:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1050
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 974,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 975,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1050,
							"linearizedBaseContracts": [
								1050
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 984,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 993,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 1050,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "930:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:5"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:5"
									},
									"scope": 1050,
									"src": "911:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1233:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:5"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1266:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:5"
									},
									"scope": 1050,
									"src": "1203:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:5"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:5"
									},
									"scope": 1050,
									"src": "1547:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2325:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:5"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 1050,
									"src": "2308:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1049,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2711:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2725:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2737:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:5"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1046,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:5"
									},
									"scope": 1050,
									"src": "2689:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1051,
							"src": "203:2575:5",
							"usedErrors": [],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "106:2673:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1050
						],
						"IERC20Metadata": [
							1076
						]
					},
					"id": 1077,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1077,
							"sourceUnit": 1051,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1053,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1056,
										"name": "IERC20",
										"nameLocations": [
											"305:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "305:6:6"
									},
									"id": 1057,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1055,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1076,
							"linearizedBaseContracts": [
								1076,
								1050
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1063,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "416:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:6"
									},
									"scope": 1076,
									"src": "377:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1069,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:6"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "539:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1066,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:6"
									},
									"scope": 1076,
									"src": "498:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:6"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "673:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1072,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:6"
									},
									"scope": 1076,
									"src": "630:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1077,
							"src": "277:405:6",
							"usedErrors": [],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "125:558:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1106
						]
					},
					"id": 1107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1078,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1079,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1106,
							"linearizedBaseContracts": [
								1106
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1084,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1086,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1106,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1093,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1095,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1106,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1101,
												"id": 1103,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1106,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1107,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"contracts/bet.sol": {
				"ast": {
					"absolutePath": "contracts/bet.sol",
					"exportedSymbols": {
						"Bettoken": [
							1730
						],
						"Context": [
							1106
						],
						"ERC20": [
							972
						],
						"IERC20": [
							1050
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1076
						],
						"Ownable": [
							147
						],
						"Pausable": [
							392
						],
						"ReentrancyGuard": [
							457
						]
					},
					"id": 1731,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1108,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1731,
							"sourceUnit": 973,
							"src": "57:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1110,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1731,
							"sourceUnit": 148,
							"src": "113:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1111,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1731,
							"sourceUnit": 458,
							"src": "166:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1731,
							"sourceUnit": 393,
							"src": "229:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1113,
										"name": "ERC20",
										"nameLocations": [
											"307:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "307:5:8"
									},
									"id": 1114,
									"nodeType": "InheritanceSpecifier",
									"src": "307:5:8"
								},
								{
									"baseName": {
										"id": 1115,
										"name": "Ownable",
										"nameLocations": [
											"314:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "314:7:8"
									},
									"id": 1116,
									"nodeType": "InheritanceSpecifier",
									"src": "314:7:8"
								},
								{
									"baseName": {
										"id": 1117,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"323:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 457,
										"src": "323:15:8"
									},
									"id": 1118,
									"nodeType": "InheritanceSpecifier",
									"src": "323:15:8"
								},
								{
									"baseName": {
										"id": 1119,
										"name": "Pausable",
										"nameLocations": [
											"340:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "340:8:8"
									},
									"id": 1120,
									"nodeType": "InheritanceSpecifier",
									"src": "340:8:8"
								}
							],
							"canonicalName": "Bettoken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1730,
							"linearizedBaseContracts": [
								1730,
								392,
								457,
								147,
								972,
								189,
								1076,
								1050,
								1106
							],
							"name": "Bettoken",
							"nameLocation": "295:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 1127,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "409:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "385:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1121,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "385:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_200000000000000000000000000_by_1",
											"typeString": "int_const 200000000000000000000000000"
										},
										"id": 1126,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3230305f3030305f303030",
											"id": 1122,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "424:11:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_200000000_by_1",
												"typeString": "int_const 200000000"
											},
											"value": "200_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1125,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1123,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "438:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1124,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "444:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "438:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "424:22:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200000000000000000000000000_by_1",
											"typeString": "int_const 200000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c552e04b",
									"id": 1134,
									"mutability": "mutable",
									"name": "privateSaleTokens",
									"nameLocation": "503:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "488:56:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1128,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "488:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_38835764000000000000000000_by_1",
											"typeString": "int_const 38835764000000000000000000"
										},
										"id": 1133,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "33385f3833355f373634",
											"id": 1129,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "523:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_38835764_by_1",
												"typeString": "int_const 38835764"
											},
											"value": "38_835_764"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1132,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1130,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "536:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1131,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "542:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "536:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "523:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_38835764000000000000000000_by_1",
											"typeString": "int_const 38835764000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b0e68630",
									"id": 1141,
									"mutability": "mutable",
									"name": "privateSaleStartPrice",
									"nameLocation": "565:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "550:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "550:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										},
										"id": 1140,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e303031",
											"id": 1136,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "589:5:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1000",
												"typeString": "rational_const 1 / 1000"
											},
											"value": "0.001"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1139,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1137,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "597:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1138,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "603:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "597:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "589:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bda95633",
									"id": 1148,
									"mutability": "mutable",
									"name": "privateSaleEndPrice",
									"nameLocation": "660:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "645:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1142,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "645:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_50500000000000000_by_1",
											"typeString": "int_const 50500000000000000"
										},
										"id": 1147,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e30353035",
											"id": 1143,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "682:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_101_by_2000",
												"typeString": "rational_const 101 / 2000"
											},
											"value": "0.0505"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1146,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1144,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "691:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1145,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "697:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "691:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "682:17:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50500000000000000_by_1",
											"typeString": "int_const 50500000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5fb3b944",
									"id": 1151,
									"mutability": "mutable",
									"name": "privateSaleSoldTokens",
									"nameLocation": "749:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "734:40:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1149,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "734:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1150,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "773:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "940de97e",
									"id": 1153,
									"mutability": "mutable",
									"name": "privateSaleStartTime",
									"nameLocation": "795:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "780:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1152,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "780:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d50234c4",
									"id": 1155,
									"mutability": "mutable",
									"name": "affiliateRewardPercentage",
									"nameLocation": "907:25:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "892:40:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "892:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fe83bb8",
									"id": 1162,
									"mutability": "mutable",
									"name": "preSaleTokens",
									"nameLocation": "1038:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "1023:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1156,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1023:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_161164236000000000000000000_by_1",
											"typeString": "int_const 161164236000000000000000000"
										},
										"id": 1161,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3136315f3136345f323336",
											"id": 1157,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1054:11:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_161164236_by_1",
												"typeString": "int_const 161164236"
											},
											"value": "161_164_236"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1160,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1158,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1068:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1159,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1074:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1068:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1054:22:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_161164236000000000000000000_by_1",
											"typeString": "int_const 161164236000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ef5b329c",
									"id": 1169,
									"mutability": "mutable",
									"name": "preSaleTargetFunds",
									"nameLocation": "1146:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "1131:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1163,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1131:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_19000000000000000000000000_by_1",
											"typeString": "int_const 19000000000000000000000000"
										},
										"id": 1168,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31395f3030305f303030",
											"id": 1164,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1167:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_19000000_by_1",
												"typeString": "int_const 19000000"
											},
											"value": "19_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1167,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1165,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1180:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1166,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1186:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1180:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1167:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_19000000000000000000000000_by_1",
											"typeString": "int_const 19000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "920168b3",
									"id": 1176,
									"mutability": "mutable",
									"name": "preSaleStartPrice",
									"nameLocation": "1252:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "1237:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1170,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1237:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_50500000000000000_by_1",
											"typeString": "int_const 50500000000000000"
										},
										"id": 1175,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e30353035",
											"id": 1171,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1272:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_101_by_2000",
												"typeString": "rational_const 101 / 2000"
											},
											"value": "0.0505"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1174,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1172,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1281:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1173,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1287:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1281:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1272:17:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50500000000000000_by_1",
											"typeString": "int_const 50500000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f7713ff",
									"id": 1183,
									"mutability": "mutable",
									"name": "preSaleEndPrice",
									"nameLocation": "1343:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "1328:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1177,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1328:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000_by_1",
											"typeString": "int_const 100000000000000000"
										},
										"id": 1182,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e31",
											"id": 1178,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1361:3:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_10",
												"typeString": "rational_const 1 / 10"
											},
											"value": "0.1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1181,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1179,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1367:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1180,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1373:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1367:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1361:14:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000_by_1",
											"typeString": "int_const 100000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b68ed11f",
									"id": 1186,
									"mutability": "mutable",
									"name": "preSaleSoldTokens",
									"nameLocation": "1423:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "1408:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1184,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1408:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1185,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1443:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06d65af3",
									"id": 1188,
									"mutability": "mutable",
									"name": "preSaleStartTime",
									"nameLocation": "1465:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "1450:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1187,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1450:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "84494708",
									"id": 1191,
									"mutability": "mutable",
									"name": "preSaleActive",
									"nameLocation": "1532:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "1520:33:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1189,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1520:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1190,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1548:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1ecf8f4d",
									"id": 1198,
									"mutability": "mutable",
									"name": "minPurchaseAmountPreSale",
									"nameLocation": "1638:24:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "1623:56:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1192,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1623:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										},
										"id": 1197,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030",
											"id": 1193,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1665:3:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1196,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1194,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1671:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1195,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1677:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1671:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1665:14:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ac21694c",
									"id": 1205,
									"mutability": "mutable",
									"name": "maxPurchaseAmountPreSale",
									"nameLocation": "1742:24:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "1727:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1199,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1727:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_3000000000000000000000_by_1",
											"typeString": "int_const 3000000000000000000000"
										},
										"id": 1204,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "33303030",
											"id": 1200,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1769:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3000_by_1",
												"typeString": "int_const 3000"
											},
											"value": "3000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1203,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1201,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1776:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1202,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1782:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1776:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1769:15:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000000000000000000000_by_1",
											"typeString": "int_const 3000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Bettoken.VestingSchedule",
									"id": 1216,
									"members": [
										{
											"constant": false,
											"id": 1207,
											"mutability": "mutable",
											"name": "totalAmount",
											"nameLocation": "1907:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1216,
											"src": "1899:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1206,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1899:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1209,
											"mutability": "mutable",
											"name": "releasedAmount",
											"nameLocation": "1936:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 1216,
											"src": "1928:22:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1208,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1928:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1211,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "1968:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1216,
											"src": "1960:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1210,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1960:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1213,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "1995:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1216,
											"src": "1987:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1212,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1987:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1215,
											"mutability": "mutable",
											"name": "interval",
											"nameLocation": "2021:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1216,
											"src": "2013:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1214,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2013:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VestingSchedule",
									"nameLocation": "1873:15:8",
									"nodeType": "StructDefinition",
									"scope": 1730,
									"src": "1866:170:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fdb20ccb",
									"id": 1221,
									"mutability": "mutable",
									"name": "vestingSchedules",
									"nameLocation": "2085:16:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "2042:59:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1216_storage_$",
										"typeString": "mapping(address => struct Bettoken.VestingSchedule)"
									},
									"typeName": {
										"id": 1220,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1217,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2050:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2042:35:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1216_storage_$",
											"typeString": "mapping(address => struct Bettoken.VestingSchedule)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1219,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1218,
												"name": "VestingSchedule",
												"nameLocations": [
													"2061:15:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1216,
												"src": "2061:15:8"
											},
											"referencedDeclaration": 1216,
											"src": "2061:15:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_VestingSchedule_$1216_storage_ptr",
												"typeString": "struct Bettoken.VestingSchedule"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2a237bb6",
									"id": 1224,
									"mutability": "mutable",
									"name": "privateSaleActive",
									"nameLocation": "2157:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1730,
									"src": "2145:37:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1222,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2145:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1223,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2177:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "cbe7b2993d671ff089495ae9d90ae7a115f123db134c0a6d3c4bc6e0c72cf7e5",
									"id": 1230,
									"name": "PrivateSaleStarted",
									"nameLocation": "2249:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"indexed": false,
												"mutability": "mutable",
												"name": "affiliateRewardPercentage",
												"nameLocation": "2276:25:8",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2268:33:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "2311:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "2303:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2303:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:54:8"
									},
									"src": "2243:79:8"
								},
								{
									"anonymous": false,
									"eventSelector": "8fa81bb0702332ea2a0aee44bb9e4d359cf4a2c5a820dd59d9129369bdbca73f",
									"id": 1236,
									"name": "PrivateSale",
									"nameLocation": "2333:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "2361:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "2345:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2376:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "2368:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2344:39:8"
									},
									"src": "2327:57:8"
								},
								{
									"anonymous": false,
									"eventSelector": "9b23ec14d4683ac0abe619d3ec67f86c8957e134eb62bdff7044e5072ba02b16",
									"id": 1242,
									"name": "AffiliateRewardPaid",
									"nameLocation": "2395:19:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"indexed": true,
												"mutability": "mutable",
												"name": "affiliate",
												"nameLocation": "2431:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "2415:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2415:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "2450:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "2442:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2442:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2414:43:8"
									},
									"src": "2389:69:8"
								},
								{
									"anonymous": false,
									"eventSelector": "dd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc",
									"id": 1250,
									"name": "TokensStaked",
									"nameLocation": "2469:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "2498:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "2482:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2482:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2514:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "2506:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"indexed": false,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "2530:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "2522:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2481:61:8"
									},
									"src": "2463:80:8"
								},
								{
									"anonymous": false,
									"eventSelector": "6bc5063c7239b75c8bf325a2a2238f726fada322163996bb6c93d5594fb119f0",
									"id": 1256,
									"name": "VestedTokensReleased",
									"nameLocation": "2554:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2591:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "2575:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2575:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2612:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1256,
												"src": "2604:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2604:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:45:8"
									},
									"src": "2548:72:8"
								},
								{
									"anonymous": false,
									"eventSelector": "8d80f5be79e7dd88d69814b57e8f5c7dd249b3d6bac194eb9144b8ca639db036",
									"id": 1258,
									"name": "PrivateSaleEnded",
									"nameLocation": "2631:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2647:2:8"
									},
									"src": "2625:25:8"
								},
								{
									"anonymous": false,
									"eventSelector": "71d9b86cd8e742cc8d4d6b9d25c84d4e42f8ba8138c6ee54914285f4a9540056",
									"id": 1262,
									"name": "PreSaleStarted",
									"nameLocation": "2661:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "2684:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "2676:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2676:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:19:8"
									},
									"src": "2655:40:8"
								},
								{
									"anonymous": false,
									"eventSelector": "c82e6055d31de9b552cd0014f23a8b8ce120c288ed1afce01adb97150efc0185",
									"id": 1264,
									"name": "PreSaleEnded",
									"nameLocation": "2706:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:2:8"
									},
									"src": "2700:21:8"
								},
								{
									"anonymous": false,
									"eventSelector": "9c6393f251205f9e03559951cab4c9ae71767b6174f77944a5b0c2fa51fbda9f",
									"id": 1268,
									"name": "TokensWithdrawn",
									"nameLocation": "2732:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2756:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "2748:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2747:16:8"
									},
									"src": "2726:38:8"
								},
								{
									"anonymous": false,
									"eventSelector": "043f607a14d3b4f0a11a0b2e192bbfcd894298ba5abf22553be6081406db28aa",
									"id": 1272,
									"name": "ETHWithdrawn",
									"nameLocation": "2775:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2796:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "2788:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2788:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2787:16:8"
									},
									"src": "2769:35:8"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "2896:51:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1286,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2920:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Bettoken_$1730",
																		"typeString": "contract Bettoken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Bettoken_$1730",
																		"typeString": "contract Bettoken"
																	}
																],
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2912:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1284,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2912:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2912:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1288,
															"name": "TOTAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "2927:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1283,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "2906:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2906:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "2906:34:8"
											}
										]
									},
									"id": 1292,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "426574746f6b656e",
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2856:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_50252e7dcf80edd4c485aa3c52d8ff1d489c68f4538c7d0c90fd6f79a8bdf23d",
														"typeString": "literal_string \"Bettoken\""
													},
													"value": "Bettoken"
												},
												{
													"hexValue": "42455454",
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2868:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ec659342723f951f23b427400907d3b03293f1ce4abc0899fe27c23f6997c8e2",
														"typeString": "literal_string \"BETT\""
													},
													"value": "BETT"
												}
											],
											"id": 1277,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1274,
												"name": "ERC20",
												"nameLocations": [
													"2850:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 972,
												"src": "2850:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2850:25:8"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1279,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2884:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2888:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2884:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1281,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1278,
												"name": "Ownable",
												"nameLocations": [
													"2876:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2876:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2876:19:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2847:2:8"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2896:0:8"
									},
									"scope": 1730,
									"src": "2836:111:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "3197:538:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3215:18:8",
															"subExpression": {
																"id": 1301,
																"name": "privateSaleActive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1224,
																"src": "3216:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c6520616c726561647920616374697665",
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3235:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149fc2f6d9d0004e99a811381712889395320b603e5c66522b26c56511b82020",
																"typeString": "literal_string \"Private Sale already active\""
															},
															"value": "Private Sale already active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149fc2f6d9d0004e99a811381712889395320b603e5c66522b26c56511b82020",
																"typeString": "literal_string \"Private Sale already active\""
															}
														],
														"id": 1300,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3207:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3207:58:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "3207:58:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1307,
																	"name": "_affiliateRewardPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "3283:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3312:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3283:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1310,
																	"name": "_affiliateRewardPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "3317:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3347:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3317:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3283:67:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070657263656e74616765",
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3352:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04",
																"typeString": "literal_string \"Invalid percentage\""
															},
															"value": "Invalid percentage"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3aa060f1dfc69ce7f57887a6e23d7fbceead8042b984953c572b9c8fa5af8f04",
																"typeString": "literal_string \"Invalid percentage\""
															}
														],
														"id": 1306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3275:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3275:98:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1316,
												"nodeType": "ExpressionStatement",
												"src": "3275:98:8"
											},
											{
												"expression": {
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1317,
														"name": "affiliateRewardPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "3384:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1318,
														"name": "_affiliateRewardPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "3412:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3384:54:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "3384:54:8"
											},
											{
												"expression": {
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1321,
														"name": "privateSaleActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "3479:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3499:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3479:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "3479:24:8"
											},
											{
												"expression": {
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1325,
														"name": "privateSaleStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "3535:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1326,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3558:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3564:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3558:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "3535:38:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1331,
															"name": "affiliateRewardPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "3642:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1332,
															"name": "privateSaleStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "3669:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1330,
														"name": "PrivateSaleStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "3623:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1334,
												"nodeType": "EmitStatement",
												"src": "3618:72:8"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "2953:158:8",
										"text": " @dev Private Sale'i başlatır ve affiliate ödül yüzdesini belirler.\n @param _affiliateRewardPercentage Affiliate ödül yüzdesi."
									},
									"functionSelector": "a089de2f",
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1298,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1297,
												"name": "onlyOwner",
												"nameLocations": [
													"3187:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3187:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3187:9:8"
										}
									],
									"name": "startPrivateSale",
									"nameLocation": "3125:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "_affiliateRewardPercentage",
												"nameLocation": "3150:26:8",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "3142:34:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3142:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3141:36:8"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3197:0:8"
									},
									"scope": 1730,
									"src": "3116:619:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "3929:613:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1347,
															"name": "privateSaleActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "3947:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c65206973206e6f7420616374697665",
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3966:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2aca0dda29ce8259de35f4c7fbb579f5f208445253d404472728673406706fd3",
																"typeString": "literal_string \"Private Sale is not active\""
															},
															"value": "Private Sale is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2aca0dda29ce8259de35f4c7fbb579f5f208445253d404472728673406706fd3",
																"typeString": "literal_string \"Private Sale is not active\""
															}
														],
														"id": 1346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3939:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3939:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1350,
												"nodeType": "ExpressionStatement",
												"src": "3939:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1352,
																"name": "usdAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "4013:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_50000000000000000000_by_1",
																	"typeString": "int_const 50000000000000000000"
																},
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3530",
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4026:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_50_by_1",
																		"typeString": "int_const 50"
																	},
																	"value": "50"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4031:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4037:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "4031:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "4026:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50000000000000000000_by_1",
																	"typeString": "int_const 50000000000000000000"
																}
															},
															"src": "4013:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e696d756d2055534420616d6f756e7420726571756972656420697320353020555344",
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4041:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c123d62fd86e1eb44afc70124744d1e32d529839eb044ed770129d4522c1d247",
																"typeString": "literal_string \"Minimum USD amount required is 50 USD\""
															},
															"value": "Minimum USD amount required is 50 USD"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c123d62fd86e1eb44afc70124744d1e32d529839eb044ed770129d4522c1d247",
																"typeString": "literal_string \"Minimum USD amount required is 50 USD\""
															}
														],
														"id": 1351,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4005:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4005:76:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "4005:76:8"
											},
											{
												"assignments": [
													1363
												],
												"declarations": [
													{
														"constant": false,
														"id": 1363,
														"mutability": "mutable",
														"name": "tokensToBuy",
														"nameLocation": "4099:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1407,
														"src": "4091:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1362,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4091:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1367,
												"initialValue": {
													"arguments": [
														{
															"id": 1365,
															"name": "usdAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "4140:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1364,
														"name": "calculateTokensPrivateSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "4113:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4113:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4091:59:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1369,
																"name": "tokensToBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "4168:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000"
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31303030",
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4183:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4190:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4196:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "4190:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "4183:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000"
																}
															},
															"src": "4168:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d6178696d756d20746f6b656e207075726368617365206c696d6974",
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4200:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83ab5b2b5d49cf4328cac2cffda83e0458a2b9571cc02569f86cb90099aed62d",
																"typeString": "literal_string \"Exceeds maximum token purchase limit\""
															},
															"value": "Exceeds maximum token purchase limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83ab5b2b5d49cf4328cac2cffda83e0458a2b9571cc02569f86cb90099aed62d",
																"typeString": "literal_string \"Exceeds maximum token purchase limit\""
															}
														],
														"id": 1368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4160:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4160:79:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "4160:79:8"
											},
											{
												"expression": {
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1379,
														"name": "privateSaleSoldTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "4250:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1380,
														"name": "tokensToBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "4275:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4250:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "4250:36:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1383,
														"name": "privateSaleSoldTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "4301:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1384,
														"name": "privateSaleTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "4326:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4301:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1394,
												"nodeType": "IfStatement",
												"src": "4297:135:8",
												"trueBody": {
													"id": 1393,
													"nodeType": "Block",
													"src": "4345:87:8",
													"statements": [
														{
															"expression": {
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1386,
																	"name": "privateSaleActive",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "4359:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4379:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "4359:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1389,
															"nodeType": "ExpressionStatement",
															"src": "4359:25:8"
														},
														{
															"eventCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1390,
																	"name": "PrivateSaleEnded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "4403:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4403:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1392,
															"nodeType": "EmitStatement",
															"src": "4398:23:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1396,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4464:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4468:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4464:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1398,
															"name": "tokensToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "4476:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1399,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4489:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4495:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4489:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "333635",
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4507:8:8",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_31536000_by_1",
																	"typeString": "int_const 31536000"
																},
																"value": "365"
															},
															"src": "4489:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "313830",
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4517:8:8",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15552000_by_1",
																"typeString": "int_const 15552000"
															},
															"value": "180"
														},
														{
															"hexValue": "3330",
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4527:7:8",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2592000_by_1",
																"typeString": "int_const 2592000"
															},
															"value": "30"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_15552000_by_1",
																"typeString": "int_const 15552000"
															},
															{
																"typeIdentifier": "t_rational_2592000_by_1",
																"typeString": "int_const 2592000"
															}
														],
														"id": 1395,
														"name": "createVestingSchedule",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "4442:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4442:93:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "4442:93:8"
											}
										]
									},
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "3741:90:8",
										"text": " @dev Private Sale sırasında token satın alımını gerçekleştirir."
									},
									"functionSelector": "d414890a",
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1342,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1341,
												"name": "nonReentrant",
												"nameLocations": [
													"3902:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "3902:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3902:12:8"
										},
										{
											"id": 1344,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1343,
												"name": "whenNotPaused",
												"nameLocations": [
													"3915:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "3915:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3915:13:8"
										}
									],
									"name": "buyTokensPrivateSale",
									"nameLocation": "3845:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "usdAmount",
												"nameLocation": "3874:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "3866:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3865:19:8"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3929:0:8"
									},
									"scope": 1730,
									"src": "3836:706:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "4643:191:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4661:14:8",
															"subExpression": {
																"id": 1415,
																"name": "preSaleActive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1191,
																"src": "4662:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072652d53616c6520697320616c726561647920616374697665",
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4677:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_231cfa2b1ee3162fd72ea47cdb9f36a33e37eaee65ad5b803c7b92380ed9c7bd",
																"typeString": "literal_string \"Pre-Sale is already active\""
															},
															"value": "Pre-Sale is already active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_231cfa2b1ee3162fd72ea47cdb9f36a33e37eaee65ad5b803c7b92380ed9c7bd",
																"typeString": "literal_string \"Pre-Sale is already active\""
															}
														],
														"id": 1414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4653:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4653:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "4653:53:8"
											},
											{
												"expression": {
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1420,
														"name": "preSaleActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "4716:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4732:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4716:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "4716:20:8"
											},
											{
												"expression": {
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1424,
														"name": "preSaleStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "4746:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1425,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4765:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4771:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4765:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4746:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "4746:34:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1430,
															"name": "preSaleStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "4810:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1429,
														"name": "PreSaleStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "4795:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4795:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1432,
												"nodeType": "EmitStatement",
												"src": "4790:37:8"
											}
										]
									},
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "4549:46:8",
										"text": " @dev Pre-Sale'i başlatır."
									},
									"functionSelector": "55dd574c",
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1412,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1411,
												"name": "onlyOwner",
												"nameLocations": [
													"4633:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4633:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4633:9:8"
										}
									],
									"name": "startPreSale",
									"nameLocation": "4609:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4621:2:8"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4643:0:8"
									},
									"scope": 1730,
									"src": "4600:234:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1504,
										"nodeType": "Block",
										"src": "5020:657:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1445,
															"name": "preSaleActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "5038:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072652d53616c65206973206e6f7420616374697665",
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5053:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_400b214ee1a1a93cf01fb3c9ef7cf58d124b38839c5c840b50ef058141623410",
																"typeString": "literal_string \"Pre-Sale is not active\""
															},
															"value": "Pre-Sale is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_400b214ee1a1a93cf01fb3c9ef7cf58d124b38839c5c840b50ef058141623410",
																"typeString": "literal_string \"Pre-Sale is not active\""
															}
														],
														"id": 1444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5030:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5030:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "5030:48:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1450,
																"name": "usdAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "5096:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1451,
																"name": "minPurchaseAmountPreSale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "5109:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5096:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742069732062656c6f77206d696e696d756d207075726368617365206c696d6974",
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5135:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_830458c11bcdb4f40cbff2f42c3fab42ea823db00be9aa5e6bb4a5fbd14f6155",
																"typeString": "literal_string \"Amount is below minimum purchase limit\""
															},
															"value": "Amount is below minimum purchase limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_830458c11bcdb4f40cbff2f42c3fab42ea823db00be9aa5e6bb4a5fbd14f6155",
																"typeString": "literal_string \"Amount is below minimum purchase limit\""
															}
														],
														"id": 1449,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5088:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5088:88:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1455,
												"nodeType": "ExpressionStatement",
												"src": "5088:88:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1457,
																"name": "usdAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1437,
																"src": "5194:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1458,
																"name": "maxPurchaseAmountPreSale",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1205,
																"src": "5207:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5194:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742065786365656473206d6178696d756d207075726368617365206c696d6974",
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5233:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df280954953c79d750ef99714a7fa9695b0308e506cbcf3ade5f228691300673",
																"typeString": "literal_string \"Amount exceeds maximum purchase limit\""
															},
															"value": "Amount exceeds maximum purchase limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df280954953c79d750ef99714a7fa9695b0308e506cbcf3ade5f228691300673",
																"typeString": "literal_string \"Amount exceeds maximum purchase limit\""
															}
														],
														"id": 1456,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5186:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5186:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "5186:87:8"
											},
											{
												"assignments": [
													1464
												],
												"declarations": [
													{
														"constant": false,
														"id": 1464,
														"mutability": "mutable",
														"name": "tokensToBuy",
														"nameLocation": "5292:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1504,
														"src": "5284:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1463,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5284:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1468,
												"initialValue": {
													"arguments": [
														{
															"id": 1466,
															"name": "usdAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "5329:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1465,
														"name": "calculateTokensPreSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "5306:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5306:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5284:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1470,
																	"name": "preSaleSoldTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "5357:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1471,
																	"name": "tokensToBuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "5377:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5357:31:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1473,
																"name": "preSaleTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "5392:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5357:48:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473205072652d53616c6520746f6b656e206c696d6974",
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5407:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b8ec7f987188bef06f64e6ac12bf8951d0fa7337751db1feb89585da05fb6ea7",
																"typeString": "literal_string \"Exceeds Pre-Sale token limit\""
															},
															"value": "Exceeds Pre-Sale token limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b8ec7f987188bef06f64e6ac12bf8951d0fa7337751db1feb89585da05fb6ea7",
																"typeString": "literal_string \"Exceeds Pre-Sale token limit\""
															}
														],
														"id": 1469,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5349:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5349:89:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "5349:89:8"
											},
											{
												"expression": {
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1478,
														"name": "preSaleSoldTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "5449:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1479,
														"name": "tokensToBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "5470:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5449:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "5449:32:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1482,
														"name": "preSaleSoldTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "5496:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1483,
														"name": "preSaleTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "5517:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5496:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1493,
												"nodeType": "IfStatement",
												"src": "5492:119:8",
												"trueBody": {
													"id": 1492,
													"nodeType": "Block",
													"src": "5532:79:8",
													"statements": [
														{
															"expression": {
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1485,
																	"name": "preSaleActive",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1191,
																	"src": "5546:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5562:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5546:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1488,
															"nodeType": "ExpressionStatement",
															"src": "5546:21:8"
														},
														{
															"eventCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1489,
																	"name": "PreSaleEnded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1264,
																	"src": "5586:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5586:14:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1491,
															"nodeType": "EmitStatement",
															"src": "5581:19:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1497,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5639:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Bettoken_$1730",
																		"typeString": "contract Bettoken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Bettoken_$1730",
																		"typeString": "contract Bettoken"
																	}
																],
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5631:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1495,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5631:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5631:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1499,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5646:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5650:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5646:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1501,
															"name": "tokensToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "5658:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1494,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "5621:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5621:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1503,
												"nodeType": "ExpressionStatement",
												"src": "5621:49:8"
											}
										]
									},
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "4840:86:8",
										"text": " @dev Pre-Sale sırasında token satın alımını gerçekleştirir."
									},
									"functionSelector": "466c3f93",
									"id": 1505,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1440,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1439,
												"name": "nonReentrant",
												"nameLocations": [
													"4993:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "4993:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "4993:12:8"
										},
										{
											"id": 1442,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1441,
												"name": "whenNotPaused",
												"nameLocations": [
													"5006:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "5006:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5006:13:8"
										}
									],
									"name": "buyTokensPreSale",
									"nameLocation": "4940:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "usdAmount",
												"nameLocation": "4965:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "4957:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4957:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4956:19:8"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5020:0:8"
									},
									"scope": 1730,
									"src": "4931:746:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1535,
										"nodeType": "Block",
										"src": "5986:231:8",
										"statements": [
											{
												"assignments": [
													1514
												],
												"declarations": [
													{
														"constant": false,
														"id": 1514,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "6004:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1535,
														"src": "5996:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1513,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5996:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1526,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1515,
														"name": "preSaleStartPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "6019:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1516,
																					"name": "preSaleEndPrice",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1183,
																					"src": "6054:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1517,
																					"name": "preSaleStartPrice",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1176,
																					"src": "6072:17:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6054:35:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1519,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6053:37:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1520,
																		"name": "preSaleSoldTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1186,
																		"src": "6093:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6053:57:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1522,
																	"name": "preSaleTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "6113:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6053:73:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1524,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6039:97:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6019:117:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5996:140:8"
											},
											{
												"assignments": [
													1528
												],
												"declarations": [
													{
														"constant": false,
														"id": 1528,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "6154:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1535,
														"src": "6146:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1527,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6146:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1532,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1529,
														"name": "usdAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "6163:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1530,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "6175:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6163:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6146:41:8"
											},
											{
												"expression": {
													"id": 1533,
													"name": "tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1528,
													"src": "6204:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1512,
												"id": 1534,
												"nodeType": "Return",
												"src": "6197:13:8"
											}
										]
									},
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "5683:217:8",
										"text": " @dev Pre-Sale için token fiyatını USD cinsinden hesaplar.\n @param usdAmount Satın alınacak token miktarının hesaplanacağı USD miktarı.\n @return Satın alınacak token miktarı."
									},
									"functionSelector": "cb8dcfe6",
									"id": 1536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTokensPreSale",
									"nameLocation": "5914:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "usdAmount",
												"nameLocation": "5945:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "5937:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5937:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5936:19:8"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "5977:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5977:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5976:9:8"
									},
									"scope": 1730,
									"src": "5905:312:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "6396:251:8",
										"statements": [
											{
												"assignments": [
													1545
												],
												"declarations": [
													{
														"constant": false,
														"id": 1545,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "6414:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1566,
														"src": "6406:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1544,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6406:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1557,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1546,
														"name": "privateSaleStartPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "6429:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1547,
																					"name": "privateSaleEndPrice",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1148,
																					"src": "6468:19:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1548,
																					"name": "privateSaleStartPrice",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "6490:21:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6468:43:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1550,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6467:45:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1551,
																		"name": "privateSaleSoldTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "6515:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6467:69:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1553,
																	"name": "privateSaleTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "6539:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6467:89:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1555,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6453:113:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6429:137:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6406:160:8"
											},
											{
												"assignments": [
													1559
												],
												"declarations": [
													{
														"constant": false,
														"id": 1559,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "6584:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1566,
														"src": "6576:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1558,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6576:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1563,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1560,
														"name": "usdAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1539,
														"src": "6593:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1561,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "6605:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6593:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6576:41:8"
											},
											{
												"expression": {
													"id": 1564,
													"name": "tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1559,
													"src": "6634:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1543,
												"id": 1565,
												"nodeType": "Return",
												"src": "6627:13:8"
											}
										]
									},
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "6223:83:8",
										"text": " @dev Private Sale için token fiyatını USD cinsinden hesaplar."
									},
									"functionSelector": "f15a41f6",
									"id": 1567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTokensPrivateSale",
									"nameLocation": "6320:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "usdAmount",
												"nameLocation": "6355:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "6347:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6347:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6346:19:8"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "6387:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6387:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6386:9:8"
									},
									"scope": 1730,
									"src": "6311:336:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "6889:237:8",
										"statements": [
											{
												"assignments": [
													1583
												],
												"declarations": [
													{
														"constant": false,
														"id": 1583,
														"mutability": "mutable",
														"name": "schedule",
														"nameLocation": "6923:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1612,
														"src": "6899:32:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$1216_storage_ptr",
															"typeString": "struct Bettoken.VestingSchedule"
														},
														"typeName": {
															"id": 1582,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1581,
																"name": "VestingSchedule",
																"nameLocations": [
																	"6899:15:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1216,
																"src": "6899:15:8"
															},
															"referencedDeclaration": 1216,
															"src": "6899:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1216_storage_ptr",
																"typeString": "struct Bettoken.VestingSchedule"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1587,
												"initialValue": {
													"baseExpression": {
														"id": 1584,
														"name": "vestingSchedules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "6934:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1216_storage_$",
															"typeString": "mapping(address => struct Bettoken.VestingSchedule storage ref)"
														}
													},
													"id": 1586,
													"indexExpression": {
														"id": 1585,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "6951:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6934:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VestingSchedule_$1216_storage",
														"typeString": "struct Bettoken.VestingSchedule storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6899:64:8"
											},
											{
												"expression": {
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1588,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "6973:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1216_storage_ptr",
																"typeString": "struct Bettoken.VestingSchedule storage pointer"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6982:11:8",
														"memberName": "totalAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1207,
														"src": "6973:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1591,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "6997:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6973:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1593,
												"nodeType": "ExpressionStatement",
												"src": "6973:30:8"
											},
											{
												"expression": {
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1594,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "7013:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1216_storage_ptr",
																"typeString": "struct Bettoken.VestingSchedule storage pointer"
															}
														},
														"id": 1596,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7022:9:8",
														"memberName": "startTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1211,
														"src": "7013:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1597,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "7034:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7013:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "7013:30:8"
											},
											{
												"expression": {
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1600,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "7053:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1216_storage_ptr",
																"typeString": "struct Bettoken.VestingSchedule storage pointer"
															}
														},
														"id": 1602,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7062:8:8",
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1213,
														"src": "7053:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1603,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1576,
														"src": "7073:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7053:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1605,
												"nodeType": "ExpressionStatement",
												"src": "7053:28:8"
											},
											{
												"expression": {
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1606,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "7091:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1216_storage_ptr",
																"typeString": "struct Bettoken.VestingSchedule storage pointer"
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7100:8:8",
														"memberName": "interval",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1215,
														"src": "7091:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1609,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1578,
														"src": "7111:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7091:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1611,
												"nodeType": "ExpressionStatement",
												"src": "7091:28:8"
											}
										]
									},
									"documentation": {
										"id": 1568,
										"nodeType": "StructuredDocumentation",
										"src": "6653:53:8",
										"text": " @dev Vesting programı oluşturur."
									},
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createVestingSchedule",
									"nameLocation": "6720:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6759:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "6751:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6788:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "6780:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6780:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "6812:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "6804:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6804:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "6839:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "6831:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6831:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "interval",
												"nameLocation": "6865:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "6857:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6857:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6741:138:8"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6889:0:8"
									},
									"scope": 1730,
									"src": "6711:415:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1631,
										"nodeType": "Block",
										"src": "7235:141:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1620,
															"name": "privateSaleActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "7253:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c65206973206e6f7420616374697665",
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7272:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2aca0dda29ce8259de35f4c7fbb579f5f208445253d404472728673406706fd3",
																"typeString": "literal_string \"Private Sale is not active\""
															},
															"value": "Private Sale is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2aca0dda29ce8259de35f4c7fbb579f5f208445253d404472728673406706fd3",
																"typeString": "literal_string \"Private Sale is not active\""
															}
														],
														"id": 1619,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7245:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7245:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1623,
												"nodeType": "ExpressionStatement",
												"src": "7245:56:8"
											},
											{
												"expression": {
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1624,
														"name": "privateSaleActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "7311:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7331:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "7311:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1627,
												"nodeType": "ExpressionStatement",
												"src": "7311:25:8"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1628,
														"name": "PrivateSaleEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "7351:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7351:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "EmitStatement",
												"src": "7346:23:8"
											}
										]
									},
									"documentation": {
										"id": 1614,
										"nodeType": "StructuredDocumentation",
										"src": "7132:53:8",
										"text": " @dev Private Sale'i sonlandırır."
									},
									"functionSelector": "e6a23c3d",
									"id": 1632,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1617,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1616,
												"name": "onlyOwner",
												"nameLocations": [
													"7225:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7225:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7225:9:8"
										}
									],
									"name": "endPrivateSale",
									"nameLocation": "7199:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7213:2:8"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7235:0:8"
									},
									"scope": 1730,
									"src": "7190:186:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "7477:125:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1639,
															"name": "preSaleActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "7495:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072652d53616c65206973206e6f7420616374697665",
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7510:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_400b214ee1a1a93cf01fb3c9ef7cf58d124b38839c5c840b50ef058141623410",
																"typeString": "literal_string \"Pre-Sale is not active\""
															},
															"value": "Pre-Sale is not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_400b214ee1a1a93cf01fb3c9ef7cf58d124b38839c5c840b50ef058141623410",
																"typeString": "literal_string \"Pre-Sale is not active\""
															}
														],
														"id": 1638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7487:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7487:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "7487:48:8"
											},
											{
												"expression": {
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1643,
														"name": "preSaleActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "7545:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7561:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "7545:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "7545:21:8"
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1647,
														"name": "PreSaleEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "7581:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7581:14:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1649,
												"nodeType": "EmitStatement",
												"src": "7576:19:8"
											}
										]
									},
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "7382:49:8",
										"text": " @dev Pre-Sale'i sonlandırır."
									},
									"functionSelector": "ee889ed0",
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1636,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1635,
												"name": "onlyOwner",
												"nameLocations": [
													"7467:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7467:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7467:9:8"
										}
									],
									"name": "endPreSale",
									"nameLocation": "7445:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7455:2:8"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7477:0:8"
									},
									"scope": 1730,
									"src": "7436:166:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "7726:205:8",
										"statements": [
											{
												"assignments": [
													1658
												],
												"declarations": [
													{
														"constant": false,
														"id": 1658,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "7744:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1687,
														"src": "7736:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1657,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7736:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1665,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1662,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7772:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Bettoken_$1730",
																		"typeString": "contract Bettoken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Bettoken_$1730",
																		"typeString": "contract Bettoken"
																	}
																],
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7764:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1660,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7764:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7764:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1659,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "7754:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7754:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7736:42:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1667,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1658,
																"src": "7796:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7806:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7796:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7809:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															},
															"value": "No tokens to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															}
														],
														"id": 1666,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7788:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7788:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1672,
												"nodeType": "ExpressionStatement",
												"src": "7788:45:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1676,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7861:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Bettoken_$1730",
																		"typeString": "contract Bettoken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Bettoken_$1730",
																		"typeString": "contract Bettoken"
																	}
																],
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7853:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1674,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7853:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7853:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1678,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "7868:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7868:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1680,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "7877:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1673,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "7843:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7843:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "7843:42:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1684,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "7916:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1683,
														"name": "TokensWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "7900:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7900:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1686,
												"nodeType": "EmitStatement",
												"src": "7895:29:8"
											}
										]
									},
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "7608:68:8",
										"text": " @dev Kontratta bulunan tokenları çekmeye yarar."
									},
									"functionSelector": "8d8f2adb",
									"id": 1688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1655,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1654,
												"name": "onlyOwner",
												"nameLocations": [
													"7716:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7716:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7716:9:8"
										}
									],
									"name": "withdrawTokens",
									"nameLocation": "7690:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7704:2:8"
									},
									"returnParameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7726:0:8"
									},
									"scope": 1730,
									"src": "7681:250:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "8048:250:8",
										"statements": [
											{
												"assignments": [
													1695
												],
												"declarations": [
													{
														"constant": false,
														"id": 1695,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "8066:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1728,
														"src": "8058:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1694,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8058:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1701,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1698,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "8084:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Bettoken_$1730",
																	"typeString": "contract Bettoken"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Bettoken_$1730",
																	"typeString": "contract Bettoken"
																}
															],
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8076:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1696,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8076:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8076:13:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8090:7:8",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "8076:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8058:39:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1703,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "8115:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8125:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8115:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2045544820746f207769746864726177",
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8128:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
																"typeString": "literal_string \"No ETH to withdraw\""
															},
															"value": "No ETH to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95",
																"typeString": "literal_string \"No ETH to withdraw\""
															}
														],
														"id": 1702,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8107:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8107:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1708,
												"nodeType": "ExpressionStatement",
												"src": "8107:42:8"
											},
											{
												"assignments": [
													1710,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1710,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8165:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1728,
														"src": "8160:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1709,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8160:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1718,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8207:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1711,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "8178:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8178:7:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8186:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "8178:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1714,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "8198:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8178:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8178:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8159:51:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1720,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "8228:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8237:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1719,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8220:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8220:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "8220:35:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1725,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "8283:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1724,
														"name": "ETHWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "8270:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8270:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1727,
												"nodeType": "EmitStatement",
												"src": "8265:26:8"
											}
										]
									},
									"documentation": {
										"id": 1689,
										"nodeType": "StructuredDocumentation",
										"src": "7937:64:8",
										"text": " @dev Kontratta bulunan ETH'yi çekmeye yarar."
									},
									"functionSelector": "e086e5ec",
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1692,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1691,
												"name": "onlyOwner",
												"nameLocations": [
													"8038:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8038:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "8038:9:8"
										}
									],
									"name": "withdrawETH",
									"nameLocation": "8015:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8026:2:8"
									},
									"returnParameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8048:0:8"
									},
									"scope": 1730,
									"src": "8006:292:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1731,
							"src": "286:8014:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								295,
								300,
								984,
								993,
								1230,
								1236,
								1242,
								1250,
								1256,
								1258,
								1262,
								1264,
								1268,
								1272
							]
						}
					],
					"src": "32:8269:8"
				},
				"id": 8
			}
		}
	}
}