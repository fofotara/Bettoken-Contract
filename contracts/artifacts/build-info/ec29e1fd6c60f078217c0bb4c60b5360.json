{
	"id": "ec29e1fd6c60f078217c0bb4c60b5360",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/bettoken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ninterface IPriceOracle {\n    function getLatestPrice() external view returns (uint256);\n}\n\ncontract Bettoken is ERC20, Ownable, ReentrancyGuard {\n\n    using SafeMath for uint256;\n\n    uint256 public constant TOTAL_SUPPLY = 200_000_000 * 10 ** 18; // 200 million BETT with 18 decimals\n\n    // Private Sale variables\n    uint256 public privateSaleTarget = 1_000_000 * 10 ** 18; // 1 million USD target\n    uint256 public privateSaleTokens = 38_835_764 * 10 ** 18; // 38,835,764 BETT\n    uint256 public privateSaleStartPrice = 0.001 * 10 ** 18; // 0.001 USD per BETT\n    uint256 public privateSaleEndPrice = 0.0505 * 10 ** 18; // 0.0505 USD per BETT\n    uint256 public privateSaleSoldTokens = 0;\n\n    // Pre-Sale variables\n    uint256 public preSaleTarget = 19_000_000 * 10 ** 18; // 19 million USD target\n    uint256 public preSaleTokens = 161_164_236 * 10 ** 18; // 161,164,236 BETT\n    uint256 public preSaleStartPrice = 0.0505 * 10 ** 18; // 0.0505 USD per BETT\n    uint256 public preSaleEndPrice = 0.1 * 10 ** 18; // 0.1 USD per BETT\n    uint256 public preSaleSoldTokens = 0;\n\n    // Sale States\n    enum SaleStage { NONE, PRIVATE, PRESALE }\n    SaleStage public stage = SaleStage.NONE;\n\n    // Vesting Parameters\n    mapping(address => uint256) public vestingBalance;\n    mapping(address => uint256) public vestingReleaseTime;\n    uint256 public vestingDuration = 180 days; // 6 ay\n    uint256 public stakeDuration = 365 days; // 1 yıl\n\n    IPriceOracle public priceOracle; // Price oracle contract address\n\n    // Events\n    event PrivateSale(address indexed buyer, uint256 amount);\n    event PreSale(address indexed buyer, uint256 amount);\n    event TokensStaked(address indexed staker, uint256 amount, uint256 releaseTime);\n    event VestedTokensReleased(address indexed beneficiary, uint256 amount);\n\n    constructor(address _priceOracle) ERC20(\"Bettoken\", \"BETT\") Ownable(msg.sender) {\n        _mint(address(this), TOTAL_SUPPLY);\n        priceOracle = IPriceOracle(_priceOracle); // Set the price oracle contract address\n    }\n\n    function startPrivateSale() external onlyOwner {\n        require(stage == SaleStage.NONE, \"Private Sale has already started or concluded.\");\n        stage = SaleStage.PRIVATE;\n    }\n\n    function startPreSale() external onlyOwner {\n        require(stage == SaleStage.PRIVATE, \"Private Sale should be concluded first.\");\n        require(privateSaleSoldTokens == privateSaleTokens, \"Private Sale target not reached.\");\n        stage = SaleStage.PRESALE;\n    }\n\n    function buyTokens(uint256 usdAmount) external payable nonReentrant {\n        require(stage != SaleStage.NONE, \"No sale is active.\");\n\n        uint256 latestPrice = priceOracle.getLatestPrice(); // Get the latest price from oracle\n        require(latestPrice > 0, \"Invalid price from oracle\");\n\n        uint256 tokensToBuy;\n        if (stage == SaleStage.PRIVATE) {\n            require(privateSaleSoldTokens < privateSaleTokens, \"Private Sale sold out.\");\n            tokensToBuy = calculatePrivateSaleTokens(usdAmount.mul(latestPrice).div(1 ether));\n            privateSaleSoldTokens = privateSaleSoldTokens.add(tokensToBuy);\n            require(privateSaleSoldTokens <= privateSaleTokens, \"Exceeds Private Sale token limit.\");\n            vestingBalance[msg.sender] = vestingBalance[msg.sender].add(tokensToBuy);\n            vestingReleaseTime[msg.sender] = block.timestamp.add(stakeDuration).add(vestingDuration);\n            emit PrivateSale(msg.sender, tokensToBuy);\n        } else if (stage == SaleStage.PRESALE) {\n            require(preSaleSoldTokens < preSaleTokens, \"Pre-Sale sold out.\");\n            require(usdAmount >= 100 * 10 ** 18 && usdAmount <= 3_000 * 10 ** 18, \"Purchase amount out of limits.\");\n            tokensToBuy = calculatePreSaleTokens(usdAmount.mul(latestPrice).div(1 ether));\n            preSaleSoldTokens = preSaleSoldTokens.add(tokensToBuy);\n            require(preSaleSoldTokens <= preSaleTokens, \"Exceeds Pre-Sale token limit.\");\n            _transfer(address(this), msg.sender, tokensToBuy);\n            emit PreSale(msg.sender, tokensToBuy);\n        }\n    }\n\n    function calculatePrivateSaleTokens(uint256 usdAmount) internal view returns (uint256) {\n        require(usdAmount > 0, \"USD amount must be greater than 0\");\n        require(privateSaleTokens > 0, \"Private Sale tokens must be greater than 0\");\n        require(privateSaleSoldTokens <= privateSaleTokens, \"Private Sale sold tokens exceed available tokens\");\n\n        uint256 tokenRange = privateSaleEndPrice.sub(privateSaleStartPrice);\n        uint256 currentPrice = privateSaleStartPrice.add(\n            tokenRange.mul(privateSaleSoldTokens).div(privateSaleTokens)\n        );\n\n        require(currentPrice >= privateSaleStartPrice && currentPrice <= privateSaleEndPrice, \"Invalid token price calculated\");\n\n        uint256 tokens = usdAmount.div(currentPrice);\n        require(tokens > 0, \"Calculated tokens must be greater than 0\");\n\n        return tokens;\n    }\n\n    function calculatePreSaleTokens(uint256 usdAmount) internal view returns (uint256) {\n        uint256 currentPrice = preSaleStartPrice.add(\n            (preSaleEndPrice.sub(preSaleStartPrice)).mul(preSaleSoldTokens).div(preSaleTokens)\n        );\n        require(currentPrice >= preSaleStartPrice && currentPrice <= preSaleEndPrice, \"Invalid token price calculated\");\n\n        uint256 tokens = usdAmount.div(currentPrice);\n        require(tokens > 0, \"Calculated tokens must be greater than 0\");\n\n        return tokens;\n    }\n\n    function stakeTokens(uint256 amount) external nonReentrant {\n        require(amount > 0, \"Amount must be greater than 0\");\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance to stake\");\n\n        _transfer(msg.sender, address(this), amount);\n\n        vestingBalance[msg.sender] = vestingBalance[msg.sender].add(amount);\n        vestingReleaseTime[msg.sender] = block.timestamp.add(stakeDuration);\n\n        emit TokensStaked(msg.sender, amount, vestingReleaseTime[msg.sender]);\n    }\n\n    function releaseVestedTokens() external nonReentrant {\n        require(block.timestamp >= vestingReleaseTime[msg.sender], \"Vesting period not yet completed.\");\n        uint256 amount = vestingBalance[msg.sender];\n        require(amount > 0, \"No vested tokens to release\");\n\n        // Vesting bakiyesini ve serbest bırakma zamanını sıfırlama işlemi transferden önce yapılır\n        vestingBalance[msg.sender] = 0;\n        vestingReleaseTime[msg.sender] = 0;\n\n        _transfer(address(this), msg.sender, amount);\n\n        emit VestedTokensReleased(msg.sender, amount);\n    }\n\n    function haltSales() external onlyOwner {\n        require(privateSaleSoldTokens == privateSaleTokens || preSaleSoldTokens == preSaleTokens, \n                \"Sales targets not yet met.\");\n        stage = SaleStage.NONE;\n    }\n\n    function withdrawFunds() external onlyOwner nonReentrant {\n        payable(owner()).transfer(address(this).balance);\n    }\n\n    fallback() external payable {\n        revert(\"Direct ETH transfers not allowed.\");\n    }\n\n    receive() external payable {\n        revert(\"Direct ETH transfers not allowed.\");\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xC4 MSTORE8 PUSH29 0x112E7DFD362FBBC3109DCD7EFAD1E9F705B895D9C42D83F61DD9CEDB64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xC4 MSTORE8 PUSH29 0x112E7DFD362FBBC3109DCD7EFAD1E9F705B895D9C42D83F61DD9CEDB64 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "482:6210:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047c4537c112e7dfd362fbbc3109dcd7efad1e9f705b895d9c42d83f61dd9cedb64736f6c634300081a0033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/bettoken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/bettoken.sol": {
				"Bettoken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_priceOracle",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PreSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PrivateSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "releaseTime",
									"type": "uint256"
								}
							],
							"name": "TokensStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "VestedTokensReleased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdAmount",
									"type": "uint256"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "haltSales",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleEndPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleSoldTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleStartPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleTarget",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceOracle",
							"outputs": [
								{
									"internalType": "contract IPriceOracle",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleEndPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleSoldTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleStartPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleTarget",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateSaleTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "releaseVestedTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stage",
							"outputs": [
								{
									"internalType": "enum Bettoken.SaleStage",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPreSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPrivateSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vestingBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestingDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vestingReleaseTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/bettoken.sol\":379:7429  contract Bettoken is ERC20, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/bettoken.sol\":642:662  1_000_000 * 10 ** 18 */\n  0xd3c21bcecceda1000000\n    /* \"contracts/bettoken.sol\":607:662  uint256 public privateSaleTarget = 1_000_000 * 10 ** 18 */\n  0x07\n  sstore\n    /* \"contracts/bettoken.sol\":727:748  38_835_764 * 10 ** 18 */\n  0x201fcafc2577d298500000\n    /* \"contracts/bettoken.sol\":692:748  uint256 public privateSaleTokens = 38_835_764 * 10 ** 18 */\n  0x08\n  sstore\n    /* \"contracts/bettoken.sol\":812:828  0.001 * 10 ** 18 */\n  0x038d7ea4c68000\n    /* \"contracts/bettoken.sol\":773:828  uint256 public privateSaleStartPrice = 0.001 * 10 ** 18 */\n  0x09\n  sstore\n    /* \"contracts/bettoken.sol\":893:910  0.0505 * 10 ** 18 */\n  0xb3697b81284000\n    /* \"contracts/bettoken.sol\":856:910  uint256 public privateSaleEndPrice = 0.0505 * 10 ** 18 */\n  0x0a\n  sstore\n    /* \"contracts/bettoken.sol\":978:979  0 */\n  0x00\n    /* \"contracts/bettoken.sol\":939:979  uint256 public privateSaleSoldTokens = 0 */\n  0x0b\n  sstore\n    /* \"contracts/bettoken.sol\":1043:1064  19_000_000 * 10 ** 18 */\n  0x0fb768105935a2f3000000\n    /* \"contracts/bettoken.sol\":1012:1064  uint256 public preSaleTarget = 19_000_000 * 10 ** 18 */\n  0x0c\n  sstore\n    /* \"contracts/bettoken.sol\":1126:1148  161_164_236 * 10 ** 18 */\n  0x854fdabd6aa1d32fb00000\n    /* \"contracts/bettoken.sol\":1095:1148  uint256 public preSaleTokens = 161_164_236 * 10 ** 18 */\n  0x0d\n  sstore\n    /* \"contracts/bettoken.sol\":1209:1226  0.0505 * 10 ** 18 */\n  0xb3697b81284000\n    /* \"contracts/bettoken.sol\":1174:1226  uint256 public preSaleStartPrice = 0.0505 * 10 ** 18 */\n  0x0e\n  sstore\n    /* \"contracts/bettoken.sol\":1288:1302  0.1 * 10 ** 18 */\n  0x016345785d8a0000\n    /* \"contracts/bettoken.sol\":1255:1302  uint256 public preSaleEndPrice = 0.1 * 10 ** 18 */\n  0x0f\n  sstore\n    /* \"contracts/bettoken.sol\":1363:1364  0 */\n  0x00\n    /* \"contracts/bettoken.sol\":1328:1364  uint256 public preSaleSoldTokens = 0 */\n  0x10\n  sstore\n    /* \"contracts/bettoken.sol\":1461:1475  SaleStage.NONE */\n  0x00\n    /* \"contracts/bettoken.sol\":1436:1475  SaleStage public stage = SaleStage.NONE */\n  0x11\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x02\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  tag_2\n  tag_3\n  jump\t// in\ntag_2:\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/bettoken.sol\":1655:1663  180 days */\n  0xed4e00\n    /* \"contracts/bettoken.sol\":1622:1663  uint256 public vestingDuration = 180 days */\n  0x14\n  sstore\n    /* \"contracts/bettoken.sol\":1708:1716  365 days */\n  0x01e13380\n    /* \"contracts/bettoken.sol\":1677:1716  uint256 public stakeDuration = 365 days */\n  0x15\n  sstore\n    /* \"contracts/bettoken.sol\":2101:2323  constructor(address _priceOracle) ERC20(\"Bettoken\", \"BETT\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"contracts/bettoken.sol\":2169:2179  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x426574746f6b656e000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4245545400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_14\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_16\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_19\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/bettoken.sol\":2191:2225  _mint(address(this), TOTAL_SUPPLY) */\n  tag_23\n    /* \"contracts/bettoken.sol\":2205:2209  this */\n  address\n    /* \"contracts/bettoken.sol\":511:533  200_000_000 * 10 ** 18 */\n  0xa56fa5b99019a5c8000000\n    /* \"contracts/bettoken.sol\":2191:2196  _mint */\n  shl(0x20, tag_24)\n    /* \"contracts/bettoken.sol\":2191:2225  _mint(address(this), TOTAL_SUPPLY) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"contracts/bettoken.sol\":2262:2274  _priceOracle */\n  dup1\n    /* \"contracts/bettoken.sol\":2235:2246  priceOracle */\n  0x16\n  0x00\n    /* \"contracts/bettoken.sol\":2235:2275  priceOracle = IPriceOracle(_priceOracle) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/bettoken.sol\":2101:2323  constructor(address _priceOracle) ERC20(\"Bettoken\", \"BETT\") Ownable(msg.sender) {... */\n  pop\n    /* \"contracts/bettoken.sol\":379:7429  contract Bettoken is ERC20, Ownable, ReentrancyGuard {... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_20:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_30\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_31)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_36)\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_38\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_41)\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:187   */\ntag_3:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x21\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"#utility.yul\":274:391   */\ntag_45:\n    /* \"#utility.yul\":383:384   */\n  0x00\n    /* \"#utility.yul\":380:381   */\n  dup1\n    /* \"#utility.yul\":373:385   */\n  revert\n    /* \"#utility.yul\":520:646   */\ntag_47:\n    /* \"#utility.yul\":557:564   */\n  0x00\n    /* \"#utility.yul\":597:639   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":590:595   */\n  dup3\n    /* \"#utility.yul\":586:640   */\n  and\n    /* \"#utility.yul\":575:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":520:646   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":652:748   */\ntag_48:\n    /* \"#utility.yul\":689:696   */\n  0x00\n    /* \"#utility.yul\":718:742   */\n  tag_81\n    /* \"#utility.yul\":736:741   */\n  dup3\n    /* \"#utility.yul\":718:742   */\n  tag_47\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":707:742   */\n  swap1\n  pop\n    /* \"#utility.yul\":652:748   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":754:876   */\ntag_49:\n    /* \"#utility.yul\":827:851   */\n  tag_83\n    /* \"#utility.yul\":845:850   */\n  dup2\n    /* \"#utility.yul\":827:851   */\n  tag_48\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":817:852   */\n  eq\n    /* \"#utility.yul\":807:870   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":866:867   */\n  0x00\n    /* \"#utility.yul\":863:864   */\n  dup1\n    /* \"#utility.yul\":856:868   */\n  revert\n    /* \"#utility.yul\":807:870   */\ntag_84:\n    /* \"#utility.yul\":754:876   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":882:1025   */\ntag_50:\n    /* \"#utility.yul\":939:944   */\n  0x00\n    /* \"#utility.yul\":970:976   */\n  dup2\n    /* \"#utility.yul\":964:977   */\n  mload\n    /* \"#utility.yul\":955:977   */\n  swap1\n  pop\n    /* \"#utility.yul\":986:1019   */\n  tag_86\n    /* \"#utility.yul\":1013:1018   */\n  dup2\n    /* \"#utility.yul\":986:1019   */\n  tag_49\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":882:1025   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1031:1382   */\ntag_6:\n    /* \"#utility.yul\":1101:1107   */\n  0x00\n    /* \"#utility.yul\":1150:1152   */\n  0x20\n    /* \"#utility.yul\":1138:1147   */\n  dup3\n    /* \"#utility.yul\":1129:1136   */\n  dup5\n    /* \"#utility.yul\":1125:1148   */\n  sub\n    /* \"#utility.yul\":1121:1153   */\n  slt\n    /* \"#utility.yul\":1118:1237   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":1156:1235   */\n  tag_89\n  tag_45\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1118:1237   */\ntag_88:\n    /* \"#utility.yul\":1276:1277   */\n  0x00\n    /* \"#utility.yul\":1301:1365   */\n  tag_90\n    /* \"#utility.yul\":1357:1364   */\n  dup5\n    /* \"#utility.yul\":1348:1354   */\n  dup3\n    /* \"#utility.yul\":1337:1346   */\n  dup6\n    /* \"#utility.yul\":1333:1355   */\n  add\n    /* \"#utility.yul\":1301:1365   */\n  tag_50\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1291:1365   */\n  swap2\n  pop\n    /* \"#utility.yul\":1247:1375   */\n  pop\n    /* \"#utility.yul\":1031:1382   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1388:1487   */\ntag_51:\n    /* \"#utility.yul\":1440:1446   */\n  0x00\n    /* \"#utility.yul\":1474:1479   */\n  dup2\n    /* \"#utility.yul\":1468:1480   */\n  mload\n    /* \"#utility.yul\":1458:1480   */\n  swap1\n  pop\n    /* \"#utility.yul\":1388:1487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1493:1673   */\ntag_52:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x41\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1859   */\ntag_53:\n    /* \"#utility.yul\":1727:1804   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1724:1725   */\n  0x00\n    /* \"#utility.yul\":1717:1805   */\n  mstore\n    /* \"#utility.yul\":1824:1828   */\n  0x22\n    /* \"#utility.yul\":1821:1822   */\n  0x04\n    /* \"#utility.yul\":1814:1829   */\n  mstore\n    /* \"#utility.yul\":1848:1852   */\n  0x24\n    /* \"#utility.yul\":1845:1846   */\n  0x00\n    /* \"#utility.yul\":1838:1853   */\n  revert\n    /* \"#utility.yul\":1865:2185   */\ntag_54:\n    /* \"#utility.yul\":1909:1915   */\n  0x00\n    /* \"#utility.yul\":1946:1947   */\n  0x02\n    /* \"#utility.yul\":1940:1944   */\n  dup3\n    /* \"#utility.yul\":1936:1948   */\n  div\n    /* \"#utility.yul\":1926:1948   */\n  swap1\n  pop\n    /* \"#utility.yul\":1993:1994   */\n  0x01\n    /* \"#utility.yul\":1987:1991   */\n  dup3\n    /* \"#utility.yul\":1983:1995   */\n  and\n    /* \"#utility.yul\":2014:2032   */\n  dup1\n    /* \"#utility.yul\":2004:2085   */\n  tag_95\n  jumpi\n    /* \"#utility.yul\":2070:2074   */\n  0x7f\n    /* \"#utility.yul\":2062:2068   */\n  dup3\n    /* \"#utility.yul\":2058:2075   */\n  and\n    /* \"#utility.yul\":2048:2075   */\n  swap2\n  pop\n    /* \"#utility.yul\":2004:2085   */\ntag_95:\n    /* \"#utility.yul\":2132:2134   */\n  0x20\n    /* \"#utility.yul\":2124:2130   */\n  dup3\n    /* \"#utility.yul\":2121:2135   */\n  lt\n    /* \"#utility.yul\":2101:2119   */\n  dup2\n    /* \"#utility.yul\":2098:2136   */\n  sub\n    /* \"#utility.yul\":2095:2179   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":2151:2169   */\n  tag_97\n  tag_53\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2095:2179   */\ntag_96:\n    /* \"#utility.yul\":1916:2185   */\n  pop\n    /* \"#utility.yul\":1865:2185   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2191:2332   */\ntag_55:\n    /* \"#utility.yul\":2240:2244   */\n  0x00\n    /* \"#utility.yul\":2263:2266   */\n  dup2\n    /* \"#utility.yul\":2255:2266   */\n  swap1\n  pop\n    /* \"#utility.yul\":2286:2289   */\n  dup2\n    /* \"#utility.yul\":2283:2284   */\n  0x00\n    /* \"#utility.yul\":2276:2290   */\n  mstore\n    /* \"#utility.yul\":2320:2324   */\n  0x20\n    /* \"#utility.yul\":2317:2318   */\n  0x00\n    /* \"#utility.yul\":2307:2325   */\n  keccak256\n    /* \"#utility.yul\":2299:2325   */\n  swap1\n  pop\n    /* \"#utility.yul\":2191:2332   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2338:2431   */\ntag_56:\n    /* \"#utility.yul\":2375:2381   */\n  0x00\n    /* \"#utility.yul\":2422:2424   */\n  0x20\n    /* \"#utility.yul\":2417:2419   */\n  0x1f\n    /* \"#utility.yul\":2410:2415   */\n  dup4\n    /* \"#utility.yul\":2406:2420   */\n  add\n    /* \"#utility.yul\":2402:2425   */\n  div\n    /* \"#utility.yul\":2392:2425   */\n  swap1\n  pop\n    /* \"#utility.yul\":2338:2431   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2437:2544   */\ntag_57:\n    /* \"#utility.yul\":2481:2489   */\n  0x00\n    /* \"#utility.yul\":2531:2536   */\n  dup3\n    /* \"#utility.yul\":2525:2529   */\n  dup3\n    /* \"#utility.yul\":2521:2537   */\n  shl\n    /* \"#utility.yul\":2500:2537   */\n  swap1\n  pop\n    /* \"#utility.yul\":2437:2544   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2550:2943   */\ntag_58:\n    /* \"#utility.yul\":2619:2625   */\n  0x00\n    /* \"#utility.yul\":2669:2670   */\n  0x08\n    /* \"#utility.yul\":2657:2667   */\n  dup4\n    /* \"#utility.yul\":2653:2671   */\n  mul\n    /* \"#utility.yul\":2692:2789   */\n  tag_102\n    /* \"#utility.yul\":2722:2788   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2711:2720   */\n  dup3\n    /* \"#utility.yul\":2692:2789   */\n  tag_57\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2810:2849   */\n  tag_103\n    /* \"#utility.yul\":2840:2848   */\n  dup7\n    /* \"#utility.yul\":2829:2838   */\n  dup4\n    /* \"#utility.yul\":2810:2849   */\n  tag_57\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2798:2849   */\n  swap6\n  pop\n    /* \"#utility.yul\":2882:2886   */\n  dup1\n    /* \"#utility.yul\":2878:2887   */\n  not\n    /* \"#utility.yul\":2871:2876   */\n  dup5\n    /* \"#utility.yul\":2867:2888   */\n  and\n    /* \"#utility.yul\":2858:2888   */\n  swap4\n  pop\n    /* \"#utility.yul\":2931:2935   */\n  dup1\n    /* \"#utility.yul\":2921:2929   */\n  dup7\n    /* \"#utility.yul\":2917:2936   */\n  and\n    /* \"#utility.yul\":2910:2915   */\n  dup5\n    /* \"#utility.yul\":2907:2937   */\n  or\n    /* \"#utility.yul\":2897:2937   */\n  swap3\n  pop\n    /* \"#utility.yul\":2626:2943   */\n  pop\n  pop\n    /* \"#utility.yul\":2550:2943   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2949:3026   */\ntag_59:\n    /* \"#utility.yul\":2986:2993   */\n  0x00\n    /* \"#utility.yul\":3015:3020   */\n  dup2\n    /* \"#utility.yul\":3004:3020   */\n  swap1\n  pop\n    /* \"#utility.yul\":2949:3026   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3032:3092   */\ntag_60:\n    /* \"#utility.yul\":3060:3063   */\n  0x00\n    /* \"#utility.yul\":3081:3086   */\n  dup2\n    /* \"#utility.yul\":3074:3086   */\n  swap1\n  pop\n    /* \"#utility.yul\":3032:3092   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3098:3240   */\ntag_61:\n    /* \"#utility.yul\":3148:3157   */\n  0x00\n    /* \"#utility.yul\":3181:3234   */\n  tag_107\n    /* \"#utility.yul\":3199:3233   */\n  tag_108\n    /* \"#utility.yul\":3208:3232   */\n  tag_109\n    /* \"#utility.yul\":3226:3231   */\n  dup5\n    /* \"#utility.yul\":3208:3232   */\n  tag_59\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3199:3233   */\n  tag_60\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3181:3234   */\n  tag_59\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3168:3234   */\n  swap1\n  pop\n    /* \"#utility.yul\":3098:3240   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3246:3321   */\ntag_62:\n    /* \"#utility.yul\":3289:3292   */\n  0x00\n    /* \"#utility.yul\":3310:3315   */\n  dup2\n    /* \"#utility.yul\":3303:3315   */\n  swap1\n  pop\n    /* \"#utility.yul\":3246:3321   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3327:3596   */\ntag_63:\n    /* \"#utility.yul\":3437:3476   */\n  tag_112\n    /* \"#utility.yul\":3468:3475   */\n  dup4\n    /* \"#utility.yul\":3437:3476   */\n  tag_61\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3498:3589   */\n  tag_113\n    /* \"#utility.yul\":3547:3588   */\n  tag_114\n    /* \"#utility.yul\":3571:3587   */\n  dup3\n    /* \"#utility.yul\":3547:3588   */\n  tag_62\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3539:3545   */\n  dup5\n    /* \"#utility.yul\":3532:3536   */\n  dup5\n    /* \"#utility.yul\":3526:3537   */\n  sload\n    /* \"#utility.yul\":3498:3589   */\n  tag_58\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3492:3496   */\n  dup3\n    /* \"#utility.yul\":3485:3590   */\n  sstore\n    /* \"#utility.yul\":3403:3596   */\n  pop\n    /* \"#utility.yul\":3327:3596   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3602:3675   */\ntag_64:\n    /* \"#utility.yul\":3647:3650   */\n  0x00\n    /* \"#utility.yul\":3602:3675   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3681:3870   */\ntag_65:\n    /* \"#utility.yul\":3758:3790   */\n  tag_117\n  tag_64\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3799:3864   */\n  tag_118\n    /* \"#utility.yul\":3857:3863   */\n  dup2\n    /* \"#utility.yul\":3849:3855   */\n  dup5\n    /* \"#utility.yul\":3843:3847   */\n  dup5\n    /* \"#utility.yul\":3799:3864   */\n  tag_63\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3734:3870   */\n  pop\n    /* \"#utility.yul\":3681:3870   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3876:4062   */\ntag_66:\n    /* \"#utility.yul\":3936:4056   */\ntag_120:\n    /* \"#utility.yul\":3953:3956   */\n  dup2\n    /* \"#utility.yul\":3946:3951   */\n  dup2\n    /* \"#utility.yul\":3943:3957   */\n  lt\n    /* \"#utility.yul\":3936:4056   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":4007:4046   */\n  tag_123\n    /* \"#utility.yul\":4044:4045   */\n  0x00\n    /* \"#utility.yul\":4037:4042   */\n  dup3\n    /* \"#utility.yul\":4007:4046   */\n  tag_65\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3980:3981   */\n  0x01\n    /* \"#utility.yul\":3973:3978   */\n  dup2\n    /* \"#utility.yul\":3969:3982   */\n  add\n    /* \"#utility.yul\":3960:3982   */\n  swap1\n  pop\n    /* \"#utility.yul\":3936:4056   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":3876:4062   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4068:4611   */\ntag_67:\n    /* \"#utility.yul\":4169:4171   */\n  0x1f\n    /* \"#utility.yul\":4164:4167   */\n  dup3\n    /* \"#utility.yul\":4161:4172   */\n  gt\n    /* \"#utility.yul\":4158:4604   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":4203:4241   */\n  tag_126\n    /* \"#utility.yul\":4235:4240   */\n  dup2\n    /* \"#utility.yul\":4203:4241   */\n  tag_55\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4287:4316   */\n  tag_127\n    /* \"#utility.yul\":4305:4315   */\n  dup5\n    /* \"#utility.yul\":4287:4316   */\n  tag_56\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4277:4285   */\n  dup2\n    /* \"#utility.yul\":4273:4317   */\n  add\n    /* \"#utility.yul\":4470:4472   */\n  0x20\n    /* \"#utility.yul\":4458:4468   */\n  dup6\n    /* \"#utility.yul\":4455:4473   */\n  lt\n    /* \"#utility.yul\":4452:4501   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":4491:4499   */\n  dup2\n    /* \"#utility.yul\":4476:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4452:4501   */\ntag_128:\n    /* \"#utility.yul\":4514:4594   */\n  tag_129\n    /* \"#utility.yul\":4570:4592   */\n  tag_130\n    /* \"#utility.yul\":4588:4591   */\n  dup6\n    /* \"#utility.yul\":4570:4592   */\n  tag_56\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4560:4568   */\n  dup4\n    /* \"#utility.yul\":4556:4593   */\n  add\n    /* \"#utility.yul\":4543:4554   */\n  dup3\n    /* \"#utility.yul\":4514:4594   */\n  tag_66\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4173:4604   */\n  pop\n  pop\n    /* \"#utility.yul\":4158:4604   */\ntag_125:\n    /* \"#utility.yul\":4068:4611   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4617:4734   */\ntag_68:\n    /* \"#utility.yul\":4671:4679   */\n  0x00\n    /* \"#utility.yul\":4721:4726   */\n  dup3\n    /* \"#utility.yul\":4715:4719   */\n  dup3\n    /* \"#utility.yul\":4711:4727   */\n  shr\n    /* \"#utility.yul\":4690:4727   */\n  swap1\n  pop\n    /* \"#utility.yul\":4617:4734   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4740:4909   */\ntag_69:\n    /* \"#utility.yul\":4784:4790   */\n  0x00\n    /* \"#utility.yul\":4817:4868   */\n  tag_133\n    /* \"#utility.yul\":4865:4866   */\n  0x00\n    /* \"#utility.yul\":4861:4867   */\n  not\n    /* \"#utility.yul\":4853:4858   */\n  dup5\n    /* \"#utility.yul\":4850:4851   */\n  0x08\n    /* \"#utility.yul\":4846:4859   */\n  mul\n    /* \"#utility.yul\":4817:4868   */\n  tag_68\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4813:4869   */\n  not\n    /* \"#utility.yul\":4898:4902   */\n  dup1\n    /* \"#utility.yul\":4892:4896   */\n  dup4\n    /* \"#utility.yul\":4888:4903   */\n  and\n    /* \"#utility.yul\":4878:4903   */\n  swap2\n  pop\n    /* \"#utility.yul\":4791:4909   */\n  pop\n    /* \"#utility.yul\":4740:4909   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4914:5209   */\ntag_70:\n    /* \"#utility.yul\":4990:4994   */\n  0x00\n    /* \"#utility.yul\":5136:5165   */\n  tag_135\n    /* \"#utility.yul\":5161:5164   */\n  dup4\n    /* \"#utility.yul\":5155:5159   */\n  dup4\n    /* \"#utility.yul\":5136:5165   */\n  tag_69\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5128:5165   */\n  swap2\n  pop\n    /* \"#utility.yul\":5198:5201   */\n  dup3\n    /* \"#utility.yul\":5195:5196   */\n  0x02\n    /* \"#utility.yul\":5191:5202   */\n  mul\n    /* \"#utility.yul\":5185:5189   */\n  dup3\n    /* \"#utility.yul\":5182:5203   */\n  or\n    /* \"#utility.yul\":5174:5203   */\n  swap1\n  pop\n    /* \"#utility.yul\":4914:5209   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5214:6609   */\ntag_13:\n    /* \"#utility.yul\":5331:5368   */\n  tag_137\n    /* \"#utility.yul\":5364:5367   */\n  dup3\n    /* \"#utility.yul\":5331:5368   */\n  tag_51\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5433:5451   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5425:5431   */\n  dup2\n    /* \"#utility.yul\":5422:5452   */\n  gt\n    /* \"#utility.yul\":5419:5475   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":5455:5473   */\n  tag_139\n  tag_52\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5419:5475   */\ntag_138:\n    /* \"#utility.yul\":5499:5537   */\n  tag_140\n    /* \"#utility.yul\":5531:5535   */\n  dup3\n    /* \"#utility.yul\":5525:5536   */\n  sload\n    /* \"#utility.yul\":5499:5537   */\n  tag_54\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5584:5651   */\n  tag_141\n    /* \"#utility.yul\":5644:5650   */\n  dup3\n    /* \"#utility.yul\":5636:5642   */\n  dup3\n    /* \"#utility.yul\":5630:5634   */\n  dup6\n    /* \"#utility.yul\":5584:5651   */\n  tag_67\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5678:5679   */\n  0x00\n    /* \"#utility.yul\":5702:5706   */\n  0x20\n    /* \"#utility.yul\":5689:5706   */\n  swap1\n  pop\n    /* \"#utility.yul\":5734:5736   */\n  0x1f\n    /* \"#utility.yul\":5726:5732   */\n  dup4\n    /* \"#utility.yul\":5723:5737   */\n  gt\n    /* \"#utility.yul\":5751:5752   */\n  0x01\n    /* \"#utility.yul\":5746:6364   */\n  dup2\n  eq\n  tag_143\n  jumpi\n    /* \"#utility.yul\":6408:6409   */\n  0x00\n    /* \"#utility.yul\":6425:6431   */\n  dup5\n    /* \"#utility.yul\":6422:6499   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":6474:6483   */\n  dup3\n    /* \"#utility.yul\":6469:6472   */\n  dup8\n    /* \"#utility.yul\":6465:6484   */\n  add\n    /* \"#utility.yul\":6459:6485   */\n  mload\n    /* \"#utility.yul\":6450:6485   */\n  swap1\n  pop\n    /* \"#utility.yul\":6422:6499   */\ntag_144:\n    /* \"#utility.yul\":6525:6592   */\n  tag_145\n    /* \"#utility.yul\":6585:6591   */\n  dup6\n    /* \"#utility.yul\":6578:6583   */\n  dup3\n    /* \"#utility.yul\":6525:6592   */\n  tag_70\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6519:6523   */\n  dup7\n    /* \"#utility.yul\":6512:6593   */\n  sstore\n    /* \"#utility.yul\":6381:6603   */\n  pop\n    /* \"#utility.yul\":5716:6603   */\n  jump(tag_142)\n    /* \"#utility.yul\":5746:6364   */\ntag_143:\n    /* \"#utility.yul\":5798:5802   */\n  0x1f\n    /* \"#utility.yul\":5794:5803   */\n  not\n    /* \"#utility.yul\":5786:5792   */\n  dup5\n    /* \"#utility.yul\":5782:5804   */\n  and\n    /* \"#utility.yul\":5832:5869   */\n  tag_146\n    /* \"#utility.yul\":5864:5868   */\n  dup7\n    /* \"#utility.yul\":5832:5869   */\n  tag_55\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5891:5892   */\n  0x00\n    /* \"#utility.yul\":5905:6113   */\ntag_147:\n    /* \"#utility.yul\":5919:5926   */\n  dup3\n    /* \"#utility.yul\":5916:5917   */\n  dup2\n    /* \"#utility.yul\":5913:5927   */\n  lt\n    /* \"#utility.yul\":5905:6113   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":5998:6007   */\n  dup5\n    /* \"#utility.yul\":5993:5996   */\n  dup10\n    /* \"#utility.yul\":5989:6008   */\n  add\n    /* \"#utility.yul\":5983:6009   */\n  mload\n    /* \"#utility.yul\":5975:5981   */\n  dup3\n    /* \"#utility.yul\":5968:6010   */\n  sstore\n    /* \"#utility.yul\":6049:6050   */\n  0x01\n    /* \"#utility.yul\":6041:6047   */\n  dup3\n    /* \"#utility.yul\":6037:6051   */\n  add\n    /* \"#utility.yul\":6027:6051   */\n  swap2\n  pop\n    /* \"#utility.yul\":6096:6098   */\n  0x20\n    /* \"#utility.yul\":6085:6094   */\n  dup6\n    /* \"#utility.yul\":6081:6099   */\n  add\n    /* \"#utility.yul\":6068:6099   */\n  swap5\n  pop\n    /* \"#utility.yul\":5942:5946   */\n  0x20\n    /* \"#utility.yul\":5939:5940   */\n  dup2\n    /* \"#utility.yul\":5935:5947   */\n  add\n    /* \"#utility.yul\":5930:5947   */\n  swap1\n  pop\n    /* \"#utility.yul\":5905:6113   */\n  jump(tag_147)\ntag_149:\n    /* \"#utility.yul\":6141:6147   */\n  dup7\n    /* \"#utility.yul\":6132:6139   */\n  dup4\n    /* \"#utility.yul\":6129:6148   */\n  lt\n    /* \"#utility.yul\":6126:6305   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":6199:6208   */\n  dup5\n    /* \"#utility.yul\":6194:6197   */\n  dup10\n    /* \"#utility.yul\":6190:6209   */\n  add\n    /* \"#utility.yul\":6184:6210   */\n  mload\n    /* \"#utility.yul\":6242:6290   */\n  tag_151\n    /* \"#utility.yul\":6284:6288   */\n  0x1f\n    /* \"#utility.yul\":6276:6282   */\n  dup10\n    /* \"#utility.yul\":6272:6289   */\n  and\n    /* \"#utility.yul\":6261:6270   */\n  dup3\n    /* \"#utility.yul\":6242:6290   */\n  tag_69\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6234:6240   */\n  dup4\n    /* \"#utility.yul\":6227:6291   */\n  sstore\n    /* \"#utility.yul\":6149:6305   */\n  pop\n    /* \"#utility.yul\":6126:6305   */\ntag_150:\n    /* \"#utility.yul\":6351:6352   */\n  0x01\n    /* \"#utility.yul\":6347:6348   */\n  0x02\n    /* \"#utility.yul\":6339:6345   */\n  dup9\n    /* \"#utility.yul\":6335:6349   */\n  mul\n    /* \"#utility.yul\":6331:6353   */\n  add\n    /* \"#utility.yul\":6325:6329   */\n  dup9\n    /* \"#utility.yul\":6318:6354   */\n  sstore\n    /* \"#utility.yul\":5753:6364   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5716:6603   */\ntag_142:\n  pop\n    /* \"#utility.yul\":5306:6609   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5214:6609   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6615:6733   */\ntag_71:\n    /* \"#utility.yul\":6702:6726   */\n  tag_153\n    /* \"#utility.yul\":6720:6725   */\n  dup2\n    /* \"#utility.yul\":6702:6726   */\n  tag_48\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6697:6700   */\n  dup3\n    /* \"#utility.yul\":6690:6727   */\n  mstore\n    /* \"#utility.yul\":6615:6733   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6739:6961   */\ntag_18:\n    /* \"#utility.yul\":6832:6836   */\n  0x00\n    /* \"#utility.yul\":6870:6872   */\n  0x20\n    /* \"#utility.yul\":6859:6868   */\n  dup3\n    /* \"#utility.yul\":6855:6873   */\n  add\n    /* \"#utility.yul\":6847:6873   */\n  swap1\n  pop\n    /* \"#utility.yul\":6883:6954   */\n  tag_155\n    /* \"#utility.yul\":6951:6952   */\n  0x00\n    /* \"#utility.yul\":6940:6949   */\n  dup4\n    /* \"#utility.yul\":6936:6953   */\n  add\n    /* \"#utility.yul\":6927:6933   */\n  dup5\n    /* \"#utility.yul\":6883:6954   */\n  tag_71\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6739:6961   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6967:7147   */\ntag_72:\n    /* \"#utility.yul\":7015:7092   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7012:7013   */\n  0x00\n    /* \"#utility.yul\":7005:7093   */\n  mstore\n    /* \"#utility.yul\":7112:7116   */\n  0x11\n    /* \"#utility.yul\":7109:7110   */\n  0x04\n    /* \"#utility.yul\":7102:7117   */\n  mstore\n    /* \"#utility.yul\":7136:7140   */\n  0x24\n    /* \"#utility.yul\":7133:7134   */\n  0x00\n    /* \"#utility.yul\":7126:7141   */\n  revert\n    /* \"#utility.yul\":7153:7344   */\ntag_35:\n    /* \"#utility.yul\":7193:7196   */\n  0x00\n    /* \"#utility.yul\":7212:7232   */\n  tag_158\n    /* \"#utility.yul\":7230:7231   */\n  dup3\n    /* \"#utility.yul\":7212:7232   */\n  tag_59\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":7207:7232   */\n  swap2\n  pop\n    /* \"#utility.yul\":7246:7266   */\n  tag_159\n    /* \"#utility.yul\":7264:7265   */\n  dup4\n    /* \"#utility.yul\":7246:7266   */\n  tag_59\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7241:7266   */\n  swap3\n  pop\n    /* \"#utility.yul\":7289:7290   */\n  dup3\n    /* \"#utility.yul\":7286:7287   */\n  dup3\n    /* \"#utility.yul\":7282:7291   */\n  add\n    /* \"#utility.yul\":7275:7291   */\n  swap1\n  pop\n    /* \"#utility.yul\":7310:7313   */\n  dup1\n    /* \"#utility.yul\":7307:7308   */\n  dup3\n    /* \"#utility.yul\":7304:7314   */\n  gt\n    /* \"#utility.yul\":7301:7337   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":7317:7335   */\n  tag_161\n  tag_72\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7301:7337   */\ntag_160:\n    /* \"#utility.yul\":7153:7344   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7350:7468   */\ntag_73:\n    /* \"#utility.yul\":7437:7461   */\n  tag_163\n    /* \"#utility.yul\":7455:7460   */\n  dup2\n    /* \"#utility.yul\":7437:7461   */\n  tag_59\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7432:7435   */\n  dup3\n    /* \"#utility.yul\":7425:7462   */\n  mstore\n    /* \"#utility.yul\":7350:7468   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7474:7916   */\ntag_39:\n    /* \"#utility.yul\":7623:7627   */\n  0x00\n    /* \"#utility.yul\":7661:7663   */\n  0x60\n    /* \"#utility.yul\":7650:7659   */\n  dup3\n    /* \"#utility.yul\":7646:7664   */\n  add\n    /* \"#utility.yul\":7638:7664   */\n  swap1\n  pop\n    /* \"#utility.yul\":7674:7745   */\n  tag_165\n    /* \"#utility.yul\":7742:7743   */\n  0x00\n    /* \"#utility.yul\":7731:7740   */\n  dup4\n    /* \"#utility.yul\":7727:7744   */\n  add\n    /* \"#utility.yul\":7718:7724   */\n  dup7\n    /* \"#utility.yul\":7674:7745   */\n  tag_71\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7755:7827   */\n  tag_166\n    /* \"#utility.yul\":7823:7825   */\n  0x20\n    /* \"#utility.yul\":7812:7821   */\n  dup4\n    /* \"#utility.yul\":7808:7826   */\n  add\n    /* \"#utility.yul\":7799:7805   */\n  dup6\n    /* \"#utility.yul\":7755:7827   */\n  tag_73\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7837:7909   */\n  tag_167\n    /* \"#utility.yul\":7905:7907   */\n  0x40\n    /* \"#utility.yul\":7894:7903   */\n  dup4\n    /* \"#utility.yul\":7890:7908   */\n  add\n    /* \"#utility.yul\":7881:7887   */\n  dup5\n    /* \"#utility.yul\":7837:7909   */\n  tag_73\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7474:7916   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7922:8144   */\ntag_43:\n    /* \"#utility.yul\":8015:8019   */\n  0x00\n    /* \"#utility.yul\":8053:8055   */\n  0x20\n    /* \"#utility.yul\":8042:8051   */\n  dup3\n    /* \"#utility.yul\":8038:8056   */\n  add\n    /* \"#utility.yul\":8030:8056   */\n  swap1\n  pop\n    /* \"#utility.yul\":8066:8137   */\n  tag_169\n    /* \"#utility.yul\":8134:8135   */\n  0x00\n    /* \"#utility.yul\":8123:8132   */\n  dup4\n    /* \"#utility.yul\":8119:8136   */\n  add\n    /* \"#utility.yul\":8110:8116   */\n  dup5\n    /* \"#utility.yul\":8066:8137   */\n  tag_73\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":7922:8144   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/bettoken.sol\":379:7429  contract Bettoken is ERC20, Ownable, ReentrancyGuard {... */\ntag_25:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/bettoken.sol\":379:7429  contract Bettoken is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xb0e68630\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xc040e6b8\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xc040e6b8\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xc552e04b\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xe6bd92b9\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_38\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0xb0e68630\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xb68ed11f\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xba20cf4c\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xbda95633\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x8f7713ff\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x8f7713ff\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x902d55a5\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x920168b3\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x70a08231\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x7547c7a3\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x2b1cbc38\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x3610724e\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x3610724e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x40f02ab6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x54dd1da4\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x55dd574c\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x5fb3b944\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x2b1cbc38\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x32c85ac0\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x338dbf59\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x18160ddd\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x192399d1\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x24600fc3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2630c12f\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0fe83bb8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1514617e\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/bettoken.sol\":7377:7420  revert(\"Direct ETH transfers not allowed.\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/bettoken.sol\":379:7429  contract Bettoken is ERC20, Ownable, ReentrancyGuard {... */\n    tag_2:\n        /* \"contracts/bettoken.sol\":7284:7327  revert(\"Direct ETH transfers not allowed.\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_49\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1095:1148  uint256 public preSaleTokens = 161_164_236 * 10 ** 18 */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1622:1663  uint256 public vestingDuration = 180 days */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1508:1557  mapping(address => uint256) public vestingBalance */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":7118:7240  function withdrawFunds() external onlyOwner nonReentrant {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      stop\n        /* \"contracts/bettoken.sol\":1733:1764  IPriceOracle public priceOracle */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1563:1616  mapping(address => uint256) public vestingReleaseTime */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":6887:7112  function haltSales() external onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      stop\n        /* \"contracts/bettoken.sol\":2329:2510  function startPrivateSale() external onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      stop\n        /* \"contracts/bettoken.sol\":2792:4386  function buyTokens(uint256 usdAmount) external payable nonReentrant {... */\n    tag_16:\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      tag_117\n      jump\t// in\n    tag_114:\n      stop\n        /* \"contracts/bettoken.sol\":1677:1716  uint256 public stakeDuration = 365 days */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":6298:6881  function releaseVestedTokens() external nonReentrant {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      stop\n        /* \"contracts/bettoken.sol\":2516:2786  function startPreSale() external onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      stop\n        /* \"contracts/bettoken.sol\":939:979  uint256 public privateSaleSoldTokens = 0 */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_133\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      stop\n        /* \"contracts/bettoken.sol\":5791:6292  function stakeTokens(uint256 amount) external nonReentrant {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_141\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n    tag_141:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1255:1302  uint256 public preSaleEndPrice = 0.1 * 10 ** 18 */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_150\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":472:533  uint256 public constant TOTAL_SUPPLY = 200_000_000 * 10 ** 18 */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_154\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      tag_156\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1174:1226  uint256 public preSaleStartPrice = 0.0505 * 10 ** 18 */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      tag_160\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      tag_162\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_166\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_167\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_167:\n      tag_168\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      tag_169\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":773:828  uint256 public privateSaleStartPrice = 0.001 * 10 ** 18 */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      tag_171\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      tag_173\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1328:1364  uint256 public preSaleSoldTokens = 0 */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      tag_175\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":607:662  uint256 public privateSaleTarget = 1_000_000 * 10 ** 18 */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      tag_181\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":856:910  uint256 public privateSaleEndPrice = 0.0505 * 10 ** 18 */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      tag_183\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      tag_185\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1436:1475  SaleStage public stage = SaleStage.NONE */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      tag_187\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":692:748  uint256 public privateSaleTokens = 38_835_764 * 10 ** 18 */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_191:\n      pop\n      tag_192\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      tag_194\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      pop\n      tag_196\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      tag_199\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      tag_200\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/bettoken.sol\":1012:1064  uint256 public preSaleTarget = 19_000_000 * 10 ** 18 */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_201\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_201:\n      pop\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      tag_204\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_205\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_205:\n      pop\n      tag_206\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_207\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_207:\n      tag_208\n      jump\t// in\n    tag_206:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_212\n      swap1\n      tag_211\n      jump\t// in\n    tag_212:\n      dup1\n      iszero\n      tag_213\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_214\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_213)\n    tag_214:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_215:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_215\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1095:1148  uint256 public preSaleTokens = 161_164_236 * 10 ** 18 */\n    tag_67:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1622:1663  uint256 public vestingDuration = 180 days */\n    tag_72:\n      sload(0x14)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1508:1557  mapping(address => uint256) public vestingBalance */\n    tag_82:\n      mstore(0x20, 0x12)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":7118:7240  function withdrawFunds() external onlyOwner nonReentrant {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_232\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_233\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_232:\n        /* \"contracts/bettoken.sol\":7193:7200  owner() */\n      tag_235\n        /* \"contracts/bettoken.sol\":7193:7198  owner */\n      tag_146\n        /* \"contracts/bettoken.sol\":7193:7200  owner() */\n      jump\t// in\n    tag_235:\n        /* \"contracts/bettoken.sol\":7185:7210  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/bettoken.sol\":7185:7233  payable(owner()).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/bettoken.sol\":7211:7232  address(this).balance */\n      selfbalance\n        /* \"contracts/bettoken.sol\":7185:7233  payable(owner()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_237\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_237:\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_238\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_239\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_238:\n        /* \"contracts/bettoken.sol\":7118:7240  function withdrawFunds() external onlyOwner nonReentrant {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1733:1764  IPriceOracle public priceOracle */\n    tag_95:\n      0x16\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1563:1616  mapping(address => uint256) public vestingReleaseTime */\n    tag_101:\n      mstore(0x20, 0x13)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bettoken.sol\":6887:7112  function haltSales() external onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_242:\n        /* \"contracts/bettoken.sol\":6970:6987  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":6945:6966  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":6945:6987  privateSaleSoldTokens == privateSaleTokens */\n      eq\n        /* \"contracts/bettoken.sol\":6945:7025  privateSaleSoldTokens == privateSaleTokens || preSaleSoldTokens == preSaleTokens */\n      dup1\n      tag_244\n      jumpi\n      pop\n        /* \"contracts/bettoken.sol\":7012:7025  preSaleTokens */\n      sload(0x0d)\n        /* \"contracts/bettoken.sol\":6991:7008  preSaleSoldTokens */\n      sload(0x10)\n        /* \"contracts/bettoken.sol\":6991:7025  preSaleSoldTokens == preSaleTokens */\n      eq\n        /* \"contracts/bettoken.sol\":6945:7025  privateSaleSoldTokens == privateSaleTokens || preSaleSoldTokens == preSaleTokens */\n    tag_244:\n        /* \"contracts/bettoken.sol\":6937:7073  require(privateSaleSoldTokens == privateSaleTokens || preSaleSoldTokens == preSaleTokens, ... */\n      tag_245\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_245:\n        /* \"contracts/bettoken.sol\":7091:7105  SaleStage.NONE */\n      0x00\n        /* \"contracts/bettoken.sol\":7083:7088  stage */\n      0x11\n      0x00\n        /* \"contracts/bettoken.sol\":7083:7105  stage = SaleStage.NONE */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_248\n      jumpi\n      tag_249\n      tag_250\n      jump\t// in\n    tag_249:\n    tag_248:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":6887:7112  function haltSales() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":2329:2510  function startPrivateSale() external onlyOwner {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_252:\n        /* \"contracts/bettoken.sol\":2403:2417  SaleStage.NONE */\n      0x00\n        /* \"contracts/bettoken.sol\":2394:2417  stage == SaleStage.NONE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_254\n      jumpi\n      tag_255\n      tag_250\n      jump\t// in\n    tag_255:\n    tag_254:\n        /* \"contracts/bettoken.sol\":2394:2399  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":2394:2417  stage == SaleStage.NONE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_256\n      jumpi\n      tag_257\n      tag_250\n      jump\t// in\n    tag_257:\n    tag_256:\n      eq\n        /* \"contracts/bettoken.sol\":2386:2468  require(stage == SaleStage.NONE, \"Private Sale has already started or concluded.\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap1\n      tag_260\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_258:\n        /* \"contracts/bettoken.sol\":2486:2503  SaleStage.PRIVATE */\n      0x01\n        /* \"contracts/bettoken.sol\":2478:2483  stage */\n      0x11\n      0x00\n        /* \"contracts/bettoken.sol\":2478:2503  stage = SaleStage.PRIVATE */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_261\n      jumpi\n      tag_262\n      tag_250\n      jump\t// in\n    tag_262:\n    tag_261:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":2329:2510  function startPrivateSale() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":2792:4386  function buyTokens(uint256 usdAmount) external payable nonReentrant {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_264\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_233\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_264:\n        /* \"contracts/bettoken.sol\":2887:2901  SaleStage.NONE */\n      0x00\n        /* \"contracts/bettoken.sol\":2878:2901  stage != SaleStage.NONE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_266\n      jumpi\n      tag_267\n      tag_250\n      jump\t// in\n    tag_267:\n    tag_266:\n        /* \"contracts/bettoken.sol\":2878:2883  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":2878:2901  stage != SaleStage.NONE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_268\n      jumpi\n      tag_269\n      tag_250\n      jump\t// in\n    tag_269:\n    tag_268:\n      sub\n        /* \"contracts/bettoken.sol\":2870:2924  require(stage != SaleStage.NONE, \"No sale is active.\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap1\n      tag_272\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_270:\n        /* \"contracts/bettoken.sol\":2935:2954  uint256 latestPrice */\n      0x00\n        /* \"contracts/bettoken.sol\":2957:2968  priceOracle */\n      0x16\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/bettoken.sol\":2957:2983  priceOracle.getLatestPrice */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8e15f473\n        /* \"contracts/bettoken.sol\":2957:2985  priceOracle.getLatestPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_274\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_274:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_275\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"contracts/bettoken.sol\":2935:2985  uint256 latestPrice = priceOracle.getLatestPrice() */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":3053:3054  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":3039:3050  latestPrice */\n      dup2\n        /* \"contracts/bettoken.sol\":3039:3054  latestPrice > 0 */\n      gt\n        /* \"contracts/bettoken.sol\":3031:3084  require(latestPrice > 0, \"Invalid price from oracle\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"contracts/bettoken.sol\":3095:3114  uint256 tokensToBuy */\n      0x00\n        /* \"contracts/bettoken.sol\":3137:3154  SaleStage.PRIVATE */\n      0x01\n        /* \"contracts/bettoken.sol\":3128:3154  stage == SaleStage.PRIVATE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_280\n      jumpi\n      tag_281\n      tag_250\n      jump\t// in\n    tag_281:\n    tag_280:\n        /* \"contracts/bettoken.sol\":3128:3133  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":3128:3154  stage == SaleStage.PRIVATE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_282\n      jumpi\n      tag_283\n      tag_250\n      jump\t// in\n    tag_283:\n    tag_282:\n      sub\n        /* \"contracts/bettoken.sol\":3124:4380  if (stage == SaleStage.PRIVATE) {... */\n      tag_284\n      jumpi\n        /* \"contracts/bettoken.sol\":3202:3219  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":3178:3199  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":3178:3219  privateSaleSoldTokens < privateSaleTokens */\n      lt\n        /* \"contracts/bettoken.sol\":3170:3246  require(privateSaleSoldTokens < privateSaleTokens, \"Private Sale sold out.\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_285:\n        /* \"contracts/bettoken.sol\":3274:3341  calculatePrivateSaleTokens(usdAmount.mul(latestPrice).div(1 ether)) */\n      tag_288\n        /* \"contracts/bettoken.sol\":3301:3340  usdAmount.mul(latestPrice).div(1 ether) */\n      tag_289\n        /* \"contracts/bettoken.sol\":3332:3339  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/bettoken.sol\":3301:3327  usdAmount.mul(latestPrice) */\n      tag_290\n        /* \"contracts/bettoken.sol\":3315:3326  latestPrice */\n      dup6\n        /* \"contracts/bettoken.sol\":3301:3310  usdAmount */\n      dup8\n        /* \"contracts/bettoken.sol\":3301:3314  usdAmount.mul */\n      tag_291\n      swap1\n        /* \"contracts/bettoken.sol\":3301:3327  usdAmount.mul(latestPrice) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_290:\n        /* \"contracts/bettoken.sol\":3301:3331  usdAmount.mul(latestPrice).div */\n      tag_292\n      swap1\n        /* \"contracts/bettoken.sol\":3301:3340  usdAmount.mul(latestPrice).div(1 ether) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_289:\n        /* \"contracts/bettoken.sol\":3274:3300  calculatePrivateSaleTokens */\n      tag_293\n        /* \"contracts/bettoken.sol\":3274:3341  calculatePrivateSaleTokens(usdAmount.mul(latestPrice).div(1 ether)) */\n      jump\t// in\n    tag_288:\n        /* \"contracts/bettoken.sol\":3260:3341  tokensToBuy = calculatePrivateSaleTokens(usdAmount.mul(latestPrice).div(1 ether)) */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":3379:3417  privateSaleSoldTokens.add(tokensToBuy) */\n      tag_294\n        /* \"contracts/bettoken.sol\":3405:3416  tokensToBuy */\n      dup2\n        /* \"contracts/bettoken.sol\":3379:3400  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":3379:3404  privateSaleSoldTokens.add */\n      tag_295\n      swap1\n        /* \"contracts/bettoken.sol\":3379:3417  privateSaleSoldTokens.add(tokensToBuy) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_294:\n        /* \"contracts/bettoken.sol\":3355:3376  privateSaleSoldTokens */\n      0x0b\n        /* \"contracts/bettoken.sol\":3355:3417  privateSaleSoldTokens = privateSaleSoldTokens.add(tokensToBuy) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":3464:3481  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":3439:3460  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":3439:3481  privateSaleSoldTokens <= privateSaleTokens */\n      gt\n      iszero\n        /* \"contracts/bettoken.sol\":3431:3519  require(privateSaleSoldTokens <= privateSaleTokens, \"Exceeds Private Sale token limit.\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap1\n      tag_298\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_296:\n        /* \"contracts/bettoken.sol\":3562:3605  vestingBalance[msg.sender].add(tokensToBuy) */\n      tag_299\n        /* \"contracts/bettoken.sol\":3593:3604  tokensToBuy */\n      dup2\n        /* \"contracts/bettoken.sol\":3562:3576  vestingBalance */\n      0x12\n        /* \"contracts/bettoken.sol\":3562:3588  vestingBalance[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":3577:3587  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":3562:3588  vestingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/bettoken.sol\":3562:3592  vestingBalance[msg.sender].add */\n      tag_295\n      swap1\n        /* \"contracts/bettoken.sol\":3562:3605  vestingBalance[msg.sender].add(tokensToBuy) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_299:\n        /* \"contracts/bettoken.sol\":3533:3547  vestingBalance */\n      0x12\n        /* \"contracts/bettoken.sol\":3533:3559  vestingBalance[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":3548:3558  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":3533:3559  vestingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/bettoken.sol\":3533:3605  vestingBalance[msg.sender] = vestingBalance[msg.sender].add(tokensToBuy) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":3652:3707  block.timestamp.add(stakeDuration).add(vestingDuration) */\n      tag_300\n        /* \"contracts/bettoken.sol\":3691:3706  vestingDuration */\n      sload(0x14)\n        /* \"contracts/bettoken.sol\":3652:3686  block.timestamp.add(stakeDuration) */\n      tag_301\n        /* \"contracts/bettoken.sol\":3672:3685  stakeDuration */\n      sload(0x15)\n        /* \"contracts/bettoken.sol\":3652:3667  block.timestamp */\n      timestamp\n        /* \"contracts/bettoken.sol\":3652:3671  block.timestamp.add */\n      tag_295\n      swap1\n        /* \"contracts/bettoken.sol\":3652:3686  block.timestamp.add(stakeDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_301:\n        /* \"contracts/bettoken.sol\":3652:3690  block.timestamp.add(stakeDuration).add */\n      tag_295\n      swap1\n        /* \"contracts/bettoken.sol\":3652:3707  block.timestamp.add(stakeDuration).add(vestingDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_300:\n        /* \"contracts/bettoken.sol\":3619:3637  vestingReleaseTime */\n      0x13\n        /* \"contracts/bettoken.sol\":3619:3649  vestingReleaseTime[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":3638:3648  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":3619:3649  vestingReleaseTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/bettoken.sol\":3619:3707  vestingReleaseTime[msg.sender] = block.timestamp.add(stakeDuration).add(vestingDuration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":3738:3748  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":3726:3762  PrivateSale(msg.sender, tokensToBuy) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8fa81bb0702332ea2a0aee44bb9e4d359cf4a2c5a820dd59d9129369bdbca73f\n        /* \"contracts/bettoken.sol\":3750:3761  tokensToBuy */\n      dup3\n        /* \"contracts/bettoken.sol\":3726:3762  PrivateSale(msg.sender, tokensToBuy) */\n      mload(0x40)\n      tag_302\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/bettoken.sol\":3124:4380  if (stage == SaleStage.PRIVATE) {... */\n      jump(tag_303)\n    tag_284:\n        /* \"contracts/bettoken.sol\":3792:3809  SaleStage.PRESALE */\n      0x02\n        /* \"contracts/bettoken.sol\":3783:3809  stage == SaleStage.PRESALE */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_304\n      jumpi\n      tag_305\n      tag_250\n      jump\t// in\n    tag_305:\n    tag_304:\n        /* \"contracts/bettoken.sol\":3783:3788  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":3783:3809  stage == SaleStage.PRESALE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_306\n      jumpi\n      tag_307\n      tag_250\n      jump\t// in\n    tag_307:\n    tag_306:\n      sub\n        /* \"contracts/bettoken.sol\":3779:4380  if (stage == SaleStage.PRESALE) {... */\n      tag_308\n      jumpi\n        /* \"contracts/bettoken.sol\":3853:3866  preSaleTokens */\n      sload(0x0d)\n        /* \"contracts/bettoken.sol\":3833:3850  preSaleSoldTokens */\n      sload(0x10)\n        /* \"contracts/bettoken.sol\":3833:3866  preSaleSoldTokens < preSaleTokens */\n      lt\n        /* \"contracts/bettoken.sol\":3825:3889  require(preSaleSoldTokens < preSaleTokens, \"Pre-Sale sold out.\") */\n      tag_309\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap1\n      tag_311\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_309:\n        /* \"contracts/bettoken.sol\":3924:3938  100 * 10 ** 18 */\n      0x056bc75e2d63100000\n        /* \"contracts/bettoken.sol\":3911:3920  usdAmount */\n      dup4\n        /* \"contracts/bettoken.sol\":3911:3938  usdAmount >= 100 * 10 ** 18 */\n      lt\n      iszero\n        /* \"contracts/bettoken.sol\":3911:3971  usdAmount >= 100 * 10 ** 18 && usdAmount <= 3_000 * 10 ** 18 */\n      dup1\n      iszero\n      tag_312\n      jumpi\n      pop\n        /* \"contracts/bettoken.sol\":3955:3971  3_000 * 10 ** 18 */\n      0xa2a15d09519be00000\n        /* \"contracts/bettoken.sol\":3942:3951  usdAmount */\n      dup4\n        /* \"contracts/bettoken.sol\":3942:3971  usdAmount <= 3_000 * 10 ** 18 */\n      gt\n      iszero\n        /* \"contracts/bettoken.sol\":3911:3971  usdAmount >= 100 * 10 ** 18 && usdAmount <= 3_000 * 10 ** 18 */\n    tag_312:\n        /* \"contracts/bettoken.sol\":3903:4006  require(usdAmount >= 100 * 10 ** 18 && usdAmount <= 3_000 * 10 ** 18, \"Purchase amount out of limits.\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap1\n      tag_315\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_313:\n        /* \"contracts/bettoken.sol\":4034:4097  calculatePreSaleTokens(usdAmount.mul(latestPrice).div(1 ether)) */\n      tag_316\n        /* \"contracts/bettoken.sol\":4057:4096  usdAmount.mul(latestPrice).div(1 ether) */\n      tag_317\n        /* \"contracts/bettoken.sol\":4088:4095  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/bettoken.sol\":4057:4083  usdAmount.mul(latestPrice) */\n      tag_318\n        /* \"contracts/bettoken.sol\":4071:4082  latestPrice */\n      dup6\n        /* \"contracts/bettoken.sol\":4057:4066  usdAmount */\n      dup8\n        /* \"contracts/bettoken.sol\":4057:4070  usdAmount.mul */\n      tag_291\n      swap1\n        /* \"contracts/bettoken.sol\":4057:4083  usdAmount.mul(latestPrice) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_318:\n        /* \"contracts/bettoken.sol\":4057:4087  usdAmount.mul(latestPrice).div */\n      tag_292\n      swap1\n        /* \"contracts/bettoken.sol\":4057:4096  usdAmount.mul(latestPrice).div(1 ether) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_317:\n        /* \"contracts/bettoken.sol\":4034:4056  calculatePreSaleTokens */\n      tag_319\n        /* \"contracts/bettoken.sol\":4034:4097  calculatePreSaleTokens(usdAmount.mul(latestPrice).div(1 ether)) */\n      jump\t// in\n    tag_316:\n        /* \"contracts/bettoken.sol\":4020:4097  tokensToBuy = calculatePreSaleTokens(usdAmount.mul(latestPrice).div(1 ether)) */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":4131:4165  preSaleSoldTokens.add(tokensToBuy) */\n      tag_320\n        /* \"contracts/bettoken.sol\":4153:4164  tokensToBuy */\n      dup2\n        /* \"contracts/bettoken.sol\":4131:4148  preSaleSoldTokens */\n      sload(0x10)\n        /* \"contracts/bettoken.sol\":4131:4152  preSaleSoldTokens.add */\n      tag_295\n      swap1\n        /* \"contracts/bettoken.sol\":4131:4165  preSaleSoldTokens.add(tokensToBuy) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_320:\n        /* \"contracts/bettoken.sol\":4111:4128  preSaleSoldTokens */\n      0x10\n        /* \"contracts/bettoken.sol\":4111:4165  preSaleSoldTokens = preSaleSoldTokens.add(tokensToBuy) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":4208:4221  preSaleTokens */\n      sload(0x0d)\n        /* \"contracts/bettoken.sol\":4187:4204  preSaleSoldTokens */\n      sload(0x10)\n        /* \"contracts/bettoken.sol\":4187:4221  preSaleSoldTokens <= preSaleTokens */\n      gt\n      iszero\n        /* \"contracts/bettoken.sol\":4179:4255  require(preSaleSoldTokens <= preSaleTokens, \"Exceeds Pre-Sale token limit.\") */\n      tag_321\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_322\n      swap1\n      tag_323\n      jump\t// in\n    tag_322:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_321:\n        /* \"contracts/bettoken.sol\":4269:4318  _transfer(address(this), msg.sender, tokensToBuy) */\n      tag_324\n        /* \"contracts/bettoken.sol\":4287:4291  this */\n      address\n        /* \"contracts/bettoken.sol\":4294:4304  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":4306:4317  tokensToBuy */\n      dup4\n        /* \"contracts/bettoken.sol\":4269:4278  _transfer */\n      tag_227\n        /* \"contracts/bettoken.sol\":4269:4318  _transfer(address(this), msg.sender, tokensToBuy) */\n      jump\t// in\n    tag_324:\n        /* \"contracts/bettoken.sol\":4345:4355  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":4337:4369  PreSale(msg.sender, tokensToBuy) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x550498dc565cc74203b9d14cba907c9f60ceefe26e82b37df98f6cb98529cf19\n        /* \"contracts/bettoken.sol\":4357:4368  tokensToBuy */\n      dup3\n        /* \"contracts/bettoken.sol\":4337:4369  PreSale(msg.sender, tokensToBuy) */\n      mload(0x40)\n      tag_325\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/bettoken.sol\":3779:4380  if (stage == SaleStage.PRESALE) {... */\n    tag_308:\n        /* \"contracts/bettoken.sol\":3124:4380  if (stage == SaleStage.PRIVATE) {... */\n    tag_303:\n        /* \"contracts/bettoken.sol\":2860:4386  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_326\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_239\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_326:\n        /* \"contracts/bettoken.sol\":2792:4386  function buyTokens(uint256 usdAmount) external payable nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1677:1716  uint256 public stakeDuration = 365 days */\n    tag_120:\n      sload(0x15)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":6298:6881  function releaseVestedTokens() external nonReentrant {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_328\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_233\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_328:\n        /* \"contracts/bettoken.sol\":6388:6406  vestingReleaseTime */\n      0x13\n        /* \"contracts/bettoken.sol\":6388:6418  vestingReleaseTime[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":6407:6417  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":6388:6418  vestingReleaseTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/bettoken.sol\":6369:6384  block.timestamp */\n      timestamp\n        /* \"contracts/bettoken.sol\":6369:6418  block.timestamp >= vestingReleaseTime[msg.sender] */\n      lt\n      iszero\n        /* \"contracts/bettoken.sol\":6361:6456  require(block.timestamp >= vestingReleaseTime[msg.sender], \"Vesting period not yet completed.\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap1\n      tag_332\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_330:\n        /* \"contracts/bettoken.sol\":6466:6480  uint256 amount */\n      0x00\n        /* \"contracts/bettoken.sol\":6483:6497  vestingBalance */\n      0x12\n        /* \"contracts/bettoken.sol\":6483:6509  vestingBalance[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":6498:6508  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":6483:6509  vestingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/bettoken.sol\":6466:6509  uint256 amount = vestingBalance[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":6536:6537  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":6527:6533  amount */\n      dup2\n        /* \"contracts/bettoken.sol\":6527:6537  amount > 0 */\n      gt\n        /* \"contracts/bettoken.sol\":6519:6569  require(amount > 0, \"No vested tokens to release\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_334\n      swap1\n      tag_335\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_333:\n        /* \"contracts/bettoken.sol\":6718:6719  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":6689:6703  vestingBalance */\n      0x12\n        /* \"contracts/bettoken.sol\":6689:6715  vestingBalance[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":6704:6714  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":6689:6715  vestingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/bettoken.sol\":6689:6719  vestingBalance[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":6762:6763  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":6729:6747  vestingReleaseTime */\n      0x13\n        /* \"contracts/bettoken.sol\":6729:6759  vestingReleaseTime[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":6748:6758  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":6729:6759  vestingReleaseTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/bettoken.sol\":6729:6763  vestingReleaseTime[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":6774:6818  _transfer(address(this), msg.sender, amount) */\n      tag_336\n        /* \"contracts/bettoken.sol\":6792:6796  this */\n      address\n        /* \"contracts/bettoken.sol\":6799:6809  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":6811:6817  amount */\n      dup4\n        /* \"contracts/bettoken.sol\":6774:6783  _transfer */\n      tag_227\n        /* \"contracts/bettoken.sol\":6774:6818  _transfer(address(this), msg.sender, amount) */\n      jump\t// in\n    tag_336:\n        /* \"contracts/bettoken.sol\":6855:6865  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":6834:6874  VestedTokensReleased(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6bc5063c7239b75c8bf325a2a2238f726fada322163996bb6c93d5594fb119f0\n        /* \"contracts/bettoken.sol\":6867:6873  amount */\n      dup3\n        /* \"contracts/bettoken.sol\":6834:6874  VestedTokensReleased(msg.sender, amount) */\n      mload(0x40)\n      tag_337\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/bettoken.sol\":6351:6881  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_338\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_239\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_338:\n        /* \"contracts/bettoken.sol\":6298:6881  function releaseVestedTokens() external nonReentrant {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":2516:2786  function startPreSale() external onlyOwner {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_340\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_340:\n        /* \"contracts/bettoken.sol\":2586:2603  SaleStage.PRIVATE */\n      0x01\n        /* \"contracts/bettoken.sol\":2577:2603  stage == SaleStage.PRIVATE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_342\n      jumpi\n      tag_343\n      tag_250\n      jump\t// in\n    tag_343:\n    tag_342:\n        /* \"contracts/bettoken.sol\":2577:2582  stage */\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/bettoken.sol\":2577:2603  stage == SaleStage.PRIVATE */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_344\n      jumpi\n      tag_345\n      tag_250\n      jump\t// in\n    tag_345:\n    tag_344:\n      eq\n        /* \"contracts/bettoken.sol\":2569:2647  require(stage == SaleStage.PRIVATE, \"Private Sale should be concluded first.\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap1\n      tag_348\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_346:\n        /* \"contracts/bettoken.sol\":2690:2707  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":2665:2686  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":2665:2707  privateSaleSoldTokens == privateSaleTokens */\n      eq\n        /* \"contracts/bettoken.sol\":2657:2744  require(privateSaleSoldTokens == privateSaleTokens, \"Private Sale target not reached.\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_350\n      swap1\n      tag_351\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_349:\n        /* \"contracts/bettoken.sol\":2762:2779  SaleStage.PRESALE */\n      0x02\n        /* \"contracts/bettoken.sol\":2754:2759  stage */\n      0x11\n      0x00\n        /* \"contracts/bettoken.sol\":2754:2779  stage = SaleStage.PRESALE */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_352\n      jumpi\n      tag_353\n      tag_250\n      jump\t// in\n    tag_353:\n    tag_352:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":2516:2786  function startPreSale() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":939:979  uint256 public privateSaleSoldTokens = 0 */\n    tag_130:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_356\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_358\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_359\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/bettoken.sol\":5791:6292  function stakeTokens(uint256 amount) external nonReentrant {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_361\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_233\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_361:\n        /* \"contracts/bettoken.sol\":5877:5878  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":5868:5874  amount */\n      dup2\n        /* \"contracts/bettoken.sol\":5868:5878  amount > 0 */\n      gt\n        /* \"contracts/bettoken.sol\":5860:5912  require(amount > 0, \"Amount must be greater than 0\") */\n      tag_363\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_364\n      swap1\n      tag_365\n      jump\t// in\n    tag_364:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_363:\n        /* \"contracts/bettoken.sol\":5955:5961  amount */\n      dup1\n        /* \"contracts/bettoken.sol\":5930:5951  balanceOf(msg.sender) */\n      tag_366\n        /* \"contracts/bettoken.sol\":5940:5950  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":5930:5939  balanceOf */\n      tag_135\n        /* \"contracts/bettoken.sol\":5930:5951  balanceOf(msg.sender) */\n      jump\t// in\n    tag_366:\n        /* \"contracts/bettoken.sol\":5930:5961  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/bettoken.sol\":5922:5995  require(balanceOf(msg.sender) >= amount, \"Insufficient balance to stake\") */\n      tag_367\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_368\n      swap1\n      tag_369\n      jump\t// in\n    tag_368:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_367:\n        /* \"contracts/bettoken.sol\":6006:6050  _transfer(msg.sender, address(this), amount) */\n      tag_370\n        /* \"contracts/bettoken.sol\":6016:6026  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":6036:6040  this */\n      address\n        /* \"contracts/bettoken.sol\":6043:6049  amount */\n      dup4\n        /* \"contracts/bettoken.sol\":6006:6015  _transfer */\n      tag_227\n        /* \"contracts/bettoken.sol\":6006:6050  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_370:\n        /* \"contracts/bettoken.sol\":6090:6128  vestingBalance[msg.sender].add(amount) */\n      tag_371\n        /* \"contracts/bettoken.sol\":6121:6127  amount */\n      dup2\n        /* \"contracts/bettoken.sol\":6090:6104  vestingBalance */\n      0x12\n        /* \"contracts/bettoken.sol\":6090:6116  vestingBalance[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":6105:6115  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":6090:6116  vestingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/bettoken.sol\":6090:6120  vestingBalance[msg.sender].add */\n      tag_295\n      swap1\n        /* \"contracts/bettoken.sol\":6090:6128  vestingBalance[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_371:\n        /* \"contracts/bettoken.sol\":6061:6075  vestingBalance */\n      0x12\n        /* \"contracts/bettoken.sol\":6061:6087  vestingBalance[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":6076:6086  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":6061:6087  vestingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/bettoken.sol\":6061:6128  vestingBalance[msg.sender] = vestingBalance[msg.sender].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":6171:6205  block.timestamp.add(stakeDuration) */\n      tag_372\n        /* \"contracts/bettoken.sol\":6191:6204  stakeDuration */\n      sload(0x15)\n        /* \"contracts/bettoken.sol\":6171:6186  block.timestamp */\n      timestamp\n        /* \"contracts/bettoken.sol\":6171:6190  block.timestamp.add */\n      tag_295\n      swap1\n        /* \"contracts/bettoken.sol\":6171:6205  block.timestamp.add(stakeDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_372:\n        /* \"contracts/bettoken.sol\":6138:6156  vestingReleaseTime */\n      0x13\n        /* \"contracts/bettoken.sol\":6138:6168  vestingReleaseTime[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":6157:6167  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":6138:6168  vestingReleaseTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/bettoken.sol\":6138:6205  vestingReleaseTime[msg.sender] = block.timestamp.add(stakeDuration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/bettoken.sol\":6234:6244  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":6221:6285  TokensStaked(msg.sender, amount, vestingReleaseTime[msg.sender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc\n        /* \"contracts/bettoken.sol\":6246:6252  amount */\n      dup3\n        /* \"contracts/bettoken.sol\":6254:6272  vestingReleaseTime */\n      0x13\n        /* \"contracts/bettoken.sol\":6254:6284  vestingReleaseTime[msg.sender] */\n      0x00\n        /* \"contracts/bettoken.sol\":6273:6283  msg.sender */\n      caller\n        /* \"contracts/bettoken.sol\":6254:6284  vestingReleaseTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/bettoken.sol\":6221:6285  TokensStaked(msg.sender, amount, vestingReleaseTime[msg.sender]) */\n      mload(0x40)\n      tag_373\n      swap3\n      swap2\n      swap1\n      tag_374\n      jump\t// in\n    tag_373:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_375\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_239\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_375:\n        /* \"contracts/bettoken.sol\":5791:6292  function stakeTokens(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1255:1302  uint256 public preSaleEndPrice = 0.1 * 10 ** 18 */\n    tag_151:\n      sload(0x0f)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":472:533  uint256 public constant TOTAL_SUPPLY = 200_000_000 * 10 ** 18 */\n    tag_155:\n        /* \"contracts/bettoken.sol\":511:533  200_000_000 * 10 ** 18 */\n      0xa56fa5b99019a5c8000000\n        /* \"contracts/bettoken.sol\":472:533  uint256 public constant TOTAL_SUPPLY = 200_000_000 * 10 ** 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1174:1226  uint256 public preSaleStartPrice = 0.0505 * 10 ** 18 */\n    tag_159:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_378\n      swap1\n      tag_211\n      jump\t// in\n    tag_378:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_379\n      swap1\n      tag_211\n      jump\t// in\n    tag_379:\n      dup1\n      iszero\n      tag_380\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_381\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_380)\n    tag_381:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_382:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_382\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_380:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_384\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_384:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_385\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":773:828  uint256 public privateSaleStartPrice = 0.001 * 10 ** 18 */\n    tag_172:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1328:1364  uint256 public preSaleSoldTokens = 0 */\n    tag_176:\n      sload(0x10)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":607:662  uint256 public privateSaleTarget = 1_000_000 * 10 ** 18 */\n    tag_180:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":856:910  uint256 public privateSaleEndPrice = 0.0505 * 10 ** 18 */\n    tag_184:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1436:1475  SaleStage public stage = SaleStage.NONE */\n    tag_188:\n      0x11\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/bettoken.sol\":692:748  uint256 public privateSaleTokens = 38_835_764 * 10 ** 18 */\n    tag_193:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":1012:1064  uint256 public preSaleTarget = 19_000_000 * 10 ** 18 */\n    tag_203:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_388\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_388:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_390\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_391\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_391:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_390:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_392\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_359\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_392:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_395\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_396\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_395:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_398\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_398:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_399\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_400\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_401\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_402\n      jump\t// in\n    tag_401:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_400:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_403\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_396\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_403:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_399:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_405\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_406\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_406:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_405:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_407\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_408\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_408:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_407:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_409\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_410\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_409:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_412\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_412:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_413\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_413:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_414\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_415\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_415:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_416\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_416:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_414:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_418\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_419\n      swap1\n      tag_420\n      jump\t// in\n    tag_419:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_418:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_423\n      swap2\n      swap1\n      tag_424\n      jump\t// in\n    tag_423:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_426\n      swap2\n      swap1\n      tag_427\n      jump\t// in\n    tag_426:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":4392:5256  function calculatePrivateSaleTokens(uint256 usdAmount) internal view returns (uint256) {... */\n    tag_293:\n        /* \"contracts/bettoken.sol\":4470:4477  uint256 */\n      0x00\n        /* \"contracts/bettoken.sol\":4509:4510  0 */\n      dup1\n        /* \"contracts/bettoken.sol\":4497:4506  usdAmount */\n      dup3\n        /* \"contracts/bettoken.sol\":4497:4510  usdAmount > 0 */\n      gt\n        /* \"contracts/bettoken.sol\":4489:4548  require(usdAmount > 0, \"USD amount must be greater than 0\") */\n      tag_429\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_430\n      swap1\n      tag_431\n      jump\t// in\n    tag_430:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_429:\n        /* \"contracts/bettoken.sol\":4586:4587  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":4566:4583  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":4566:4587  privateSaleTokens > 0 */\n      gt\n        /* \"contracts/bettoken.sol\":4558:4634  require(privateSaleTokens > 0, \"Private Sale tokens must be greater than 0\") */\n      tag_432\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_433\n      swap1\n      tag_434\n      jump\t// in\n    tag_433:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_432:\n        /* \"contracts/bettoken.sol\":4677:4694  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":4652:4673  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":4652:4694  privateSaleSoldTokens <= privateSaleTokens */\n      gt\n      iszero\n        /* \"contracts/bettoken.sol\":4644:4747  require(privateSaleSoldTokens <= privateSaleTokens, \"Private Sale sold tokens exceed available tokens\") */\n      tag_435\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_436\n      swap1\n      tag_437\n      jump\t// in\n    tag_436:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_435:\n        /* \"contracts/bettoken.sol\":4758:4776  uint256 tokenRange */\n      0x00\n        /* \"contracts/bettoken.sol\":4779:4825  privateSaleEndPrice.sub(privateSaleStartPrice) */\n      tag_438\n        /* \"contracts/bettoken.sol\":4803:4824  privateSaleStartPrice */\n      sload(0x09)\n        /* \"contracts/bettoken.sol\":4779:4798  privateSaleEndPrice */\n      sload(0x0a)\n        /* \"contracts/bettoken.sol\":4779:4802  privateSaleEndPrice.sub */\n      tag_439\n      swap1\n        /* \"contracts/bettoken.sol\":4779:4825  privateSaleEndPrice.sub(privateSaleStartPrice) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_438:\n        /* \"contracts/bettoken.sol\":4758:4825  uint256 tokenRange = privateSaleEndPrice.sub(privateSaleStartPrice) */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":4835:4855  uint256 currentPrice */\n      0x00\n        /* \"contracts/bettoken.sol\":4858:4967  privateSaleStartPrice.add(... */\n      tag_440\n        /* \"contracts/bettoken.sol\":4897:4957  tokenRange.mul(privateSaleSoldTokens).div(privateSaleTokens) */\n      tag_441\n        /* \"contracts/bettoken.sol\":4939:4956  privateSaleTokens */\n      sload(0x08)\n        /* \"contracts/bettoken.sol\":4897:4934  tokenRange.mul(privateSaleSoldTokens) */\n      tag_442\n        /* \"contracts/bettoken.sol\":4912:4933  privateSaleSoldTokens */\n      sload(0x0b)\n        /* \"contracts/bettoken.sol\":4897:4907  tokenRange */\n      dup7\n        /* \"contracts/bettoken.sol\":4897:4911  tokenRange.mul */\n      tag_291\n      swap1\n        /* \"contracts/bettoken.sol\":4897:4934  tokenRange.mul(privateSaleSoldTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_442:\n        /* \"contracts/bettoken.sol\":4897:4938  tokenRange.mul(privateSaleSoldTokens).div */\n      tag_292\n      swap1\n        /* \"contracts/bettoken.sol\":4897:4957  tokenRange.mul(privateSaleSoldTokens).div(privateSaleTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_441:\n        /* \"contracts/bettoken.sol\":4858:4879  privateSaleStartPrice */\n      sload(0x09)\n        /* \"contracts/bettoken.sol\":4858:4883  privateSaleStartPrice.add */\n      tag_295\n      swap1\n        /* \"contracts/bettoken.sol\":4858:4967  privateSaleStartPrice.add(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_440:\n        /* \"contracts/bettoken.sol\":4835:4967  uint256 currentPrice = privateSaleStartPrice.add(... */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":5002:5023  privateSaleStartPrice */\n      sload(0x09)\n        /* \"contracts/bettoken.sol\":4986:4998  currentPrice */\n      dup2\n        /* \"contracts/bettoken.sol\":4986:5023  currentPrice >= privateSaleStartPrice */\n      lt\n      iszero\n        /* \"contracts/bettoken.sol\":4986:5062  currentPrice >= privateSaleStartPrice && currentPrice <= privateSaleEndPrice */\n      dup1\n      iszero\n      tag_443\n      jumpi\n      pop\n        /* \"contracts/bettoken.sol\":5043:5062  privateSaleEndPrice */\n      sload(0x0a)\n        /* \"contracts/bettoken.sol\":5027:5039  currentPrice */\n      dup2\n        /* \"contracts/bettoken.sol\":5027:5062  currentPrice <= privateSaleEndPrice */\n      gt\n      iszero\n        /* \"contracts/bettoken.sol\":4986:5062  currentPrice >= privateSaleStartPrice && currentPrice <= privateSaleEndPrice */\n    tag_443:\n        /* \"contracts/bettoken.sol\":4978:5097  require(currentPrice >= privateSaleStartPrice && currentPrice <= privateSaleEndPrice, \"Invalid token price calculated\") */\n      tag_444\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_445\n      swap1\n      tag_446\n      jump\t// in\n    tag_445:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_444:\n        /* \"contracts/bettoken.sol\":5108:5122  uint256 tokens */\n      0x00\n        /* \"contracts/bettoken.sol\":5125:5152  usdAmount.div(currentPrice) */\n      tag_447\n        /* \"contracts/bettoken.sol\":5139:5151  currentPrice */\n      dup3\n        /* \"contracts/bettoken.sol\":5125:5134  usdAmount */\n      dup7\n        /* \"contracts/bettoken.sol\":5125:5138  usdAmount.div */\n      tag_292\n      swap1\n        /* \"contracts/bettoken.sol\":5125:5152  usdAmount.div(currentPrice) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_447:\n        /* \"contracts/bettoken.sol\":5108:5152  uint256 tokens = usdAmount.div(currentPrice) */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":5179:5180  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":5170:5176  tokens */\n      dup2\n        /* \"contracts/bettoken.sol\":5170:5180  tokens > 0 */\n      gt\n        /* \"contracts/bettoken.sol\":5162:5225  require(tokens > 0, \"Calculated tokens must be greater than 0\") */\n      tag_448\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_449\n      swap1\n      tag_450\n      jump\t// in\n    tag_449:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_448:\n        /* \"contracts/bettoken.sol\":5243:5249  tokens */\n      dup1\n        /* \"contracts/bettoken.sol\":5236:5249  return tokens */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/bettoken.sol\":4392:5256  function calculatePrivateSaleTokens(uint256 usdAmount) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_452\n      swap2\n      swap1\n      tag_453\n      jump\t// in\n    tag_452:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/bettoken.sol\":5262:5785  function calculatePreSaleTokens(uint256 usdAmount) internal view returns (uint256) {... */\n    tag_319:\n        /* \"contracts/bettoken.sol\":5336:5343  uint256 */\n      0x00\n        /* \"contracts/bettoken.sol\":5355:5375  uint256 currentPrice */\n      dup1\n        /* \"contracts/bettoken.sol\":5378:5505  preSaleStartPrice.add(... */\n      tag_455\n        /* \"contracts/bettoken.sol\":5413:5495  (preSaleEndPrice.sub(preSaleStartPrice)).mul(preSaleSoldTokens).div(preSaleTokens) */\n      tag_456\n        /* \"contracts/bettoken.sol\":5481:5494  preSaleTokens */\n      sload(0x0d)\n        /* \"contracts/bettoken.sol\":5413:5476  (preSaleEndPrice.sub(preSaleStartPrice)).mul(preSaleSoldTokens) */\n      tag_457\n        /* \"contracts/bettoken.sol\":5458:5475  preSaleSoldTokens */\n      sload(0x10)\n        /* \"contracts/bettoken.sol\":5414:5452  preSaleEndPrice.sub(preSaleStartPrice) */\n      tag_458\n        /* \"contracts/bettoken.sol\":5434:5451  preSaleStartPrice */\n      sload(0x0e)\n        /* \"contracts/bettoken.sol\":5414:5429  preSaleEndPrice */\n      sload(0x0f)\n        /* \"contracts/bettoken.sol\":5414:5433  preSaleEndPrice.sub */\n      tag_439\n      swap1\n        /* \"contracts/bettoken.sol\":5414:5452  preSaleEndPrice.sub(preSaleStartPrice) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_458:\n        /* \"contracts/bettoken.sol\":5413:5457  (preSaleEndPrice.sub(preSaleStartPrice)).mul */\n      tag_291\n      swap1\n        /* \"contracts/bettoken.sol\":5413:5476  (preSaleEndPrice.sub(preSaleStartPrice)).mul(preSaleSoldTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_457:\n        /* \"contracts/bettoken.sol\":5413:5480  (preSaleEndPrice.sub(preSaleStartPrice)).mul(preSaleSoldTokens).div */\n      tag_292\n      swap1\n        /* \"contracts/bettoken.sol\":5413:5495  (preSaleEndPrice.sub(preSaleStartPrice)).mul(preSaleSoldTokens).div(preSaleTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_456:\n        /* \"contracts/bettoken.sol\":5378:5395  preSaleStartPrice */\n      sload(0x0e)\n        /* \"contracts/bettoken.sol\":5378:5399  preSaleStartPrice.add */\n      tag_295\n      swap1\n        /* \"contracts/bettoken.sol\":5378:5505  preSaleStartPrice.add(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_455:\n        /* \"contracts/bettoken.sol\":5355:5505  uint256 currentPrice = preSaleStartPrice.add(... */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":5539:5556  preSaleStartPrice */\n      sload(0x0e)\n        /* \"contracts/bettoken.sol\":5523:5535  currentPrice */\n      dup2\n        /* \"contracts/bettoken.sol\":5523:5556  currentPrice >= preSaleStartPrice */\n      lt\n      iszero\n        /* \"contracts/bettoken.sol\":5523:5591  currentPrice >= preSaleStartPrice && currentPrice <= preSaleEndPrice */\n      dup1\n      iszero\n      tag_459\n      jumpi\n      pop\n        /* \"contracts/bettoken.sol\":5576:5591  preSaleEndPrice */\n      sload(0x0f)\n        /* \"contracts/bettoken.sol\":5560:5572  currentPrice */\n      dup2\n        /* \"contracts/bettoken.sol\":5560:5591  currentPrice <= preSaleEndPrice */\n      gt\n      iszero\n        /* \"contracts/bettoken.sol\":5523:5591  currentPrice >= preSaleStartPrice && currentPrice <= preSaleEndPrice */\n    tag_459:\n        /* \"contracts/bettoken.sol\":5515:5626  require(currentPrice >= preSaleStartPrice && currentPrice <= preSaleEndPrice, \"Invalid token price calculated\") */\n      tag_460\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_461\n      swap1\n      tag_446\n      jump\t// in\n    tag_461:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_460:\n        /* \"contracts/bettoken.sol\":5637:5651  uint256 tokens */\n      0x00\n        /* \"contracts/bettoken.sol\":5654:5681  usdAmount.div(currentPrice) */\n      tag_462\n        /* \"contracts/bettoken.sol\":5668:5680  currentPrice */\n      dup3\n        /* \"contracts/bettoken.sol\":5654:5663  usdAmount */\n      dup6\n        /* \"contracts/bettoken.sol\":5654:5667  usdAmount.div */\n      tag_292\n      swap1\n        /* \"contracts/bettoken.sol\":5654:5681  usdAmount.div(currentPrice) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_462:\n        /* \"contracts/bettoken.sol\":5637:5681  uint256 tokens = usdAmount.div(currentPrice) */\n      swap1\n      pop\n        /* \"contracts/bettoken.sol\":5708:5709  0 */\n      0x00\n        /* \"contracts/bettoken.sol\":5699:5705  tokens */\n      dup2\n        /* \"contracts/bettoken.sol\":5699:5709  tokens > 0 */\n      gt\n        /* \"contracts/bettoken.sol\":5691:5754  require(tokens > 0, \"Calculated tokens must be greater than 0\") */\n      tag_463\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_464\n      swap1\n      tag_450\n      jump\t// in\n    tag_464:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_463:\n        /* \"contracts/bettoken.sol\":5772:5778  tokens */\n      dup1\n        /* \"contracts/bettoken.sol\":5765:5778  return tokens */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/bettoken.sol\":5262:5785  function calculatePreSaleTokens(uint256 usdAmount) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_359:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_396:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_467\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_468\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_468:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_467:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_469\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_470\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_470:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_469:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_471\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_472\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_472:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_471:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_410:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_474\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_475\n      swap2\n      swap1\n      tag_453\n      jump\t// in\n    tag_475:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_476)\n    tag_474:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_477\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_478\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_402\n      jump\t// in\n    tag_478:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_477:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_476:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_479\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_480)\n    tag_479:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_480:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_481\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_481:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_439:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_483\n      swap2\n      swap1\n      tag_484\n      jump\t// in\n    tag_483:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_485:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:402   */\n    tag_486:\n        /* \"#utility.yul\":322:356   */\n      0x44697265637420455448207472616e7366657273206e6f7420616c6c6f776564\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:357   */\n      mstore\n        /* \"#utility.yul\":391:394   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":386:388   */\n      0x20\n        /* \"#utility.yul\":378:384   */\n      dup3\n        /* \"#utility.yul\":374:389   */\n      add\n        /* \"#utility.yul\":367:395   */\n      mstore\n        /* \"#utility.yul\":182:402   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":408:774   */\n    tag_487:\n        /* \"#utility.yul\":550:553   */\n      0x00\n        /* \"#utility.yul\":571:638   */\n      tag_567\n        /* \"#utility.yul\":635:637   */\n      0x21\n        /* \"#utility.yul\":630:633   */\n      dup4\n        /* \"#utility.yul\":571:638   */\n      tag_485\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":564:638   */\n      swap2\n      pop\n        /* \"#utility.yul\":647:740   */\n      tag_568\n        /* \"#utility.yul\":736:739   */\n      dup3\n        /* \"#utility.yul\":647:740   */\n      tag_486\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":765:767   */\n      0x40\n        /* \"#utility.yul\":760:763   */\n      dup3\n        /* \"#utility.yul\":756:768   */\n      add\n        /* \"#utility.yul\":749:768   */\n      swap1\n      pop\n        /* \"#utility.yul\":408:774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":780:1199   */\n    tag_49:\n        /* \"#utility.yul\":946:950   */\n      0x00\n        /* \"#utility.yul\":984:986   */\n      0x20\n        /* \"#utility.yul\":973:982   */\n      dup3\n        /* \"#utility.yul\":969:987   */\n      add\n        /* \"#utility.yul\":961:987   */\n      swap1\n      pop\n        /* \"#utility.yul\":1033:1042   */\n      dup2\n        /* \"#utility.yul\":1027:1031   */\n      dup2\n        /* \"#utility.yul\":1023:1043   */\n      sub\n        /* \"#utility.yul\":1019:1020   */\n      0x00\n        /* \"#utility.yul\":1008:1017   */\n      dup4\n        /* \"#utility.yul\":1004:1021   */\n      add\n        /* \"#utility.yul\":997:1044   */\n      mstore\n        /* \"#utility.yul\":1061:1192   */\n      tag_570\n        /* \"#utility.yul\":1187:1191   */\n      dup2\n        /* \"#utility.yul\":1061:1192   */\n      tag_487\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":1053:1192   */\n      swap1\n      pop\n        /* \"#utility.yul\":780:1199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1205:1304   */\n    tag_488:\n        /* \"#utility.yul\":1257:1263   */\n      0x00\n        /* \"#utility.yul\":1291:1296   */\n      dup2\n        /* \"#utility.yul\":1285:1297   */\n      mload\n        /* \"#utility.yul\":1275:1297   */\n      swap1\n      pop\n        /* \"#utility.yul\":1205:1304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1310:1449   */\n    tag_489:\n        /* \"#utility.yul\":1399:1405   */\n      dup3\n        /* \"#utility.yul\":1394:1397   */\n      dup2\n        /* \"#utility.yul\":1389:1392   */\n      dup4\n        /* \"#utility.yul\":1383:1406   */\n      mcopy\n        /* \"#utility.yul\":1440:1441   */\n      0x00\n        /* \"#utility.yul\":1431:1437   */\n      dup4\n        /* \"#utility.yul\":1426:1429   */\n      dup4\n        /* \"#utility.yul\":1422:1438   */\n      add\n        /* \"#utility.yul\":1415:1442   */\n      mstore\n        /* \"#utility.yul\":1310:1449   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1455:1557   */\n    tag_490:\n        /* \"#utility.yul\":1496:1502   */\n      0x00\n        /* \"#utility.yul\":1547:1549   */\n      0x1f\n        /* \"#utility.yul\":1543:1550   */\n      not\n        /* \"#utility.yul\":1538:1540   */\n      0x1f\n        /* \"#utility.yul\":1531:1536   */\n      dup4\n        /* \"#utility.yul\":1527:1541   */\n      add\n        /* \"#utility.yul\":1523:1551   */\n      and\n        /* \"#utility.yul\":1513:1551   */\n      swap1\n      pop\n        /* \"#utility.yul\":1455:1557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1563:1940   */\n    tag_491:\n        /* \"#utility.yul\":1651:1654   */\n      0x00\n        /* \"#utility.yul\":1679:1718   */\n      tag_575\n        /* \"#utility.yul\":1712:1717   */\n      dup3\n        /* \"#utility.yul\":1679:1718   */\n      tag_488\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":1734:1805   */\n      tag_576\n        /* \"#utility.yul\":1798:1804   */\n      dup2\n        /* \"#utility.yul\":1793:1796   */\n      dup6\n        /* \"#utility.yul\":1734:1805   */\n      tag_485\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":1727:1805   */\n      swap4\n      pop\n        /* \"#utility.yul\":1814:1879   */\n      tag_577\n        /* \"#utility.yul\":1872:1878   */\n      dup2\n        /* \"#utility.yul\":1867:1870   */\n      dup6\n        /* \"#utility.yul\":1860:1864   */\n      0x20\n        /* \"#utility.yul\":1853:1858   */\n      dup7\n        /* \"#utility.yul\":1849:1865   */\n      add\n        /* \"#utility.yul\":1814:1879   */\n      tag_489\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":1904:1933   */\n      tag_578\n        /* \"#utility.yul\":1926:1932   */\n      dup2\n        /* \"#utility.yul\":1904:1933   */\n      tag_490\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":1899:1902   */\n      dup5\n        /* \"#utility.yul\":1895:1934   */\n      add\n        /* \"#utility.yul\":1888:1934   */\n      swap2\n      pop\n        /* \"#utility.yul\":1655:1940   */\n      pop\n        /* \"#utility.yul\":1563:1940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1946:2259   */\n    tag_57:\n        /* \"#utility.yul\":2059:2063   */\n      0x00\n        /* \"#utility.yul\":2097:2099   */\n      0x20\n        /* \"#utility.yul\":2086:2095   */\n      dup3\n        /* \"#utility.yul\":2082:2100   */\n      add\n        /* \"#utility.yul\":2074:2100   */\n      swap1\n      pop\n        /* \"#utility.yul\":2146:2155   */\n      dup2\n        /* \"#utility.yul\":2140:2144   */\n      dup2\n        /* \"#utility.yul\":2136:2156   */\n      sub\n        /* \"#utility.yul\":2132:2133   */\n      0x00\n        /* \"#utility.yul\":2121:2130   */\n      dup4\n        /* \"#utility.yul\":2117:2134   */\n      add\n        /* \"#utility.yul\":2110:2157   */\n      mstore\n        /* \"#utility.yul\":2174:2252   */\n      tag_580\n        /* \"#utility.yul\":2247:2251   */\n      dup2\n        /* \"#utility.yul\":2238:2244   */\n      dup5\n        /* \"#utility.yul\":2174:2252   */\n      tag_491\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":2166:2252   */\n      swap1\n      pop\n        /* \"#utility.yul\":1946:2259   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2346:2463   */\n    tag_493:\n        /* \"#utility.yul\":2455:2456   */\n      0x00\n        /* \"#utility.yul\":2452:2453   */\n      dup1\n        /* \"#utility.yul\":2445:2457   */\n      revert\n        /* \"#utility.yul\":2592:2718   */\n    tag_495:\n        /* \"#utility.yul\":2629:2636   */\n      0x00\n        /* \"#utility.yul\":2669:2711   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2662:2667   */\n      dup3\n        /* \"#utility.yul\":2658:2712   */\n      and\n        /* \"#utility.yul\":2647:2712   */\n      swap1\n      pop\n        /* \"#utility.yul\":2592:2718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2724:2820   */\n    tag_496:\n        /* \"#utility.yul\":2761:2768   */\n      0x00\n        /* \"#utility.yul\":2790:2814   */\n      tag_586\n        /* \"#utility.yul\":2808:2813   */\n      dup3\n        /* \"#utility.yul\":2790:2814   */\n      tag_495\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":2779:2814   */\n      swap1\n      pop\n        /* \"#utility.yul\":2724:2820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2826:2948   */\n    tag_497:\n        /* \"#utility.yul\":2899:2923   */\n      tag_588\n        /* \"#utility.yul\":2917:2922   */\n      dup2\n        /* \"#utility.yul\":2899:2923   */\n      tag_496\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":2892:2897   */\n      dup2\n        /* \"#utility.yul\":2889:2924   */\n      eq\n        /* \"#utility.yul\":2879:2942   */\n      tag_589\n      jumpi\n        /* \"#utility.yul\":2938:2939   */\n      0x00\n        /* \"#utility.yul\":2935:2936   */\n      dup1\n        /* \"#utility.yul\":2928:2940   */\n      revert\n        /* \"#utility.yul\":2879:2942   */\n    tag_589:\n        /* \"#utility.yul\":2826:2948   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2954:3093   */\n    tag_498:\n        /* \"#utility.yul\":3000:3005   */\n      0x00\n        /* \"#utility.yul\":3038:3044   */\n      dup2\n        /* \"#utility.yul\":3025:3045   */\n      calldataload\n        /* \"#utility.yul\":3016:3045   */\n      swap1\n      pop\n        /* \"#utility.yul\":3054:3087   */\n      tag_591\n        /* \"#utility.yul\":3081:3086   */\n      dup2\n        /* \"#utility.yul\":3054:3087   */\n      tag_497\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":2954:3093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3099:3176   */\n    tag_499:\n        /* \"#utility.yul\":3136:3143   */\n      0x00\n        /* \"#utility.yul\":3165:3170   */\n      dup2\n        /* \"#utility.yul\":3154:3170   */\n      swap1\n      pop\n        /* \"#utility.yul\":3099:3176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3182:3304   */\n    tag_500:\n        /* \"#utility.yul\":3255:3279   */\n      tag_594\n        /* \"#utility.yul\":3273:3278   */\n      dup2\n        /* \"#utility.yul\":3255:3279   */\n      tag_499\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":3248:3253   */\n      dup2\n        /* \"#utility.yul\":3245:3280   */\n      eq\n        /* \"#utility.yul\":3235:3298   */\n      tag_595\n      jumpi\n        /* \"#utility.yul\":3294:3295   */\n      0x00\n        /* \"#utility.yul\":3291:3292   */\n      dup1\n        /* \"#utility.yul\":3284:3296   */\n      revert\n        /* \"#utility.yul\":3235:3298   */\n    tag_595:\n        /* \"#utility.yul\":3182:3304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3310:3449   */\n    tag_501:\n        /* \"#utility.yul\":3356:3361   */\n      0x00\n        /* \"#utility.yul\":3394:3400   */\n      dup2\n        /* \"#utility.yul\":3381:3401   */\n      calldataload\n        /* \"#utility.yul\":3372:3401   */\n      swap1\n      pop\n        /* \"#utility.yul\":3410:3443   */\n      tag_597\n        /* \"#utility.yul\":3437:3442   */\n      dup2\n        /* \"#utility.yul\":3410:3443   */\n      tag_500\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":3310:3449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3455:3929   */\n    tag_61:\n        /* \"#utility.yul\":3523:3529   */\n      0x00\n        /* \"#utility.yul\":3531:3537   */\n      dup1\n        /* \"#utility.yul\":3580:3582   */\n      0x40\n        /* \"#utility.yul\":3568:3577   */\n      dup4\n        /* \"#utility.yul\":3559:3566   */\n      dup6\n        /* \"#utility.yul\":3555:3578   */\n      sub\n        /* \"#utility.yul\":3551:3583   */\n      slt\n        /* \"#utility.yul\":3548:3667   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":3586:3665   */\n      tag_600\n      tag_493\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":3548:3667   */\n    tag_599:\n        /* \"#utility.yul\":3706:3707   */\n      0x00\n        /* \"#utility.yul\":3731:3784   */\n      tag_601\n        /* \"#utility.yul\":3776:3783   */\n      dup6\n        /* \"#utility.yul\":3767:3773   */\n      dup3\n        /* \"#utility.yul\":3756:3765   */\n      dup7\n        /* \"#utility.yul\":3752:3774   */\n      add\n        /* \"#utility.yul\":3731:3784   */\n      tag_498\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":3721:3784   */\n      swap3\n      pop\n        /* \"#utility.yul\":3677:3794   */\n      pop\n        /* \"#utility.yul\":3833:3835   */\n      0x20\n        /* \"#utility.yul\":3859:3912   */\n      tag_602\n        /* \"#utility.yul\":3904:3911   */\n      dup6\n        /* \"#utility.yul\":3895:3901   */\n      dup3\n        /* \"#utility.yul\":3884:3893   */\n      dup7\n        /* \"#utility.yul\":3880:3902   */\n      add\n        /* \"#utility.yul\":3859:3912   */\n      tag_501\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":3849:3912   */\n      swap2\n      pop\n        /* \"#utility.yul\":3804:3922   */\n      pop\n        /* \"#utility.yul\":3455:3929   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3935:4025   */\n    tag_502:\n        /* \"#utility.yul\":3969:3976   */\n      0x00\n        /* \"#utility.yul\":4012:4017   */\n      dup2\n        /* \"#utility.yul\":4005:4018   */\n      iszero\n        /* \"#utility.yul\":3998:4019   */\n      iszero\n        /* \"#utility.yul\":3987:4019   */\n      swap1\n      pop\n        /* \"#utility.yul\":3935:4025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4031:4140   */\n    tag_503:\n        /* \"#utility.yul\":4112:4133   */\n      tag_605\n        /* \"#utility.yul\":4127:4132   */\n      dup2\n        /* \"#utility.yul\":4112:4133   */\n      tag_502\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":4107:4110   */\n      dup3\n        /* \"#utility.yul\":4100:4134   */\n      mstore\n        /* \"#utility.yul\":4031:4140   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4146:4356   */\n    tag_64:\n        /* \"#utility.yul\":4233:4237   */\n      0x00\n        /* \"#utility.yul\":4271:4273   */\n      0x20\n        /* \"#utility.yul\":4260:4269   */\n      dup3\n        /* \"#utility.yul\":4256:4274   */\n      add\n        /* \"#utility.yul\":4248:4274   */\n      swap1\n      pop\n        /* \"#utility.yul\":4284:4349   */\n      tag_607\n        /* \"#utility.yul\":4346:4347   */\n      0x00\n        /* \"#utility.yul\":4335:4344   */\n      dup4\n        /* \"#utility.yul\":4331:4348   */\n      add\n        /* \"#utility.yul\":4322:4328   */\n      dup5\n        /* \"#utility.yul\":4284:4349   */\n      tag_503\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":4146:4356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4362:4480   */\n    tag_504:\n        /* \"#utility.yul\":4449:4473   */\n      tag_609\n        /* \"#utility.yul\":4467:4472   */\n      dup2\n        /* \"#utility.yul\":4449:4473   */\n      tag_499\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":4444:4447   */\n      dup3\n        /* \"#utility.yul\":4437:4474   */\n      mstore\n        /* \"#utility.yul\":4362:4480   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4486:4708   */\n    tag_69:\n        /* \"#utility.yul\":4579:4583   */\n      0x00\n        /* \"#utility.yul\":4617:4619   */\n      0x20\n        /* \"#utility.yul\":4606:4615   */\n      dup3\n        /* \"#utility.yul\":4602:4620   */\n      add\n        /* \"#utility.yul\":4594:4620   */\n      swap1\n      pop\n        /* \"#utility.yul\":4630:4701   */\n      tag_611\n        /* \"#utility.yul\":4698:4699   */\n      0x00\n        /* \"#utility.yul\":4687:4696   */\n      dup4\n        /* \"#utility.yul\":4683:4700   */\n      add\n        /* \"#utility.yul\":4674:4680   */\n      dup5\n        /* \"#utility.yul\":4630:4701   */\n      tag_504\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":4486:4708   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4714:5043   */\n    tag_81:\n        /* \"#utility.yul\":4773:4779   */\n      0x00\n        /* \"#utility.yul\":4822:4824   */\n      0x20\n        /* \"#utility.yul\":4810:4819   */\n      dup3\n        /* \"#utility.yul\":4801:4808   */\n      dup5\n        /* \"#utility.yul\":4797:4820   */\n      sub\n        /* \"#utility.yul\":4793:4825   */\n      slt\n        /* \"#utility.yul\":4790:4909   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":4828:4907   */\n      tag_614\n      tag_493\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":4790:4909   */\n    tag_613:\n        /* \"#utility.yul\":4948:4949   */\n      0x00\n        /* \"#utility.yul\":4973:5026   */\n      tag_615\n        /* \"#utility.yul\":5018:5025   */\n      dup5\n        /* \"#utility.yul\":5009:5015   */\n      dup3\n        /* \"#utility.yul\":4998:5007   */\n      dup6\n        /* \"#utility.yul\":4994:5016   */\n      add\n        /* \"#utility.yul\":4973:5026   */\n      tag_498\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":4963:5026   */\n      swap2\n      pop\n        /* \"#utility.yul\":4919:5036   */\n      pop\n        /* \"#utility.yul\":4714:5043   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5049:5668   */\n    tag_87:\n        /* \"#utility.yul\":5126:5132   */\n      0x00\n        /* \"#utility.yul\":5134:5140   */\n      dup1\n        /* \"#utility.yul\":5142:5148   */\n      0x00\n        /* \"#utility.yul\":5191:5193   */\n      0x60\n        /* \"#utility.yul\":5179:5188   */\n      dup5\n        /* \"#utility.yul\":5170:5177   */\n      dup7\n        /* \"#utility.yul\":5166:5189   */\n      sub\n        /* \"#utility.yul\":5162:5194   */\n      slt\n        /* \"#utility.yul\":5159:5278   */\n      iszero\n      tag_617\n      jumpi\n        /* \"#utility.yul\":5197:5276   */\n      tag_618\n      tag_493\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":5159:5278   */\n    tag_617:\n        /* \"#utility.yul\":5317:5318   */\n      0x00\n        /* \"#utility.yul\":5342:5395   */\n      tag_619\n        /* \"#utility.yul\":5387:5394   */\n      dup7\n        /* \"#utility.yul\":5378:5384   */\n      dup3\n        /* \"#utility.yul\":5367:5376   */\n      dup8\n        /* \"#utility.yul\":5363:5385   */\n      add\n        /* \"#utility.yul\":5342:5395   */\n      tag_498\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":5332:5395   */\n      swap4\n      pop\n        /* \"#utility.yul\":5288:5405   */\n      pop\n        /* \"#utility.yul\":5444:5446   */\n      0x20\n        /* \"#utility.yul\":5470:5523   */\n      tag_620\n        /* \"#utility.yul\":5515:5522   */\n      dup7\n        /* \"#utility.yul\":5506:5512   */\n      dup3\n        /* \"#utility.yul\":5495:5504   */\n      dup8\n        /* \"#utility.yul\":5491:5513   */\n      add\n        /* \"#utility.yul\":5470:5523   */\n      tag_498\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":5460:5523   */\n      swap3\n      pop\n        /* \"#utility.yul\":5415:5533   */\n      pop\n        /* \"#utility.yul\":5572:5574   */\n      0x40\n        /* \"#utility.yul\":5598:5651   */\n      tag_621\n        /* \"#utility.yul\":5643:5650   */\n      dup7\n        /* \"#utility.yul\":5634:5640   */\n      dup3\n        /* \"#utility.yul\":5623:5632   */\n      dup8\n        /* \"#utility.yul\":5619:5641   */\n      add\n        /* \"#utility.yul\":5598:5651   */\n      tag_501\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":5588:5651   */\n      swap2\n      pop\n        /* \"#utility.yul\":5543:5661   */\n      pop\n        /* \"#utility.yul\":5049:5668   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5674:5734   */\n    tag_505:\n        /* \"#utility.yul\":5702:5705   */\n      0x00\n        /* \"#utility.yul\":5723:5728   */\n      dup2\n        /* \"#utility.yul\":5716:5728   */\n      swap1\n      pop\n        /* \"#utility.yul\":5674:5734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5740:5882   */\n    tag_506:\n        /* \"#utility.yul\":5790:5799   */\n      0x00\n        /* \"#utility.yul\":5823:5876   */\n      tag_624\n        /* \"#utility.yul\":5841:5875   */\n      tag_625\n        /* \"#utility.yul\":5850:5874   */\n      tag_626\n        /* \"#utility.yul\":5868:5873   */\n      dup5\n        /* \"#utility.yul\":5850:5874   */\n      tag_495\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":5841:5875   */\n      tag_505\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":5823:5876   */\n      tag_495\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":5810:5876   */\n      swap1\n      pop\n        /* \"#utility.yul\":5740:5882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6014   */\n    tag_507:\n        /* \"#utility.yul\":5938:5947   */\n      0x00\n        /* \"#utility.yul\":5971:6008   */\n      tag_628\n        /* \"#utility.yul\":6002:6007   */\n      dup3\n        /* \"#utility.yul\":5971:6008   */\n      tag_506\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":5958:6008   */\n      swap1\n      pop\n        /* \"#utility.yul\":5888:6014   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6020:6167   */\n    tag_508:\n        /* \"#utility.yul\":6091:6100   */\n      0x00\n        /* \"#utility.yul\":6124:6161   */\n      tag_630\n        /* \"#utility.yul\":6155:6160   */\n      dup3\n        /* \"#utility.yul\":6124:6161   */\n      tag_507\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":6111:6161   */\n      swap1\n      pop\n        /* \"#utility.yul\":6020:6167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6173:6346   */\n    tag_509:\n        /* \"#utility.yul\":6281:6339   */\n      tag_632\n        /* \"#utility.yul\":6333:6338   */\n      dup2\n        /* \"#utility.yul\":6281:6339   */\n      tag_508\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":6276:6279   */\n      dup3\n        /* \"#utility.yul\":6269:6340   */\n      mstore\n        /* \"#utility.yul\":6173:6346   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6352:6616   */\n    tag_97:\n        /* \"#utility.yul\":6466:6470   */\n      0x00\n        /* \"#utility.yul\":6504:6506   */\n      0x20\n        /* \"#utility.yul\":6493:6502   */\n      dup3\n        /* \"#utility.yul\":6489:6507   */\n      add\n        /* \"#utility.yul\":6481:6507   */\n      swap1\n      pop\n        /* \"#utility.yul\":6517:6609   */\n      tag_634\n        /* \"#utility.yul\":6606:6607   */\n      0x00\n        /* \"#utility.yul\":6595:6604   */\n      dup4\n        /* \"#utility.yul\":6591:6608   */\n      add\n        /* \"#utility.yul\":6582:6588   */\n      dup5\n        /* \"#utility.yul\":6517:6609   */\n      tag_509\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":6352:6616   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6622:6708   */\n    tag_510:\n        /* \"#utility.yul\":6657:6664   */\n      0x00\n        /* \"#utility.yul\":6697:6701   */\n      0xff\n        /* \"#utility.yul\":6690:6695   */\n      dup3\n        /* \"#utility.yul\":6686:6702   */\n      and\n        /* \"#utility.yul\":6675:6702   */\n      swap1\n      pop\n        /* \"#utility.yul\":6622:6708   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6714:6826   */\n    tag_511:\n        /* \"#utility.yul\":6797:6819   */\n      tag_637\n        /* \"#utility.yul\":6813:6818   */\n      dup2\n        /* \"#utility.yul\":6797:6819   */\n      tag_510\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":6792:6795   */\n      dup3\n        /* \"#utility.yul\":6785:6820   */\n      mstore\n        /* \"#utility.yul\":6714:6826   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6832:7046   */\n    tag_107:\n        /* \"#utility.yul\":6921:6925   */\n      0x00\n        /* \"#utility.yul\":6959:6961   */\n      0x20\n        /* \"#utility.yul\":6948:6957   */\n      dup3\n        /* \"#utility.yul\":6944:6962   */\n      add\n        /* \"#utility.yul\":6936:6962   */\n      swap1\n      pop\n        /* \"#utility.yul\":6972:7039   */\n      tag_639\n        /* \"#utility.yul\":7036:7037   */\n      0x00\n        /* \"#utility.yul\":7025:7034   */\n      dup4\n        /* \"#utility.yul\":7021:7038   */\n      add\n        /* \"#utility.yul\":7012:7018   */\n      dup5\n        /* \"#utility.yul\":6972:7039   */\n      tag_511\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":6832:7046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7052:7381   */\n    tag_116:\n        /* \"#utility.yul\":7111:7117   */\n      0x00\n        /* \"#utility.yul\":7160:7162   */\n      0x20\n        /* \"#utility.yul\":7148:7157   */\n      dup3\n        /* \"#utility.yul\":7139:7146   */\n      dup5\n        /* \"#utility.yul\":7135:7158   */\n      sub\n        /* \"#utility.yul\":7131:7163   */\n      slt\n        /* \"#utility.yul\":7128:7247   */\n      iszero\n      tag_641\n      jumpi\n        /* \"#utility.yul\":7166:7245   */\n      tag_642\n      tag_493\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":7128:7247   */\n    tag_641:\n        /* \"#utility.yul\":7286:7287   */\n      0x00\n        /* \"#utility.yul\":7311:7364   */\n      tag_643\n        /* \"#utility.yul\":7356:7363   */\n      dup5\n        /* \"#utility.yul\":7347:7353   */\n      dup3\n        /* \"#utility.yul\":7336:7345   */\n      dup6\n        /* \"#utility.yul\":7332:7354   */\n      add\n        /* \"#utility.yul\":7311:7364   */\n      tag_501\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":7301:7364   */\n      swap2\n      pop\n        /* \"#utility.yul\":7257:7374   */\n      pop\n        /* \"#utility.yul\":7052:7381   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7387:7505   */\n    tag_512:\n        /* \"#utility.yul\":7474:7498   */\n      tag_645\n        /* \"#utility.yul\":7492:7497   */\n      dup2\n        /* \"#utility.yul\":7474:7498   */\n      tag_496\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":7469:7472   */\n      dup3\n        /* \"#utility.yul\":7462:7499   */\n      mstore\n        /* \"#utility.yul\":7387:7505   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7511:7733   */\n    tag_148:\n        /* \"#utility.yul\":7604:7608   */\n      0x00\n        /* \"#utility.yul\":7642:7644   */\n      0x20\n        /* \"#utility.yul\":7631:7640   */\n      dup3\n        /* \"#utility.yul\":7627:7645   */\n      add\n        /* \"#utility.yul\":7619:7645   */\n      swap1\n      pop\n        /* \"#utility.yul\":7655:7726   */\n      tag_647\n        /* \"#utility.yul\":7723:7724   */\n      0x00\n        /* \"#utility.yul\":7712:7721   */\n      dup4\n        /* \"#utility.yul\":7708:7725   */\n      add\n        /* \"#utility.yul\":7699:7705   */\n      dup5\n        /* \"#utility.yul\":7655:7726   */\n      tag_512\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":7511:7733   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7739:7919   */\n    tag_250:\n        /* \"#utility.yul\":7787:7864   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7784:7785   */\n      0x00\n        /* \"#utility.yul\":7777:7865   */\n      mstore\n        /* \"#utility.yul\":7884:7888   */\n      0x21\n        /* \"#utility.yul\":7881:7882   */\n      0x04\n        /* \"#utility.yul\":7874:7889   */\n      mstore\n        /* \"#utility.yul\":7908:7912   */\n      0x24\n        /* \"#utility.yul\":7905:7906   */\n      0x00\n        /* \"#utility.yul\":7898:7913   */\n      revert\n        /* \"#utility.yul\":7925:8044   */\n    tag_513:\n        /* \"#utility.yul\":8012:8013   */\n      0x03\n        /* \"#utility.yul\":8005:8010   */\n      dup2\n        /* \"#utility.yul\":8002:8014   */\n      lt\n        /* \"#utility.yul\":7992:8038   */\n      tag_650\n      jumpi\n        /* \"#utility.yul\":8018:8036   */\n      tag_651\n      tag_250\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":7992:8038   */\n    tag_650:\n        /* \"#utility.yul\":7925:8044   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8050:8189   */\n    tag_514:\n        /* \"#utility.yul\":8101:8108   */\n      0x00\n        /* \"#utility.yul\":8130:8135   */\n      dup2\n        /* \"#utility.yul\":8119:8135   */\n      swap1\n      pop\n        /* \"#utility.yul\":8136:8183   */\n      tag_653\n        /* \"#utility.yul\":8177:8182   */\n      dup3\n        /* \"#utility.yul\":8136:8183   */\n      tag_513\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":8050:8189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8195:8334   */\n    tag_515:\n        /* \"#utility.yul\":8257:8266   */\n      0x00\n        /* \"#utility.yul\":8290:8328   */\n      tag_655\n        /* \"#utility.yul\":8322:8327   */\n      dup3\n        /* \"#utility.yul\":8290:8328   */\n      tag_514\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":8277:8328   */\n      swap1\n      pop\n        /* \"#utility.yul\":8195:8334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8340:8495   */\n    tag_516:\n        /* \"#utility.yul\":8439:8488   */\n      tag_657\n        /* \"#utility.yul\":8482:8487   */\n      dup2\n        /* \"#utility.yul\":8439:8488   */\n      tag_515\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":8434:8437   */\n      dup3\n        /* \"#utility.yul\":8427:8489   */\n      mstore\n        /* \"#utility.yul\":8340:8495   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8501:8747   */\n    tag_190:\n        /* \"#utility.yul\":8606:8610   */\n      0x00\n        /* \"#utility.yul\":8644:8646   */\n      0x20\n        /* \"#utility.yul\":8633:8642   */\n      dup3\n        /* \"#utility.yul\":8629:8647   */\n      add\n        /* \"#utility.yul\":8621:8647   */\n      swap1\n      pop\n        /* \"#utility.yul\":8657:8740   */\n      tag_659\n        /* \"#utility.yul\":8737:8738   */\n      0x00\n        /* \"#utility.yul\":8726:8735   */\n      dup4\n        /* \"#utility.yul\":8722:8739   */\n      add\n        /* \"#utility.yul\":8713:8719   */\n      dup5\n        /* \"#utility.yul\":8657:8740   */\n      tag_516\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":8501:8747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8753:9227   */\n    tag_198:\n        /* \"#utility.yul\":8821:8827   */\n      0x00\n        /* \"#utility.yul\":8829:8835   */\n      dup1\n        /* \"#utility.yul\":8878:8880   */\n      0x40\n        /* \"#utility.yul\":8866:8875   */\n      dup4\n        /* \"#utility.yul\":8857:8864   */\n      dup6\n        /* \"#utility.yul\":8853:8876   */\n      sub\n        /* \"#utility.yul\":8849:8881   */\n      slt\n        /* \"#utility.yul\":8846:8965   */\n      iszero\n      tag_661\n      jumpi\n        /* \"#utility.yul\":8884:8963   */\n      tag_662\n      tag_493\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":8846:8965   */\n    tag_661:\n        /* \"#utility.yul\":9004:9005   */\n      0x00\n        /* \"#utility.yul\":9029:9082   */\n      tag_663\n        /* \"#utility.yul\":9074:9081   */\n      dup6\n        /* \"#utility.yul\":9065:9071   */\n      dup3\n        /* \"#utility.yul\":9054:9063   */\n      dup7\n        /* \"#utility.yul\":9050:9072   */\n      add\n        /* \"#utility.yul\":9029:9082   */\n      tag_498\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":9019:9082   */\n      swap3\n      pop\n        /* \"#utility.yul\":8975:9092   */\n      pop\n        /* \"#utility.yul\":9131:9133   */\n      0x20\n        /* \"#utility.yul\":9157:9210   */\n      tag_664\n        /* \"#utility.yul\":9202:9209   */\n      dup6\n        /* \"#utility.yul\":9193:9199   */\n      dup3\n        /* \"#utility.yul\":9182:9191   */\n      dup7\n        /* \"#utility.yul\":9178:9200   */\n      add\n        /* \"#utility.yul\":9157:9210   */\n      tag_498\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":9147:9210   */\n      swap2\n      pop\n        /* \"#utility.yul\":9102:9220   */\n      pop\n        /* \"#utility.yul\":8753:9227   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9233:9413   */\n    tag_517:\n        /* \"#utility.yul\":9281:9358   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9278:9279   */\n      0x00\n        /* \"#utility.yul\":9271:9359   */\n      mstore\n        /* \"#utility.yul\":9378:9382   */\n      0x22\n        /* \"#utility.yul\":9375:9376   */\n      0x04\n        /* \"#utility.yul\":9368:9383   */\n      mstore\n        /* \"#utility.yul\":9402:9406   */\n      0x24\n        /* \"#utility.yul\":9399:9400   */\n      0x00\n        /* \"#utility.yul\":9392:9407   */\n      revert\n        /* \"#utility.yul\":9419:9739   */\n    tag_211:\n        /* \"#utility.yul\":9463:9469   */\n      0x00\n        /* \"#utility.yul\":9500:9501   */\n      0x02\n        /* \"#utility.yul\":9494:9498   */\n      dup3\n        /* \"#utility.yul\":9490:9502   */\n      div\n        /* \"#utility.yul\":9480:9502   */\n      swap1\n      pop\n        /* \"#utility.yul\":9547:9548   */\n      0x01\n        /* \"#utility.yul\":9541:9545   */\n      dup3\n        /* \"#utility.yul\":9537:9549   */\n      and\n        /* \"#utility.yul\":9568:9586   */\n      dup1\n        /* \"#utility.yul\":9558:9639   */\n      tag_667\n      jumpi\n        /* \"#utility.yul\":9624:9628   */\n      0x7f\n        /* \"#utility.yul\":9616:9622   */\n      dup3\n        /* \"#utility.yul\":9612:9629   */\n      and\n        /* \"#utility.yul\":9602:9629   */\n      swap2\n      pop\n        /* \"#utility.yul\":9558:9639   */\n    tag_667:\n        /* \"#utility.yul\":9686:9688   */\n      0x20\n        /* \"#utility.yul\":9678:9684   */\n      dup3\n        /* \"#utility.yul\":9675:9689   */\n      lt\n        /* \"#utility.yul\":9655:9673   */\n      dup2\n        /* \"#utility.yul\":9652:9690   */\n      sub\n        /* \"#utility.yul\":9649:9733   */\n      tag_668\n      jumpi\n        /* \"#utility.yul\":9705:9723   */\n      tag_669\n      tag_517\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":9649:9733   */\n    tag_668:\n        /* \"#utility.yul\":9470:9739   */\n      pop\n        /* \"#utility.yul\":9419:9739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9745:9921   */\n    tag_518:\n        /* \"#utility.yul\":9885:9913   */\n      0x53616c65732074617267657473206e6f7420796574206d65742e000000000000\n        /* \"#utility.yul\":9881:9882   */\n      0x00\n        /* \"#utility.yul\":9873:9879   */\n      dup3\n        /* \"#utility.yul\":9869:9883   */\n      add\n        /* \"#utility.yul\":9862:9914   */\n      mstore\n        /* \"#utility.yul\":9745:9921   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9927:10293   */\n    tag_519:\n        /* \"#utility.yul\":10069:10072   */\n      0x00\n        /* \"#utility.yul\":10090:10157   */\n      tag_672\n        /* \"#utility.yul\":10154:10156   */\n      0x1a\n        /* \"#utility.yul\":10149:10152   */\n      dup4\n        /* \"#utility.yul\":10090:10157   */\n      tag_485\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":10083:10157   */\n      swap2\n      pop\n        /* \"#utility.yul\":10166:10259   */\n      tag_673\n        /* \"#utility.yul\":10255:10258   */\n      dup3\n        /* \"#utility.yul\":10166:10259   */\n      tag_518\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":10284:10286   */\n      0x20\n        /* \"#utility.yul\":10279:10282   */\n      dup3\n        /* \"#utility.yul\":10275:10287   */\n      add\n        /* \"#utility.yul\":10268:10287   */\n      swap1\n      pop\n        /* \"#utility.yul\":9927:10293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10299:10718   */\n    tag_247:\n        /* \"#utility.yul\":10465:10469   */\n      0x00\n        /* \"#utility.yul\":10503:10505   */\n      0x20\n        /* \"#utility.yul\":10492:10501   */\n      dup3\n        /* \"#utility.yul\":10488:10506   */\n      add\n        /* \"#utility.yul\":10480:10506   */\n      swap1\n      pop\n        /* \"#utility.yul\":10552:10561   */\n      dup2\n        /* \"#utility.yul\":10546:10550   */\n      dup2\n        /* \"#utility.yul\":10542:10562   */\n      sub\n        /* \"#utility.yul\":10538:10539   */\n      0x00\n        /* \"#utility.yul\":10527:10536   */\n      dup4\n        /* \"#utility.yul\":10523:10540   */\n      add\n        /* \"#utility.yul\":10516:10563   */\n      mstore\n        /* \"#utility.yul\":10580:10711   */\n      tag_675\n        /* \"#utility.yul\":10706:10710   */\n      dup2\n        /* \"#utility.yul\":10580:10711   */\n      tag_519\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":10572:10711   */\n      swap1\n      pop\n        /* \"#utility.yul\":10299:10718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10724:10957   */\n    tag_520:\n        /* \"#utility.yul\":10864:10898   */\n      0x507269766174652053616c652068617320616c72656164792073746172746564\n        /* \"#utility.yul\":10860:10861   */\n      0x00\n        /* \"#utility.yul\":10852:10858   */\n      dup3\n        /* \"#utility.yul\":10848:10862   */\n      add\n        /* \"#utility.yul\":10841:10899   */\n      mstore\n        /* \"#utility.yul\":10933:10949   */\n      0x206f7220636f6e636c756465642e000000000000000000000000000000000000\n        /* \"#utility.yul\":10928:10930   */\n      0x20\n        /* \"#utility.yul\":10920:10926   */\n      dup3\n        /* \"#utility.yul\":10916:10931   */\n      add\n        /* \"#utility.yul\":10909:10950   */\n      mstore\n        /* \"#utility.yul\":10724:10957   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10963:11329   */\n    tag_521:\n        /* \"#utility.yul\":11105:11108   */\n      0x00\n        /* \"#utility.yul\":11126:11193   */\n      tag_678\n        /* \"#utility.yul\":11190:11192   */\n      0x2e\n        /* \"#utility.yul\":11185:11188   */\n      dup4\n        /* \"#utility.yul\":11126:11193   */\n      tag_485\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":11119:11193   */\n      swap2\n      pop\n        /* \"#utility.yul\":11202:11295   */\n      tag_679\n        /* \"#utility.yul\":11291:11294   */\n      dup3\n        /* \"#utility.yul\":11202:11295   */\n      tag_520\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":11320:11322   */\n      0x40\n        /* \"#utility.yul\":11315:11318   */\n      dup3\n        /* \"#utility.yul\":11311:11323   */\n      add\n        /* \"#utility.yul\":11304:11323   */\n      swap1\n      pop\n        /* \"#utility.yul\":10963:11329   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11335:11754   */\n    tag_260:\n        /* \"#utility.yul\":11501:11505   */\n      0x00\n        /* \"#utility.yul\":11539:11541   */\n      0x20\n        /* \"#utility.yul\":11528:11537   */\n      dup3\n        /* \"#utility.yul\":11524:11542   */\n      add\n        /* \"#utility.yul\":11516:11542   */\n      swap1\n      pop\n        /* \"#utility.yul\":11588:11597   */\n      dup2\n        /* \"#utility.yul\":11582:11586   */\n      dup2\n        /* \"#utility.yul\":11578:11598   */\n      sub\n        /* \"#utility.yul\":11574:11575   */\n      0x00\n        /* \"#utility.yul\":11563:11572   */\n      dup4\n        /* \"#utility.yul\":11559:11576   */\n      add\n        /* \"#utility.yul\":11552:11599   */\n      mstore\n        /* \"#utility.yul\":11616:11747   */\n      tag_681\n        /* \"#utility.yul\":11742:11746   */\n      dup2\n        /* \"#utility.yul\":11616:11747   */\n      tag_521\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":11608:11747   */\n      swap1\n      pop\n        /* \"#utility.yul\":11335:11754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11760:11928   */\n    tag_522:\n        /* \"#utility.yul\":11900:11920   */\n      0x4e6f2073616c65206973206163746976652e0000000000000000000000000000\n        /* \"#utility.yul\":11896:11897   */\n      0x00\n        /* \"#utility.yul\":11888:11894   */\n      dup3\n        /* \"#utility.yul\":11884:11898   */\n      add\n        /* \"#utility.yul\":11877:11921   */\n      mstore\n        /* \"#utility.yul\":11760:11928   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11934:12300   */\n    tag_523:\n        /* \"#utility.yul\":12076:12079   */\n      0x00\n        /* \"#utility.yul\":12097:12164   */\n      tag_684\n        /* \"#utility.yul\":12161:12163   */\n      0x12\n        /* \"#utility.yul\":12156:12159   */\n      dup4\n        /* \"#utility.yul\":12097:12164   */\n      tag_485\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":12090:12164   */\n      swap2\n      pop\n        /* \"#utility.yul\":12173:12266   */\n      tag_685\n        /* \"#utility.yul\":12262:12265   */\n      dup3\n        /* \"#utility.yul\":12173:12266   */\n      tag_522\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":12291:12293   */\n      0x20\n        /* \"#utility.yul\":12286:12289   */\n      dup3\n        /* \"#utility.yul\":12282:12294   */\n      add\n        /* \"#utility.yul\":12275:12294   */\n      swap1\n      pop\n        /* \"#utility.yul\":11934:12300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12306:12725   */\n    tag_272:\n        /* \"#utility.yul\":12472:12476   */\n      0x00\n        /* \"#utility.yul\":12510:12512   */\n      0x20\n        /* \"#utility.yul\":12499:12508   */\n      dup3\n        /* \"#utility.yul\":12495:12513   */\n      add\n        /* \"#utility.yul\":12487:12513   */\n      swap1\n      pop\n        /* \"#utility.yul\":12559:12568   */\n      dup2\n        /* \"#utility.yul\":12553:12557   */\n      dup2\n        /* \"#utility.yul\":12549:12569   */\n      sub\n        /* \"#utility.yul\":12545:12546   */\n      0x00\n        /* \"#utility.yul\":12534:12543   */\n      dup4\n        /* \"#utility.yul\":12530:12547   */\n      add\n        /* \"#utility.yul\":12523:12570   */\n      mstore\n        /* \"#utility.yul\":12587:12718   */\n      tag_687\n        /* \"#utility.yul\":12713:12717   */\n      dup2\n        /* \"#utility.yul\":12587:12718   */\n      tag_523\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":12579:12718   */\n      swap1\n      pop\n        /* \"#utility.yul\":12306:12725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12731:12874   */\n    tag_524:\n        /* \"#utility.yul\":12788:12793   */\n      0x00\n        /* \"#utility.yul\":12819:12825   */\n      dup2\n        /* \"#utility.yul\":12813:12826   */\n      mload\n        /* \"#utility.yul\":12804:12826   */\n      swap1\n      pop\n        /* \"#utility.yul\":12835:12868   */\n      tag_689\n        /* \"#utility.yul\":12862:12867   */\n      dup2\n        /* \"#utility.yul\":12835:12868   */\n      tag_500\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":12731:12874   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12880:13231   */\n    tag_276:\n        /* \"#utility.yul\":12950:12956   */\n      0x00\n        /* \"#utility.yul\":12999:13001   */\n      0x20\n        /* \"#utility.yul\":12987:12996   */\n      dup3\n        /* \"#utility.yul\":12978:12985   */\n      dup5\n        /* \"#utility.yul\":12974:12997   */\n      sub\n        /* \"#utility.yul\":12970:13002   */\n      slt\n        /* \"#utility.yul\":12967:13086   */\n      iszero\n      tag_691\n      jumpi\n        /* \"#utility.yul\":13005:13084   */\n      tag_692\n      tag_493\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":12967:13086   */\n    tag_691:\n        /* \"#utility.yul\":13125:13126   */\n      0x00\n        /* \"#utility.yul\":13150:13214   */\n      tag_693\n        /* \"#utility.yul\":13206:13213   */\n      dup5\n        /* \"#utility.yul\":13197:13203   */\n      dup3\n        /* \"#utility.yul\":13186:13195   */\n      dup6\n        /* \"#utility.yul\":13182:13204   */\n      add\n        /* \"#utility.yul\":13150:13214   */\n      tag_524\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":13140:13214   */\n      swap2\n      pop\n        /* \"#utility.yul\":13096:13224   */\n      pop\n        /* \"#utility.yul\":12880:13231   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13237:13412   */\n    tag_525:\n        /* \"#utility.yul\":13377:13404   */\n      0x496e76616c69642070726963652066726f6d206f7261636c6500000000000000\n        /* \"#utility.yul\":13373:13374   */\n      0x00\n        /* \"#utility.yul\":13365:13371   */\n      dup3\n        /* \"#utility.yul\":13361:13375   */\n      add\n        /* \"#utility.yul\":13354:13405   */\n      mstore\n        /* \"#utility.yul\":13237:13412   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13418:13784   */\n    tag_526:\n        /* \"#utility.yul\":13560:13563   */\n      0x00\n        /* \"#utility.yul\":13581:13648   */\n      tag_696\n        /* \"#utility.yul\":13645:13647   */\n      0x19\n        /* \"#utility.yul\":13640:13643   */\n      dup4\n        /* \"#utility.yul\":13581:13648   */\n      tag_485\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":13574:13648   */\n      swap2\n      pop\n        /* \"#utility.yul\":13657:13750   */\n      tag_697\n        /* \"#utility.yul\":13746:13749   */\n      dup3\n        /* \"#utility.yul\":13657:13750   */\n      tag_525\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":13775:13777   */\n      0x20\n        /* \"#utility.yul\":13770:13773   */\n      dup3\n        /* \"#utility.yul\":13766:13778   */\n      add\n        /* \"#utility.yul\":13759:13778   */\n      swap1\n      pop\n        /* \"#utility.yul\":13418:13784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13790:14209   */\n    tag_279:\n        /* \"#utility.yul\":13956:13960   */\n      0x00\n        /* \"#utility.yul\":13994:13996   */\n      0x20\n        /* \"#utility.yul\":13983:13992   */\n      dup3\n        /* \"#utility.yul\":13979:13997   */\n      add\n        /* \"#utility.yul\":13971:13997   */\n      swap1\n      pop\n        /* \"#utility.yul\":14043:14052   */\n      dup2\n        /* \"#utility.yul\":14037:14041   */\n      dup2\n        /* \"#utility.yul\":14033:14053   */\n      sub\n        /* \"#utility.yul\":14029:14030   */\n      0x00\n        /* \"#utility.yul\":14018:14027   */\n      dup4\n        /* \"#utility.yul\":14014:14031   */\n      add\n        /* \"#utility.yul\":14007:14054   */\n      mstore\n        /* \"#utility.yul\":14071:14202   */\n      tag_699\n        /* \"#utility.yul\":14197:14201   */\n      dup2\n        /* \"#utility.yul\":14071:14202   */\n      tag_526\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":14063:14202   */\n      swap1\n      pop\n        /* \"#utility.yul\":13790:14209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14215:14387   */\n    tag_527:\n        /* \"#utility.yul\":14355:14379   */\n      0x507269766174652053616c6520736f6c64206f75742e00000000000000000000\n        /* \"#utility.yul\":14351:14352   */\n      0x00\n        /* \"#utility.yul\":14343:14349   */\n      dup3\n        /* \"#utility.yul\":14339:14353   */\n      add\n        /* \"#utility.yul\":14332:14380   */\n      mstore\n        /* \"#utility.yul\":14215:14387   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14393:14759   */\n    tag_528:\n        /* \"#utility.yul\":14535:14538   */\n      0x00\n        /* \"#utility.yul\":14556:14623   */\n      tag_702\n        /* \"#utility.yul\":14620:14622   */\n      0x16\n        /* \"#utility.yul\":14615:14618   */\n      dup4\n        /* \"#utility.yul\":14556:14623   */\n      tag_485\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":14549:14623   */\n      swap2\n      pop\n        /* \"#utility.yul\":14632:14725   */\n      tag_703\n        /* \"#utility.yul\":14721:14724   */\n      dup3\n        /* \"#utility.yul\":14632:14725   */\n      tag_527\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":14750:14752   */\n      0x20\n        /* \"#utility.yul\":14745:14748   */\n      dup3\n        /* \"#utility.yul\":14741:14753   */\n      add\n        /* \"#utility.yul\":14734:14753   */\n      swap1\n      pop\n        /* \"#utility.yul\":14393:14759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14765:15184   */\n    tag_287:\n        /* \"#utility.yul\":14931:14935   */\n      0x00\n        /* \"#utility.yul\":14969:14971   */\n      0x20\n        /* \"#utility.yul\":14958:14967   */\n      dup3\n        /* \"#utility.yul\":14954:14972   */\n      add\n        /* \"#utility.yul\":14946:14972   */\n      swap1\n      pop\n        /* \"#utility.yul\":15018:15027   */\n      dup2\n        /* \"#utility.yul\":15012:15016   */\n      dup2\n        /* \"#utility.yul\":15008:15028   */\n      sub\n        /* \"#utility.yul\":15004:15005   */\n      0x00\n        /* \"#utility.yul\":14993:15002   */\n      dup4\n        /* \"#utility.yul\":14989:15006   */\n      add\n        /* \"#utility.yul\":14982:15029   */\n      mstore\n        /* \"#utility.yul\":15046:15177   */\n      tag_705\n        /* \"#utility.yul\":15172:15176   */\n      dup2\n        /* \"#utility.yul\":15046:15177   */\n      tag_528\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":15038:15177   */\n      swap1\n      pop\n        /* \"#utility.yul\":14765:15184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15190:15410   */\n    tag_529:\n        /* \"#utility.yul\":15330:15364   */\n      0x4578636565647320507269766174652053616c6520746f6b656e206c696d6974\n        /* \"#utility.yul\":15326:15327   */\n      0x00\n        /* \"#utility.yul\":15318:15324   */\n      dup3\n        /* \"#utility.yul\":15314:15328   */\n      add\n        /* \"#utility.yul\":15307:15365   */\n      mstore\n        /* \"#utility.yul\":15399:15402   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15394:15396   */\n      0x20\n        /* \"#utility.yul\":15386:15392   */\n      dup3\n        /* \"#utility.yul\":15382:15397   */\n      add\n        /* \"#utility.yul\":15375:15403   */\n      mstore\n        /* \"#utility.yul\":15190:15410   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15416:15782   */\n    tag_530:\n        /* \"#utility.yul\":15558:15561   */\n      0x00\n        /* \"#utility.yul\":15579:15646   */\n      tag_708\n        /* \"#utility.yul\":15643:15645   */\n      0x21\n        /* \"#utility.yul\":15638:15641   */\n      dup4\n        /* \"#utility.yul\":15579:15646   */\n      tag_485\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":15572:15646   */\n      swap2\n      pop\n        /* \"#utility.yul\":15655:15748   */\n      tag_709\n        /* \"#utility.yul\":15744:15747   */\n      dup3\n        /* \"#utility.yul\":15655:15748   */\n      tag_529\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":15773:15775   */\n      0x40\n        /* \"#utility.yul\":15768:15771   */\n      dup3\n        /* \"#utility.yul\":15764:15776   */\n      add\n        /* \"#utility.yul\":15757:15776   */\n      swap1\n      pop\n        /* \"#utility.yul\":15416:15782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15788:16207   */\n    tag_298:\n        /* \"#utility.yul\":15954:15958   */\n      0x00\n        /* \"#utility.yul\":15992:15994   */\n      0x20\n        /* \"#utility.yul\":15981:15990   */\n      dup3\n        /* \"#utility.yul\":15977:15995   */\n      add\n        /* \"#utility.yul\":15969:15995   */\n      swap1\n      pop\n        /* \"#utility.yul\":16041:16050   */\n      dup2\n        /* \"#utility.yul\":16035:16039   */\n      dup2\n        /* \"#utility.yul\":16031:16051   */\n      sub\n        /* \"#utility.yul\":16027:16028   */\n      0x00\n        /* \"#utility.yul\":16016:16025   */\n      dup4\n        /* \"#utility.yul\":16012:16029   */\n      add\n        /* \"#utility.yul\":16005:16052   */\n      mstore\n        /* \"#utility.yul\":16069:16200   */\n      tag_711\n        /* \"#utility.yul\":16195:16199   */\n      dup2\n        /* \"#utility.yul\":16069:16200   */\n      tag_530\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":16061:16200   */\n      swap1\n      pop\n        /* \"#utility.yul\":15788:16207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16213:16381   */\n    tag_531:\n        /* \"#utility.yul\":16353:16373   */\n      0x5072652d53616c6520736f6c64206f75742e0000000000000000000000000000\n        /* \"#utility.yul\":16349:16350   */\n      0x00\n        /* \"#utility.yul\":16341:16347   */\n      dup3\n        /* \"#utility.yul\":16337:16351   */\n      add\n        /* \"#utility.yul\":16330:16374   */\n      mstore\n        /* \"#utility.yul\":16213:16381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16387:16753   */\n    tag_532:\n        /* \"#utility.yul\":16529:16532   */\n      0x00\n        /* \"#utility.yul\":16550:16617   */\n      tag_714\n        /* \"#utility.yul\":16614:16616   */\n      0x12\n        /* \"#utility.yul\":16609:16612   */\n      dup4\n        /* \"#utility.yul\":16550:16617   */\n      tag_485\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":16543:16617   */\n      swap2\n      pop\n        /* \"#utility.yul\":16626:16719   */\n      tag_715\n        /* \"#utility.yul\":16715:16718   */\n      dup3\n        /* \"#utility.yul\":16626:16719   */\n      tag_531\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":16744:16746   */\n      0x20\n        /* \"#utility.yul\":16739:16742   */\n      dup3\n        /* \"#utility.yul\":16735:16747   */\n      add\n        /* \"#utility.yul\":16728:16747   */\n      swap1\n      pop\n        /* \"#utility.yul\":16387:16753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16759:17178   */\n    tag_311:\n        /* \"#utility.yul\":16925:16929   */\n      0x00\n        /* \"#utility.yul\":16963:16965   */\n      0x20\n        /* \"#utility.yul\":16952:16961   */\n      dup3\n        /* \"#utility.yul\":16948:16966   */\n      add\n        /* \"#utility.yul\":16940:16966   */\n      swap1\n      pop\n        /* \"#utility.yul\":17012:17021   */\n      dup2\n        /* \"#utility.yul\":17006:17010   */\n      dup2\n        /* \"#utility.yul\":17002:17022   */\n      sub\n        /* \"#utility.yul\":16998:16999   */\n      0x00\n        /* \"#utility.yul\":16987:16996   */\n      dup4\n        /* \"#utility.yul\":16983:17000   */\n      add\n        /* \"#utility.yul\":16976:17023   */\n      mstore\n        /* \"#utility.yul\":17040:17171   */\n      tag_717\n        /* \"#utility.yul\":17166:17170   */\n      dup2\n        /* \"#utility.yul\":17040:17171   */\n      tag_532\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":17032:17171   */\n      swap1\n      pop\n        /* \"#utility.yul\":16759:17178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17184:17364   */\n    tag_533:\n        /* \"#utility.yul\":17324:17356   */\n      0x507572636861736520616d6f756e74206f7574206f66206c696d6974732e0000\n        /* \"#utility.yul\":17320:17321   */\n      0x00\n        /* \"#utility.yul\":17312:17318   */\n      dup3\n        /* \"#utility.yul\":17308:17322   */\n      add\n        /* \"#utility.yul\":17301:17357   */\n      mstore\n        /* \"#utility.yul\":17184:17364   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17370:17736   */\n    tag_534:\n        /* \"#utility.yul\":17512:17515   */\n      0x00\n        /* \"#utility.yul\":17533:17600   */\n      tag_720\n        /* \"#utility.yul\":17597:17599   */\n      0x1e\n        /* \"#utility.yul\":17592:17595   */\n      dup4\n        /* \"#utility.yul\":17533:17600   */\n      tag_485\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":17526:17600   */\n      swap2\n      pop\n        /* \"#utility.yul\":17609:17702   */\n      tag_721\n        /* \"#utility.yul\":17698:17701   */\n      dup3\n        /* \"#utility.yul\":17609:17702   */\n      tag_533\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":17727:17729   */\n      0x20\n        /* \"#utility.yul\":17722:17725   */\n      dup3\n        /* \"#utility.yul\":17718:17730   */\n      add\n        /* \"#utility.yul\":17711:17730   */\n      swap1\n      pop\n        /* \"#utility.yul\":17370:17736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17742:18161   */\n    tag_315:\n        /* \"#utility.yul\":17908:17912   */\n      0x00\n        /* \"#utility.yul\":17946:17948   */\n      0x20\n        /* \"#utility.yul\":17935:17944   */\n      dup3\n        /* \"#utility.yul\":17931:17949   */\n      add\n        /* \"#utility.yul\":17923:17949   */\n      swap1\n      pop\n        /* \"#utility.yul\":17995:18004   */\n      dup2\n        /* \"#utility.yul\":17989:17993   */\n      dup2\n        /* \"#utility.yul\":17985:18005   */\n      sub\n        /* \"#utility.yul\":17981:17982   */\n      0x00\n        /* \"#utility.yul\":17970:17979   */\n      dup4\n        /* \"#utility.yul\":17966:17983   */\n      add\n        /* \"#utility.yul\":17959:18006   */\n      mstore\n        /* \"#utility.yul\":18023:18154   */\n      tag_723\n        /* \"#utility.yul\":18149:18153   */\n      dup2\n        /* \"#utility.yul\":18023:18154   */\n      tag_534\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":18015:18154   */\n      swap1\n      pop\n        /* \"#utility.yul\":17742:18161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18167:18346   */\n    tag_535:\n        /* \"#utility.yul\":18307:18338   */\n      0x45786365656473205072652d53616c6520746f6b656e206c696d69742e000000\n        /* \"#utility.yul\":18303:18304   */\n      0x00\n        /* \"#utility.yul\":18295:18301   */\n      dup3\n        /* \"#utility.yul\":18291:18305   */\n      add\n        /* \"#utility.yul\":18284:18339   */\n      mstore\n        /* \"#utility.yul\":18167:18346   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18352:18718   */\n    tag_536:\n        /* \"#utility.yul\":18494:18497   */\n      0x00\n        /* \"#utility.yul\":18515:18582   */\n      tag_726\n        /* \"#utility.yul\":18579:18581   */\n      0x1d\n        /* \"#utility.yul\":18574:18577   */\n      dup4\n        /* \"#utility.yul\":18515:18582   */\n      tag_485\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":18508:18582   */\n      swap2\n      pop\n        /* \"#utility.yul\":18591:18684   */\n      tag_727\n        /* \"#utility.yul\":18680:18683   */\n      dup3\n        /* \"#utility.yul\":18591:18684   */\n      tag_535\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":18709:18711   */\n      0x20\n        /* \"#utility.yul\":18704:18707   */\n      dup3\n        /* \"#utility.yul\":18700:18712   */\n      add\n        /* \"#utility.yul\":18693:18712   */\n      swap1\n      pop\n        /* \"#utility.yul\":18352:18718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18724:19143   */\n    tag_323:\n        /* \"#utility.yul\":18890:18894   */\n      0x00\n        /* \"#utility.yul\":18928:18930   */\n      0x20\n        /* \"#utility.yul\":18917:18926   */\n      dup3\n        /* \"#utility.yul\":18913:18931   */\n      add\n        /* \"#utility.yul\":18905:18931   */\n      swap1\n      pop\n        /* \"#utility.yul\":18977:18986   */\n      dup2\n        /* \"#utility.yul\":18971:18975   */\n      dup2\n        /* \"#utility.yul\":18967:18987   */\n      sub\n        /* \"#utility.yul\":18963:18964   */\n      0x00\n        /* \"#utility.yul\":18952:18961   */\n      dup4\n        /* \"#utility.yul\":18948:18965   */\n      add\n        /* \"#utility.yul\":18941:18988   */\n      mstore\n        /* \"#utility.yul\":19005:19136   */\n      tag_729\n        /* \"#utility.yul\":19131:19135   */\n      dup2\n        /* \"#utility.yul\":19005:19136   */\n      tag_536\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":18997:19136   */\n      swap1\n      pop\n        /* \"#utility.yul\":18724:19143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19149:19369   */\n    tag_537:\n        /* \"#utility.yul\":19289:19323   */\n      0x56657374696e6720706572696f64206e6f742079657420636f6d706c65746564\n        /* \"#utility.yul\":19285:19286   */\n      0x00\n        /* \"#utility.yul\":19277:19283   */\n      dup3\n        /* \"#utility.yul\":19273:19287   */\n      add\n        /* \"#utility.yul\":19266:19324   */\n      mstore\n        /* \"#utility.yul\":19358:19361   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19353:19355   */\n      0x20\n        /* \"#utility.yul\":19345:19351   */\n      dup3\n        /* \"#utility.yul\":19341:19356   */\n      add\n        /* \"#utility.yul\":19334:19362   */\n      mstore\n        /* \"#utility.yul\":19149:19369   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19375:19741   */\n    tag_538:\n        /* \"#utility.yul\":19517:19520   */\n      0x00\n        /* \"#utility.yul\":19538:19605   */\n      tag_732\n        /* \"#utility.yul\":19602:19604   */\n      0x21\n        /* \"#utility.yul\":19597:19600   */\n      dup4\n        /* \"#utility.yul\":19538:19605   */\n      tag_485\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":19531:19605   */\n      swap2\n      pop\n        /* \"#utility.yul\":19614:19707   */\n      tag_733\n        /* \"#utility.yul\":19703:19706   */\n      dup3\n        /* \"#utility.yul\":19614:19707   */\n      tag_537\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":19732:19734   */\n      0x40\n        /* \"#utility.yul\":19727:19730   */\n      dup3\n        /* \"#utility.yul\":19723:19735   */\n      add\n        /* \"#utility.yul\":19716:19735   */\n      swap1\n      pop\n        /* \"#utility.yul\":19375:19741   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19747:20166   */\n    tag_332:\n        /* \"#utility.yul\":19913:19917   */\n      0x00\n        /* \"#utility.yul\":19951:19953   */\n      0x20\n        /* \"#utility.yul\":19940:19949   */\n      dup3\n        /* \"#utility.yul\":19936:19954   */\n      add\n        /* \"#utility.yul\":19928:19954   */\n      swap1\n      pop\n        /* \"#utility.yul\":20000:20009   */\n      dup2\n        /* \"#utility.yul\":19994:19998   */\n      dup2\n        /* \"#utility.yul\":19990:20010   */\n      sub\n        /* \"#utility.yul\":19986:19987   */\n      0x00\n        /* \"#utility.yul\":19975:19984   */\n      dup4\n        /* \"#utility.yul\":19971:19988   */\n      add\n        /* \"#utility.yul\":19964:20011   */\n      mstore\n        /* \"#utility.yul\":20028:20159   */\n      tag_735\n        /* \"#utility.yul\":20154:20158   */\n      dup2\n        /* \"#utility.yul\":20028:20159   */\n      tag_538\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":20020:20159   */\n      swap1\n      pop\n        /* \"#utility.yul\":19747:20166   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20172:20349   */\n    tag_539:\n        /* \"#utility.yul\":20312:20341   */\n      0x4e6f2076657374656420746f6b656e7320746f2072656c656173650000000000\n        /* \"#utility.yul\":20308:20309   */\n      0x00\n        /* \"#utility.yul\":20300:20306   */\n      dup3\n        /* \"#utility.yul\":20296:20310   */\n      add\n        /* \"#utility.yul\":20289:20342   */\n      mstore\n        /* \"#utility.yul\":20172:20349   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20355:20721   */\n    tag_540:\n        /* \"#utility.yul\":20497:20500   */\n      0x00\n        /* \"#utility.yul\":20518:20585   */\n      tag_738\n        /* \"#utility.yul\":20582:20584   */\n      0x1b\n        /* \"#utility.yul\":20577:20580   */\n      dup4\n        /* \"#utility.yul\":20518:20585   */\n      tag_485\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":20511:20585   */\n      swap2\n      pop\n        /* \"#utility.yul\":20594:20687   */\n      tag_739\n        /* \"#utility.yul\":20683:20686   */\n      dup3\n        /* \"#utility.yul\":20594:20687   */\n      tag_539\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":20712:20714   */\n      0x20\n        /* \"#utility.yul\":20707:20710   */\n      dup3\n        /* \"#utility.yul\":20703:20715   */\n      add\n        /* \"#utility.yul\":20696:20715   */\n      swap1\n      pop\n        /* \"#utility.yul\":20355:20721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20727:21146   */\n    tag_335:\n        /* \"#utility.yul\":20893:20897   */\n      0x00\n        /* \"#utility.yul\":20931:20933   */\n      0x20\n        /* \"#utility.yul\":20920:20929   */\n      dup3\n        /* \"#utility.yul\":20916:20934   */\n      add\n        /* \"#utility.yul\":20908:20934   */\n      swap1\n      pop\n        /* \"#utility.yul\":20980:20989   */\n      dup2\n        /* \"#utility.yul\":20974:20978   */\n      dup2\n        /* \"#utility.yul\":20970:20990   */\n      sub\n        /* \"#utility.yul\":20966:20967   */\n      0x00\n        /* \"#utility.yul\":20955:20964   */\n      dup4\n        /* \"#utility.yul\":20951:20968   */\n      add\n        /* \"#utility.yul\":20944:20991   */\n      mstore\n        /* \"#utility.yul\":21008:21139   */\n      tag_741\n        /* \"#utility.yul\":21134:21138   */\n      dup2\n        /* \"#utility.yul\":21008:21139   */\n      tag_540\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":21000:21139   */\n      swap1\n      pop\n        /* \"#utility.yul\":20727:21146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21152:21378   */\n    tag_541:\n        /* \"#utility.yul\":21292:21326   */\n      0x507269766174652053616c652073686f756c6420626520636f6e636c75646564\n        /* \"#utility.yul\":21288:21289   */\n      0x00\n        /* \"#utility.yul\":21280:21286   */\n      dup3\n        /* \"#utility.yul\":21276:21290   */\n      add\n        /* \"#utility.yul\":21269:21327   */\n      mstore\n        /* \"#utility.yul\":21361:21370   */\n      0x2066697273742e00000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21356:21358   */\n      0x20\n        /* \"#utility.yul\":21348:21354   */\n      dup3\n        /* \"#utility.yul\":21344:21359   */\n      add\n        /* \"#utility.yul\":21337:21371   */\n      mstore\n        /* \"#utility.yul\":21152:21378   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21384:21750   */\n    tag_542:\n        /* \"#utility.yul\":21526:21529   */\n      0x00\n        /* \"#utility.yul\":21547:21614   */\n      tag_744\n        /* \"#utility.yul\":21611:21613   */\n      0x27\n        /* \"#utility.yul\":21606:21609   */\n      dup4\n        /* \"#utility.yul\":21547:21614   */\n      tag_485\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":21540:21614   */\n      swap2\n      pop\n        /* \"#utility.yul\":21623:21716   */\n      tag_745\n        /* \"#utility.yul\":21712:21715   */\n      dup3\n        /* \"#utility.yul\":21623:21716   */\n      tag_541\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":21741:21743   */\n      0x40\n        /* \"#utility.yul\":21736:21739   */\n      dup3\n        /* \"#utility.yul\":21732:21744   */\n      add\n        /* \"#utility.yul\":21725:21744   */\n      swap1\n      pop\n        /* \"#utility.yul\":21384:21750   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21756:22175   */\n    tag_348:\n        /* \"#utility.yul\":21922:21926   */\n      0x00\n        /* \"#utility.yul\":21960:21962   */\n      0x20\n        /* \"#utility.yul\":21949:21958   */\n      dup3\n        /* \"#utility.yul\":21945:21963   */\n      add\n        /* \"#utility.yul\":21937:21963   */\n      swap1\n      pop\n        /* \"#utility.yul\":22009:22018   */\n      dup2\n        /* \"#utility.yul\":22003:22007   */\n      dup2\n        /* \"#utility.yul\":21999:22019   */\n      sub\n        /* \"#utility.yul\":21995:21996   */\n      0x00\n        /* \"#utility.yul\":21984:21993   */\n      dup4\n        /* \"#utility.yul\":21980:21997   */\n      add\n        /* \"#utility.yul\":21973:22020   */\n      mstore\n        /* \"#utility.yul\":22037:22168   */\n      tag_747\n        /* \"#utility.yul\":22163:22167   */\n      dup2\n        /* \"#utility.yul\":22037:22168   */\n      tag_542\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":22029:22168   */\n      swap1\n      pop\n        /* \"#utility.yul\":21756:22175   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22181:22363   */\n    tag_543:\n        /* \"#utility.yul\":22321:22355   */\n      0x507269766174652053616c6520746172676574206e6f7420726561636865642e\n        /* \"#utility.yul\":22317:22318   */\n      0x00\n        /* \"#utility.yul\":22309:22315   */\n      dup3\n        /* \"#utility.yul\":22305:22319   */\n      add\n        /* \"#utility.yul\":22298:22356   */\n      mstore\n        /* \"#utility.yul\":22181:22363   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22369:22735   */\n    tag_544:\n        /* \"#utility.yul\":22511:22514   */\n      0x00\n        /* \"#utility.yul\":22532:22599   */\n      tag_750\n        /* \"#utility.yul\":22596:22598   */\n      0x20\n        /* \"#utility.yul\":22591:22594   */\n      dup4\n        /* \"#utility.yul\":22532:22599   */\n      tag_485\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":22525:22599   */\n      swap2\n      pop\n        /* \"#utility.yul\":22608:22701   */\n      tag_751\n        /* \"#utility.yul\":22697:22700   */\n      dup3\n        /* \"#utility.yul\":22608:22701   */\n      tag_543\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":22726:22728   */\n      0x20\n        /* \"#utility.yul\":22721:22724   */\n      dup3\n        /* \"#utility.yul\":22717:22729   */\n      add\n        /* \"#utility.yul\":22710:22729   */\n      swap1\n      pop\n        /* \"#utility.yul\":22369:22735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22741:23160   */\n    tag_351:\n        /* \"#utility.yul\":22907:22911   */\n      0x00\n        /* \"#utility.yul\":22945:22947   */\n      0x20\n        /* \"#utility.yul\":22934:22943   */\n      dup3\n        /* \"#utility.yul\":22930:22948   */\n      add\n        /* \"#utility.yul\":22922:22948   */\n      swap1\n      pop\n        /* \"#utility.yul\":22994:23003   */\n      dup2\n        /* \"#utility.yul\":22988:22992   */\n      dup2\n        /* \"#utility.yul\":22984:23004   */\n      sub\n        /* \"#utility.yul\":22980:22981   */\n      0x00\n        /* \"#utility.yul\":22969:22978   */\n      dup4\n        /* \"#utility.yul\":22965:22982   */\n      add\n        /* \"#utility.yul\":22958:23005   */\n      mstore\n        /* \"#utility.yul\":23022:23153   */\n      tag_753\n        /* \"#utility.yul\":23148:23152   */\n      dup2\n        /* \"#utility.yul\":23022:23153   */\n      tag_544\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":23014:23153   */\n      swap1\n      pop\n        /* \"#utility.yul\":22741:23160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23166:23345   */\n    tag_545:\n        /* \"#utility.yul\":23306:23337   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e2030000000\n        /* \"#utility.yul\":23302:23303   */\n      0x00\n        /* \"#utility.yul\":23294:23300   */\n      dup3\n        /* \"#utility.yul\":23290:23304   */\n      add\n        /* \"#utility.yul\":23283:23338   */\n      mstore\n        /* \"#utility.yul\":23166:23345   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23351:23717   */\n    tag_546:\n        /* \"#utility.yul\":23493:23496   */\n      0x00\n        /* \"#utility.yul\":23514:23581   */\n      tag_756\n        /* \"#utility.yul\":23578:23580   */\n      0x1d\n        /* \"#utility.yul\":23573:23576   */\n      dup4\n        /* \"#utility.yul\":23514:23581   */\n      tag_485\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":23507:23581   */\n      swap2\n      pop\n        /* \"#utility.yul\":23590:23683   */\n      tag_757\n        /* \"#utility.yul\":23679:23682   */\n      dup3\n        /* \"#utility.yul\":23590:23683   */\n      tag_545\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":23708:23710   */\n      0x20\n        /* \"#utility.yul\":23703:23706   */\n      dup3\n        /* \"#utility.yul\":23699:23711   */\n      add\n        /* \"#utility.yul\":23692:23711   */\n      swap1\n      pop\n        /* \"#utility.yul\":23351:23717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23723:24142   */\n    tag_365:\n        /* \"#utility.yul\":23889:23893   */\n      0x00\n        /* \"#utility.yul\":23927:23929   */\n      0x20\n        /* \"#utility.yul\":23916:23925   */\n      dup3\n        /* \"#utility.yul\":23912:23930   */\n      add\n        /* \"#utility.yul\":23904:23930   */\n      swap1\n      pop\n        /* \"#utility.yul\":23976:23985   */\n      dup2\n        /* \"#utility.yul\":23970:23974   */\n      dup2\n        /* \"#utility.yul\":23966:23986   */\n      sub\n        /* \"#utility.yul\":23962:23963   */\n      0x00\n        /* \"#utility.yul\":23951:23960   */\n      dup4\n        /* \"#utility.yul\":23947:23964   */\n      add\n        /* \"#utility.yul\":23940:23987   */\n      mstore\n        /* \"#utility.yul\":24004:24135   */\n      tag_759\n        /* \"#utility.yul\":24130:24134   */\n      dup2\n        /* \"#utility.yul\":24004:24135   */\n      tag_546\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":23996:24135   */\n      swap1\n      pop\n        /* \"#utility.yul\":23723:24142   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24148:24327   */\n    tag_547:\n        /* \"#utility.yul\":24288:24319   */\n      0x496e73756666696369656e742062616c616e636520746f207374616b65000000\n        /* \"#utility.yul\":24284:24285   */\n      0x00\n        /* \"#utility.yul\":24276:24282   */\n      dup3\n        /* \"#utility.yul\":24272:24286   */\n      add\n        /* \"#utility.yul\":24265:24320   */\n      mstore\n        /* \"#utility.yul\":24148:24327   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24333:24699   */\n    tag_548:\n        /* \"#utility.yul\":24475:24478   */\n      0x00\n        /* \"#utility.yul\":24496:24563   */\n      tag_762\n        /* \"#utility.yul\":24560:24562   */\n      0x1d\n        /* \"#utility.yul\":24555:24558   */\n      dup4\n        /* \"#utility.yul\":24496:24563   */\n      tag_485\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":24489:24563   */\n      swap2\n      pop\n        /* \"#utility.yul\":24572:24665   */\n      tag_763\n        /* \"#utility.yul\":24661:24664   */\n      dup3\n        /* \"#utility.yul\":24572:24665   */\n      tag_547\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":24690:24692   */\n      0x20\n        /* \"#utility.yul\":24685:24688   */\n      dup3\n        /* \"#utility.yul\":24681:24693   */\n      add\n        /* \"#utility.yul\":24674:24693   */\n      swap1\n      pop\n        /* \"#utility.yul\":24333:24699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24705:25124   */\n    tag_369:\n        /* \"#utility.yul\":24871:24875   */\n      0x00\n        /* \"#utility.yul\":24909:24911   */\n      0x20\n        /* \"#utility.yul\":24898:24907   */\n      dup3\n        /* \"#utility.yul\":24894:24912   */\n      add\n        /* \"#utility.yul\":24886:24912   */\n      swap1\n      pop\n        /* \"#utility.yul\":24958:24967   */\n      dup2\n        /* \"#utility.yul\":24952:24956   */\n      dup2\n        /* \"#utility.yul\":24948:24968   */\n      sub\n        /* \"#utility.yul\":24944:24945   */\n      0x00\n        /* \"#utility.yul\":24933:24942   */\n      dup4\n        /* \"#utility.yul\":24929:24946   */\n      add\n        /* \"#utility.yul\":24922:24969   */\n      mstore\n        /* \"#utility.yul\":24986:25117   */\n      tag_765\n        /* \"#utility.yul\":25112:25116   */\n      dup2\n        /* \"#utility.yul\":24986:25117   */\n      tag_548\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":24978:25117   */\n      swap1\n      pop\n        /* \"#utility.yul\":24705:25124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25130:25462   */\n    tag_374:\n        /* \"#utility.yul\":25251:25255   */\n      0x00\n        /* \"#utility.yul\":25289:25291   */\n      0x40\n        /* \"#utility.yul\":25278:25287   */\n      dup3\n        /* \"#utility.yul\":25274:25292   */\n      add\n        /* \"#utility.yul\":25266:25292   */\n      swap1\n      pop\n        /* \"#utility.yul\":25302:25373   */\n      tag_767\n        /* \"#utility.yul\":25370:25371   */\n      0x00\n        /* \"#utility.yul\":25359:25368   */\n      dup4\n        /* \"#utility.yul\":25355:25372   */\n      add\n        /* \"#utility.yul\":25346:25352   */\n      dup6\n        /* \"#utility.yul\":25302:25373   */\n      tag_504\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":25383:25455   */\n      tag_768\n        /* \"#utility.yul\":25451:25453   */\n      0x20\n        /* \"#utility.yul\":25440:25449   */\n      dup4\n        /* \"#utility.yul\":25436:25454   */\n      add\n        /* \"#utility.yul\":25427:25433   */\n      dup5\n        /* \"#utility.yul\":25383:25455   */\n      tag_504\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":25130:25462   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25468:25910   */\n    tag_402:\n        /* \"#utility.yul\":25617:25621   */\n      0x00\n        /* \"#utility.yul\":25655:25657   */\n      0x60\n        /* \"#utility.yul\":25644:25653   */\n      dup3\n        /* \"#utility.yul\":25640:25658   */\n      add\n        /* \"#utility.yul\":25632:25658   */\n      swap1\n      pop\n        /* \"#utility.yul\":25668:25739   */\n      tag_770\n        /* \"#utility.yul\":25736:25737   */\n      0x00\n        /* \"#utility.yul\":25725:25734   */\n      dup4\n        /* \"#utility.yul\":25721:25738   */\n      add\n        /* \"#utility.yul\":25712:25718   */\n      dup7\n        /* \"#utility.yul\":25668:25739   */\n      tag_512\n      jump\t// in\n    tag_770:\n        /* \"#utility.yul\":25749:25821   */\n      tag_771\n        /* \"#utility.yul\":25817:25819   */\n      0x20\n        /* \"#utility.yul\":25806:25815   */\n      dup4\n        /* \"#utility.yul\":25802:25820   */\n      add\n        /* \"#utility.yul\":25793:25799   */\n      dup6\n        /* \"#utility.yul\":25749:25821   */\n      tag_504\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":25831:25903   */\n      tag_772\n        /* \"#utility.yul\":25899:25901   */\n      0x40\n        /* \"#utility.yul\":25888:25897   */\n      dup4\n        /* \"#utility.yul\":25884:25902   */\n      add\n        /* \"#utility.yul\":25875:25881   */\n      dup5\n        /* \"#utility.yul\":25831:25903   */\n      tag_504\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":25468:25910   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25916:26097   */\n    tag_549:\n        /* \"#utility.yul\":26056:26089   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":26052:26053   */\n      0x00\n        /* \"#utility.yul\":26044:26050   */\n      dup3\n        /* \"#utility.yul\":26040:26054   */\n      add\n        /* \"#utility.yul\":26033:26090   */\n      mstore\n        /* \"#utility.yul\":25916:26097   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26103:26469   */\n    tag_550:\n        /* \"#utility.yul\":26245:26248   */\n      0x00\n        /* \"#utility.yul\":26266:26333   */\n      tag_775\n        /* \"#utility.yul\":26330:26332   */\n      0x1f\n        /* \"#utility.yul\":26325:26328   */\n      dup4\n        /* \"#utility.yul\":26266:26333   */\n      tag_485\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":26259:26333   */\n      swap2\n      pop\n        /* \"#utility.yul\":26342:26435   */\n      tag_776\n        /* \"#utility.yul\":26431:26434   */\n      dup3\n        /* \"#utility.yul\":26342:26435   */\n      tag_549\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":26460:26462   */\n      0x20\n        /* \"#utility.yul\":26455:26458   */\n      dup3\n        /* \"#utility.yul\":26451:26463   */\n      add\n        /* \"#utility.yul\":26444:26463   */\n      swap1\n      pop\n        /* \"#utility.yul\":26103:26469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26475:26894   */\n    tag_420:\n        /* \"#utility.yul\":26641:26645   */\n      0x00\n        /* \"#utility.yul\":26679:26681   */\n      0x20\n        /* \"#utility.yul\":26668:26677   */\n      dup3\n        /* \"#utility.yul\":26664:26682   */\n      add\n        /* \"#utility.yul\":26656:26682   */\n      swap1\n      pop\n        /* \"#utility.yul\":26728:26737   */\n      dup2\n        /* \"#utility.yul\":26722:26726   */\n      dup2\n        /* \"#utility.yul\":26718:26738   */\n      sub\n        /* \"#utility.yul\":26714:26715   */\n      0x00\n        /* \"#utility.yul\":26703:26712   */\n      dup4\n        /* \"#utility.yul\":26699:26716   */\n      add\n        /* \"#utility.yul\":26692:26739   */\n      mstore\n        /* \"#utility.yul\":26756:26887   */\n      tag_778\n        /* \"#utility.yul\":26882:26886   */\n      dup2\n        /* \"#utility.yul\":26756:26887   */\n      tag_550\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":26748:26887   */\n      swap1\n      pop\n        /* \"#utility.yul\":26475:26894   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26900:27080   */\n    tag_551:\n        /* \"#utility.yul\":26948:27025   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26945:26946   */\n      0x00\n        /* \"#utility.yul\":26938:27026   */\n      mstore\n        /* \"#utility.yul\":27045:27049   */\n      0x11\n        /* \"#utility.yul\":27042:27043   */\n      0x04\n        /* \"#utility.yul\":27035:27050   */\n      mstore\n        /* \"#utility.yul\":27069:27073   */\n      0x24\n        /* \"#utility.yul\":27066:27067   */\n      0x00\n        /* \"#utility.yul\":27059:27074   */\n      revert\n        /* \"#utility.yul\":27086:27496   */\n    tag_424:\n        /* \"#utility.yul\":27126:27133   */\n      0x00\n        /* \"#utility.yul\":27149:27169   */\n      tag_781\n        /* \"#utility.yul\":27167:27168   */\n      dup3\n        /* \"#utility.yul\":27149:27169   */\n      tag_499\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":27144:27169   */\n      swap2\n      pop\n        /* \"#utility.yul\":27183:27203   */\n      tag_782\n        /* \"#utility.yul\":27201:27202   */\n      dup4\n        /* \"#utility.yul\":27183:27203   */\n      tag_499\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":27178:27203   */\n      swap3\n      pop\n        /* \"#utility.yul\":27238:27239   */\n      dup3\n        /* \"#utility.yul\":27235:27236   */\n      dup3\n        /* \"#utility.yul\":27231:27240   */\n      mul\n        /* \"#utility.yul\":27260:27290   */\n      tag_783\n        /* \"#utility.yul\":27278:27289   */\n      dup2\n        /* \"#utility.yul\":27260:27290   */\n      tag_499\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":27249:27290   */\n      swap2\n      pop\n        /* \"#utility.yul\":27439:27440   */\n      dup3\n        /* \"#utility.yul\":27430:27437   */\n      dup3\n        /* \"#utility.yul\":27426:27441   */\n      div\n        /* \"#utility.yul\":27423:27424   */\n      dup5\n        /* \"#utility.yul\":27420:27442   */\n      eq\n        /* \"#utility.yul\":27400:27401   */\n      dup4\n        /* \"#utility.yul\":27393:27402   */\n      iszero\n        /* \"#utility.yul\":27373:27456   */\n      or\n        /* \"#utility.yul\":27350:27489   */\n      tag_784\n      jumpi\n        /* \"#utility.yul\":27469:27487   */\n      tag_785\n      tag_551\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":27350:27489   */\n    tag_784:\n        /* \"#utility.yul\":27134:27496   */\n      pop\n        /* \"#utility.yul\":27086:27496   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27502:27682   */\n    tag_552:\n        /* \"#utility.yul\":27550:27627   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":27547:27548   */\n      0x00\n        /* \"#utility.yul\":27540:27628   */\n      mstore\n        /* \"#utility.yul\":27647:27651   */\n      0x12\n        /* \"#utility.yul\":27644:27645   */\n      0x04\n        /* \"#utility.yul\":27637:27652   */\n      mstore\n        /* \"#utility.yul\":27671:27675   */\n      0x24\n        /* \"#utility.yul\":27668:27669   */\n      0x00\n        /* \"#utility.yul\":27661:27676   */\n      revert\n        /* \"#utility.yul\":27688:27873   */\n    tag_427:\n        /* \"#utility.yul\":27728:27729   */\n      0x00\n        /* \"#utility.yul\":27745:27765   */\n      tag_788\n        /* \"#utility.yul\":27763:27764   */\n      dup3\n        /* \"#utility.yul\":27745:27765   */\n      tag_499\n      jump\t// in\n    tag_788:\n        /* \"#utility.yul\":27740:27765   */\n      swap2\n      pop\n        /* \"#utility.yul\":27779:27799   */\n      tag_789\n        /* \"#utility.yul\":27797:27798   */\n      dup4\n        /* \"#utility.yul\":27779:27799   */\n      tag_499\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":27774:27799   */\n      swap3\n      pop\n        /* \"#utility.yul\":27818:27819   */\n      dup3\n        /* \"#utility.yul\":27808:27843   */\n      tag_790\n      jumpi\n        /* \"#utility.yul\":27823:27841   */\n      tag_791\n      tag_552\n      jump\t// in\n    tag_791:\n        /* \"#utility.yul\":27808:27843   */\n    tag_790:\n        /* \"#utility.yul\":27865:27866   */\n      dup3\n        /* \"#utility.yul\":27862:27863   */\n      dup3\n        /* \"#utility.yul\":27858:27867   */\n      div\n        /* \"#utility.yul\":27853:27867   */\n      swap1\n      pop\n        /* \"#utility.yul\":27688:27873   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27879:28099   */\n    tag_553:\n        /* \"#utility.yul\":28019:28053   */\n      0x55534420616d6f756e74206d7573742062652067726561746572207468616e20\n        /* \"#utility.yul\":28015:28016   */\n      0x00\n        /* \"#utility.yul\":28007:28013   */\n      dup3\n        /* \"#utility.yul\":28003:28017   */\n      add\n        /* \"#utility.yul\":27996:28054   */\n      mstore\n        /* \"#utility.yul\":28088:28091   */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28083:28085   */\n      0x20\n        /* \"#utility.yul\":28075:28081   */\n      dup3\n        /* \"#utility.yul\":28071:28086   */\n      add\n        /* \"#utility.yul\":28064:28092   */\n      mstore\n        /* \"#utility.yul\":27879:28099   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28105:28471   */\n    tag_554:\n        /* \"#utility.yul\":28247:28250   */\n      0x00\n        /* \"#utility.yul\":28268:28335   */\n      tag_794\n        /* \"#utility.yul\":28332:28334   */\n      0x21\n        /* \"#utility.yul\":28327:28330   */\n      dup4\n        /* \"#utility.yul\":28268:28335   */\n      tag_485\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":28261:28335   */\n      swap2\n      pop\n        /* \"#utility.yul\":28344:28437   */\n      tag_795\n        /* \"#utility.yul\":28433:28436   */\n      dup3\n        /* \"#utility.yul\":28344:28437   */\n      tag_553\n      jump\t// in\n    tag_795:\n        /* \"#utility.yul\":28462:28464   */\n      0x40\n        /* \"#utility.yul\":28457:28460   */\n      dup3\n        /* \"#utility.yul\":28453:28465   */\n      add\n        /* \"#utility.yul\":28446:28465   */\n      swap1\n      pop\n        /* \"#utility.yul\":28105:28471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28477:28896   */\n    tag_431:\n        /* \"#utility.yul\":28643:28647   */\n      0x00\n        /* \"#utility.yul\":28681:28683   */\n      0x20\n        /* \"#utility.yul\":28670:28679   */\n      dup3\n        /* \"#utility.yul\":28666:28684   */\n      add\n        /* \"#utility.yul\":28658:28684   */\n      swap1\n      pop\n        /* \"#utility.yul\":28730:28739   */\n      dup2\n        /* \"#utility.yul\":28724:28728   */\n      dup2\n        /* \"#utility.yul\":28720:28740   */\n      sub\n        /* \"#utility.yul\":28716:28717   */\n      0x00\n        /* \"#utility.yul\":28705:28714   */\n      dup4\n        /* \"#utility.yul\":28701:28718   */\n      add\n        /* \"#utility.yul\":28694:28741   */\n      mstore\n        /* \"#utility.yul\":28758:28889   */\n      tag_797\n        /* \"#utility.yul\":28884:28888   */\n      dup2\n        /* \"#utility.yul\":28758:28889   */\n      tag_554\n      jump\t// in\n    tag_797:\n        /* \"#utility.yul\":28750:28889   */\n      swap1\n      pop\n        /* \"#utility.yul\":28477:28896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28902:29131   */\n    tag_555:\n        /* \"#utility.yul\":29042:29076   */\n      0x507269766174652053616c6520746f6b656e73206d7573742062652067726561\n        /* \"#utility.yul\":29038:29039   */\n      0x00\n        /* \"#utility.yul\":29030:29036   */\n      dup3\n        /* \"#utility.yul\":29026:29040   */\n      add\n        /* \"#utility.yul\":29019:29077   */\n      mstore\n        /* \"#utility.yul\":29111:29123   */\n      0x746572207468616e203000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29106:29108   */\n      0x20\n        /* \"#utility.yul\":29098:29104   */\n      dup3\n        /* \"#utility.yul\":29094:29109   */\n      add\n        /* \"#utility.yul\":29087:29124   */\n      mstore\n        /* \"#utility.yul\":28902:29131   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29137:29503   */\n    tag_556:\n        /* \"#utility.yul\":29279:29282   */\n      0x00\n        /* \"#utility.yul\":29300:29367   */\n      tag_800\n        /* \"#utility.yul\":29364:29366   */\n      0x2a\n        /* \"#utility.yul\":29359:29362   */\n      dup4\n        /* \"#utility.yul\":29300:29367   */\n      tag_485\n      jump\t// in\n    tag_800:\n        /* \"#utility.yul\":29293:29367   */\n      swap2\n      pop\n        /* \"#utility.yul\":29376:29469   */\n      tag_801\n        /* \"#utility.yul\":29465:29468   */\n      dup3\n        /* \"#utility.yul\":29376:29469   */\n      tag_555\n      jump\t// in\n    tag_801:\n        /* \"#utility.yul\":29494:29496   */\n      0x40\n        /* \"#utility.yul\":29489:29492   */\n      dup3\n        /* \"#utility.yul\":29485:29497   */\n      add\n        /* \"#utility.yul\":29478:29497   */\n      swap1\n      pop\n        /* \"#utility.yul\":29137:29503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29509:29928   */\n    tag_434:\n        /* \"#utility.yul\":29675:29679   */\n      0x00\n        /* \"#utility.yul\":29713:29715   */\n      0x20\n        /* \"#utility.yul\":29702:29711   */\n      dup3\n        /* \"#utility.yul\":29698:29716   */\n      add\n        /* \"#utility.yul\":29690:29716   */\n      swap1\n      pop\n        /* \"#utility.yul\":29762:29771   */\n      dup2\n        /* \"#utility.yul\":29756:29760   */\n      dup2\n        /* \"#utility.yul\":29752:29772   */\n      sub\n        /* \"#utility.yul\":29748:29749   */\n      0x00\n        /* \"#utility.yul\":29737:29746   */\n      dup4\n        /* \"#utility.yul\":29733:29750   */\n      add\n        /* \"#utility.yul\":29726:29773   */\n      mstore\n        /* \"#utility.yul\":29790:29921   */\n      tag_803\n        /* \"#utility.yul\":29916:29920   */\n      dup2\n        /* \"#utility.yul\":29790:29921   */\n      tag_556\n      jump\t// in\n    tag_803:\n        /* \"#utility.yul\":29782:29921   */\n      swap1\n      pop\n        /* \"#utility.yul\":29509:29928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29934:30169   */\n    tag_557:\n        /* \"#utility.yul\":30074:30108   */\n      0x507269766174652053616c6520736f6c6420746f6b656e732065786365656420\n        /* \"#utility.yul\":30070:30071   */\n      0x00\n        /* \"#utility.yul\":30062:30068   */\n      dup3\n        /* \"#utility.yul\":30058:30072   */\n      add\n        /* \"#utility.yul\":30051:30109   */\n      mstore\n        /* \"#utility.yul\":30143:30161   */\n      0x617661696c61626c6520746f6b656e7300000000000000000000000000000000\n        /* \"#utility.yul\":30138:30140   */\n      0x20\n        /* \"#utility.yul\":30130:30136   */\n      dup3\n        /* \"#utility.yul\":30126:30141   */\n      add\n        /* \"#utility.yul\":30119:30162   */\n      mstore\n        /* \"#utility.yul\":29934:30169   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30175:30541   */\n    tag_558:\n        /* \"#utility.yul\":30317:30320   */\n      0x00\n        /* \"#utility.yul\":30338:30405   */\n      tag_806\n        /* \"#utility.yul\":30402:30404   */\n      0x30\n        /* \"#utility.yul\":30397:30400   */\n      dup4\n        /* \"#utility.yul\":30338:30405   */\n      tag_485\n      jump\t// in\n    tag_806:\n        /* \"#utility.yul\":30331:30405   */\n      swap2\n      pop\n        /* \"#utility.yul\":30414:30507   */\n      tag_807\n        /* \"#utility.yul\":30503:30506   */\n      dup3\n        /* \"#utility.yul\":30414:30507   */\n      tag_557\n      jump\t// in\n    tag_807:\n        /* \"#utility.yul\":30532:30534   */\n      0x40\n        /* \"#utility.yul\":30527:30530   */\n      dup3\n        /* \"#utility.yul\":30523:30535   */\n      add\n        /* \"#utility.yul\":30516:30535   */\n      swap1\n      pop\n        /* \"#utility.yul\":30175:30541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30547:30966   */\n    tag_437:\n        /* \"#utility.yul\":30713:30717   */\n      0x00\n        /* \"#utility.yul\":30751:30753   */\n      0x20\n        /* \"#utility.yul\":30740:30749   */\n      dup3\n        /* \"#utility.yul\":30736:30754   */\n      add\n        /* \"#utility.yul\":30728:30754   */\n      swap1\n      pop\n        /* \"#utility.yul\":30800:30809   */\n      dup2\n        /* \"#utility.yul\":30794:30798   */\n      dup2\n        /* \"#utility.yul\":30790:30810   */\n      sub\n        /* \"#utility.yul\":30786:30787   */\n      0x00\n        /* \"#utility.yul\":30775:30784   */\n      dup4\n        /* \"#utility.yul\":30771:30788   */\n      add\n        /* \"#utility.yul\":30764:30811   */\n      mstore\n        /* \"#utility.yul\":30828:30959   */\n      tag_809\n        /* \"#utility.yul\":30954:30958   */\n      dup2\n        /* \"#utility.yul\":30828:30959   */\n      tag_558\n      jump\t// in\n    tag_809:\n        /* \"#utility.yul\":30820:30959   */\n      swap1\n      pop\n        /* \"#utility.yul\":30547:30966   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30972:31152   */\n    tag_559:\n        /* \"#utility.yul\":31112:31144   */\n      0x496e76616c696420746f6b656e2070726963652063616c63756c617465640000\n        /* \"#utility.yul\":31108:31109   */\n      0x00\n        /* \"#utility.yul\":31100:31106   */\n      dup3\n        /* \"#utility.yul\":31096:31110   */\n      add\n        /* \"#utility.yul\":31089:31145   */\n      mstore\n        /* \"#utility.yul\":30972:31152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31158:31524   */\n    tag_560:\n        /* \"#utility.yul\":31300:31303   */\n      0x00\n        /* \"#utility.yul\":31321:31388   */\n      tag_812\n        /* \"#utility.yul\":31385:31387   */\n      0x1e\n        /* \"#utility.yul\":31380:31383   */\n      dup4\n        /* \"#utility.yul\":31321:31388   */\n      tag_485\n      jump\t// in\n    tag_812:\n        /* \"#utility.yul\":31314:31388   */\n      swap2\n      pop\n        /* \"#utility.yul\":31397:31490   */\n      tag_813\n        /* \"#utility.yul\":31486:31489   */\n      dup3\n        /* \"#utility.yul\":31397:31490   */\n      tag_559\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":31515:31517   */\n      0x20\n        /* \"#utility.yul\":31510:31513   */\n      dup3\n        /* \"#utility.yul\":31506:31518   */\n      add\n        /* \"#utility.yul\":31499:31518   */\n      swap1\n      pop\n        /* \"#utility.yul\":31158:31524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31530:31949   */\n    tag_446:\n        /* \"#utility.yul\":31696:31700   */\n      0x00\n        /* \"#utility.yul\":31734:31736   */\n      0x20\n        /* \"#utility.yul\":31723:31732   */\n      dup3\n        /* \"#utility.yul\":31719:31737   */\n      add\n        /* \"#utility.yul\":31711:31737   */\n      swap1\n      pop\n        /* \"#utility.yul\":31783:31792   */\n      dup2\n        /* \"#utility.yul\":31777:31781   */\n      dup2\n        /* \"#utility.yul\":31773:31793   */\n      sub\n        /* \"#utility.yul\":31769:31770   */\n      0x00\n        /* \"#utility.yul\":31758:31767   */\n      dup4\n        /* \"#utility.yul\":31754:31771   */\n      add\n        /* \"#utility.yul\":31747:31794   */\n      mstore\n        /* \"#utility.yul\":31811:31942   */\n      tag_815\n        /* \"#utility.yul\":31937:31941   */\n      dup2\n        /* \"#utility.yul\":31811:31942   */\n      tag_560\n      jump\t// in\n    tag_815:\n        /* \"#utility.yul\":31803:31942   */\n      swap1\n      pop\n        /* \"#utility.yul\":31530:31949   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31955:32182   */\n    tag_561:\n        /* \"#utility.yul\":32095:32129   */\n      0x43616c63756c6174656420746f6b656e73206d75737420626520677265617465\n        /* \"#utility.yul\":32091:32092   */\n      0x00\n        /* \"#utility.yul\":32083:32089   */\n      dup3\n        /* \"#utility.yul\":32079:32093   */\n      add\n        /* \"#utility.yul\":32072:32130   */\n      mstore\n        /* \"#utility.yul\":32164:32174   */\n      0x72207468616e2030000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":32159:32161   */\n      0x20\n        /* \"#utility.yul\":32151:32157   */\n      dup3\n        /* \"#utility.yul\":32147:32162   */\n      add\n        /* \"#utility.yul\":32140:32175   */\n      mstore\n        /* \"#utility.yul\":31955:32182   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32188:32554   */\n    tag_562:\n        /* \"#utility.yul\":32330:32333   */\n      0x00\n        /* \"#utility.yul\":32351:32418   */\n      tag_818\n        /* \"#utility.yul\":32415:32417   */\n      0x28\n        /* \"#utility.yul\":32410:32413   */\n      dup4\n        /* \"#utility.yul\":32351:32418   */\n      tag_485\n      jump\t// in\n    tag_818:\n        /* \"#utility.yul\":32344:32418   */\n      swap2\n      pop\n        /* \"#utility.yul\":32427:32520   */\n      tag_819\n        /* \"#utility.yul\":32516:32519   */\n      dup3\n        /* \"#utility.yul\":32427:32520   */\n      tag_561\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":32545:32547   */\n      0x40\n        /* \"#utility.yul\":32540:32543   */\n      dup3\n        /* \"#utility.yul\":32536:32548   */\n      add\n        /* \"#utility.yul\":32529:32548   */\n      swap1\n      pop\n        /* \"#utility.yul\":32188:32554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32560:32979   */\n    tag_450:\n        /* \"#utility.yul\":32726:32730   */\n      0x00\n        /* \"#utility.yul\":32764:32766   */\n      0x20\n        /* \"#utility.yul\":32753:32762   */\n      dup3\n        /* \"#utility.yul\":32749:32767   */\n      add\n        /* \"#utility.yul\":32741:32767   */\n      swap1\n      pop\n        /* \"#utility.yul\":32813:32822   */\n      dup2\n        /* \"#utility.yul\":32807:32811   */\n      dup2\n        /* \"#utility.yul\":32803:32823   */\n      sub\n        /* \"#utility.yul\":32799:32800   */\n      0x00\n        /* \"#utility.yul\":32788:32797   */\n      dup4\n        /* \"#utility.yul\":32784:32801   */\n      add\n        /* \"#utility.yul\":32777:32824   */\n      mstore\n        /* \"#utility.yul\":32841:32972   */\n      tag_821\n        /* \"#utility.yul\":32967:32971   */\n      dup2\n        /* \"#utility.yul\":32841:32972   */\n      tag_562\n      jump\t// in\n    tag_821:\n        /* \"#utility.yul\":32833:32972   */\n      swap1\n      pop\n        /* \"#utility.yul\":32560:32979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32985:33176   */\n    tag_453:\n        /* \"#utility.yul\":33025:33028   */\n      0x00\n        /* \"#utility.yul\":33044:33064   */\n      tag_823\n        /* \"#utility.yul\":33062:33063   */\n      dup3\n        /* \"#utility.yul\":33044:33064   */\n      tag_499\n      jump\t// in\n    tag_823:\n        /* \"#utility.yul\":33039:33064   */\n      swap2\n      pop\n        /* \"#utility.yul\":33078:33098   */\n      tag_824\n        /* \"#utility.yul\":33096:33097   */\n      dup4\n        /* \"#utility.yul\":33078:33098   */\n      tag_499\n      jump\t// in\n    tag_824:\n        /* \"#utility.yul\":33073:33098   */\n      swap3\n      pop\n        /* \"#utility.yul\":33121:33122   */\n      dup3\n        /* \"#utility.yul\":33118:33119   */\n      dup3\n        /* \"#utility.yul\":33114:33123   */\n      add\n        /* \"#utility.yul\":33107:33123   */\n      swap1\n      pop\n        /* \"#utility.yul\":33142:33145   */\n      dup1\n        /* \"#utility.yul\":33139:33140   */\n      dup3\n        /* \"#utility.yul\":33136:33146   */\n      gt\n        /* \"#utility.yul\":33133:33169   */\n      iszero\n      tag_825\n      jumpi\n        /* \"#utility.yul\":33149:33167   */\n      tag_826\n      tag_551\n      jump\t// in\n    tag_826:\n        /* \"#utility.yul\":33133:33169   */\n    tag_825:\n        /* \"#utility.yul\":32985:33176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33182:33376   */\n    tag_484:\n        /* \"#utility.yul\":33222:33226   */\n      0x00\n        /* \"#utility.yul\":33242:33262   */\n      tag_828\n        /* \"#utility.yul\":33260:33261   */\n      dup3\n        /* \"#utility.yul\":33242:33262   */\n      tag_499\n      jump\t// in\n    tag_828:\n        /* \"#utility.yul\":33237:33262   */\n      swap2\n      pop\n        /* \"#utility.yul\":33276:33296   */\n      tag_829\n        /* \"#utility.yul\":33294:33295   */\n      dup4\n        /* \"#utility.yul\":33276:33296   */\n      tag_499\n      jump\t// in\n    tag_829:\n        /* \"#utility.yul\":33271:33296   */\n      swap3\n      pop\n        /* \"#utility.yul\":33320:33321   */\n      dup3\n        /* \"#utility.yul\":33317:33318   */\n      dup3\n        /* \"#utility.yul\":33313:33322   */\n      sub\n        /* \"#utility.yul\":33305:33322   */\n      swap1\n      pop\n        /* \"#utility.yul\":33344:33345   */\n      dup2\n        /* \"#utility.yul\":33338:33342   */\n      dup2\n        /* \"#utility.yul\":33335:33346   */\n      gt\n        /* \"#utility.yul\":33332:33369   */\n      iszero\n      tag_830\n      jumpi\n        /* \"#utility.yul\":33349:33367   */\n      tag_831\n      tag_551\n      jump\t// in\n    tag_831:\n        /* \"#utility.yul\":33332:33369   */\n    tag_830:\n        /* \"#utility.yul\":33182:33376   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207e52ffddca16469ac02c372fcb7231cec9398546de86c6ce0bc957967aa9008164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1480": {
									"entryPoint": null,
									"id": 1480,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 788,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 593,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 921,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2568,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2457,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 1458,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1650,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1503,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1833,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1974,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2011,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8147:9",
										"nodeType": "YulBlock",
										"src": "0:8147:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:9",
													"nodeType": "YulBlock",
													"src": "35:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:9",
																		"nodeType": "YulLiteral",
																		"src": "52:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:9",
																		"nodeType": "YulLiteral",
																		"src": "55:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:9"
																},
																"nativeSrc": "45:88:9",
																"nodeType": "YulFunctionCall",
																"src": "45:88:9"
															},
															"nativeSrc": "45:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:9",
																		"nodeType": "YulLiteral",
																		"src": "149:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:9",
																		"nodeType": "YulLiteral",
																		"src": "152:4:9",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:9"
																},
																"nativeSrc": "142:15:9",
																"nodeType": "YulFunctionCall",
																"src": "142:15:9"
															},
															"nativeSrc": "142:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:9",
																		"nodeType": "YulLiteral",
																		"src": "173:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:9",
																		"nodeType": "YulLiteral",
																		"src": "176:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:9"
																},
																"nativeSrc": "166:15:9",
																"nodeType": "YulFunctionCall",
																"src": "166:15:9"
															},
															"nativeSrc": "166:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:9"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "7:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:9"
											},
											{
												"body": {
													"nativeSrc": "233:35:9",
													"nodeType": "YulBlock",
													"src": "233:35:9",
													"statements": [
														{
															"nativeSrc": "243:19:9",
															"nodeType": "YulAssignment",
															"src": "243:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "259:2:9",
																		"nodeType": "YulLiteral",
																		"src": "259:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "253:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "253:5:9"
																},
																"nativeSrc": "253:9:9",
																"nodeType": "YulFunctionCall",
																"src": "253:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "243:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "243:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "193:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "226:6:9",
														"nodeType": "YulTypedName",
														"src": "226:6:9",
														"type": ""
													}
												],
												"src": "193:75:9"
											},
											{
												"body": {
													"nativeSrc": "363:28:9",
													"nodeType": "YulBlock",
													"src": "363:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "380:1:9",
																		"nodeType": "YulLiteral",
																		"src": "380:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "383:1:9",
																		"nodeType": "YulLiteral",
																		"src": "383:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "373:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "373:6:9"
																},
																"nativeSrc": "373:12:9",
																"nodeType": "YulFunctionCall",
																"src": "373:12:9"
															},
															"nativeSrc": "373:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "373:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "274:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "274:117:9"
											},
											{
												"body": {
													"nativeSrc": "486:28:9",
													"nodeType": "YulBlock",
													"src": "486:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "503:1:9",
																		"nodeType": "YulLiteral",
																		"src": "503:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "506:1:9",
																		"nodeType": "YulLiteral",
																		"src": "506:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "496:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "496:6:9"
																},
																"nativeSrc": "496:12:9",
																"nodeType": "YulFunctionCall",
																"src": "496:12:9"
															},
															"nativeSrc": "496:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "496:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "397:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "397:117:9"
											},
											{
												"body": {
													"nativeSrc": "565:81:9",
													"nodeType": "YulBlock",
													"src": "565:81:9",
													"statements": [
														{
															"nativeSrc": "575:65:9",
															"nodeType": "YulAssignment",
															"src": "575:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "590:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "590:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "597:42:9",
																		"nodeType": "YulLiteral",
																		"src": "597:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "586:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "586:3:9"
																},
																"nativeSrc": "586:54:9",
																"nodeType": "YulFunctionCall",
																"src": "586:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "575:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "575:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "520:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "547:5:9",
														"nodeType": "YulTypedName",
														"src": "547:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "557:7:9",
														"nodeType": "YulTypedName",
														"src": "557:7:9",
														"type": ""
													}
												],
												"src": "520:126:9"
											},
											{
												"body": {
													"nativeSrc": "697:51:9",
													"nodeType": "YulBlock",
													"src": "697:51:9",
													"statements": [
														{
															"nativeSrc": "707:35:9",
															"nodeType": "YulAssignment",
															"src": "707:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "736:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "736:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "718:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "718:17:9"
																},
																"nativeSrc": "718:24:9",
																"nodeType": "YulFunctionCall",
																"src": "718:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "707:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "707:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "652:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "679:5:9",
														"nodeType": "YulTypedName",
														"src": "679:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "689:7:9",
														"nodeType": "YulTypedName",
														"src": "689:7:9",
														"type": ""
													}
												],
												"src": "652:96:9"
											},
											{
												"body": {
													"nativeSrc": "797:79:9",
													"nodeType": "YulBlock",
													"src": "797:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "854:16:9",
																"nodeType": "YulBlock",
																"src": "854:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "863:1:9",
																					"nodeType": "YulLiteral",
																					"src": "863:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "866:1:9",
																					"nodeType": "YulLiteral",
																					"src": "866:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "856:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "856:6:9"
																			},
																			"nativeSrc": "856:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "856:12:9"
																		},
																		"nativeSrc": "856:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "856:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "820:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "820:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "845:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "845:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "827:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "827:17:9"
																				},
																				"nativeSrc": "827:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "827:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "817:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "817:2:9"
																		},
																		"nativeSrc": "817:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "817:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "810:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "810:6:9"
																},
																"nativeSrc": "810:43:9",
																"nodeType": "YulFunctionCall",
																"src": "810:43:9"
															},
															"nativeSrc": "807:63:9",
															"nodeType": "YulIf",
															"src": "807:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "754:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "790:5:9",
														"nodeType": "YulTypedName",
														"src": "790:5:9",
														"type": ""
													}
												],
												"src": "754:122:9"
											},
											{
												"body": {
													"nativeSrc": "945:80:9",
													"nodeType": "YulBlock",
													"src": "945:80:9",
													"statements": [
														{
															"nativeSrc": "955:22:9",
															"nodeType": "YulAssignment",
															"src": "955:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "970:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "970:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "964:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "964:5:9"
																},
																"nativeSrc": "964:13:9",
																"nodeType": "YulFunctionCall",
																"src": "964:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "955:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "955:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1013:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1013:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "986:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "986:26:9"
																},
																"nativeSrc": "986:33:9",
																"nodeType": "YulFunctionCall",
																"src": "986:33:9"
															},
															"nativeSrc": "986:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "986:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "882:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "923:6:9",
														"nodeType": "YulTypedName",
														"src": "923:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "931:3:9",
														"nodeType": "YulTypedName",
														"src": "931:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "939:5:9",
														"nodeType": "YulTypedName",
														"src": "939:5:9",
														"type": ""
													}
												],
												"src": "882:143:9"
											},
											{
												"body": {
													"nativeSrc": "1108:274:9",
													"nodeType": "YulBlock",
													"src": "1108:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:9",
																"nodeType": "YulBlock",
																"src": "1154:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:9"
																			},
																			"nativeSrc": "1156:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:9"
																		},
																		"nativeSrc": "1156:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:9"
																		},
																		"nativeSrc": "1125:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:9"
																},
																"nativeSrc": "1121:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:9"
															},
															"nativeSrc": "1118:119:9",
															"nodeType": "YulIf",
															"src": "1118:119:9"
														},
														{
															"nativeSrc": "1247:128:9",
															"nodeType": "YulBlock",
															"src": "1247:128:9",
															"statements": [
																{
																	"nativeSrc": "1262:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1291:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1337:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1337:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1348:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1348:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1333:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1333:3:9"
																				},
																				"nativeSrc": "1333:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1333:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1357:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1357:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1301:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1301:31:9"
																		},
																		"nativeSrc": "1301:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "1031:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:9",
														"nodeType": "YulTypedName",
														"src": "1078:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:9",
														"nodeType": "YulTypedName",
														"src": "1089:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:9",
														"nodeType": "YulTypedName",
														"src": "1101:6:9",
														"type": ""
													}
												],
												"src": "1031:351:9"
											},
											{
												"body": {
													"nativeSrc": "1447:40:9",
													"nodeType": "YulBlock",
													"src": "1447:40:9",
													"statements": [
														{
															"nativeSrc": "1458:22:9",
															"nodeType": "YulAssignment",
															"src": "1458:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1474:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1474:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1468:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1468:5:9"
																},
																"nativeSrc": "1468:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1468:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1458:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1458:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1388:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1430:5:9",
														"nodeType": "YulTypedName",
														"src": "1430:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1440:6:9",
														"nodeType": "YulTypedName",
														"src": "1440:6:9",
														"type": ""
													}
												],
												"src": "1388:99:9"
											},
											{
												"body": {
													"nativeSrc": "1521:152:9",
													"nodeType": "YulBlock",
													"src": "1521:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:9",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:9"
																},
																"nativeSrc": "1531:88:9",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:9"
															},
															"nativeSrc": "1531:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:9"
																},
																"nativeSrc": "1628:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:9"
															},
															"nativeSrc": "1628:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:9"
																},
																"nativeSrc": "1652:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:9"
															},
															"nativeSrc": "1652:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1493:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:9"
											},
											{
												"body": {
													"nativeSrc": "1707:152:9",
													"nodeType": "YulBlock",
													"src": "1707:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1724:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1724:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1727:77:9",
																		"nodeType": "YulLiteral",
																		"src": "1727:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1717:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1717:6:9"
																},
																"nativeSrc": "1717:88:9",
																"nodeType": "YulFunctionCall",
																"src": "1717:88:9"
															},
															"nativeSrc": "1717:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "1717:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1821:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1821:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1824:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1824:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1814:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1814:6:9"
																},
																"nativeSrc": "1814:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1814:15:9"
															},
															"nativeSrc": "1814:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1814:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1845:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1845:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1848:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1838:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:9"
																},
																"nativeSrc": "1838:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1838:15:9"
															},
															"nativeSrc": "1838:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1838:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1679:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1679:180:9"
											},
											{
												"body": {
													"nativeSrc": "1916:269:9",
													"nodeType": "YulBlock",
													"src": "1916:269:9",
													"statements": [
														{
															"nativeSrc": "1926:22:9",
															"nodeType": "YulAssignment",
															"src": "1926:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1940:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1940:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1946:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1946:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1936:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1936:3:9"
																},
																"nativeSrc": "1936:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1936:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1926:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1926:6:9"
																}
															]
														},
														{
															"nativeSrc": "1957:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1957:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1987:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1987:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1993:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1993:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1983:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:9"
																},
																"nativeSrc": "1983:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1983:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1961:18:9",
																	"nodeType": "YulTypedName",
																	"src": "1961:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2034:51:9",
																"nodeType": "YulBlock",
																"src": "2034:51:9",
																"statements": [
																	{
																		"nativeSrc": "2048:27:9",
																		"nodeType": "YulAssignment",
																		"src": "2048:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2062:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2062:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2070:4:9",
																					"nodeType": "YulLiteral",
																					"src": "2070:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2058:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "2058:3:9"
																			},
																			"nativeSrc": "2058:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2058:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2048:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2048:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2014:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2014:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2007:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2007:6:9"
																},
																"nativeSrc": "2007:26:9",
																"nodeType": "YulFunctionCall",
																"src": "2007:26:9"
															},
															"nativeSrc": "2004:81:9",
															"nodeType": "YulIf",
															"src": "2004:81:9"
														},
														{
															"body": {
																"nativeSrc": "2137:42:9",
																"nodeType": "YulBlock",
																"src": "2137:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2151:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "2151:16:9"
																			},
																			"nativeSrc": "2151:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2151:18:9"
																		},
																		"nativeSrc": "2151:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2151:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2101:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "2101:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2124:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2124:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2132:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2132:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2121:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2121:2:9"
																		},
																		"nativeSrc": "2121:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2121:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2098:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2098:2:9"
																},
																"nativeSrc": "2098:38:9",
																"nodeType": "YulFunctionCall",
																"src": "2098:38:9"
															},
															"nativeSrc": "2095:84:9",
															"nodeType": "YulIf",
															"src": "2095:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1865:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1900:4:9",
														"nodeType": "YulTypedName",
														"src": "1900:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1909:6:9",
														"nodeType": "YulTypedName",
														"src": "1909:6:9",
														"type": ""
													}
												],
												"src": "1865:320:9"
											},
											{
												"body": {
													"nativeSrc": "2245:87:9",
													"nodeType": "YulBlock",
													"src": "2245:87:9",
													"statements": [
														{
															"nativeSrc": "2255:11:9",
															"nodeType": "YulAssignment",
															"src": "2255:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "2263:3:9",
																"nodeType": "YulIdentifier",
																"src": "2263:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2255:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2255:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2283:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2283:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2286:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2286:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2276:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2276:6:9"
																},
																"nativeSrc": "2276:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2276:14:9"
															},
															"nativeSrc": "2276:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "2276:14:9"
														},
														{
															"nativeSrc": "2299:26:9",
															"nodeType": "YulAssignment",
															"src": "2299:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2320:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2320:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2307:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2307:9:9"
																},
																"nativeSrc": "2307:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2307:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2299:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2299:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2191:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2232:3:9",
														"nodeType": "YulTypedName",
														"src": "2232:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2240:4:9",
														"nodeType": "YulTypedName",
														"src": "2240:4:9",
														"type": ""
													}
												],
												"src": "2191:141:9"
											},
											{
												"body": {
													"nativeSrc": "2382:49:9",
													"nodeType": "YulBlock",
													"src": "2382:49:9",
													"statements": [
														{
															"nativeSrc": "2392:33:9",
															"nodeType": "YulAssignment",
															"src": "2392:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2410:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2410:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2417:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2417:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2406:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2406:3:9"
																		},
																		"nativeSrc": "2406:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2406:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2422:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2422:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2402:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2402:3:9"
																},
																"nativeSrc": "2402:23:9",
																"nodeType": "YulFunctionCall",
																"src": "2402:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2392:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2392:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2338:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2365:5:9",
														"nodeType": "YulTypedName",
														"src": "2365:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2375:6:9",
														"nodeType": "YulTypedName",
														"src": "2375:6:9",
														"type": ""
													}
												],
												"src": "2338:93:9"
											},
											{
												"body": {
													"nativeSrc": "2490:54:9",
													"nodeType": "YulBlock",
													"src": "2490:54:9",
													"statements": [
														{
															"nativeSrc": "2500:37:9",
															"nodeType": "YulAssignment",
															"src": "2500:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2525:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2525:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2531:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2531:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2521:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2521:3:9"
																},
																"nativeSrc": "2521:16:9",
																"nodeType": "YulFunctionCall",
																"src": "2521:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2500:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "2500:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2437:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2465:4:9",
														"nodeType": "YulTypedName",
														"src": "2465:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2471:5:9",
														"nodeType": "YulTypedName",
														"src": "2471:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2481:8:9",
														"nodeType": "YulTypedName",
														"src": "2481:8:9",
														"type": ""
													}
												],
												"src": "2437:107:9"
											},
											{
												"body": {
													"nativeSrc": "2626:317:9",
													"nodeType": "YulBlock",
													"src": "2626:317:9",
													"statements": [
														{
															"nativeSrc": "2636:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2636:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2657:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "2657:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2669:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2669:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2653:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2653:3:9"
																},
																"nativeSrc": "2653:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2653:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2640:9:9",
																	"nodeType": "YulTypedName",
																	"src": "2640:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2680:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2680:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2711:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2711:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2722:66:9",
																		"nodeType": "YulLiteral",
																		"src": "2722:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2692:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2692:18:9"
																},
																"nativeSrc": "2692:97:9",
																"nodeType": "YulFunctionCall",
																"src": "2692:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2684:4:9",
																	"nodeType": "YulTypedName",
																	"src": "2684:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2798:51:9",
															"nodeType": "YulAssignment",
															"src": "2798:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2829:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2829:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2840:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "2840:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2810:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2810:18:9"
																},
																"nativeSrc": "2810:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2810:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2798:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "2798:8:9"
																}
															]
														},
														{
															"nativeSrc": "2858:30:9",
															"nodeType": "YulAssignment",
															"src": "2858:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2871:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2871:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2882:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2882:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2878:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2878:3:9"
																		},
																		"nativeSrc": "2878:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2878:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2867:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2867:3:9"
																},
																"nativeSrc": "2867:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2867:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2858:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2858:5:9"
																}
															]
														},
														{
															"nativeSrc": "2897:40:9",
															"nodeType": "YulAssignment",
															"src": "2897:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2910:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2910:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2921:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "2921:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2931:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2931:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2917:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2917:3:9"
																		},
																		"nativeSrc": "2917:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2917:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2907:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2907:2:9"
																},
																"nativeSrc": "2907:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2907:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2897:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2897:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2550:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2587:5:9",
														"nodeType": "YulTypedName",
														"src": "2587:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2594:10:9",
														"nodeType": "YulTypedName",
														"src": "2594:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2606:8:9",
														"nodeType": "YulTypedName",
														"src": "2606:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2619:6:9",
														"nodeType": "YulTypedName",
														"src": "2619:6:9",
														"type": ""
													}
												],
												"src": "2550:393:9"
											},
											{
												"body": {
													"nativeSrc": "2994:32:9",
													"nodeType": "YulBlock",
													"src": "2994:32:9",
													"statements": [
														{
															"nativeSrc": "3004:16:9",
															"nodeType": "YulAssignment",
															"src": "3004:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "3015:5:9",
																"nodeType": "YulIdentifier",
																"src": "3015:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3004:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3004:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2949:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2976:5:9",
														"nodeType": "YulTypedName",
														"src": "2976:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2986:7:9",
														"nodeType": "YulTypedName",
														"src": "2986:7:9",
														"type": ""
													}
												],
												"src": "2949:77:9"
											},
											{
												"body": {
													"nativeSrc": "3064:28:9",
													"nodeType": "YulBlock",
													"src": "3064:28:9",
													"statements": [
														{
															"nativeSrc": "3074:12:9",
															"nodeType": "YulAssignment",
															"src": "3074:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "3081:5:9",
																"nodeType": "YulIdentifier",
																"src": "3081:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3074:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3074:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3032:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3050:5:9",
														"nodeType": "YulTypedName",
														"src": "3050:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3060:3:9",
														"nodeType": "YulTypedName",
														"src": "3060:3:9",
														"type": ""
													}
												],
												"src": "3032:60:9"
											},
											{
												"body": {
													"nativeSrc": "3158:82:9",
													"nodeType": "YulBlock",
													"src": "3158:82:9",
													"statements": [
														{
															"nativeSrc": "3168:66:9",
															"nodeType": "YulAssignment",
															"src": "3168:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3226:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3226:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3208:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3208:17:9"
																				},
																				"nativeSrc": "3208:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3208:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3199:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "3199:8:9"
																		},
																		"nativeSrc": "3199:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3199:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3181:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "3181:17:9"
																},
																"nativeSrc": "3181:53:9",
																"nodeType": "YulFunctionCall",
																"src": "3181:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3168:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "3168:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3098:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3138:5:9",
														"nodeType": "YulTypedName",
														"src": "3138:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3148:9:9",
														"nodeType": "YulTypedName",
														"src": "3148:9:9",
														"type": ""
													}
												],
												"src": "3098:142:9"
											},
											{
												"body": {
													"nativeSrc": "3293:28:9",
													"nodeType": "YulBlock",
													"src": "3293:28:9",
													"statements": [
														{
															"nativeSrc": "3303:12:9",
															"nodeType": "YulAssignment",
															"src": "3303:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "3310:5:9",
																"nodeType": "YulIdentifier",
																"src": "3310:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3303:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3303:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3246:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3279:5:9",
														"nodeType": "YulTypedName",
														"src": "3279:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3289:3:9",
														"nodeType": "YulTypedName",
														"src": "3289:3:9",
														"type": ""
													}
												],
												"src": "3246:75:9"
											},
											{
												"body": {
													"nativeSrc": "3403:193:9",
													"nodeType": "YulBlock",
													"src": "3403:193:9",
													"statements": [
														{
															"nativeSrc": "3413:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3413:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3468:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "3468:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3437:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "3437:30:9"
																},
																"nativeSrc": "3437:39:9",
																"nodeType": "YulFunctionCall",
																"src": "3437:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3417:16:9",
																	"nodeType": "YulTypedName",
																	"src": "3417:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3492:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3492:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3532:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "3532:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3526:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "3526:5:9"
																				},
																				"nativeSrc": "3526:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3526:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3539:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3539:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3571:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "3571:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3547:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "3547:23:9"
																				},
																				"nativeSrc": "3547:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3547:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3498:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "3498:27:9"
																		},
																		"nativeSrc": "3498:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3498:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3485:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3485:6:9"
																},
																"nativeSrc": "3485:105:9",
																"nodeType": "YulFunctionCall",
																"src": "3485:105:9"
															},
															"nativeSrc": "3485:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "3485:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3327:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3380:4:9",
														"nodeType": "YulTypedName",
														"src": "3380:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3386:6:9",
														"nodeType": "YulTypedName",
														"src": "3386:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3394:7:9",
														"nodeType": "YulTypedName",
														"src": "3394:7:9",
														"type": ""
													}
												],
												"src": "3327:269:9"
											},
											{
												"body": {
													"nativeSrc": "3651:24:9",
													"nodeType": "YulBlock",
													"src": "3651:24:9",
													"statements": [
														{
															"nativeSrc": "3661:8:9",
															"nodeType": "YulAssignment",
															"src": "3661:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "3668:1:9",
																"nodeType": "YulLiteral",
																"src": "3668:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3661:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3661:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3602:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3647:3:9",
														"nodeType": "YulTypedName",
														"src": "3647:3:9",
														"type": ""
													}
												],
												"src": "3602:73:9"
											},
											{
												"body": {
													"nativeSrc": "3734:136:9",
													"nodeType": "YulBlock",
													"src": "3734:136:9",
													"statements": [
														{
															"nativeSrc": "3744:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3744:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3758:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "3758:30:9"
																},
																"nativeSrc": "3758:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3758:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3748:6:9",
																	"nodeType": "YulTypedName",
																	"src": "3748:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3843:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3843:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3849:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3849:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3857:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3857:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3799:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3799:43:9"
																},
																"nativeSrc": "3799:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3799:65:9"
															},
															"nativeSrc": "3799:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3799:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3681:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3720:4:9",
														"nodeType": "YulTypedName",
														"src": "3720:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3726:6:9",
														"nodeType": "YulTypedName",
														"src": "3726:6:9",
														"type": ""
													}
												],
												"src": "3681:189:9"
											},
											{
												"body": {
													"nativeSrc": "3926:136:9",
													"nodeType": "YulBlock",
													"src": "3926:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3993:63:9",
																"nodeType": "YulBlock",
																"src": "3993:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4037:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "4037:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4044:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4044:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4007:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "4007:29:9"
																			},
																			"nativeSrc": "4007:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4007:39:9"
																		},
																		"nativeSrc": "4007:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4007:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3946:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3946:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3953:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3953:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3943:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3943:2:9"
																},
																"nativeSrc": "3943:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3943:14:9"
															},
															"nativeSrc": "3936:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3958:26:9",
																"nodeType": "YulBlock",
																"src": "3958:26:9",
																"statements": [
																	{
																		"nativeSrc": "3960:22:9",
																		"nodeType": "YulAssignment",
																		"src": "3960:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3973:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "3973:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3980:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3980:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3969:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3969:3:9"
																			},
																			"nativeSrc": "3969:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3969:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3960:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3960:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3940:2:9",
																"nodeType": "YulBlock",
																"src": "3940:2:9",
																"statements": []
															},
															"src": "3936:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3876:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3914:5:9",
														"nodeType": "YulTypedName",
														"src": "3914:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3921:3:9",
														"nodeType": "YulTypedName",
														"src": "3921:3:9",
														"type": ""
													}
												],
												"src": "3876:186:9"
											},
											{
												"body": {
													"nativeSrc": "4147:464:9",
													"nodeType": "YulBlock",
													"src": "4147:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4173:431:9",
																"nodeType": "YulBlock",
																"src": "4173:431:9",
																"statements": [
																	{
																		"nativeSrc": "4187:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4187:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4235:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "4235:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4203:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "4203:31:9"
																			},
																			"nativeSrc": "4203:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4203:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4191:8:9",
																				"nodeType": "YulTypedName",
																				"src": "4191:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4254:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4254:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4277:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "4277:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4305:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "4305:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4287:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "4287:17:9"
																					},
																					"nativeSrc": "4287:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4287:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4273:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4273:3:9"
																			},
																			"nativeSrc": "4273:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4273:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4258:11:9",
																				"nodeType": "YulTypedName",
																				"src": "4258:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4474:27:9",
																			"nodeType": "YulBlock",
																			"src": "4474:27:9",
																			"statements": [
																				{
																					"nativeSrc": "4476:23:9",
																					"nodeType": "YulAssignment",
																					"src": "4476:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4491:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "4491:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4476:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "4476:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4458:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "4458:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4470:2:9",
																					"nodeType": "YulLiteral",
																					"src": "4470:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4455:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "4455:2:9"
																			},
																			"nativeSrc": "4455:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4455:18:9"
																		},
																		"nativeSrc": "4452:49:9",
																		"nodeType": "YulIf",
																		"src": "4452:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4543:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "4543:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4560:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "4560:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4588:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4588:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4570:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "4570:17:9"
																							},
																							"nativeSrc": "4570:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4570:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4556:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "4556:3:9"
																					},
																					"nativeSrc": "4556:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4556:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4514:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "4514:28:9"
																			},
																			"nativeSrc": "4514:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4514:80:9"
																		},
																		"nativeSrc": "4514:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4514:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4164:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4164:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4169:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4169:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4161:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4161:2:9"
																},
																"nativeSrc": "4161:11:9",
																"nodeType": "YulFunctionCall",
																"src": "4161:11:9"
															},
															"nativeSrc": "4158:446:9",
															"nodeType": "YulIf",
															"src": "4158:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4068:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4123:5:9",
														"nodeType": "YulTypedName",
														"src": "4123:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4130:3:9",
														"nodeType": "YulTypedName",
														"src": "4130:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4135:10:9",
														"nodeType": "YulTypedName",
														"src": "4135:10:9",
														"type": ""
													}
												],
												"src": "4068:543:9"
											},
											{
												"body": {
													"nativeSrc": "4680:54:9",
													"nodeType": "YulBlock",
													"src": "4680:54:9",
													"statements": [
														{
															"nativeSrc": "4690:37:9",
															"nodeType": "YulAssignment",
															"src": "4690:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4715:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4715:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4721:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4721:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4711:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4711:3:9"
																},
																"nativeSrc": "4711:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4711:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4690:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "4690:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4617:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4655:4:9",
														"nodeType": "YulTypedName",
														"src": "4655:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4661:5:9",
														"nodeType": "YulTypedName",
														"src": "4661:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4671:8:9",
														"nodeType": "YulTypedName",
														"src": "4671:8:9",
														"type": ""
													}
												],
												"src": "4617:117:9"
											},
											{
												"body": {
													"nativeSrc": "4791:118:9",
													"nodeType": "YulBlock",
													"src": "4791:118:9",
													"statements": [
														{
															"nativeSrc": "4801:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4801:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4850:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4850:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4853:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4853:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4846:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4846:3:9"
																				},
																				"nativeSrc": "4846:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4846:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4865:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4865:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4861:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4861:3:9"
																				},
																				"nativeSrc": "4861:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4861:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4817:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "4817:28:9"
																		},
																		"nativeSrc": "4817:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4817:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4813:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4813:3:9"
																},
																"nativeSrc": "4813:56:9",
																"nodeType": "YulFunctionCall",
																"src": "4813:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4805:4:9",
																	"nodeType": "YulTypedName",
																	"src": "4805:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4878:25:9",
															"nodeType": "YulAssignment",
															"src": "4878:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4892:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4892:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4898:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4898:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4888:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4888:3:9"
																},
																"nativeSrc": "4888:15:9",
																"nodeType": "YulFunctionCall",
																"src": "4888:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4878:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4878:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4740:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4768:4:9",
														"nodeType": "YulTypedName",
														"src": "4768:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4774:5:9",
														"nodeType": "YulTypedName",
														"src": "4774:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4784:6:9",
														"nodeType": "YulTypedName",
														"src": "4784:6:9",
														"type": ""
													}
												],
												"src": "4740:169:9"
											},
											{
												"body": {
													"nativeSrc": "4995:214:9",
													"nodeType": "YulBlock",
													"src": "4995:214:9",
													"statements": [
														{
															"nativeSrc": "5128:37:9",
															"nodeType": "YulAssignment",
															"src": "5128:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5155:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5155:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5161:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5161:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5136:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "5136:18:9"
																},
																"nativeSrc": "5136:29:9",
																"nodeType": "YulFunctionCall",
																"src": "5136:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5128:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5128:4:9"
																}
															]
														},
														{
															"nativeSrc": "5174:29:9",
															"nodeType": "YulAssignment",
															"src": "5174:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5185:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5185:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5195:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5195:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5198:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "5198:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5191:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5191:3:9"
																		},
																		"nativeSrc": "5191:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5191:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5182:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5182:2:9"
																},
																"nativeSrc": "5182:21:9",
																"nodeType": "YulFunctionCall",
																"src": "5182:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5174:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5174:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4914:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4976:4:9",
														"nodeType": "YulTypedName",
														"src": "4976:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4982:3:9",
														"nodeType": "YulTypedName",
														"src": "4982:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4990:4:9",
														"nodeType": "YulTypedName",
														"src": "4990:4:9",
														"type": ""
													}
												],
												"src": "4914:295:9"
											},
											{
												"body": {
													"nativeSrc": "5306:1303:9",
													"nodeType": "YulBlock",
													"src": "5306:1303:9",
													"statements": [
														{
															"nativeSrc": "5317:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5317:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5364:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5364:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5331:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "5331:32:9"
																},
																"nativeSrc": "5331:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5331:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5321:6:9",
																	"nodeType": "YulTypedName",
																	"src": "5321:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5453:22:9",
																"nodeType": "YulBlock",
																"src": "5453:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5455:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "5455:16:9"
																			},
																			"nativeSrc": "5455:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5455:18:9"
																		},
																		"nativeSrc": "5455:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5455:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5425:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5425:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5433:18:9",
																		"nodeType": "YulLiteral",
																		"src": "5433:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5422:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5422:2:9"
																},
																"nativeSrc": "5422:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5422:30:9"
															},
															"nativeSrc": "5419:56:9",
															"nodeType": "YulIf",
															"src": "5419:56:9"
														},
														{
															"nativeSrc": "5485:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5485:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5531:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "5531:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5525:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5525:5:9"
																		},
																		"nativeSrc": "5525:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5525:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5499:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "5499:25:9"
																},
																"nativeSrc": "5499:38:9",
																"nodeType": "YulFunctionCall",
																"src": "5499:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5489:6:9",
																	"nodeType": "YulTypedName",
																	"src": "5489:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5630:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5630:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5636:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5636:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5644:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5644:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5584:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "5584:45:9"
																},
																"nativeSrc": "5584:67:9",
																"nodeType": "YulFunctionCall",
																"src": "5584:67:9"
															},
															"nativeSrc": "5584:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "5584:67:9"
														},
														{
															"nativeSrc": "5661:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5661:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "5678:1:9",
																"nodeType": "YulLiteral",
																"src": "5678:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5665:9:9",
																	"nodeType": "YulTypedName",
																	"src": "5665:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5689:17:9",
															"nodeType": "YulAssignment",
															"src": "5689:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "5702:4:9",
																"nodeType": "YulLiteral",
																"src": "5702:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5689:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5689:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5753:611:9",
																		"nodeType": "YulBlock",
																		"src": "5753:611:9",
																		"statements": [
																			{
																				"nativeSrc": "5767:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5767:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5786:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "5786:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5798:4:9",
																									"nodeType": "YulLiteral",
																									"src": "5798:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5794:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "5794:3:9"
																							},
																							"nativeSrc": "5794:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "5794:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5782:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5782:3:9"
																					},
																					"nativeSrc": "5782:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5782:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5771:7:9",
																						"nodeType": "YulTypedName",
																						"src": "5771:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5818:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5818:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5864:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "5864:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5832:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "5832:31:9"
																					},
																					"nativeSrc": "5832:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5832:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5822:6:9",
																						"nodeType": "YulTypedName",
																						"src": "5822:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5882:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5882:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5891:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5891:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5886:1:9",
																						"nodeType": "YulTypedName",
																						"src": "5886:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5950:163:9",
																					"nodeType": "YulBlock",
																					"src": "5950:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5975:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "5975:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5993:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "5993:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5998:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "5998:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5989:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "5989:3:9"
																												},
																												"nativeSrc": "5989:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "5989:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5983:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "5983:5:9"
																										},
																										"nativeSrc": "5983:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "5983:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5968:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "5968:6:9"
																								},
																								"nativeSrc": "5968:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5968:42:9"
																							},
																							"nativeSrc": "5968:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "5968:42:9"
																						},
																						{
																							"nativeSrc": "6027:24:9",
																							"nodeType": "YulAssignment",
																							"src": "6027:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6041:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "6041:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6049:1:9",
																										"nodeType": "YulLiteral",
																										"src": "6049:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6037:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "6037:3:9"
																								},
																								"nativeSrc": "6037:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6037:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6027:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "6027:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6068:31:9",
																							"nodeType": "YulAssignment",
																							"src": "6068:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6085:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "6085:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6096:2:9",
																										"nodeType": "YulLiteral",
																										"src": "6096:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6081:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "6081:3:9"
																								},
																								"nativeSrc": "6081:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6081:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6068:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "6068:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5916:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "5916:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5919:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "5919:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5913:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "5913:2:9"
																					},
																					"nativeSrc": "5913:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5913:14:9"
																				},
																				"nativeSrc": "5905:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5928:21:9",
																					"nodeType": "YulBlock",
																					"src": "5928:21:9",
																					"statements": [
																						{
																							"nativeSrc": "5930:17:9",
																							"nodeType": "YulAssignment",
																							"src": "5930:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5939:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "5939:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5942:4:9",
																										"nodeType": "YulLiteral",
																										"src": "5942:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5935:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "5935:3:9"
																								},
																								"nativeSrc": "5935:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5935:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5930:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "5930:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5909:3:9",
																					"nodeType": "YulBlock",
																					"src": "5909:3:9",
																					"statements": []
																				},
																				"src": "5905:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "6149:156:9",
																					"nodeType": "YulBlock",
																					"src": "6149:156:9",
																					"statements": [
																						{
																							"nativeSrc": "6167:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6167:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6194:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "6194:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6199:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "6199:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6190:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "6190:3:9"
																										},
																										"nativeSrc": "6190:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6190:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6184:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6184:5:9"
																								},
																								"nativeSrc": "6184:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6184:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6171:9:9",
																									"nodeType": "YulTypedName",
																									"src": "6171:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6234:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "6234:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6261:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "6261:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6276:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "6276:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6284:4:9",
																														"nodeType": "YulLiteral",
																														"src": "6284:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6272:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "6272:3:9"
																												},
																												"nativeSrc": "6272:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "6272:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6242:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "6242:18:9"
																										},
																										"nativeSrc": "6242:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6242:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6227:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "6227:6:9"
																								},
																								"nativeSrc": "6227:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6227:64:9"
																							},
																							"nativeSrc": "6227:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "6227:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6132:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "6132:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6141:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "6141:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6129:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "6129:2:9"
																					},
																					"nativeSrc": "6129:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6129:19:9"
																				},
																				"nativeSrc": "6126:179:9",
																				"nodeType": "YulIf",
																				"src": "6126:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6325:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "6325:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6339:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "6339:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6347:1:9",
																											"nodeType": "YulLiteral",
																											"src": "6347:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6335:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "6335:3:9"
																									},
																									"nativeSrc": "6335:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "6335:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6351:1:9",
																									"nodeType": "YulLiteral",
																									"src": "6351:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6331:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "6331:3:9"
																							},
																							"nativeSrc": "6331:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6331:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6318:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6318:6:9"
																					},
																					"nativeSrc": "6318:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6318:36:9"
																				},
																				"nativeSrc": "6318:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "6318:36:9"
																			}
																		]
																	},
																	"nativeSrc": "5746:618:9",
																	"nodeType": "YulCase",
																	"src": "5746:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5751:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5751:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6381:222:9",
																		"nodeType": "YulBlock",
																		"src": "6381:222:9",
																		"statements": [
																			{
																				"nativeSrc": "6395:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6395:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6408:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6408:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6399:5:9",
																						"nodeType": "YulTypedName",
																						"src": "6399:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6432:67:9",
																					"nodeType": "YulBlock",
																					"src": "6432:67:9",
																					"statements": [
																						{
																							"nativeSrc": "6450:35:9",
																							"nodeType": "YulAssignment",
																							"src": "6450:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6469:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "6469:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6474:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "6474:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6465:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "6465:3:9"
																										},
																										"nativeSrc": "6465:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6465:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6459:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6459:5:9"
																								},
																								"nativeSrc": "6459:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6459:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6450:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6450:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6425:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "6425:6:9"
																				},
																				"nativeSrc": "6422:77:9",
																				"nodeType": "YulIf",
																				"src": "6422:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6519:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "6519:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6578:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6578:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6585:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "6585:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6525:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "6525:52:9"
																							},
																							"nativeSrc": "6525:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6525:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6512:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6512:6:9"
																					},
																					"nativeSrc": "6512:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6512:81:9"
																				},
																				"nativeSrc": "6512:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "6512:81:9"
																			}
																		]
																	},
																	"nativeSrc": "6373:230:9",
																	"nodeType": "YulCase",
																	"src": "6373:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5726:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5726:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5734:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5734:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5723:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5723:2:9"
																},
																"nativeSrc": "5723:14:9",
																"nodeType": "YulFunctionCall",
																"src": "5723:14:9"
															},
															"nativeSrc": "5716:887:9",
															"nodeType": "YulSwitch",
															"src": "5716:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5214:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5295:4:9",
														"nodeType": "YulTypedName",
														"src": "5295:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5301:3:9",
														"nodeType": "YulTypedName",
														"src": "5301:3:9",
														"type": ""
													}
												],
												"src": "5214:1395:9"
											},
											{
												"body": {
													"nativeSrc": "6680:53:9",
													"nodeType": "YulBlock",
													"src": "6680:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6697:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6697:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6720:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6720:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6702:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "6702:17:9"
																		},
																		"nativeSrc": "6702:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6702:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6690:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6690:6:9"
																},
																"nativeSrc": "6690:37:9",
																"nodeType": "YulFunctionCall",
																"src": "6690:37:9"
															},
															"nativeSrc": "6690:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "6690:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6615:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6668:5:9",
														"nodeType": "YulTypedName",
														"src": "6668:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6675:3:9",
														"nodeType": "YulTypedName",
														"src": "6675:3:9",
														"type": ""
													}
												],
												"src": "6615:118:9"
											},
											{
												"body": {
													"nativeSrc": "6837:124:9",
													"nodeType": "YulBlock",
													"src": "6837:124:9",
													"statements": [
														{
															"nativeSrc": "6847:26:9",
															"nodeType": "YulAssignment",
															"src": "6847:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6859:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6859:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6870:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6870:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6855:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6855:3:9"
																},
																"nativeSrc": "6855:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6855:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6847:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6847:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6927:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6927:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6940:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6940:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6951:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6951:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6936:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6936:3:9"
																		},
																		"nativeSrc": "6936:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6936:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6883:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6883:43:9"
																},
																"nativeSrc": "6883:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6883:71:9"
															},
															"nativeSrc": "6883:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6883:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6739:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6809:9:9",
														"nodeType": "YulTypedName",
														"src": "6809:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6821:6:9",
														"nodeType": "YulTypedName",
														"src": "6821:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6832:4:9",
														"nodeType": "YulTypedName",
														"src": "6832:4:9",
														"type": ""
													}
												],
												"src": "6739:222:9"
											},
											{
												"body": {
													"nativeSrc": "6995:152:9",
													"nodeType": "YulBlock",
													"src": "6995:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7012:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7012:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7015:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7015:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7005:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7005:6:9"
																},
																"nativeSrc": "7005:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7005:88:9"
															},
															"nativeSrc": "7005:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7005:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7109:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7109:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7112:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7112:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7102:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7102:6:9"
																},
																"nativeSrc": "7102:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7102:15:9"
															},
															"nativeSrc": "7102:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7102:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7133:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7133:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7136:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7136:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7126:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7126:6:9"
																},
																"nativeSrc": "7126:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7126:15:9"
															},
															"nativeSrc": "7126:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7126:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6967:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6967:180:9"
											},
											{
												"body": {
													"nativeSrc": "7197:147:9",
													"nodeType": "YulBlock",
													"src": "7197:147:9",
													"statements": [
														{
															"nativeSrc": "7207:25:9",
															"nodeType": "YulAssignment",
															"src": "7207:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7230:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7230:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7212:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7212:17:9"
																},
																"nativeSrc": "7212:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7212:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7207:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7207:1:9"
																}
															]
														},
														{
															"nativeSrc": "7241:25:9",
															"nodeType": "YulAssignment",
															"src": "7241:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7264:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7264:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7246:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7246:17:9"
																},
																"nativeSrc": "7246:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7246:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7241:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7241:1:9"
																}
															]
														},
														{
															"nativeSrc": "7275:16:9",
															"nodeType": "YulAssignment",
															"src": "7275:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7286:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7286:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7289:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7289:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7282:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7282:3:9"
																},
																"nativeSrc": "7282:9:9",
																"nodeType": "YulFunctionCall",
																"src": "7282:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7275:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7275:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7315:22:9",
																"nodeType": "YulBlock",
																"src": "7315:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7317:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7317:16:9"
																			},
																			"nativeSrc": "7317:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7317:18:9"
																		},
																		"nativeSrc": "7317:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7317:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7307:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7307:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7310:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7310:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7304:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7304:2:9"
																},
																"nativeSrc": "7304:10:9",
																"nodeType": "YulFunctionCall",
																"src": "7304:10:9"
															},
															"nativeSrc": "7301:36:9",
															"nodeType": "YulIf",
															"src": "7301:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7153:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7184:1:9",
														"nodeType": "YulTypedName",
														"src": "7184:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7187:1:9",
														"nodeType": "YulTypedName",
														"src": "7187:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7193:3:9",
														"nodeType": "YulTypedName",
														"src": "7193:3:9",
														"type": ""
													}
												],
												"src": "7153:191:9"
											},
											{
												"body": {
													"nativeSrc": "7415:53:9",
													"nodeType": "YulBlock",
													"src": "7415:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7432:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7432:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7455:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7455:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7437:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "7437:17:9"
																		},
																		"nativeSrc": "7437:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7437:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7425:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7425:6:9"
																},
																"nativeSrc": "7425:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7425:37:9"
															},
															"nativeSrc": "7425:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "7425:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7350:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7403:5:9",
														"nodeType": "YulTypedName",
														"src": "7403:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7410:3:9",
														"nodeType": "YulTypedName",
														"src": "7410:3:9",
														"type": ""
													}
												],
												"src": "7350:118:9"
											},
											{
												"body": {
													"nativeSrc": "7628:288:9",
													"nodeType": "YulBlock",
													"src": "7628:288:9",
													"statements": [
														{
															"nativeSrc": "7638:26:9",
															"nodeType": "YulAssignment",
															"src": "7638:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7650:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7650:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7661:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7661:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7646:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7646:3:9"
																},
																"nativeSrc": "7646:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7646:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7638:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7638:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7718:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7718:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7731:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7731:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7742:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7742:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7727:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7727:3:9"
																		},
																		"nativeSrc": "7727:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7727:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7674:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7674:43:9"
																},
																"nativeSrc": "7674:71:9",
																"nodeType": "YulFunctionCall",
																"src": "7674:71:9"
															},
															"nativeSrc": "7674:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "7674:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7799:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7799:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7812:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7812:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7823:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7823:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7808:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7808:3:9"
																		},
																		"nativeSrc": "7808:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7808:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7755:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7755:43:9"
																},
																"nativeSrc": "7755:72:9",
																"nodeType": "YulFunctionCall",
																"src": "7755:72:9"
															},
															"nativeSrc": "7755:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "7755:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7881:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7881:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7894:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7894:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7905:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7905:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7890:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7890:3:9"
																		},
																		"nativeSrc": "7890:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7890:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7837:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7837:43:9"
																},
																"nativeSrc": "7837:72:9",
																"nodeType": "YulFunctionCall",
																"src": "7837:72:9"
															},
															"nativeSrc": "7837:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "7837:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7474:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7584:9:9",
														"nodeType": "YulTypedName",
														"src": "7584:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7596:6:9",
														"nodeType": "YulTypedName",
														"src": "7596:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7604:6:9",
														"nodeType": "YulTypedName",
														"src": "7604:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7612:6:9",
														"nodeType": "YulTypedName",
														"src": "7612:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7623:4:9",
														"nodeType": "YulTypedName",
														"src": "7623:4:9",
														"type": ""
													}
												],
												"src": "7474:442:9"
											},
											{
												"body": {
													"nativeSrc": "8020:124:9",
													"nodeType": "YulBlock",
													"src": "8020:124:9",
													"statements": [
														{
															"nativeSrc": "8030:26:9",
															"nodeType": "YulAssignment",
															"src": "8030:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8042:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8042:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8053:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8053:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8038:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8038:3:9"
																},
																"nativeSrc": "8038:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8038:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8030:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8030:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8110:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8110:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8123:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8123:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8134:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8134:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8119:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8119:3:9"
																		},
																		"nativeSrc": "8119:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8119:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8066:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "8066:43:9"
																},
																"nativeSrc": "8066:71:9",
																"nodeType": "YulFunctionCall",
																"src": "8066:71:9"
															},
															"nativeSrc": "8066:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "8066:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7922:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7992:9:9",
														"nodeType": "YulTypedName",
														"src": "7992:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8004:6:9",
														"nodeType": "YulTypedName",
														"src": "8004:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8015:4:9",
														"nodeType": "YulTypedName",
														"src": "8015:4:9",
														"type": ""
													}
												],
												"src": "7922:222:9"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405269d3c21bcecceda10000006007556a201fcafc2577d29850000060085566038d7ea4c6800060095566b3697b81284000600a555f600b556a0fb768105935a2f3000000600c556a854fdabd6aa1d32fb00000600d5566b3697b81284000600e5567016345785d8a0000600f555f6010555f60115f6101000a81548160ff02191690836002811115610098576100976105b2565b5b021790555062ed4e006014556301e133806015553480156100b7575f80fd5b50604051613ddd380380613ddd83398181016040528101906100d9919061063d565b336040518060400160405280600881526020017f426574746f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4245545400000000000000000000000000000000000000000000000000000000815250816003908161015591906108a2565b50806004908161016591906108a2565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101d8575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101cf9190610980565b60405180910390fd5b6101e78161025160201b60201c565b50600160068190555061020b306aa56fa5b99019a5c800000061031460201b60201c565b8060165f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610a56565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610384575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161037b9190610980565b60405180910390fd5b6103955f838361039960201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103e9578060025f8282546103dd91906109c6565b925050819055506104b7565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610472578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161046993929190610a08565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104fe578060025f8282540392505081905550610548565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105a59190610a3d565b60405180910390a3505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61060c826105e3565b9050919050565b61061c81610602565b8114610626575f80fd5b50565b5f8151905061063781610613565b92915050565b5f60208284031215610652576106516105df565b5b5f61065f84828501610629565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806106e357607f821691505b6020821081036106f6576106f561069f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107587fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261071d565b610762868361071d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6107a66107a161079c8461077a565b610783565b61077a565b9050919050565b5f819050919050565b6107bf8361078c565b6107d36107cb826107ad565b848454610729565b825550505050565b5f90565b6107e76107db565b6107f28184846107b6565b505050565b5b818110156108155761080a5f826107df565b6001810190506107f8565b5050565b601f82111561085a5761082b816106fc565b6108348461070e565b81016020851015610843578190505b61085761084f8561070e565b8301826107f7565b50505b505050565b5f82821c905092915050565b5f61087a5f198460080261085f565b1980831691505092915050565b5f610892838361086b565b9150826002028217905092915050565b6108ab82610668565b67ffffffffffffffff8111156108c4576108c3610672565b5b6108ce82546106cc565b6108d9828285610819565b5f60209050601f83116001811461090a575f84156108f8578287015190505b6109028582610887565b865550610969565b601f198416610918866106fc565b5f5b8281101561093f5784890151825560018201915060208501945060208101905061091a565b8683101561095c5784890151610958601f89168261086b565b8355505b6001600288020188555050505b505050505050565b61097a81610602565b82525050565b5f6020820190506109935f830184610971565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109d08261077a565b91506109db8361077a565b92508282019050808211156109f3576109f2610999565b5b92915050565b610a028161077a565b82525050565b5f606082019050610a1b5f830186610971565b610a2860208301856109f9565b610a3560408301846109f9565b949350505050565b5f602082019050610a505f8301846109f9565b92915050565b61337a80610a635f395ff3fe608060405260043610610212575f3560e01c806370a0823111610117578063b0e686301161009f578063c040e6b81161006e578063c040e6b814610787578063c552e04b146107b1578063dd62ed3e146107db578063e6bd92b914610817578063f2fde38b1461084157610252565b8063b0e68630146106df578063b68ed11f14610709578063ba20cf4c14610733578063bda956331461075d57610252565b80638f7713ff116100e65780638f7713ff146105fb578063902d55a514610625578063920168b31461064f57806395d89b4114610679578063a9059cbb146106a357610252565b806370a0823114610557578063715018a6146105935780637547c7a3146105a95780638da5cb5b146105d157610252565b80632b1cbc381161019a5780633610724e116101695780633610724e146104bb57806340f02ab6146104d757806354dd1da41461050157806355dd574c146105175780635fb3b9441461052d57610252565b80632b1cbc3814610429578063313ce5671461046557806332c85ac01461048f578063338dbf59146104a557610252565b806318160ddd116101e157806318160ddd14610347578063192399d11461037157806323b872dd146103ad57806324600fc3146103e95780632630c12f146103ff57610252565b806306fdde031461028d578063095ea7b3146102b75780630fe83bb8146102f35780631514617e1461031d57610252565b36610252576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102499061235b565b60405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102849061235b565b60405180910390fd5b348015610298575f80fd5b506102a1610869565b6040516102ae91906123d9565b60405180910390f35b3480156102c2575f80fd5b506102dd60048036038101906102d8919061248a565b6108f9565b6040516102ea91906124e2565b60405180910390f35b3480156102fe575f80fd5b5061030761091b565b604051610314919061250a565b60405180910390f35b348015610328575f80fd5b50610331610921565b60405161033e919061250a565b60405180910390f35b348015610352575f80fd5b5061035b610927565b604051610368919061250a565b60405180910390f35b34801561037c575f80fd5b5061039760048036038101906103929190612523565b610930565b6040516103a4919061250a565b60405180910390f35b3480156103b8575f80fd5b506103d360048036038101906103ce919061254e565b610945565b6040516103e091906124e2565b60405180910390f35b3480156103f4575f80fd5b506103fd610973565b005b34801561040a575f80fd5b506104136109d8565b60405161042091906125f9565b60405180910390f35b348015610434575f80fd5b5061044f600480360381019061044a9190612523565b6109fd565b60405161045c919061250a565b60405180910390f35b348015610470575f80fd5b50610479610a12565b604051610486919061262d565b60405180910390f35b34801561049a575f80fd5b506104a3610a1a565b005b3480156104b0575f80fd5b506104b9610aa1565b005b6104d560048036038101906104d09190612646565b610b49565b005b3480156104e2575f80fd5b506104eb6110e1565b6040516104f8919061250a565b60405180910390f35b34801561050c575f80fd5b506105156110e7565b005b348015610522575f80fd5b5061052b6112da565b005b348015610538575f80fd5b506105416113c9565b60405161054e919061250a565b60405180910390f35b348015610562575f80fd5b5061057d60048036038101906105789190612523565b6113cf565b60405161058a919061250a565b60405180910390f35b34801561059e575f80fd5b506105a7611414565b005b3480156105b4575f80fd5b506105cf60048036038101906105ca9190612646565b611427565b005b3480156105dc575f80fd5b506105e5611646565b6040516105f29190612680565b60405180910390f35b348015610606575f80fd5b5061060f61166e565b60405161061c919061250a565b60405180910390f35b348015610630575f80fd5b50610639611674565b604051610646919061250a565b60405180910390f35b34801561065a575f80fd5b50610663611683565b604051610670919061250a565b60405180910390f35b348015610684575f80fd5b5061068d611689565b60405161069a91906123d9565b60405180910390f35b3480156106ae575f80fd5b506106c960048036038101906106c4919061248a565b611719565b6040516106d691906124e2565b60405180910390f35b3480156106ea575f80fd5b506106f361173b565b604051610700919061250a565b60405180910390f35b348015610714575f80fd5b5061071d611741565b60405161072a919061250a565b60405180910390f35b34801561073e575f80fd5b50610747611747565b604051610754919061250a565b60405180910390f35b348015610768575f80fd5b5061077161174d565b60405161077e919061250a565b60405180910390f35b348015610792575f80fd5b5061079b611753565b6040516107a8919061270c565b60405180910390f35b3480156107bc575f80fd5b506107c5611765565b6040516107d2919061250a565b60405180910390f35b3480156107e6575f80fd5b5061080160048036038101906107fc9190612725565b61176b565b60405161080e919061250a565b60405180910390f35b348015610822575f80fd5b5061082b6117ed565b604051610838919061250a565b60405180910390f35b34801561084c575f80fd5b5061086760048036038101906108629190612523565b6117f3565b005b60606003805461087890612790565b80601f01602080910402602001604051908101604052809291908181526020018280546108a490612790565b80156108ef5780601f106108c6576101008083540402835291602001916108ef565b820191905f5260205f20905b8154815290600101906020018083116108d257829003601f168201915b5050505050905090565b5f80610903611877565b905061091081858561187e565b600191505092915050565b600d5481565b60145481565b5f600254905090565b6012602052805f5260405f205f915090505481565b5f8061094f611877565b905061095c858285611890565b610967858585611922565b60019150509392505050565b61097b611a12565b610983611a99565b61098b611646565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156109cd573d5f803e3d5ffd5b506109d6611ae8565b565b60165f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6013602052805f5260405f205f915090505481565b5f6012905090565b610a22611a12565b600854600b541480610a375750600d54601054145b610a76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6d9061280a565b60405180910390fd5b5f60115f6101000a81548160ff02191690836002811115610a9a57610a99612699565b5b0217905550565b610aa9611a12565b5f6002811115610abc57610abb612699565b5b60115f9054906101000a900460ff166002811115610add57610adc612699565b5b14610b1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1490612898565b60405180910390fd5b600160115f6101000a81548160ff02191690836002811115610b4257610b41612699565b5b0217905550565b610b51611a99565b5f6002811115610b6457610b63612699565b5b60115f9054906101000a900460ff166002811115610b8557610b84612699565b5b03610bc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbc90612900565b60405180910390fd5b5f60165f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e15f4736040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c30573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c549190612932565b90505f8111610c98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8f906129a7565b60405180910390fd5b5f60016002811115610cad57610cac612699565b5b60115f9054906101000a900460ff166002811115610cce57610ccd612699565b5b03610f0057600854600b5410610d19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1090612a0f565b60405180910390fd5b610d4e610d49670de0b6b3a7640000610d3b8587611af290919063ffffffff16565b611b0790919063ffffffff16565b611b1c565b9050610d6581600b54611cfa90919063ffffffff16565b600b81905550600854600b541115610db2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da990612a9d565b60405180910390fd5b610e028160125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611cfa90919063ffffffff16565b60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610e6c601454610e5e60155442611cfa90919063ffffffff16565b611cfa90919063ffffffff16565b60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167f8fa81bb0702332ea2a0aee44bb9e4d359cf4a2c5a820dd59d9129369bdbca73f82604051610ef3919061250a565b60405180910390a26110d4565b600280811115610f1357610f12612699565b5b60115f9054906101000a900460ff166002811115610f3457610f33612699565b5b036110d357600d5460105410610f7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7690612b05565b60405180910390fd5b68056bc75e2d631000008310158015610fa1575068a2a15d09519be000008311155b610fe0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd790612b6d565b60405180910390fd5b611015611010670de0b6b3a76400006110028587611af290919063ffffffff16565b611b0790919063ffffffff16565b611d0f565b905061102c81601054611cfa90919063ffffffff16565b601081905550600d546010541115611079576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107090612bd5565b60405180910390fd5b611084303383611922565b3373ffffffffffffffffffffffffffffffffffffffff167f550498dc565cc74203b9d14cba907c9f60ceefe26e82b37df98f6cb98529cf19826040516110ca919061250a565b60405180910390a25b5b50506110de611ae8565b50565b60155481565b6110ef611a99565b60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205442101561116f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116690612c63565b60405180910390fd5b5f60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116111f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e990612ccb565b60405180910390fd5b5f60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611281303383611922565b3373ffffffffffffffffffffffffffffffffffffffff167f6bc5063c7239b75c8bf325a2a2238f726fada322163996bb6c93d5594fb119f0826040516112c7919061250a565b60405180910390a2506112d8611ae8565b565b6112e2611a12565b600160028111156112f6576112f5612699565b5b60115f9054906101000a900460ff16600281111561131757611316612699565b5b14611357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134e90612d59565b60405180910390fd5b600854600b541461139d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139490612dc1565b60405180910390fd5b600260115f6101000a81548160ff021916908360028111156113c2576113c1612699565b5b0217905550565b600b5481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61141c611a12565b6114255f611e1b565b565b61142f611a99565b5f8111611471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146890612e29565b60405180910390fd5b8061147b336113cf565b10156114bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b390612e91565b60405180910390fd5b6114c7333083611922565b6115178160125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611cfa90919063ffffffff16565b60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061156d60155442611cfa90919063ffffffff16565b60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167fdd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc8260135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054604051611633929190612eaf565b60405180910390a2611643611ae8565b50565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600f5481565b6aa56fa5b99019a5c800000081565b600e5481565b60606004805461169890612790565b80601f01602080910402602001604051908101604052809291908181526020018280546116c490612790565b801561170f5780601f106116e65761010080835404028352916020019161170f565b820191905f5260205f20905b8154815290600101906020018083116116f257829003601f168201915b5050505050905090565b5f80611723611877565b9050611730818585611922565b600191505092915050565b60095481565b60105481565b60075481565b600a5481565b60115f9054906101000a900460ff1681565b60085481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600c5481565b6117fb611a12565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361186b575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016118629190612680565b60405180910390fd5b61187481611e1b565b50565b5f33905090565b61188b8383836001611ede565b505050565b5f61189b848461176b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461191c578181101561190d578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161190493929190612ed6565b60405180910390fd5b61191b84848484035f611ede565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611992575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016119899190612680565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a02575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016119f99190612680565b60405180910390fd5b611a0d8383836120ad565b505050565b611a1a611877565b73ffffffffffffffffffffffffffffffffffffffff16611a38611646565b73ffffffffffffffffffffffffffffffffffffffff1614611a9757611a5b611877565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611a8e9190612680565b60405180910390fd5b565b600260065403611ade576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad590612f55565b60405180910390fd5b6002600681905550565b6001600681905550565b5f8183611aff9190612fa0565b905092915050565b5f8183611b14919061300e565b905092915050565b5f808211611b5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b56906130ae565b60405180910390fd5b5f60085411611ba3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9a9061313c565b60405180910390fd5b600854600b541115611bea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611be1906131ca565b60405180910390fd5b5f611c02600954600a546122c690919063ffffffff16565b90505f611c42611c31600854611c23600b5486611af290919063ffffffff16565b611b0790919063ffffffff16565b600954611cfa90919063ffffffff16565b90506009548110158015611c585750600a548111155b611c97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8e90613232565b60405180910390fd5b5f611cab8286611b0790919063ffffffff16565b90505f8111611cef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ce6906132c0565b60405180910390fd5b809350505050919050565b5f8183611d0791906132de565b905092915050565b5f80611d64611d53600d54611d45601054611d37600e54600f546122c690919063ffffffff16565b611af290919063ffffffff16565b611b0790919063ffffffff16565b600e54611cfa90919063ffffffff16565b9050600e548110158015611d7a5750600f548111155b611db9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611db090613232565b60405180910390fd5b5f611dcd8285611b0790919063ffffffff16565b90505f8111611e11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e08906132c0565b60405180910390fd5b8092505050919050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611f4e575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611f459190612680565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611fbe575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611fb59190612680565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156120a7578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161209e919061250a565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036120fd578060025f8282546120f191906132de565b925050819055506121cb565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015612186578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161217d93929190612ed6565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612212578060025f828254039250508190555061225c565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516122b9919061250a565b60405180910390a3505050565b5f81836122d39190613311565b905092915050565b5f82825260208201905092915050565b7f44697265637420455448207472616e7366657273206e6f7420616c6c6f7765645f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f6123456021836122db565b9150612350826122eb565b604082019050919050565b5f6020820190508181035f83015261237281612339565b9050919050565b5f81519050919050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6123ab82612379565b6123b581856122db565b93506123c5818560208601612383565b6123ce81612391565b840191505092915050565b5f6020820190508181035f8301526123f181846123a1565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f612426826123fd565b9050919050565b6124368161241c565b8114612440575f80fd5b50565b5f813590506124518161242d565b92915050565b5f819050919050565b61246981612457565b8114612473575f80fd5b50565b5f8135905061248481612460565b92915050565b5f80604083850312156124a05761249f6123f9565b5b5f6124ad85828601612443565b92505060206124be85828601612476565b9150509250929050565b5f8115159050919050565b6124dc816124c8565b82525050565b5f6020820190506124f55f8301846124d3565b92915050565b61250481612457565b82525050565b5f60208201905061251d5f8301846124fb565b92915050565b5f60208284031215612538576125376123f9565b5b5f61254584828501612443565b91505092915050565b5f805f60608486031215612565576125646123f9565b5b5f61257286828701612443565b935050602061258386828701612443565b925050604061259486828701612476565b9150509250925092565b5f819050919050565b5f6125c16125bc6125b7846123fd565b61259e565b6123fd565b9050919050565b5f6125d2826125a7565b9050919050565b5f6125e3826125c8565b9050919050565b6125f3816125d9565b82525050565b5f60208201905061260c5f8301846125ea565b92915050565b5f60ff82169050919050565b61262781612612565b82525050565b5f6020820190506126405f83018461261e565b92915050565b5f6020828403121561265b5761265a6123f9565b5b5f61266884828501612476565b91505092915050565b61267a8161241c565b82525050565b5f6020820190506126935f830184612671565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600381106126d7576126d6612699565b5b50565b5f8190506126e7826126c6565b919050565b5f6126f6826126da565b9050919050565b612706816126ec565b82525050565b5f60208201905061271f5f8301846126fd565b92915050565b5f806040838503121561273b5761273a6123f9565b5b5f61274885828601612443565b925050602061275985828601612443565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806127a757607f821691505b6020821081036127ba576127b9612763565b5b50919050565b7f53616c65732074617267657473206e6f7420796574206d65742e0000000000005f82015250565b5f6127f4601a836122db565b91506127ff826127c0565b602082019050919050565b5f6020820190508181035f830152612821816127e8565b9050919050565b7f507269766174652053616c652068617320616c726561647920737461727465645f8201527f206f7220636f6e636c756465642e000000000000000000000000000000000000602082015250565b5f612882602e836122db565b915061288d82612828565b604082019050919050565b5f6020820190508181035f8301526128af81612876565b9050919050565b7f4e6f2073616c65206973206163746976652e00000000000000000000000000005f82015250565b5f6128ea6012836122db565b91506128f5826128b6565b602082019050919050565b5f6020820190508181035f830152612917816128de565b9050919050565b5f8151905061292c81612460565b92915050565b5f60208284031215612947576129466123f9565b5b5f6129548482850161291e565b91505092915050565b7f496e76616c69642070726963652066726f6d206f7261636c65000000000000005f82015250565b5f6129916019836122db565b915061299c8261295d565b602082019050919050565b5f6020820190508181035f8301526129be81612985565b9050919050565b7f507269766174652053616c6520736f6c64206f75742e000000000000000000005f82015250565b5f6129f96016836122db565b9150612a04826129c5565b602082019050919050565b5f6020820190508181035f830152612a26816129ed565b9050919050565b7f4578636565647320507269766174652053616c6520746f6b656e206c696d69745f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f612a876021836122db565b9150612a9282612a2d565b604082019050919050565b5f6020820190508181035f830152612ab481612a7b565b9050919050565b7f5072652d53616c6520736f6c64206f75742e00000000000000000000000000005f82015250565b5f612aef6012836122db565b9150612afa82612abb565b602082019050919050565b5f6020820190508181035f830152612b1c81612ae3565b9050919050565b7f507572636861736520616d6f756e74206f7574206f66206c696d6974732e00005f82015250565b5f612b57601e836122db565b9150612b6282612b23565b602082019050919050565b5f6020820190508181035f830152612b8481612b4b565b9050919050565b7f45786365656473205072652d53616c6520746f6b656e206c696d69742e0000005f82015250565b5f612bbf601d836122db565b9150612bca82612b8b565b602082019050919050565b5f6020820190508181035f830152612bec81612bb3565b9050919050565b7f56657374696e6720706572696f64206e6f742079657420636f6d706c657465645f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f612c4d6021836122db565b9150612c5882612bf3565b604082019050919050565b5f6020820190508181035f830152612c7a81612c41565b9050919050565b7f4e6f2076657374656420746f6b656e7320746f2072656c6561736500000000005f82015250565b5f612cb5601b836122db565b9150612cc082612c81565b602082019050919050565b5f6020820190508181035f830152612ce281612ca9565b9050919050565b7f507269766174652053616c652073686f756c6420626520636f6e636c756465645f8201527f2066697273742e00000000000000000000000000000000000000000000000000602082015250565b5f612d436027836122db565b9150612d4e82612ce9565b604082019050919050565b5f6020820190508181035f830152612d7081612d37565b9050919050565b7f507269766174652053616c6520746172676574206e6f7420726561636865642e5f82015250565b5f612dab6020836122db565b9150612db682612d77565b602082019050919050565b5f6020820190508181035f830152612dd881612d9f565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f612e13601d836122db565b9150612e1e82612ddf565b602082019050919050565b5f6020820190508181035f830152612e4081612e07565b9050919050565b7f496e73756666696369656e742062616c616e636520746f207374616b650000005f82015250565b5f612e7b601d836122db565b9150612e8682612e47565b602082019050919050565b5f6020820190508181035f830152612ea881612e6f565b9050919050565b5f604082019050612ec25f8301856124fb565b612ecf60208301846124fb565b9392505050565b5f606082019050612ee95f830186612671565b612ef660208301856124fb565b612f0360408301846124fb565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612f3f601f836122db565b9150612f4a82612f0b565b602082019050919050565b5f6020820190508181035f830152612f6c81612f33565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612faa82612457565b9150612fb583612457565b9250828202612fc381612457565b91508282048414831517612fda57612fd9612f73565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61301882612457565b915061302383612457565b92508261303357613032612fe1565b5b828204905092915050565b7f55534420616d6f756e74206d7573742062652067726561746572207468616e205f8201527f3000000000000000000000000000000000000000000000000000000000000000602082015250565b5f6130986021836122db565b91506130a38261303e565b604082019050919050565b5f6020820190508181035f8301526130c58161308c565b9050919050565b7f507269766174652053616c6520746f6b656e73206d75737420626520677265615f8201527f746572207468616e203000000000000000000000000000000000000000000000602082015250565b5f613126602a836122db565b9150613131826130cc565b604082019050919050565b5f6020820190508181035f8301526131538161311a565b9050919050565b7f507269766174652053616c6520736f6c6420746f6b656e7320657863656564205f8201527f617661696c61626c6520746f6b656e7300000000000000000000000000000000602082015250565b5f6131b46030836122db565b91506131bf8261315a565b604082019050919050565b5f6020820190508181035f8301526131e1816131a8565b9050919050565b7f496e76616c696420746f6b656e2070726963652063616c63756c6174656400005f82015250565b5f61321c601e836122db565b9150613227826131e8565b602082019050919050565b5f6020820190508181035f83015261324981613210565b9050919050565b7f43616c63756c6174656420746f6b656e73206d757374206265206772656174655f8201527f72207468616e2030000000000000000000000000000000000000000000000000602082015250565b5f6132aa6028836122db565b91506132b582613250565b604082019050919050565b5f6020820190508181035f8301526132d78161329e565b9050919050565b5f6132e882612457565b91506132f383612457565b925082820190508082111561330b5761330a612f73565b5b92915050565b5f61331b82612457565b915061332683612457565b925082820390508181111561333e5761333d612f73565b5b9291505056fea26469706673582212207e52ffddca16469ac02c372fcb7231cec9398546de86c6ce0bc957967aa9008164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x7 SSTORE PUSH11 0x201FCAFC2577D298500000 PUSH1 0x8 SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0x9 SSTORE PUSH7 0xB3697B81284000 PUSH1 0xA SSTORE PUSH0 PUSH1 0xB SSTORE PUSH11 0xFB768105935A2F3000000 PUSH1 0xC SSTORE PUSH11 0x854FDABD6AA1D32FB00000 PUSH1 0xD SSTORE PUSH7 0xB3697B81284000 PUSH1 0xE SSTORE PUSH8 0x16345785D8A0000 PUSH1 0xF SSTORE PUSH0 PUSH1 0x10 SSTORE PUSH0 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x98 JUMPI PUSH2 0x97 PUSH2 0x5B2 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH3 0xED4E00 PUSH1 0x14 SSTORE PUSH4 0x1E13380 PUSH1 0x15 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0xB7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3DDD CODESIZE SUB DUP1 PUSH2 0x3DDD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x63D JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426574746F6B656E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4245545400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x8A2 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x8A2 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E7 DUP2 PUSH2 0x251 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x20B ADDRESS PUSH11 0xA56FA5B99019A5C8000000 PUSH2 0x314 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x16 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xA56 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x384 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x395 PUSH0 DUP4 DUP4 PUSH2 0x399 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3E9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x9C6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4B7 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x472 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x469 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4FE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x548 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x5A5 SWAP2 SWAP1 PUSH2 0xA3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x60C DUP3 PUSH2 0x5E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x61C DUP2 PUSH2 0x602 JUMP JUMPDEST DUP2 EQ PUSH2 0x626 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x637 DUP2 PUSH2 0x613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x652 JUMPI PUSH2 0x651 PUSH2 0x5DF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x65F DUP5 DUP3 DUP6 ADD PUSH2 0x629 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x6E3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6F6 JUMPI PUSH2 0x6F5 PUSH2 0x69F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x758 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x762 DUP7 DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7A6 PUSH2 0x7A1 PUSH2 0x79C DUP5 PUSH2 0x77A JUMP JUMPDEST PUSH2 0x783 JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7BF DUP4 PUSH2 0x78C JUMP JUMPDEST PUSH2 0x7D3 PUSH2 0x7CB DUP3 PUSH2 0x7AD JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x729 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x7E7 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x7F2 DUP2 DUP5 DUP5 PUSH2 0x7B6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x815 JUMPI PUSH2 0x80A PUSH0 DUP3 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7F8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x85A JUMPI PUSH2 0x82B DUP2 PUSH2 0x6FC JUMP JUMPDEST PUSH2 0x834 DUP5 PUSH2 0x70E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x843 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x857 PUSH2 0x84F DUP6 PUSH2 0x70E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x7F7 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x87A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x85F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x892 DUP4 DUP4 PUSH2 0x86B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8AB DUP3 PUSH2 0x668 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8C4 JUMPI PUSH2 0x8C3 PUSH2 0x672 JUMP JUMPDEST JUMPDEST PUSH2 0x8CE DUP3 SLOAD PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x8D9 DUP3 DUP3 DUP6 PUSH2 0x819 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x90A JUMPI PUSH0 DUP5 ISZERO PUSH2 0x8F8 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x902 DUP6 DUP3 PUSH2 0x887 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x969 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x918 DUP7 PUSH2 0x6FC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x93F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x91A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x95C JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x958 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x86B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x97A DUP2 PUSH2 0x602 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x993 PUSH0 DUP4 ADD DUP5 PUSH2 0x971 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x9D0 DUP3 PUSH2 0x77A JUMP JUMPDEST SWAP2 POP PUSH2 0x9DB DUP4 PUSH2 0x77A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9F3 JUMPI PUSH2 0x9F2 PUSH2 0x999 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA02 DUP2 PUSH2 0x77A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA1B PUSH0 DUP4 ADD DUP7 PUSH2 0x971 JUMP JUMPDEST PUSH2 0xA28 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9F9 JUMP JUMPDEST PUSH2 0xA35 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9F9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA50 PUSH0 DUP4 ADD DUP5 PUSH2 0x9F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x337A DUP1 PUSH2 0xA63 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x212 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0xB0E68630 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xC040E6B8 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x787 JUMPI DUP1 PUSH4 0xC552E04B EQ PUSH2 0x7B1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xE6BD92B9 EQ PUSH2 0x817 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x841 JUMPI PUSH2 0x252 JUMP JUMPDEST DUP1 PUSH4 0xB0E68630 EQ PUSH2 0x6DF JUMPI DUP1 PUSH4 0xB68ED11F EQ PUSH2 0x709 JUMPI DUP1 PUSH4 0xBA20CF4C EQ PUSH2 0x733 JUMPI DUP1 PUSH4 0xBDA95633 EQ PUSH2 0x75D JUMPI PUSH2 0x252 JUMP JUMPDEST DUP1 PUSH4 0x8F7713FF GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x8F7713FF EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0x920168B3 EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x679 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6A3 JUMPI PUSH2 0x252 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5D1 JUMPI PUSH2 0x252 JUMP JUMPDEST DUP1 PUSH4 0x2B1CBC38 GT PUSH2 0x19A JUMPI DUP1 PUSH4 0x3610724E GT PUSH2 0x169 JUMPI DUP1 PUSH4 0x3610724E EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x40F02AB6 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x54DD1DA4 EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0x55DD574C EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x5FB3B944 EQ PUSH2 0x52D JUMPI PUSH2 0x252 JUMP JUMPDEST DUP1 PUSH4 0x2B1CBC38 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x32C85AC0 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x338DBF59 EQ PUSH2 0x4A5 JUMPI PUSH2 0x252 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x192399D1 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x2630C12F EQ PUSH2 0x3FF JUMPI PUSH2 0x252 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xFE83BB8 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x1514617E EQ PUSH2 0x31D JUMPI PUSH2 0x252 JUMP JUMPDEST CALLDATASIZE PUSH2 0x252 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x249 SWAP1 PUSH2 0x235B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x284 SWAP1 PUSH2 0x235B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x869 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x248A JUMP JUMPDEST PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35B PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x397 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH2 0x973 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x25F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x479 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A3 PUSH2 0xA1A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B9 PUSH2 0xAA1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x2646 JUMP JUMPDEST PUSH2 0xB49 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EB PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x515 PUSH2 0x10E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x522 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x52B PUSH2 0x12DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x541 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x562 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x57D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x578 SWAP2 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A7 PUSH2 0x1414 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x2646 JUMP JUMPDEST PUSH2 0x1427 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E5 PUSH2 0x1646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F2 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x606 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60F PUSH2 0x166E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x630 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x639 PUSH2 0x1674 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x663 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x670 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x684 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x68D PUSH2 0x1689 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x248A JUMP JUMPDEST PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F3 PUSH2 0x173B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x714 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x71D PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72A SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x747 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x768 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x771 PUSH2 0x174D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77E SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x792 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x79B PUSH2 0x1753 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C5 PUSH2 0x1765 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D2 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x801 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0x2725 JUMP JUMPDEST PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x822 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x82B PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x838 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x867 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x862 SWAP2 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x17F3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x878 SWAP1 PUSH2 0x2790 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8A4 SWAP1 PUSH2 0x2790 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8EF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8EF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8D2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x903 PUSH2 0x1877 JUMP JUMPDEST SWAP1 POP PUSH2 0x910 DUP2 DUP6 DUP6 PUSH2 0x187E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x94F PUSH2 0x1877 JUMP JUMPDEST SWAP1 POP PUSH2 0x95C DUP6 DUP3 DUP6 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x967 DUP6 DUP6 DUP6 PUSH2 0x1922 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x97B PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x983 PUSH2 0x1A99 JUMP JUMPDEST PUSH2 0x98B PUSH2 0x1646 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9CD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0x9D6 PUSH2 0x1AE8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x16 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA22 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xB SLOAD EQ DUP1 PUSH2 0xA37 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x10 SLOAD EQ JUMPDEST PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6D SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA9A JUMPI PUSH2 0xA99 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xAA9 PUSH2 0x1A12 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xABC JUMPI PUSH2 0xABB PUSH2 0x2699 JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xADD JUMPI PUSH2 0xADC PUSH2 0x2699 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB14 SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB42 JUMPI PUSH2 0xB41 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB51 PUSH2 0x1A99 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB64 JUMPI PUSH2 0xB63 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB85 JUMPI PUSH2 0xB84 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xBC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBC SWAP1 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x16 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8E15F473 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC30 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC54 SWAP2 SWAP1 PUSH2 0x2932 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8F SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCAD JUMPI PUSH2 0xCAC PUSH2 0x2699 JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCCE JUMPI PUSH2 0xCCD PUSH2 0x2699 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xF00 JUMPI PUSH1 0x8 SLOAD PUSH1 0xB SLOAD LT PUSH2 0xD19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD10 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD4E PUSH2 0xD49 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD3B DUP6 DUP8 PUSH2 0x1AF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B1C JUMP JUMPDEST SWAP1 POP PUSH2 0xD65 DUP2 PUSH1 0xB SLOAD PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0xB SLOAD GT ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA9 SWAP1 PUSH2 0x2A9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE02 DUP2 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE6C PUSH1 0x14 SLOAD PUSH2 0xE5E PUSH1 0x15 SLOAD TIMESTAMP PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FA81BB0702332EA2A0AEE44BB9E4D359CF4A2C5A820DD59D9129369BDBCA73F DUP3 PUSH1 0x40 MLOAD PUSH2 0xEF3 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xF13 JUMPI PUSH2 0xF12 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF34 JUMPI PUSH2 0xF33 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x10D3 JUMPI PUSH1 0xD SLOAD PUSH1 0x10 SLOAD LT PUSH2 0xF7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF76 SWAP1 PUSH2 0x2B05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH9 0x56BC75E2D63100000 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0xFA1 JUMPI POP PUSH9 0xA2A15D09519BE00000 DUP4 GT ISZERO JUMPDEST PUSH2 0xFE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD7 SWAP1 PUSH2 0x2B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1015 PUSH2 0x1010 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1002 DUP6 DUP8 PUSH2 0x1AF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D0F JUMP JUMPDEST SWAP1 POP PUSH2 0x102C DUP2 PUSH1 0x10 SLOAD PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 DUP2 SWAP1 SSTORE POP PUSH1 0xD SLOAD PUSH1 0x10 SLOAD GT ISZERO PUSH2 0x1079 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1070 SWAP1 PUSH2 0x2BD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1084 ADDRESS CALLER DUP4 PUSH2 0x1922 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x550498DC565CC74203B9D14CBA907C9F60CEEFE26E82B37DF98F6CB98529CF19 DUP3 PUSH1 0x40 MLOAD PUSH2 0x10CA SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST JUMPDEST POP POP PUSH2 0x10DE PUSH2 0x1AE8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x10EF PUSH2 0x1A99 JUMP JUMPDEST PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x116F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1166 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x11F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E9 SWAP1 PUSH2 0x2CCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1281 ADDRESS CALLER DUP4 PUSH2 0x1922 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6BC5063C7239B75C8BF325A2A2238F726FADA322163996BB6C93D5594FB119F0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x12C7 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x12D8 PUSH2 0x1AE8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x12E2 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12F6 JUMPI PUSH2 0x12F5 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1317 JUMPI PUSH2 0x1316 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1357 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134E SWAP1 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xB SLOAD EQ PUSH2 0x139D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1394 SWAP1 PUSH2 0x2DC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13C2 JUMPI PUSH2 0x13C1 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141C PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x1425 PUSH0 PUSH2 0x1E1B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x142F PUSH2 0x1A99 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1468 SWAP1 PUSH2 0x2E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x147B CALLER PUSH2 0x13CF JUMP JUMPDEST LT ISZERO PUSH2 0x14BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B3 SWAP1 PUSH2 0x2E91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14C7 CALLER ADDRESS DUP4 PUSH2 0x1922 JUMP JUMPDEST PUSH2 0x1517 DUP2 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x156D PUSH1 0x15 SLOAD TIMESTAMP PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDD2A19C3BDD089CBE77C04F5655F83DE0504D6140D12C8667646F55D0557C4DC DUP3 PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1633 SWAP3 SWAP2 SWAP1 PUSH2 0x2EAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1643 PUSH2 0x1AE8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH11 0xA56FA5B99019A5C8000000 DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1698 SWAP1 PUSH2 0x2790 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16C4 SWAP1 PUSH2 0x2790 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x170F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x170F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1723 PUSH2 0x1877 JUMP JUMPDEST SWAP1 POP PUSH2 0x1730 DUP2 DUP6 DUP6 PUSH2 0x1922 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x17FB PUSH2 0x1A12 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x186B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1862 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1874 DUP2 PUSH2 0x1E1B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x188B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EDE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x189B DUP5 DUP5 PUSH2 0x176B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x191C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x190D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1904 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ED6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x191B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1EDE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1992 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1989 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A02 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F9 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0D DUP4 DUP4 DUP4 PUSH2 0x20AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A1A PUSH2 0x1877 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A38 PUSH2 0x1646 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A97 JUMPI PUSH2 0x1A5B PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8E SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1ADE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD5 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1AFF SWAP2 SWAP1 PUSH2 0x2FA0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1B14 SWAP2 SWAP1 PUSH2 0x300E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 GT PUSH2 0x1B5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B56 SWAP1 PUSH2 0x30AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SLOAD GT PUSH2 0x1BA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9A SWAP1 PUSH2 0x313C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xB SLOAD GT ISZERO PUSH2 0x1BEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE1 SWAP1 PUSH2 0x31CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1C02 PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x22C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1C42 PUSH2 0x1C31 PUSH1 0x8 SLOAD PUSH2 0x1C23 PUSH1 0xB SLOAD DUP7 PUSH2 0x1AF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x1C58 JUMPI POP PUSH1 0xA SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x1C97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8E SWAP1 PUSH2 0x3232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1CAB DUP3 DUP7 PUSH2 0x1B07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1CEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE6 SWAP1 PUSH2 0x32C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1D07 SWAP2 SWAP1 PUSH2 0x32DE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1D64 PUSH2 0x1D53 PUSH1 0xD SLOAD PUSH2 0x1D45 PUSH1 0x10 SLOAD PUSH2 0x1D37 PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH2 0x22C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1AF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xE SLOAD DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x1D7A JUMPI POP PUSH1 0xF SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x1DB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB0 SWAP1 PUSH2 0x3232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1DCD DUP3 DUP6 PUSH2 0x1B07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1E11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E08 SWAP1 PUSH2 0x32C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F4E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F45 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FBE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FB5 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x20A7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x209E SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20FD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x20F1 SWAP2 SWAP1 PUSH2 0x32DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x21CB JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2186 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ED6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2212 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x225C JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x22B9 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x22D3 SWAP2 SWAP1 PUSH2 0x3311 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x44697265637420455448207472616E7366657273206E6F7420616C6C6F776564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2345 PUSH1 0x21 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2350 DUP3 PUSH2 0x22EB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2372 DUP2 PUSH2 0x2339 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23AB DUP3 PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x23B5 DUP2 DUP6 PUSH2 0x22DB JUMP JUMPDEST SWAP4 POP PUSH2 0x23C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2383 JUMP JUMPDEST PUSH2 0x23CE DUP2 PUSH2 0x2391 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23F1 DUP2 DUP5 PUSH2 0x23A1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2426 DUP3 PUSH2 0x23FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2436 DUP2 PUSH2 0x241C JUMP JUMPDEST DUP2 EQ PUSH2 0x2440 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2451 DUP2 PUSH2 0x242D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2469 DUP2 PUSH2 0x2457 JUMP JUMPDEST DUP2 EQ PUSH2 0x2473 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2484 DUP2 PUSH2 0x2460 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24A0 JUMPI PUSH2 0x249F PUSH2 0x23F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24AD DUP6 DUP3 DUP7 ADD PUSH2 0x2443 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24BE DUP6 DUP3 DUP7 ADD PUSH2 0x2476 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24DC DUP2 PUSH2 0x24C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24F5 PUSH0 DUP4 ADD DUP5 PUSH2 0x24D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2504 DUP2 PUSH2 0x2457 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x251D PUSH0 DUP4 ADD DUP5 PUSH2 0x24FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2538 JUMPI PUSH2 0x2537 PUSH2 0x23F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2545 DUP5 DUP3 DUP6 ADD PUSH2 0x2443 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2565 JUMPI PUSH2 0x2564 PUSH2 0x23F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2572 DUP7 DUP3 DUP8 ADD PUSH2 0x2443 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2583 DUP7 DUP3 DUP8 ADD PUSH2 0x2443 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2594 DUP7 DUP3 DUP8 ADD PUSH2 0x2476 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25C1 PUSH2 0x25BC PUSH2 0x25B7 DUP5 PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x259E JUMP JUMPDEST PUSH2 0x23FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25D2 DUP3 PUSH2 0x25A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25E3 DUP3 PUSH2 0x25C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F3 DUP2 PUSH2 0x25D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x260C PUSH0 DUP4 ADD DUP5 PUSH2 0x25EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2627 DUP2 PUSH2 0x2612 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2640 PUSH0 DUP4 ADD DUP5 PUSH2 0x261E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x265B JUMPI PUSH2 0x265A PUSH2 0x23F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2668 DUP5 DUP3 DUP6 ADD PUSH2 0x2476 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x267A DUP2 PUSH2 0x241C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2693 PUSH0 DUP4 ADD DUP5 PUSH2 0x2671 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x26D7 JUMPI PUSH2 0x26D6 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x26E7 DUP3 PUSH2 0x26C6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26F6 DUP3 PUSH2 0x26DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2706 DUP2 PUSH2 0x26EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x271F PUSH0 DUP4 ADD DUP5 PUSH2 0x26FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x273B JUMPI PUSH2 0x273A PUSH2 0x23F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2748 DUP6 DUP3 DUP7 ADD PUSH2 0x2443 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2759 DUP6 DUP3 DUP7 ADD PUSH2 0x2443 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x27A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x27BA JUMPI PUSH2 0x27B9 PUSH2 0x2763 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616C65732074617267657473206E6F7420796574206D65742E000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27F4 PUSH1 0x1A DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x27FF DUP3 PUSH2 0x27C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2821 DUP2 PUSH2 0x27E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C652068617320616C72656164792073746172746564 PUSH0 DUP3 ADD MSTORE PUSH32 0x206F7220636F6E636C756465642E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2882 PUSH1 0x2E DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x288D DUP3 PUSH2 0x2828 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28AF DUP2 PUSH2 0x2876 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2073616C65206973206163746976652E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28EA PUSH1 0x12 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x28F5 DUP3 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2917 DUP2 PUSH2 0x28DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x292C DUP2 PUSH2 0x2460 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2947 JUMPI PUSH2 0x2946 PUSH2 0x23F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2954 DUP5 DUP3 DUP6 ADD PUSH2 0x291E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642070726963652066726F6D206F7261636C6500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2991 PUSH1 0x19 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x299C DUP3 PUSH2 0x295D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29BE DUP2 PUSH2 0x2985 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520736F6C64206F75742E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29F9 PUSH1 0x16 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2A04 DUP3 PUSH2 0x29C5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A26 DUP2 PUSH2 0x29ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4578636565647320507269766174652053616C6520746F6B656E206C696D6974 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A87 PUSH1 0x21 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2A92 DUP3 PUSH2 0x2A2D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AB4 DUP2 PUSH2 0x2A7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072652D53616C6520736F6C64206F75742E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AEF PUSH1 0x12 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2AFA DUP3 PUSH2 0x2ABB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B1C DUP2 PUSH2 0x2AE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507572636861736520616D6F756E74206F7574206F66206C696D6974732E0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B57 PUSH1 0x1E DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2B62 DUP3 PUSH2 0x2B23 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B84 DUP2 PUSH2 0x2B4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473205072652D53616C6520746F6B656E206C696D69742E000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BBF PUSH1 0x1D DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2BCA DUP3 PUSH2 0x2B8B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BEC DUP2 PUSH2 0x2BB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E6720706572696F64206E6F742079657420636F6D706C65746564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C4D PUSH1 0x21 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2C58 DUP3 PUSH2 0x2BF3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C7A DUP2 PUSH2 0x2C41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2076657374656420746F6B656E7320746F2072656C656173650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CB5 PUSH1 0x1B DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2CC0 DUP3 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CE2 DUP2 PUSH2 0x2CA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C652073686F756C6420626520636F6E636C75646564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2066697273742E00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D43 PUSH1 0x27 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2D4E DUP3 PUSH2 0x2CE9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D70 DUP2 PUSH2 0x2D37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520746172676574206E6F7420726561636865642E PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DAB PUSH1 0x20 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2DB6 DUP3 PUSH2 0x2D77 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DD8 DUP2 PUSH2 0x2D9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E13 PUSH1 0x1D DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2E1E DUP3 PUSH2 0x2DDF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E40 DUP2 PUSH2 0x2E07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F207374616B65000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E7B PUSH1 0x1D DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2E86 DUP3 PUSH2 0x2E47 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EA8 DUP2 PUSH2 0x2E6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EC2 PUSH0 DUP4 ADD DUP6 PUSH2 0x24FB JUMP JUMPDEST PUSH2 0x2ECF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x24FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EE9 PUSH0 DUP4 ADD DUP7 PUSH2 0x2671 JUMP JUMPDEST PUSH2 0x2EF6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x24FB JUMP JUMPDEST PUSH2 0x2F03 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x24FB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F3F PUSH1 0x1F DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2F4A DUP3 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F6C DUP2 PUSH2 0x2F33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2FAA DUP3 PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FB5 DUP4 PUSH2 0x2457 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2FC3 DUP2 PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2FDA JUMPI PUSH2 0x2FD9 PUSH2 0x2F73 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3018 DUP3 PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP PUSH2 0x3023 DUP4 PUSH2 0x2457 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3033 JUMPI PUSH2 0x3032 PUSH2 0x2FE1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55534420616D6F756E74206D7573742062652067726561746572207468616E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3098 PUSH1 0x21 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x30A3 DUP3 PUSH2 0x303E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30C5 DUP2 PUSH2 0x308C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520746F6B656E73206D7573742062652067726561 PUSH0 DUP3 ADD MSTORE PUSH32 0x746572207468616E203000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3126 PUSH1 0x2A DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x3131 DUP3 PUSH2 0x30CC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3153 DUP2 PUSH2 0x311A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520736F6C6420746F6B656E732065786365656420 PUSH0 DUP3 ADD MSTORE PUSH32 0x617661696C61626C6520746F6B656E7300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x31B4 PUSH1 0x30 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x31BF DUP3 PUSH2 0x315A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x31E1 DUP2 PUSH2 0x31A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E2070726963652063616C63756C617465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x321C PUSH1 0x1E DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x3227 DUP3 PUSH2 0x31E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3249 DUP2 PUSH2 0x3210 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C63756C6174656420746F6B656E73206D75737420626520677265617465 PUSH0 DUP3 ADD MSTORE PUSH32 0x72207468616E2030000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32AA PUSH1 0x28 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x32B5 DUP3 PUSH2 0x3250 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x32D7 DUP2 PUSH2 0x329E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x32E8 DUP3 PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP PUSH2 0x32F3 DUP4 PUSH2 0x2457 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x330B JUMPI PUSH2 0x330A PUSH2 0x2F73 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x331B DUP3 PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP PUSH2 0x3326 DUP4 PUSH2 0x2457 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x333E JUMPI PUSH2 0x333D PUSH2 0x2F73 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x52FFDDCA16469AC02C372FCB7231CEC9398546DE86C6CE0BC957967AA90081 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "379:7050:8:-:0;;;642:20;607:55;;727:21;692:56;;812:16;773:55;;893:17;856:54;;978:1;939:40;;1043:21;1012:52;;1126:22;1095:53;;1209:17;1174:52;;1288:14;1255:47;;1363:1;1328:36;;1461:14;1436:39;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1655:8;1622:41;;1708:8;1677:39;;2101:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2169:10;1896:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:2;1821:7;:22;;;;2191:34:8::2;2205:4;511:22;2191:5;;;:34;;:::i;:::-;2262:12;2235:11;;:40;;;;;;;;;;;;;;;;;;2101:222:::0;379:7050;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:3:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:180:9:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;274:117;383:1;380;373:12;520:126;557:7;597:42;590:5;586:54;575:65;;520:126;;;:::o;652:96::-;689:7;718:24;736:5;718:24;:::i;:::-;707:35;;652:96;;;:::o;754:122::-;827:24;845:5;827:24;:::i;:::-;820:5;817:35;807:63;;866:1;863;856:12;807:63;754:122;:::o;882:143::-;939:5;970:6;964:13;955:22;;986:33;1013:5;986:33;:::i;:::-;882:143;;;;:::o;1031:351::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:64;1357:7;1348:6;1337:9;1333:22;1301:64;:::i;:::-;1291:74;;1247:128;1031:351;;;;:::o;1388:99::-;1440:6;1474:5;1468:12;1458:22;;1388:99;;;:::o;1493:180::-;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:180;1727:77;1724:1;1717:88;1824:4;1821:1;1814:15;1848:4;1845:1;1838:15;1865:320;1909:6;1946:1;1940:4;1936:12;1926:22;;1993:1;1987:4;1983:12;2014:18;2004:81;;2070:4;2062:6;2058:17;2048:27;;2004:81;2132:2;2124:6;2121:14;2101:18;2098:38;2095:84;;2151:18;;:::i;:::-;2095:84;1916:269;1865:320;;;:::o;2191:141::-;2240:4;2263:3;2255:11;;2286:3;2283:1;2276:14;2320:4;2317:1;2307:18;2299:26;;2191:141;;;:::o;2338:93::-;2375:6;2422:2;2417;2410:5;2406:14;2402:23;2392:33;;2338:93;;;:::o;2437:107::-;2481:8;2531:5;2525:4;2521:16;2500:37;;2437:107;;;;:::o;2550:393::-;2619:6;2669:1;2657:10;2653:18;2692:97;2722:66;2711:9;2692:97;:::i;:::-;2810:39;2840:8;2829:9;2810:39;:::i;:::-;2798:51;;2882:4;2878:9;2871:5;2867:21;2858:30;;2931:4;2921:8;2917:19;2910:5;2907:30;2897:40;;2626:317;;2550:393;;;;;:::o;2949:77::-;2986:7;3015:5;3004:16;;2949:77;;;:::o;3032:60::-;3060:3;3081:5;3074:12;;3032:60;;;:::o;3098:142::-;3148:9;3181:53;3199:34;3208:24;3226:5;3208:24;:::i;:::-;3199:34;:::i;:::-;3181:53;:::i;:::-;3168:66;;3098:142;;;:::o;3246:75::-;3289:3;3310:5;3303:12;;3246:75;;;:::o;3327:269::-;3437:39;3468:7;3437:39;:::i;:::-;3498:91;3547:41;3571:16;3547:41;:::i;:::-;3539:6;3532:4;3526:11;3498:91;:::i;:::-;3492:4;3485:105;3403:193;3327:269;;;:::o;3602:73::-;3647:3;3602:73;:::o;3681:189::-;3758:32;;:::i;:::-;3799:65;3857:6;3849;3843:4;3799:65;:::i;:::-;3734:136;3681:189;;:::o;3876:186::-;3936:120;3953:3;3946:5;3943:14;3936:120;;;4007:39;4044:1;4037:5;4007:39;:::i;:::-;3980:1;3973:5;3969:13;3960:22;;3936:120;;;3876:186;;:::o;4068:543::-;4169:2;4164:3;4161:11;4158:446;;;4203:38;4235:5;4203:38;:::i;:::-;4287:29;4305:10;4287:29;:::i;:::-;4277:8;4273:44;4470:2;4458:10;4455:18;4452:49;;;4491:8;4476:23;;4452:49;4514:80;4570:22;4588:3;4570:22;:::i;:::-;4560:8;4556:37;4543:11;4514:80;:::i;:::-;4173:431;;4158:446;4068:543;;;:::o;4617:117::-;4671:8;4721:5;4715:4;4711:16;4690:37;;4617:117;;;;:::o;4740:169::-;4784:6;4817:51;4865:1;4861:6;4853:5;4850:1;4846:13;4817:51;:::i;:::-;4813:56;4898:4;4892;4888:15;4878:25;;4791:118;4740:169;;;;:::o;4914:295::-;4990:4;5136:29;5161:3;5155:4;5136:29;:::i;:::-;5128:37;;5198:3;5195:1;5191:11;5185:4;5182:21;5174:29;;4914:295;;;;:::o;5214:1395::-;5331:37;5364:3;5331:37;:::i;:::-;5433:18;5425:6;5422:30;5419:56;;;5455:18;;:::i;:::-;5419:56;5499:38;5531:4;5525:11;5499:38;:::i;:::-;5584:67;5644:6;5636;5630:4;5584:67;:::i;:::-;5678:1;5702:4;5689:17;;5734:2;5726:6;5723:14;5751:1;5746:618;;;;6408:1;6425:6;6422:77;;;6474:9;6469:3;6465:19;6459:26;6450:35;;6422:77;6525:67;6585:6;6578:5;6525:67;:::i;:::-;6519:4;6512:81;6381:222;5716:887;;5746:618;5798:4;5794:9;5786:6;5782:22;5832:37;5864:4;5832:37;:::i;:::-;5891:1;5905:208;5919:7;5916:1;5913:14;5905:208;;;5998:9;5993:3;5989:19;5983:26;5975:6;5968:42;6049:1;6041:6;6037:14;6027:24;;6096:2;6085:9;6081:18;6068:31;;5942:4;5939:1;5935:12;5930:17;;5905:208;;;6141:6;6132:7;6129:19;6126:179;;;6199:9;6194:3;6190:19;6184:26;6242:48;6284:4;6276:6;6272:17;6261:9;6242:48;:::i;:::-;6234:6;6227:64;6149:156;6126:179;6351:1;6347;6339:6;6335:14;6331:22;6325:4;6318:36;5753:611;;;5716:887;;5306:1303;;;5214:1395;;:::o;6615:118::-;6702:24;6720:5;6702:24;:::i;:::-;6697:3;6690:37;6615:118;;:::o;6739:222::-;6832:4;6870:2;6859:9;6855:18;6847:26;;6883:71;6951:1;6940:9;6936:17;6927:6;6883:71;:::i;:::-;6739:222;;;;:::o;6967:180::-;7015:77;7012:1;7005:88;7112:4;7109:1;7102:15;7136:4;7133:1;7126:15;7153:191;7193:3;7212:20;7230:1;7212:20;:::i;:::-;7207:25;;7246:20;7264:1;7246:20;:::i;:::-;7241:25;;7289:1;7286;7282:9;7275:16;;7310:3;7307:1;7304:10;7301:36;;;7317:18;;:::i;:::-;7301:36;7153:191;;;;:::o;7350:118::-;7437:24;7455:5;7437:24;:::i;:::-;7432:3;7425:37;7350:118;;:::o;7474:442::-;7623:4;7661:2;7650:9;7646:18;7638:26;;7674:71;7742:1;7731:9;7727:17;7718:6;7674:71;:::i;:::-;7755:72;7823:2;7812:9;7808:18;7799:6;7755:72;:::i;:::-;7837;7905:2;7894:9;7890:18;7881:6;7837:72;:::i;:::-;7474:442;;;;;;:::o;7922:222::-;8015:4;8053:2;8042:9;8038:18;8030:26;;8066:71;8134:1;8123:9;8119:17;8110:6;8066:71;:::i;:::-;7922:222;;;;:::o;379:7050:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TOTAL_SUPPLY_1338": {
									"entryPoint": 5748,
									"id": 1338,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2012": {
									"entryPoint": null,
									"id": 2012,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2020": {
									"entryPoint": null,
									"id": 2020,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_755": {
									"entryPoint": 6270,
									"id": 755,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_815": {
									"entryPoint": 7902,
									"id": 815,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 6674,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_980": {
									"entryPoint": 6263,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_337": {
									"entryPoint": 6888,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_329": {
									"entryPoint": 6809,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_863": {
									"entryPoint": 6288,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 7707,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_594": {
									"entryPoint": 6434,
									"id": 594,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 8365,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_1174": {
									"entryPoint": 7418,
									"id": 1174,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_491": {
									"entryPoint": 5995,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_515": {
									"entryPoint": 2297,
									"id": 515,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_450": {
									"entryPoint": 5071,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyTokens_1703": {
									"entryPoint": 2889,
									"id": 1703,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculatePreSaleTokens_1831": {
									"entryPoint": 7439,
									"id": 1831,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculatePrivateSaleTokens_1779": {
									"entryPoint": 6940,
									"id": 1779,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_428": {
									"entryPoint": 2578,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@div_1219": {
									"entryPoint": 6919,
									"id": 1219,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@haltSales_1983": {
									"entryPoint": 2586,
									"id": 1983,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_1204": {
									"entryPoint": 6898,
									"id": 1204,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_410": {
									"entryPoint": 2153,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 5702,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@preSaleEndPrice_1397": {
									"entryPoint": 5742,
									"id": 1397,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleSoldTokens_1400": {
									"entryPoint": 5953,
									"id": 1400,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleStartPrice_1390": {
									"entryPoint": 5763,
									"id": 1390,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleTarget_1376": {
									"entryPoint": 6125,
									"id": 1376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleTokens_1383": {
									"entryPoint": 2331,
									"id": 1383,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@priceOracle_1426": {
									"entryPoint": 2520,
									"id": 1426,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleEndPrice_1366": {
									"entryPoint": 5965,
									"id": 1366,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleSoldTokens_1369": {
									"entryPoint": 5065,
									"id": 1369,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleStartPrice_1359": {
									"entryPoint": 5947,
									"id": 1359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleTarget_1345": {
									"entryPoint": 5959,
									"id": 1345,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSaleTokens_1352": {
									"entryPoint": 5989,
									"id": 1352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@releaseVestedTokens_1961": {
									"entryPoint": 4327,
									"id": 1961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 5140,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stage_1409": {
									"entryPoint": 5971,
									"id": 1409,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeDuration_1423": {
									"entryPoint": 4321,
									"id": 1423,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeTokens_1900": {
									"entryPoint": 5159,
									"id": 1900,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@startPreSale_1525": {
									"entryPoint": 4826,
									"id": 1525,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startPrivateSale_1499": {
									"entryPoint": 2721,
									"id": 1499,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1189": {
									"entryPoint": 8902,
									"id": 1189,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_419": {
									"entryPoint": 5769,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_437": {
									"entryPoint": 2343,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_547": {
									"entryPoint": 2373,
									"id": 547,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 6131,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_474": {
									"entryPoint": 5913,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@vestingBalance_1413": {
									"entryPoint": 2352,
									"id": 1413,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vestingDuration_1420": {
									"entryPoint": 2337,
									"id": 1420,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vestingReleaseTime_1417": {
									"entryPoint": 2557,
									"id": 1417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawFunds_2004": {
									"entryPoint": 2419,
									"id": 2004,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 9283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 10526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 10021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 9550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 10546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IPriceOracle_$1322_to_t_address_fromStack": {
									"entryPoint": 9706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_SaleStage_$1404_to_t_uint8_fromStack": {
									"entryPoint": 9981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 9758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11990,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IPriceOracle_$1322__to_t_address__fromStack_reversed": {
									"entryPoint": 9721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_SaleStage_$1404__to_t_uint8__fromStack_reversed": {
									"entryPoint": 9996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11951,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 9773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 13022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 12302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 12192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 13073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_SaleStage_$1404": {
									"entryPoint": 9946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IPriceOracle_$1322_to_t_address": {
									"entryPoint": 9689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_SaleStage_$1404_to_t_uint8": {
									"entryPoint": 9964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 9672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 9639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9091,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 10128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 9630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 12147,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 12257,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 9881,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 10083,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9209,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef": {
									"entryPoint": 10176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620": {
									"entryPoint": 10589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4": {
									"entryPoint": 12776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296": {
									"entryPoint": 11743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a": {
									"entryPoint": 12350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b": {
									"entryPoint": 11393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878": {
									"entryPoint": 11497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec": {
									"entryPoint": 11043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d": {
									"entryPoint": 11251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67": {
									"entryPoint": 11147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804": {
									"entryPoint": 10280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996": {
									"entryPoint": 12880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2": {
									"entryPoint": 12634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb": {
									"entryPoint": 10693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0": {
									"entryPoint": 11847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513": {
									"entryPoint": 10939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e": {
									"entryPoint": 10797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85": {
									"entryPoint": 12492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f": {
									"entryPoint": 10422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd": {
									"entryPoint": 8939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e": {
									"entryPoint": 11639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 12043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_SaleStage_$1404": {
									"entryPoint": 9926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:33379:9",
										"nodeType": "YulBlock",
										"src": "0:33379:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "103:73:9",
													"nodeType": "YulBlock",
													"src": "103:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "120:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "125:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "113:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:9"
																},
																"nativeSrc": "113:19:9",
																"nodeType": "YulFunctionCall",
																"src": "113:19:9"
															},
															"nativeSrc": "113:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "113:19:9"
														},
														{
															"nativeSrc": "141:29:9",
															"nodeType": "YulAssignment",
															"src": "141:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "160:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "165:4:9",
																		"nodeType": "YulLiteral",
																		"src": "165:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "156:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:9"
																},
																"nativeSrc": "156:14:9",
																"nodeType": "YulFunctionCall",
																"src": "156:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "141:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "75:3:9",
														"nodeType": "YulTypedName",
														"src": "75:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "80:6:9",
														"nodeType": "YulTypedName",
														"src": "80:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "91:11:9",
														"nodeType": "YulTypedName",
														"src": "91:11:9",
														"type": ""
													}
												],
												"src": "7:169:9"
											},
											{
												"body": {
													"nativeSrc": "288:114:9",
													"nodeType": "YulBlock",
													"src": "288:114:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "310:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "318:1:9",
																				"nodeType": "YulLiteral",
																				"src": "318:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "306:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:9"
																		},
																		"nativeSrc": "306:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:9"
																	},
																	{
																		"hexValue": "44697265637420455448207472616e7366657273206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "322:34:9",
																		"nodeType": "YulLiteral",
																		"src": "322:34:9",
																		"type": "",
																		"value": "Direct ETH transfers not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "299:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:9"
																},
																"nativeSrc": "299:58:9",
																"nodeType": "YulFunctionCall",
																"src": "299:58:9"
															},
															"nativeSrc": "299:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "299:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "378:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "378:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "386:2:9",
																				"nodeType": "YulLiteral",
																				"src": "386:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "374:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "374:3:9"
																		},
																		"nativeSrc": "374:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "374:15:9"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "391:3:9",
																		"nodeType": "YulLiteral",
																		"src": "391:3:9",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "367:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "367:6:9"
																},
																"nativeSrc": "367:28:9",
																"nodeType": "YulFunctionCall",
																"src": "367:28:9"
															},
															"nativeSrc": "367:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "367:28:9"
														}
													]
												},
												"name": "store_literal_in_memory_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
												"nativeSrc": "182:220:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "280:6:9",
														"nodeType": "YulTypedName",
														"src": "280:6:9",
														"type": ""
													}
												],
												"src": "182:220:9"
											},
											{
												"body": {
													"nativeSrc": "554:220:9",
													"nodeType": "YulBlock",
													"src": "554:220:9",
													"statements": [
														{
															"nativeSrc": "564:74:9",
															"nodeType": "YulAssignment",
															"src": "564:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "630:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "630:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "635:2:9",
																		"nodeType": "YulLiteral",
																		"src": "635:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "571:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "571:58:9"
																},
																"nativeSrc": "571:67:9",
																"nodeType": "YulFunctionCall",
																"src": "571:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "564:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "564:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "736:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "736:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
																	"nativeSrc": "647:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "647:88:9"
																},
																"nativeSrc": "647:93:9",
																"nodeType": "YulFunctionCall",
																"src": "647:93:9"
															},
															"nativeSrc": "647:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "647:93:9"
														},
														{
															"nativeSrc": "749:19:9",
															"nodeType": "YulAssignment",
															"src": "749:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "760:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "760:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "765:2:9",
																		"nodeType": "YulLiteral",
																		"src": "765:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "756:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "756:3:9"
																},
																"nativeSrc": "756:12:9",
																"nodeType": "YulFunctionCall",
																"src": "756:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "749:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "749:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "408:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "542:3:9",
														"nodeType": "YulTypedName",
														"src": "542:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "550:3:9",
														"nodeType": "YulTypedName",
														"src": "550:3:9",
														"type": ""
													}
												],
												"src": "408:366:9"
											},
											{
												"body": {
													"nativeSrc": "951:248:9",
													"nodeType": "YulBlock",
													"src": "951:248:9",
													"statements": [
														{
															"nativeSrc": "961:26:9",
															"nodeType": "YulAssignment",
															"src": "961:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "973:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "973:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "984:2:9",
																		"nodeType": "YulLiteral",
																		"src": "984:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "969:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:9"
																},
																"nativeSrc": "969:18:9",
																"nodeType": "YulFunctionCall",
																"src": "969:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "961:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "961:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1008:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1008:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1019:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1019:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1004:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1004:3:9"
																		},
																		"nativeSrc": "1004:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1004:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1027:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1027:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1033:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1033:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1023:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:9"
																		},
																		"nativeSrc": "1023:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1023:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "997:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "997:6:9"
																},
																"nativeSrc": "997:47:9",
																"nodeType": "YulFunctionCall",
																"src": "997:47:9"
															},
															"nativeSrc": "997:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "997:47:9"
														},
														{
															"nativeSrc": "1053:139:9",
															"nodeType": "YulAssignment",
															"src": "1053:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1187:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1187:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1061:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "1061:124:9"
																},
																"nativeSrc": "1061:131:9",
																"nodeType": "YulFunctionCall",
																"src": "1061:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1053:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1053:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "780:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "931:9:9",
														"nodeType": "YulTypedName",
														"src": "931:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "946:4:9",
														"nodeType": "YulTypedName",
														"src": "946:4:9",
														"type": ""
													}
												],
												"src": "780:419:9"
											},
											{
												"body": {
													"nativeSrc": "1264:40:9",
													"nodeType": "YulBlock",
													"src": "1264:40:9",
													"statements": [
														{
															"nativeSrc": "1275:22:9",
															"nodeType": "YulAssignment",
															"src": "1275:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1291:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1291:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1285:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1285:5:9"
																},
																"nativeSrc": "1285:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1285:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1275:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1275:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1205:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1247:5:9",
														"nodeType": "YulTypedName",
														"src": "1247:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1257:6:9",
														"nodeType": "YulTypedName",
														"src": "1257:6:9",
														"type": ""
													}
												],
												"src": "1205:99:9"
											},
											{
												"body": {
													"nativeSrc": "1372:77:9",
													"nodeType": "YulBlock",
													"src": "1372:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1389:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1389:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1394:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1394:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1399:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1399:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1383:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1383:5:9"
																},
																"nativeSrc": "1383:23:9",
																"nodeType": "YulFunctionCall",
																"src": "1383:23:9"
															},
															"nativeSrc": "1383:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "1383:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1426:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1426:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1431:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1431:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1422:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1422:3:9"
																		},
																		"nativeSrc": "1422:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1422:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1440:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1415:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1415:6:9"
																},
																"nativeSrc": "1415:27:9",
																"nodeType": "YulFunctionCall",
																"src": "1415:27:9"
															},
															"nativeSrc": "1415:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "1415:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1310:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1354:3:9",
														"nodeType": "YulTypedName",
														"src": "1354:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1359:3:9",
														"nodeType": "YulTypedName",
														"src": "1359:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1364:6:9",
														"nodeType": "YulTypedName",
														"src": "1364:6:9",
														"type": ""
													}
												],
												"src": "1310:139:9"
											},
											{
												"body": {
													"nativeSrc": "1503:54:9",
													"nodeType": "YulBlock",
													"src": "1503:54:9",
													"statements": [
														{
															"nativeSrc": "1513:38:9",
															"nodeType": "YulAssignment",
															"src": "1513:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1531:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1531:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1538:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1527:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1527:3:9"
																		},
																		"nativeSrc": "1527:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1527:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1547:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1547:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1543:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1543:3:9"
																		},
																		"nativeSrc": "1543:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1543:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1523:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1523:3:9"
																},
																"nativeSrc": "1523:28:9",
																"nodeType": "YulFunctionCall",
																"src": "1523:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1513:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1513:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1455:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1486:5:9",
														"nodeType": "YulTypedName",
														"src": "1486:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1496:6:9",
														"nodeType": "YulTypedName",
														"src": "1496:6:9",
														"type": ""
													}
												],
												"src": "1455:102:9"
											},
											{
												"body": {
													"nativeSrc": "1655:285:9",
													"nodeType": "YulBlock",
													"src": "1655:285:9",
													"statements": [
														{
															"nativeSrc": "1665:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1665:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1712:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1712:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1679:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "1679:32:9"
																},
																"nativeSrc": "1679:39:9",
																"nodeType": "YulFunctionCall",
																"src": "1679:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1669:6:9",
																	"nodeType": "YulTypedName",
																	"src": "1669:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1727:78:9",
															"nodeType": "YulAssignment",
															"src": "1727:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1793:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1793:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1798:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1798:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1734:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "1734:58:9"
																},
																"nativeSrc": "1734:71:9",
																"nodeType": "YulFunctionCall",
																"src": "1734:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1727:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1727:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1853:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1853:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1860:4:9",
																				"nodeType": "YulLiteral",
																				"src": "1860:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1849:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1849:3:9"
																		},
																		"nativeSrc": "1849:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1849:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1867:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1867:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1872:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1872:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1814:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "1814:34:9"
																},
																"nativeSrc": "1814:65:9",
																"nodeType": "YulFunctionCall",
																"src": "1814:65:9"
															},
															"nativeSrc": "1814:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "1814:65:9"
														},
														{
															"nativeSrc": "1888:46:9",
															"nodeType": "YulAssignment",
															"src": "1888:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1899:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1899:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1926:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1926:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1904:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "1904:21:9"
																		},
																		"nativeSrc": "1904:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1904:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1895:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1895:3:9"
																},
																"nativeSrc": "1895:39:9",
																"nodeType": "YulFunctionCall",
																"src": "1895:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1888:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1888:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1563:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1636:5:9",
														"nodeType": "YulTypedName",
														"src": "1636:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1643:3:9",
														"nodeType": "YulTypedName",
														"src": "1643:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1651:3:9",
														"nodeType": "YulTypedName",
														"src": "1651:3:9",
														"type": ""
													}
												],
												"src": "1563:377:9"
											},
											{
												"body": {
													"nativeSrc": "2064:195:9",
													"nodeType": "YulBlock",
													"src": "2064:195:9",
													"statements": [
														{
															"nativeSrc": "2074:26:9",
															"nodeType": "YulAssignment",
															"src": "2074:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2086:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2086:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2097:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2097:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2082:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2082:3:9"
																},
																"nativeSrc": "2082:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2082:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2074:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2074:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2121:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2121:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2132:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2132:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2117:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2117:3:9"
																		},
																		"nativeSrc": "2117:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2140:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2140:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2146:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2146:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2136:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2136:3:9"
																		},
																		"nativeSrc": "2136:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2136:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2110:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2110:6:9"
																},
																"nativeSrc": "2110:47:9",
																"nodeType": "YulFunctionCall",
																"src": "2110:47:9"
															},
															"nativeSrc": "2110:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "2110:47:9"
														},
														{
															"nativeSrc": "2166:86:9",
															"nodeType": "YulAssignment",
															"src": "2166:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2238:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2238:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2247:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2247:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2174:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "2174:63:9"
																},
																"nativeSrc": "2174:78:9",
																"nodeType": "YulFunctionCall",
																"src": "2174:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2166:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2166:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1946:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2036:9:9",
														"nodeType": "YulTypedName",
														"src": "2036:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2048:6:9",
														"nodeType": "YulTypedName",
														"src": "2048:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2059:4:9",
														"nodeType": "YulTypedName",
														"src": "2059:4:9",
														"type": ""
													}
												],
												"src": "1946:313:9"
											},
											{
												"body": {
													"nativeSrc": "2305:35:9",
													"nodeType": "YulBlock",
													"src": "2305:35:9",
													"statements": [
														{
															"nativeSrc": "2315:19:9",
															"nodeType": "YulAssignment",
															"src": "2315:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2331:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2331:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2325:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2325:5:9"
																},
																"nativeSrc": "2325:9:9",
																"nodeType": "YulFunctionCall",
																"src": "2325:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2315:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "2265:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2298:6:9",
														"nodeType": "YulTypedName",
														"src": "2298:6:9",
														"type": ""
													}
												],
												"src": "2265:75:9"
											},
											{
												"body": {
													"nativeSrc": "2435:28:9",
													"nodeType": "YulBlock",
													"src": "2435:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2452:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2452:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2455:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2455:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2445:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2445:6:9"
																},
																"nativeSrc": "2445:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2445:12:9"
															},
															"nativeSrc": "2445:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "2445:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2346:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2346:117:9"
											},
											{
												"body": {
													"nativeSrc": "2558:28:9",
													"nodeType": "YulBlock",
													"src": "2558:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2575:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2575:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2578:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2578:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2568:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2568:6:9"
																},
																"nativeSrc": "2568:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2568:12:9"
															},
															"nativeSrc": "2568:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "2568:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2469:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2469:117:9"
											},
											{
												"body": {
													"nativeSrc": "2637:81:9",
													"nodeType": "YulBlock",
													"src": "2637:81:9",
													"statements": [
														{
															"nativeSrc": "2647:65:9",
															"nodeType": "YulAssignment",
															"src": "2647:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2662:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2662:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2669:42:9",
																		"nodeType": "YulLiteral",
																		"src": "2669:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2658:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:9"
																},
																"nativeSrc": "2658:54:9",
																"nodeType": "YulFunctionCall",
																"src": "2658:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2647:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2647:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2592:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2619:5:9",
														"nodeType": "YulTypedName",
														"src": "2619:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2629:7:9",
														"nodeType": "YulTypedName",
														"src": "2629:7:9",
														"type": ""
													}
												],
												"src": "2592:126:9"
											},
											{
												"body": {
													"nativeSrc": "2769:51:9",
													"nodeType": "YulBlock",
													"src": "2769:51:9",
													"statements": [
														{
															"nativeSrc": "2779:35:9",
															"nodeType": "YulAssignment",
															"src": "2779:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2808:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2808:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2790:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2790:17:9"
																},
																"nativeSrc": "2790:24:9",
																"nodeType": "YulFunctionCall",
																"src": "2790:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2779:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2779:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2724:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2751:5:9",
														"nodeType": "YulTypedName",
														"src": "2751:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2761:7:9",
														"nodeType": "YulTypedName",
														"src": "2761:7:9",
														"type": ""
													}
												],
												"src": "2724:96:9"
											},
											{
												"body": {
													"nativeSrc": "2869:79:9",
													"nodeType": "YulBlock",
													"src": "2869:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2926:16:9",
																"nodeType": "YulBlock",
																"src": "2926:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2935:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2935:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2938:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2928:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2928:6:9"
																			},
																			"nativeSrc": "2928:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2928:12:9"
																		},
																		"nativeSrc": "2928:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2928:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2892:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2892:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2917:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2917:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2899:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2899:17:9"
																				},
																				"nativeSrc": "2899:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2899:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2889:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2889:2:9"
																		},
																		"nativeSrc": "2889:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2889:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2882:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2882:6:9"
																},
																"nativeSrc": "2882:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2882:43:9"
															},
															"nativeSrc": "2879:63:9",
															"nodeType": "YulIf",
															"src": "2879:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2826:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2862:5:9",
														"nodeType": "YulTypedName",
														"src": "2862:5:9",
														"type": ""
													}
												],
												"src": "2826:122:9"
											},
											{
												"body": {
													"nativeSrc": "3006:87:9",
													"nodeType": "YulBlock",
													"src": "3006:87:9",
													"statements": [
														{
															"nativeSrc": "3016:29:9",
															"nodeType": "YulAssignment",
															"src": "3016:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3038:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3038:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3025:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3025:12:9"
																},
																"nativeSrc": "3025:20:9",
																"nodeType": "YulFunctionCall",
																"src": "3025:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3016:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3016:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3081:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3081:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3054:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3054:26:9"
																},
																"nativeSrc": "3054:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3054:33:9"
															},
															"nativeSrc": "3054:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3054:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2954:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2984:6:9",
														"nodeType": "YulTypedName",
														"src": "2984:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2992:3:9",
														"nodeType": "YulTypedName",
														"src": "2992:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3000:5:9",
														"nodeType": "YulTypedName",
														"src": "3000:5:9",
														"type": ""
													}
												],
												"src": "2954:139:9"
											},
											{
												"body": {
													"nativeSrc": "3144:32:9",
													"nodeType": "YulBlock",
													"src": "3144:32:9",
													"statements": [
														{
															"nativeSrc": "3154:16:9",
															"nodeType": "YulAssignment",
															"src": "3154:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "3165:5:9",
																"nodeType": "YulIdentifier",
																"src": "3165:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3154:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3154:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3099:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3126:5:9",
														"nodeType": "YulTypedName",
														"src": "3126:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3136:7:9",
														"nodeType": "YulTypedName",
														"src": "3136:7:9",
														"type": ""
													}
												],
												"src": "3099:77:9"
											},
											{
												"body": {
													"nativeSrc": "3225:79:9",
													"nodeType": "YulBlock",
													"src": "3225:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3282:16:9",
																"nodeType": "YulBlock",
																"src": "3282:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3291:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3291:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3294:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3294:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3284:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3284:6:9"
																			},
																			"nativeSrc": "3284:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3284:12:9"
																		},
																		"nativeSrc": "3284:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3284:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3248:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3248:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3273:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3273:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3255:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3255:17:9"
																				},
																				"nativeSrc": "3255:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3255:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3245:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3245:2:9"
																		},
																		"nativeSrc": "3245:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3245:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3238:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3238:6:9"
																},
																"nativeSrc": "3238:43:9",
																"nodeType": "YulFunctionCall",
																"src": "3238:43:9"
															},
															"nativeSrc": "3235:63:9",
															"nodeType": "YulIf",
															"src": "3235:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3182:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3218:5:9",
														"nodeType": "YulTypedName",
														"src": "3218:5:9",
														"type": ""
													}
												],
												"src": "3182:122:9"
											},
											{
												"body": {
													"nativeSrc": "3362:87:9",
													"nodeType": "YulBlock",
													"src": "3362:87:9",
													"statements": [
														{
															"nativeSrc": "3372:29:9",
															"nodeType": "YulAssignment",
															"src": "3372:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3394:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3394:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3381:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3381:12:9"
																},
																"nativeSrc": "3381:20:9",
																"nodeType": "YulFunctionCall",
																"src": "3381:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3372:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3372:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3437:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3437:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3410:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "3410:26:9"
																},
																"nativeSrc": "3410:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3410:33:9"
															},
															"nativeSrc": "3410:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "3410:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3310:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3340:6:9",
														"nodeType": "YulTypedName",
														"src": "3340:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3348:3:9",
														"nodeType": "YulTypedName",
														"src": "3348:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3356:5:9",
														"nodeType": "YulTypedName",
														"src": "3356:5:9",
														"type": ""
													}
												],
												"src": "3310:139:9"
											},
											{
												"body": {
													"nativeSrc": "3538:391:9",
													"nodeType": "YulBlock",
													"src": "3538:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3584:83:9",
																"nodeType": "YulBlock",
																"src": "3584:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3586:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3586:77:9"
																			},
																			"nativeSrc": "3586:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3586:79:9"
																		},
																		"nativeSrc": "3586:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3586:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3559:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3559:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3568:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3555:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3555:3:9"
																		},
																		"nativeSrc": "3555:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3555:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3580:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3580:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3551:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3551:3:9"
																},
																"nativeSrc": "3551:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3551:32:9"
															},
															"nativeSrc": "3548:119:9",
															"nodeType": "YulIf",
															"src": "3548:119:9"
														},
														{
															"nativeSrc": "3677:117:9",
															"nodeType": "YulBlock",
															"src": "3677:117:9",
															"statements": [
																{
																	"nativeSrc": "3692:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3692:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3706:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3706:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3696:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3696:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3721:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3721:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3756:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3756:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3767:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3767:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3752:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3752:3:9"
																				},
																				"nativeSrc": "3752:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3752:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3776:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3776:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3731:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3731:20:9"
																		},
																		"nativeSrc": "3731:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3731:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3721:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3721:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3804:118:9",
															"nodeType": "YulBlock",
															"src": "3804:118:9",
															"statements": [
																{
																	"nativeSrc": "3819:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3819:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3833:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3823:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3823:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3849:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3849:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3884:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3884:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3895:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3895:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3880:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3880:3:9"
																				},
																				"nativeSrc": "3880:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3880:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3904:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3904:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3859:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3859:20:9"
																		},
																		"nativeSrc": "3859:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3859:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3849:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3849:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3455:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3500:9:9",
														"nodeType": "YulTypedName",
														"src": "3500:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3511:7:9",
														"nodeType": "YulTypedName",
														"src": "3511:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3523:6:9",
														"nodeType": "YulTypedName",
														"src": "3523:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3531:6:9",
														"nodeType": "YulTypedName",
														"src": "3531:6:9",
														"type": ""
													}
												],
												"src": "3455:474:9"
											},
											{
												"body": {
													"nativeSrc": "3977:48:9",
													"nodeType": "YulBlock",
													"src": "3977:48:9",
													"statements": [
														{
															"nativeSrc": "3987:32:9",
															"nodeType": "YulAssignment",
															"src": "3987:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4012:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4012:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4005:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4005:6:9"
																		},
																		"nativeSrc": "4005:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4005:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3998:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3998:6:9"
																},
																"nativeSrc": "3998:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3998:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3987:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3987:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3935:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3959:5:9",
														"nodeType": "YulTypedName",
														"src": "3959:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3969:7:9",
														"nodeType": "YulTypedName",
														"src": "3969:7:9",
														"type": ""
													}
												],
												"src": "3935:90:9"
											},
											{
												"body": {
													"nativeSrc": "4090:50:9",
													"nodeType": "YulBlock",
													"src": "4090:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4107:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4107:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4127:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4127:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4112:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "4112:14:9"
																		},
																		"nativeSrc": "4112:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4100:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4100:6:9"
																},
																"nativeSrc": "4100:34:9",
																"nodeType": "YulFunctionCall",
																"src": "4100:34:9"
															},
															"nativeSrc": "4100:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "4100:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "4031:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4078:5:9",
														"nodeType": "YulTypedName",
														"src": "4078:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4085:3:9",
														"nodeType": "YulTypedName",
														"src": "4085:3:9",
														"type": ""
													}
												],
												"src": "4031:109:9"
											},
											{
												"body": {
													"nativeSrc": "4238:118:9",
													"nodeType": "YulBlock",
													"src": "4238:118:9",
													"statements": [
														{
															"nativeSrc": "4248:26:9",
															"nodeType": "YulAssignment",
															"src": "4248:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4260:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4260:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4271:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4271:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4256:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4256:3:9"
																},
																"nativeSrc": "4256:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4256:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4248:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4248:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4322:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4322:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4335:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4335:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4346:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4346:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4331:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4331:3:9"
																		},
																		"nativeSrc": "4331:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4331:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4284:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "4284:37:9"
																},
																"nativeSrc": "4284:65:9",
																"nodeType": "YulFunctionCall",
																"src": "4284:65:9"
															},
															"nativeSrc": "4284:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "4284:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4146:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4210:9:9",
														"nodeType": "YulTypedName",
														"src": "4210:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4222:6:9",
														"nodeType": "YulTypedName",
														"src": "4222:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4233:4:9",
														"nodeType": "YulTypedName",
														"src": "4233:4:9",
														"type": ""
													}
												],
												"src": "4146:210:9"
											},
											{
												"body": {
													"nativeSrc": "4427:53:9",
													"nodeType": "YulBlock",
													"src": "4427:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4444:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4444:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4467:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4467:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4449:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "4449:17:9"
																		},
																		"nativeSrc": "4449:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4449:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4437:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4437:6:9"
																},
																"nativeSrc": "4437:37:9",
																"nodeType": "YulFunctionCall",
																"src": "4437:37:9"
															},
															"nativeSrc": "4437:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "4437:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4362:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4415:5:9",
														"nodeType": "YulTypedName",
														"src": "4415:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4422:3:9",
														"nodeType": "YulTypedName",
														"src": "4422:3:9",
														"type": ""
													}
												],
												"src": "4362:118:9"
											},
											{
												"body": {
													"nativeSrc": "4584:124:9",
													"nodeType": "YulBlock",
													"src": "4584:124:9",
													"statements": [
														{
															"nativeSrc": "4594:26:9",
															"nodeType": "YulAssignment",
															"src": "4594:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4606:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4606:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4617:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4617:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4602:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4602:3:9"
																},
																"nativeSrc": "4602:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4602:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4594:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4594:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4674:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4674:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4687:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4687:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4698:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4698:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4683:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4683:3:9"
																		},
																		"nativeSrc": "4683:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4683:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4630:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "4630:43:9"
																},
																"nativeSrc": "4630:71:9",
																"nodeType": "YulFunctionCall",
																"src": "4630:71:9"
															},
															"nativeSrc": "4630:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "4630:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4486:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4556:9:9",
														"nodeType": "YulTypedName",
														"src": "4556:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4568:6:9",
														"nodeType": "YulTypedName",
														"src": "4568:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4579:4:9",
														"nodeType": "YulTypedName",
														"src": "4579:4:9",
														"type": ""
													}
												],
												"src": "4486:222:9"
											},
											{
												"body": {
													"nativeSrc": "4780:263:9",
													"nodeType": "YulBlock",
													"src": "4780:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4826:83:9",
																"nodeType": "YulBlock",
																"src": "4826:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4828:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4828:77:9"
																			},
																			"nativeSrc": "4828:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4828:79:9"
																		},
																		"nativeSrc": "4828:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4828:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4801:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4801:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4810:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4810:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4797:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4797:3:9"
																		},
																		"nativeSrc": "4797:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4797:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4822:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4822:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4793:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:9"
																},
																"nativeSrc": "4793:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4793:32:9"
															},
															"nativeSrc": "4790:119:9",
															"nodeType": "YulIf",
															"src": "4790:119:9"
														},
														{
															"nativeSrc": "4919:117:9",
															"nodeType": "YulBlock",
															"src": "4919:117:9",
															"statements": [
																{
																	"nativeSrc": "4934:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4934:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4948:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4948:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4938:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4938:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4963:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4963:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4998:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4998:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5009:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5009:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4994:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4994:3:9"
																				},
																				"nativeSrc": "4994:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4994:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5018:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5018:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4973:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4973:20:9"
																		},
																		"nativeSrc": "4973:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4973:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4963:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4963:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4714:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4750:9:9",
														"nodeType": "YulTypedName",
														"src": "4750:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4761:7:9",
														"nodeType": "YulTypedName",
														"src": "4761:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4773:6:9",
														"nodeType": "YulTypedName",
														"src": "4773:6:9",
														"type": ""
													}
												],
												"src": "4714:329:9"
											},
											{
												"body": {
													"nativeSrc": "5149:519:9",
													"nodeType": "YulBlock",
													"src": "5149:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5195:83:9",
																"nodeType": "YulBlock",
																"src": "5195:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5197:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5197:77:9"
																			},
																			"nativeSrc": "5197:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5197:79:9"
																		},
																		"nativeSrc": "5197:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5197:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5170:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5170:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5179:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5179:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5166:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5166:3:9"
																		},
																		"nativeSrc": "5166:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5166:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5191:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5191:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5162:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5162:3:9"
																},
																"nativeSrc": "5162:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5162:32:9"
															},
															"nativeSrc": "5159:119:9",
															"nodeType": "YulIf",
															"src": "5159:119:9"
														},
														{
															"nativeSrc": "5288:117:9",
															"nodeType": "YulBlock",
															"src": "5288:117:9",
															"statements": [
																{
																	"nativeSrc": "5303:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5303:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5307:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5307:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5332:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5332:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5367:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5367:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5378:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5378:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5363:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5363:3:9"
																				},
																				"nativeSrc": "5363:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5363:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5387:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5387:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5342:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5342:20:9"
																		},
																		"nativeSrc": "5342:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5342:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5332:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5332:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5415:118:9",
															"nodeType": "YulBlock",
															"src": "5415:118:9",
															"statements": [
																{
																	"nativeSrc": "5430:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5430:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5444:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5444:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5434:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5434:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5460:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5460:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5495:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5495:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5506:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5506:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5491:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5491:3:9"
																				},
																				"nativeSrc": "5491:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5491:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5515:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5515:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5470:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5470:20:9"
																		},
																		"nativeSrc": "5470:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5470:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5460:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5460:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5543:118:9",
															"nodeType": "YulBlock",
															"src": "5543:118:9",
															"statements": [
																{
																	"nativeSrc": "5558:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5558:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5572:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5572:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5562:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5562:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5588:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5588:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5623:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5623:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5634:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5634:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5619:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5619:3:9"
																				},
																				"nativeSrc": "5619:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5619:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5643:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5643:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5598:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5598:20:9"
																		},
																		"nativeSrc": "5598:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5598:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5588:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5588:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5049:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5103:9:9",
														"nodeType": "YulTypedName",
														"src": "5103:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5114:7:9",
														"nodeType": "YulTypedName",
														"src": "5114:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5126:6:9",
														"nodeType": "YulTypedName",
														"src": "5126:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5134:6:9",
														"nodeType": "YulTypedName",
														"src": "5134:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5142:6:9",
														"nodeType": "YulTypedName",
														"src": "5142:6:9",
														"type": ""
													}
												],
												"src": "5049:619:9"
											},
											{
												"body": {
													"nativeSrc": "5706:28:9",
													"nodeType": "YulBlock",
													"src": "5706:28:9",
													"statements": [
														{
															"nativeSrc": "5716:12:9",
															"nodeType": "YulAssignment",
															"src": "5716:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "5723:5:9",
																"nodeType": "YulIdentifier",
																"src": "5723:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5716:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5716:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5674:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5692:5:9",
														"nodeType": "YulTypedName",
														"src": "5692:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5702:3:9",
														"nodeType": "YulTypedName",
														"src": "5702:3:9",
														"type": ""
													}
												],
												"src": "5674:60:9"
											},
											{
												"body": {
													"nativeSrc": "5800:82:9",
													"nodeType": "YulBlock",
													"src": "5800:82:9",
													"statements": [
														{
															"nativeSrc": "5810:66:9",
															"nodeType": "YulAssignment",
															"src": "5810:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5868:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5868:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5850:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "5850:17:9"
																				},
																				"nativeSrc": "5850:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5850:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5841:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "5841:8:9"
																		},
																		"nativeSrc": "5841:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5841:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5823:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "5823:17:9"
																},
																"nativeSrc": "5823:53:9",
																"nodeType": "YulFunctionCall",
																"src": "5823:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5810:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5810:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5740:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5780:5:9",
														"nodeType": "YulTypedName",
														"src": "5780:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5790:9:9",
														"nodeType": "YulTypedName",
														"src": "5790:9:9",
														"type": ""
													}
												],
												"src": "5740:142:9"
											},
											{
												"body": {
													"nativeSrc": "5948:66:9",
													"nodeType": "YulBlock",
													"src": "5948:66:9",
													"statements": [
														{
															"nativeSrc": "5958:50:9",
															"nodeType": "YulAssignment",
															"src": "5958:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6002:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6002:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5971:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "5971:30:9"
																},
																"nativeSrc": "5971:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5971:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5958:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5958:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5888:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5928:5:9",
														"nodeType": "YulTypedName",
														"src": "5928:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5938:9:9",
														"nodeType": "YulTypedName",
														"src": "5938:9:9",
														"type": ""
													}
												],
												"src": "5888:126:9"
											},
											{
												"body": {
													"nativeSrc": "6101:66:9",
													"nodeType": "YulBlock",
													"src": "6101:66:9",
													"statements": [
														{
															"nativeSrc": "6111:50:9",
															"nodeType": "YulAssignment",
															"src": "6111:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6155:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6155:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6124:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "6124:30:9"
																},
																"nativeSrc": "6124:37:9",
																"nodeType": "YulFunctionCall",
																"src": "6124:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6111:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "6111:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IPriceOracle_$1322_to_t_address",
												"nativeSrc": "6020:147:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6081:5:9",
														"nodeType": "YulTypedName",
														"src": "6081:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6091:9:9",
														"nodeType": "YulTypedName",
														"src": "6091:9:9",
														"type": ""
													}
												],
												"src": "6020:147:9"
											},
											{
												"body": {
													"nativeSrc": "6259:87:9",
													"nodeType": "YulBlock",
													"src": "6259:87:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6276:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6276:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6333:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6333:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IPriceOracle_$1322_to_t_address",
																			"nativeSrc": "6281:51:9",
																			"nodeType": "YulIdentifier",
																			"src": "6281:51:9"
																		},
																		"nativeSrc": "6281:58:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6281:58:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6269:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6269:6:9"
																},
																"nativeSrc": "6269:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6269:71:9"
															},
															"nativeSrc": "6269:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6269:71:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IPriceOracle_$1322_to_t_address_fromStack",
												"nativeSrc": "6173:173:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6247:5:9",
														"nodeType": "YulTypedName",
														"src": "6247:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6254:3:9",
														"nodeType": "YulTypedName",
														"src": "6254:3:9",
														"type": ""
													}
												],
												"src": "6173:173:9"
											},
											{
												"body": {
													"nativeSrc": "6471:145:9",
													"nodeType": "YulBlock",
													"src": "6471:145:9",
													"statements": [
														{
															"nativeSrc": "6481:26:9",
															"nodeType": "YulAssignment",
															"src": "6481:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6493:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6493:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6504:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6504:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6489:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6489:3:9"
																},
																"nativeSrc": "6489:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6489:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6481:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6481:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6582:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6582:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6595:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6595:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6606:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6606:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6591:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6591:3:9"
																		},
																		"nativeSrc": "6591:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6591:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IPriceOracle_$1322_to_t_address_fromStack",
																	"nativeSrc": "6517:64:9",
																	"nodeType": "YulIdentifier",
																	"src": "6517:64:9"
																},
																"nativeSrc": "6517:92:9",
																"nodeType": "YulFunctionCall",
																"src": "6517:92:9"
															},
															"nativeSrc": "6517:92:9",
															"nodeType": "YulExpressionStatement",
															"src": "6517:92:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IPriceOracle_$1322__to_t_address__fromStack_reversed",
												"nativeSrc": "6352:264:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6443:9:9",
														"nodeType": "YulTypedName",
														"src": "6443:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6455:6:9",
														"nodeType": "YulTypedName",
														"src": "6455:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6466:4:9",
														"nodeType": "YulTypedName",
														"src": "6466:4:9",
														"type": ""
													}
												],
												"src": "6352:264:9"
											},
											{
												"body": {
													"nativeSrc": "6665:43:9",
													"nodeType": "YulBlock",
													"src": "6665:43:9",
													"statements": [
														{
															"nativeSrc": "6675:27:9",
															"nodeType": "YulAssignment",
															"src": "6675:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6690:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6690:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6697:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6697:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6686:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6686:3:9"
																},
																"nativeSrc": "6686:16:9",
																"nodeType": "YulFunctionCall",
																"src": "6686:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6675:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "6675:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6622:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6647:5:9",
														"nodeType": "YulTypedName",
														"src": "6647:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6657:7:9",
														"nodeType": "YulTypedName",
														"src": "6657:7:9",
														"type": ""
													}
												],
												"src": "6622:86:9"
											},
											{
												"body": {
													"nativeSrc": "6775:51:9",
													"nodeType": "YulBlock",
													"src": "6775:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6792:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6792:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6813:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6813:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6797:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "6797:15:9"
																		},
																		"nativeSrc": "6797:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6797:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6785:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6785:6:9"
																},
																"nativeSrc": "6785:35:9",
																"nodeType": "YulFunctionCall",
																"src": "6785:35:9"
															},
															"nativeSrc": "6785:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "6785:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6714:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6763:5:9",
														"nodeType": "YulTypedName",
														"src": "6763:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6770:3:9",
														"nodeType": "YulTypedName",
														"src": "6770:3:9",
														"type": ""
													}
												],
												"src": "6714:112:9"
											},
											{
												"body": {
													"nativeSrc": "6926:120:9",
													"nodeType": "YulBlock",
													"src": "6926:120:9",
													"statements": [
														{
															"nativeSrc": "6936:26:9",
															"nodeType": "YulAssignment",
															"src": "6936:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6948:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6948:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6959:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6959:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6944:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6944:3:9"
																},
																"nativeSrc": "6944:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6944:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6936:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6936:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7012:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7012:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7025:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7025:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7036:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7036:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7021:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7021:3:9"
																		},
																		"nativeSrc": "7021:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7021:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6972:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "6972:39:9"
																},
																"nativeSrc": "6972:67:9",
																"nodeType": "YulFunctionCall",
																"src": "6972:67:9"
															},
															"nativeSrc": "6972:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "6972:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6832:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6898:9:9",
														"nodeType": "YulTypedName",
														"src": "6898:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6910:6:9",
														"nodeType": "YulTypedName",
														"src": "6910:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6921:4:9",
														"nodeType": "YulTypedName",
														"src": "6921:4:9",
														"type": ""
													}
												],
												"src": "6832:214:9"
											},
											{
												"body": {
													"nativeSrc": "7118:263:9",
													"nodeType": "YulBlock",
													"src": "7118:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7164:83:9",
																"nodeType": "YulBlock",
																"src": "7164:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7166:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7166:77:9"
																			},
																			"nativeSrc": "7166:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7166:79:9"
																		},
																		"nativeSrc": "7166:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7166:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7139:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7139:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7148:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7148:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7135:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7135:3:9"
																		},
																		"nativeSrc": "7135:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7135:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7160:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7160:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7131:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7131:3:9"
																},
																"nativeSrc": "7131:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7131:32:9"
															},
															"nativeSrc": "7128:119:9",
															"nodeType": "YulIf",
															"src": "7128:119:9"
														},
														{
															"nativeSrc": "7257:117:9",
															"nodeType": "YulBlock",
															"src": "7257:117:9",
															"statements": [
																{
																	"nativeSrc": "7272:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7272:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7286:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7286:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7276:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7276:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7301:63:9",
																	"nodeType": "YulAssignment",
																	"src": "7301:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7336:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7336:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7347:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7347:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7332:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7332:3:9"
																				},
																				"nativeSrc": "7332:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7332:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7356:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7356:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7311:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "7311:20:9"
																		},
																		"nativeSrc": "7311:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7311:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7301:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7301:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7052:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7088:9:9",
														"nodeType": "YulTypedName",
														"src": "7088:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7099:7:9",
														"nodeType": "YulTypedName",
														"src": "7099:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7111:6:9",
														"nodeType": "YulTypedName",
														"src": "7111:6:9",
														"type": ""
													}
												],
												"src": "7052:329:9"
											},
											{
												"body": {
													"nativeSrc": "7452:53:9",
													"nodeType": "YulBlock",
													"src": "7452:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7469:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7469:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7492:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7492:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7474:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "7474:17:9"
																		},
																		"nativeSrc": "7474:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7474:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7462:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7462:6:9"
																},
																"nativeSrc": "7462:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7462:37:9"
															},
															"nativeSrc": "7462:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "7462:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7387:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7440:5:9",
														"nodeType": "YulTypedName",
														"src": "7440:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7447:3:9",
														"nodeType": "YulTypedName",
														"src": "7447:3:9",
														"type": ""
													}
												],
												"src": "7387:118:9"
											},
											{
												"body": {
													"nativeSrc": "7609:124:9",
													"nodeType": "YulBlock",
													"src": "7609:124:9",
													"statements": [
														{
															"nativeSrc": "7619:26:9",
															"nodeType": "YulAssignment",
															"src": "7619:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7631:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7631:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7642:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7642:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7627:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7627:3:9"
																},
																"nativeSrc": "7627:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7627:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7619:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7619:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7699:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7699:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7712:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7712:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7723:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7723:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7708:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7708:3:9"
																		},
																		"nativeSrc": "7708:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7708:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7655:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7655:43:9"
																},
																"nativeSrc": "7655:71:9",
																"nodeType": "YulFunctionCall",
																"src": "7655:71:9"
															},
															"nativeSrc": "7655:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "7655:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7511:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7581:9:9",
														"nodeType": "YulTypedName",
														"src": "7581:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7593:6:9",
														"nodeType": "YulTypedName",
														"src": "7593:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7604:4:9",
														"nodeType": "YulTypedName",
														"src": "7604:4:9",
														"type": ""
													}
												],
												"src": "7511:222:9"
											},
											{
												"body": {
													"nativeSrc": "7767:152:9",
													"nodeType": "YulBlock",
													"src": "7767:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7784:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7784:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7787:77:9",
																		"nodeType": "YulLiteral",
																		"src": "7787:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7777:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7777:6:9"
																},
																"nativeSrc": "7777:88:9",
																"nodeType": "YulFunctionCall",
																"src": "7777:88:9"
															},
															"nativeSrc": "7777:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "7777:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7881:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7881:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7884:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7884:4:9",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7874:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7874:6:9"
																},
																"nativeSrc": "7874:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7874:15:9"
															},
															"nativeSrc": "7874:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7874:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7905:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7905:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7908:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7908:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7898:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7898:6:9"
																},
																"nativeSrc": "7898:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7898:15:9"
															},
															"nativeSrc": "7898:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7898:15:9"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "7739:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "7739:180:9"
											},
											{
												"body": {
													"nativeSrc": "7982:62:9",
													"nodeType": "YulBlock",
													"src": "7982:62:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8016:22:9",
																"nodeType": "YulBlock",
																"src": "8016:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "8018:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8018:16:9"
																			},
																			"nativeSrc": "8018:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8018:18:9"
																		},
																		"nativeSrc": "8018:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8018:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8005:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8005:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8012:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8012:1:9",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8002:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "8002:2:9"
																		},
																		"nativeSrc": "8002:12:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8002:12:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7995:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7995:6:9"
																},
																"nativeSrc": "7995:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7995:20:9"
															},
															"nativeSrc": "7992:46:9",
															"nodeType": "YulIf",
															"src": "7992:46:9"
														}
													]
												},
												"name": "validator_assert_t_enum$_SaleStage_$1404",
												"nativeSrc": "7925:119:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7975:5:9",
														"nodeType": "YulTypedName",
														"src": "7975:5:9",
														"type": ""
													}
												],
												"src": "7925:119:9"
											},
											{
												"body": {
													"nativeSrc": "8109:80:9",
													"nodeType": "YulBlock",
													"src": "8109:80:9",
													"statements": [
														{
															"nativeSrc": "8119:16:9",
															"nodeType": "YulAssignment",
															"src": "8119:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "8130:5:9",
																"nodeType": "YulIdentifier",
																"src": "8130:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8119:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "8119:7:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8177:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8177:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_SaleStage_$1404",
																	"nativeSrc": "8136:40:9",
																	"nodeType": "YulIdentifier",
																	"src": "8136:40:9"
																},
																"nativeSrc": "8136:47:9",
																"nodeType": "YulFunctionCall",
																"src": "8136:47:9"
															},
															"nativeSrc": "8136:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "8136:47:9"
														}
													]
												},
												"name": "cleanup_t_enum$_SaleStage_$1404",
												"nativeSrc": "8050:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8091:5:9",
														"nodeType": "YulTypedName",
														"src": "8091:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8101:7:9",
														"nodeType": "YulTypedName",
														"src": "8101:7:9",
														"type": ""
													}
												],
												"src": "8050:139:9"
											},
											{
												"body": {
													"nativeSrc": "8267:67:9",
													"nodeType": "YulBlock",
													"src": "8267:67:9",
													"statements": [
														{
															"nativeSrc": "8277:51:9",
															"nodeType": "YulAssignment",
															"src": "8277:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8322:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "8322:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_SaleStage_$1404",
																	"nativeSrc": "8290:31:9",
																	"nodeType": "YulIdentifier",
																	"src": "8290:31:9"
																},
																"nativeSrc": "8290:38:9",
																"nodeType": "YulFunctionCall",
																"src": "8290:38:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8277:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "8277:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_SaleStage_$1404_to_t_uint8",
												"nativeSrc": "8195:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8247:5:9",
														"nodeType": "YulTypedName",
														"src": "8247:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8257:9:9",
														"nodeType": "YulTypedName",
														"src": "8257:9:9",
														"type": ""
													}
												],
												"src": "8195:139:9"
											},
											{
												"body": {
													"nativeSrc": "8417:78:9",
													"nodeType": "YulBlock",
													"src": "8417:78:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8434:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8434:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8482:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8482:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_SaleStage_$1404_to_t_uint8",
																			"nativeSrc": "8439:42:9",
																			"nodeType": "YulIdentifier",
																			"src": "8439:42:9"
																		},
																		"nativeSrc": "8439:49:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8439:49:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8427:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8427:6:9"
																},
																"nativeSrc": "8427:62:9",
																"nodeType": "YulFunctionCall",
																"src": "8427:62:9"
															},
															"nativeSrc": "8427:62:9",
															"nodeType": "YulExpressionStatement",
															"src": "8427:62:9"
														}
													]
												},
												"name": "abi_encode_t_enum$_SaleStage_$1404_to_t_uint8_fromStack",
												"nativeSrc": "8340:155:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8405:5:9",
														"nodeType": "YulTypedName",
														"src": "8405:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8412:3:9",
														"nodeType": "YulTypedName",
														"src": "8412:3:9",
														"type": ""
													}
												],
												"src": "8340:155:9"
											},
											{
												"body": {
													"nativeSrc": "8611:136:9",
													"nodeType": "YulBlock",
													"src": "8611:136:9",
													"statements": [
														{
															"nativeSrc": "8621:26:9",
															"nodeType": "YulAssignment",
															"src": "8621:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8633:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8633:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8644:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8644:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8629:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8629:3:9"
																},
																"nativeSrc": "8629:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8629:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8621:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8621:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8713:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8713:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8726:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8726:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8737:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8737:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8722:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8722:3:9"
																		},
																		"nativeSrc": "8722:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8722:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_SaleStage_$1404_to_t_uint8_fromStack",
																	"nativeSrc": "8657:55:9",
																	"nodeType": "YulIdentifier",
																	"src": "8657:55:9"
																},
																"nativeSrc": "8657:83:9",
																"nodeType": "YulFunctionCall",
																"src": "8657:83:9"
															},
															"nativeSrc": "8657:83:9",
															"nodeType": "YulExpressionStatement",
															"src": "8657:83:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_SaleStage_$1404__to_t_uint8__fromStack_reversed",
												"nativeSrc": "8501:246:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8583:9:9",
														"nodeType": "YulTypedName",
														"src": "8583:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8595:6:9",
														"nodeType": "YulTypedName",
														"src": "8595:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8606:4:9",
														"nodeType": "YulTypedName",
														"src": "8606:4:9",
														"type": ""
													}
												],
												"src": "8501:246:9"
											},
											{
												"body": {
													"nativeSrc": "8836:391:9",
													"nodeType": "YulBlock",
													"src": "8836:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8882:83:9",
																"nodeType": "YulBlock",
																"src": "8882:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8884:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "8884:77:9"
																			},
																			"nativeSrc": "8884:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8884:79:9"
																		},
																		"nativeSrc": "8884:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8884:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8857:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8857:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8866:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8866:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8853:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8853:3:9"
																		},
																		"nativeSrc": "8853:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8853:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8878:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8878:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8849:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8849:3:9"
																},
																"nativeSrc": "8849:32:9",
																"nodeType": "YulFunctionCall",
																"src": "8849:32:9"
															},
															"nativeSrc": "8846:119:9",
															"nodeType": "YulIf",
															"src": "8846:119:9"
														},
														{
															"nativeSrc": "8975:117:9",
															"nodeType": "YulBlock",
															"src": "8975:117:9",
															"statements": [
																{
																	"nativeSrc": "8990:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8990:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9004:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9004:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8994:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8994:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9019:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9019:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9054:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9054:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9065:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9065:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9050:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9050:3:9"
																				},
																				"nativeSrc": "9050:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9050:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9074:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9074:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9029:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9029:20:9"
																		},
																		"nativeSrc": "9029:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9029:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9019:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9019:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9102:118:9",
															"nodeType": "YulBlock",
															"src": "9102:118:9",
															"statements": [
																{
																	"nativeSrc": "9117:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9117:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9131:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9131:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9121:6:9",
																			"nodeType": "YulTypedName",
																			"src": "9121:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9147:63:9",
																	"nodeType": "YulAssignment",
																	"src": "9147:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9182:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "9182:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9193:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "9193:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9178:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9178:3:9"
																				},
																				"nativeSrc": "9178:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9178:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9202:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "9202:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9157:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "9157:20:9"
																		},
																		"nativeSrc": "9157:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9157:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9147:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "9147:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8753:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8798:9:9",
														"nodeType": "YulTypedName",
														"src": "8798:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8809:7:9",
														"nodeType": "YulTypedName",
														"src": "8809:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8821:6:9",
														"nodeType": "YulTypedName",
														"src": "8821:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8829:6:9",
														"nodeType": "YulTypedName",
														"src": "8829:6:9",
														"type": ""
													}
												],
												"src": "8753:474:9"
											},
											{
												"body": {
													"nativeSrc": "9261:152:9",
													"nodeType": "YulBlock",
													"src": "9261:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9278:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9278:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9281:77:9",
																		"nodeType": "YulLiteral",
																		"src": "9281:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9271:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9271:6:9"
																},
																"nativeSrc": "9271:88:9",
																"nodeType": "YulFunctionCall",
																"src": "9271:88:9"
															},
															"nativeSrc": "9271:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "9271:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9375:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9375:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9378:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9378:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9368:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9368:6:9"
																},
																"nativeSrc": "9368:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9368:15:9"
															},
															"nativeSrc": "9368:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9368:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9399:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9399:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9402:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9402:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9392:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9392:6:9"
																},
																"nativeSrc": "9392:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9392:15:9"
															},
															"nativeSrc": "9392:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9392:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9233:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9233:180:9"
											},
											{
												"body": {
													"nativeSrc": "9470:269:9",
													"nodeType": "YulBlock",
													"src": "9470:269:9",
													"statements": [
														{
															"nativeSrc": "9480:22:9",
															"nodeType": "YulAssignment",
															"src": "9480:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9494:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9494:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9500:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9500:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9490:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9490:3:9"
																},
																"nativeSrc": "9490:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9490:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9480:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9480:6:9"
																}
															]
														},
														{
															"nativeSrc": "9511:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "9511:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9541:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9541:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9547:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9547:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9537:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9537:3:9"
																},
																"nativeSrc": "9537:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9537:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9515:18:9",
																	"nodeType": "YulTypedName",
																	"src": "9515:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9588:51:9",
																"nodeType": "YulBlock",
																"src": "9588:51:9",
																"statements": [
																	{
																		"nativeSrc": "9602:27:9",
																		"nodeType": "YulAssignment",
																		"src": "9602:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9616:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "9616:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9624:4:9",
																					"nodeType": "YulLiteral",
																					"src": "9624:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9612:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "9612:3:9"
																			},
																			"nativeSrc": "9612:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9612:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9602:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9602:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9568:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "9568:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9561:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9561:6:9"
																},
																"nativeSrc": "9561:26:9",
																"nodeType": "YulFunctionCall",
																"src": "9561:26:9"
															},
															"nativeSrc": "9558:81:9",
															"nodeType": "YulIf",
															"src": "9558:81:9"
														},
														{
															"body": {
																"nativeSrc": "9691:42:9",
																"nodeType": "YulBlock",
																"src": "9691:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9705:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9705:16:9"
																			},
																			"nativeSrc": "9705:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9705:18:9"
																		},
																		"nativeSrc": "9705:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9705:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9655:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "9655:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9678:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9678:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9686:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9686:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9675:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "9675:2:9"
																		},
																		"nativeSrc": "9675:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9675:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9652:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9652:2:9"
																},
																"nativeSrc": "9652:38:9",
																"nodeType": "YulFunctionCall",
																"src": "9652:38:9"
															},
															"nativeSrc": "9649:84:9",
															"nodeType": "YulIf",
															"src": "9649:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9419:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9454:4:9",
														"nodeType": "YulTypedName",
														"src": "9454:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9463:6:9",
														"nodeType": "YulTypedName",
														"src": "9463:6:9",
														"type": ""
													}
												],
												"src": "9419:320:9"
											},
											{
												"body": {
													"nativeSrc": "9851:70:9",
													"nodeType": "YulBlock",
													"src": "9851:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9873:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9873:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9881:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9881:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9869:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9869:3:9"
																		},
																		"nativeSrc": "9869:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9869:14:9"
																	},
																	{
																		"hexValue": "53616c65732074617267657473206e6f7420796574206d65742e",
																		"kind": "string",
																		"nativeSrc": "9885:28:9",
																		"nodeType": "YulLiteral",
																		"src": "9885:28:9",
																		"type": "",
																		"value": "Sales targets not yet met."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9862:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9862:6:9"
																},
																"nativeSrc": "9862:52:9",
																"nodeType": "YulFunctionCall",
																"src": "9862:52:9"
															},
															"nativeSrc": "9862:52:9",
															"nodeType": "YulExpressionStatement",
															"src": "9862:52:9"
														}
													]
												},
												"name": "store_literal_in_memory_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef",
												"nativeSrc": "9745:176:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9843:6:9",
														"nodeType": "YulTypedName",
														"src": "9843:6:9",
														"type": ""
													}
												],
												"src": "9745:176:9"
											},
											{
												"body": {
													"nativeSrc": "10073:220:9",
													"nodeType": "YulBlock",
													"src": "10073:220:9",
													"statements": [
														{
															"nativeSrc": "10083:74:9",
															"nodeType": "YulAssignment",
															"src": "10083:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10149:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10149:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10154:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10154:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10090:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "10090:58:9"
																},
																"nativeSrc": "10090:67:9",
																"nodeType": "YulFunctionCall",
																"src": "10090:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10083:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10083:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10255:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10255:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef",
																	"nativeSrc": "10166:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10166:88:9"
																},
																"nativeSrc": "10166:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10166:93:9"
															},
															"nativeSrc": "10166:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10166:93:9"
														},
														{
															"nativeSrc": "10268:19:9",
															"nodeType": "YulAssignment",
															"src": "10268:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10279:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10279:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10284:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10284:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10275:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10275:3:9"
																},
																"nativeSrc": "10275:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10275:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10268:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10268:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9927:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10061:3:9",
														"nodeType": "YulTypedName",
														"src": "10061:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10069:3:9",
														"nodeType": "YulTypedName",
														"src": "10069:3:9",
														"type": ""
													}
												],
												"src": "9927:366:9"
											},
											{
												"body": {
													"nativeSrc": "10470:248:9",
													"nodeType": "YulBlock",
													"src": "10470:248:9",
													"statements": [
														{
															"nativeSrc": "10480:26:9",
															"nodeType": "YulAssignment",
															"src": "10480:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10492:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10492:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10503:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10503:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10488:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10488:3:9"
																},
																"nativeSrc": "10488:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10488:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10480:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10480:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10527:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10527:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10538:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10538:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10523:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10523:3:9"
																		},
																		"nativeSrc": "10523:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10523:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10546:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10546:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10552:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10552:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10542:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10542:3:9"
																		},
																		"nativeSrc": "10542:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10542:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10516:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10516:6:9"
																},
																"nativeSrc": "10516:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10516:47:9"
															},
															"nativeSrc": "10516:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10516:47:9"
														},
														{
															"nativeSrc": "10572:139:9",
															"nodeType": "YulAssignment",
															"src": "10572:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10706:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10706:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10580:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "10580:124:9"
																},
																"nativeSrc": "10580:131:9",
																"nodeType": "YulFunctionCall",
																"src": "10580:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10572:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10572:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10299:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10450:9:9",
														"nodeType": "YulTypedName",
														"src": "10450:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10465:4:9",
														"nodeType": "YulTypedName",
														"src": "10465:4:9",
														"type": ""
													}
												],
												"src": "10299:419:9"
											},
											{
												"body": {
													"nativeSrc": "10830:127:9",
													"nodeType": "YulBlock",
													"src": "10830:127:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10852:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10852:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10860:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10860:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10848:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10848:3:9"
																		},
																		"nativeSrc": "10848:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10848:14:9"
																	},
																	{
																		"hexValue": "507269766174652053616c652068617320616c72656164792073746172746564",
																		"kind": "string",
																		"nativeSrc": "10864:34:9",
																		"nodeType": "YulLiteral",
																		"src": "10864:34:9",
																		"type": "",
																		"value": "Private Sale has already started"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10841:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10841:6:9"
																},
																"nativeSrc": "10841:58:9",
																"nodeType": "YulFunctionCall",
																"src": "10841:58:9"
															},
															"nativeSrc": "10841:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "10841:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10920:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10920:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10928:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10928:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10916:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10916:3:9"
																		},
																		"nativeSrc": "10916:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10916:15:9"
																	},
																	{
																		"hexValue": "206f7220636f6e636c756465642e",
																		"kind": "string",
																		"nativeSrc": "10933:16:9",
																		"nodeType": "YulLiteral",
																		"src": "10933:16:9",
																		"type": "",
																		"value": " or concluded."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10909:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10909:6:9"
																},
																"nativeSrc": "10909:41:9",
																"nodeType": "YulFunctionCall",
																"src": "10909:41:9"
															},
															"nativeSrc": "10909:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "10909:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804",
												"nativeSrc": "10724:233:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10822:6:9",
														"nodeType": "YulTypedName",
														"src": "10822:6:9",
														"type": ""
													}
												],
												"src": "10724:233:9"
											},
											{
												"body": {
													"nativeSrc": "11109:220:9",
													"nodeType": "YulBlock",
													"src": "11109:220:9",
													"statements": [
														{
															"nativeSrc": "11119:74:9",
															"nodeType": "YulAssignment",
															"src": "11119:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11185:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11185:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11190:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11190:2:9",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11126:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11126:58:9"
																},
																"nativeSrc": "11126:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11126:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11119:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11119:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11291:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11291:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804",
																	"nativeSrc": "11202:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11202:88:9"
																},
																"nativeSrc": "11202:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11202:93:9"
															},
															"nativeSrc": "11202:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11202:93:9"
														},
														{
															"nativeSrc": "11304:19:9",
															"nodeType": "YulAssignment",
															"src": "11304:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11315:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11315:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11320:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11320:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11311:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11311:3:9"
																},
																"nativeSrc": "11311:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11311:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11304:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11304:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10963:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11097:3:9",
														"nodeType": "YulTypedName",
														"src": "11097:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11105:3:9",
														"nodeType": "YulTypedName",
														"src": "11105:3:9",
														"type": ""
													}
												],
												"src": "10963:366:9"
											},
											{
												"body": {
													"nativeSrc": "11506:248:9",
													"nodeType": "YulBlock",
													"src": "11506:248:9",
													"statements": [
														{
															"nativeSrc": "11516:26:9",
															"nodeType": "YulAssignment",
															"src": "11516:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11528:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11528:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11539:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11539:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11524:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11524:3:9"
																},
																"nativeSrc": "11524:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11524:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11516:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11516:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11563:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11563:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11574:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11574:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11559:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11559:3:9"
																		},
																		"nativeSrc": "11559:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11559:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11582:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11582:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11588:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11588:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11578:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11578:3:9"
																		},
																		"nativeSrc": "11578:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11578:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11552:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11552:6:9"
																},
																"nativeSrc": "11552:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11552:47:9"
															},
															"nativeSrc": "11552:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11552:47:9"
														},
														{
															"nativeSrc": "11608:139:9",
															"nodeType": "YulAssignment",
															"src": "11608:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11742:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11742:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11616:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11616:124:9"
																},
																"nativeSrc": "11616:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11616:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11608:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11608:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11335:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11486:9:9",
														"nodeType": "YulTypedName",
														"src": "11486:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11501:4:9",
														"nodeType": "YulTypedName",
														"src": "11501:4:9",
														"type": ""
													}
												],
												"src": "11335:419:9"
											},
											{
												"body": {
													"nativeSrc": "11866:62:9",
													"nodeType": "YulBlock",
													"src": "11866:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11888:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11888:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11896:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11896:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11884:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11884:3:9"
																		},
																		"nativeSrc": "11884:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11884:14:9"
																	},
																	{
																		"hexValue": "4e6f2073616c65206973206163746976652e",
																		"kind": "string",
																		"nativeSrc": "11900:20:9",
																		"nodeType": "YulLiteral",
																		"src": "11900:20:9",
																		"type": "",
																		"value": "No sale is active."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11877:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11877:6:9"
																},
																"nativeSrc": "11877:44:9",
																"nodeType": "YulFunctionCall",
																"src": "11877:44:9"
															},
															"nativeSrc": "11877:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "11877:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f",
												"nativeSrc": "11760:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11858:6:9",
														"nodeType": "YulTypedName",
														"src": "11858:6:9",
														"type": ""
													}
												],
												"src": "11760:168:9"
											},
											{
												"body": {
													"nativeSrc": "12080:220:9",
													"nodeType": "YulBlock",
													"src": "12080:220:9",
													"statements": [
														{
															"nativeSrc": "12090:74:9",
															"nodeType": "YulAssignment",
															"src": "12090:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12156:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12156:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12161:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12161:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12097:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "12097:58:9"
																},
																"nativeSrc": "12097:67:9",
																"nodeType": "YulFunctionCall",
																"src": "12097:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12090:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12090:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12262:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12262:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f",
																	"nativeSrc": "12173:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "12173:88:9"
																},
																"nativeSrc": "12173:93:9",
																"nodeType": "YulFunctionCall",
																"src": "12173:93:9"
															},
															"nativeSrc": "12173:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "12173:93:9"
														},
														{
															"nativeSrc": "12275:19:9",
															"nodeType": "YulAssignment",
															"src": "12275:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12286:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "12286:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12291:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12291:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12282:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12282:3:9"
																},
																"nativeSrc": "12282:12:9",
																"nodeType": "YulFunctionCall",
																"src": "12282:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12275:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12275:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11934:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12068:3:9",
														"nodeType": "YulTypedName",
														"src": "12068:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12076:3:9",
														"nodeType": "YulTypedName",
														"src": "12076:3:9",
														"type": ""
													}
												],
												"src": "11934:366:9"
											},
											{
												"body": {
													"nativeSrc": "12477:248:9",
													"nodeType": "YulBlock",
													"src": "12477:248:9",
													"statements": [
														{
															"nativeSrc": "12487:26:9",
															"nodeType": "YulAssignment",
															"src": "12487:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12499:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12499:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12510:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12510:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12495:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12495:3:9"
																},
																"nativeSrc": "12495:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12495:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12487:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12487:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12534:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12534:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12545:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12545:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12530:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12530:3:9"
																		},
																		"nativeSrc": "12530:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12530:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12553:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12553:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12559:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12559:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12549:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12549:3:9"
																		},
																		"nativeSrc": "12549:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12549:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12523:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12523:6:9"
																},
																"nativeSrc": "12523:47:9",
																"nodeType": "YulFunctionCall",
																"src": "12523:47:9"
															},
															"nativeSrc": "12523:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "12523:47:9"
														},
														{
															"nativeSrc": "12579:139:9",
															"nodeType": "YulAssignment",
															"src": "12579:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12713:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12713:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12587:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "12587:124:9"
																},
																"nativeSrc": "12587:131:9",
																"nodeType": "YulFunctionCall",
																"src": "12587:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12579:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12579:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12306:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12457:9:9",
														"nodeType": "YulTypedName",
														"src": "12457:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12472:4:9",
														"nodeType": "YulTypedName",
														"src": "12472:4:9",
														"type": ""
													}
												],
												"src": "12306:419:9"
											},
											{
												"body": {
													"nativeSrc": "12794:80:9",
													"nodeType": "YulBlock",
													"src": "12794:80:9",
													"statements": [
														{
															"nativeSrc": "12804:22:9",
															"nodeType": "YulAssignment",
															"src": "12804:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12819:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12819:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12813:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12813:5:9"
																},
																"nativeSrc": "12813:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12813:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12804:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12804:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12862:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12862:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "12835:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "12835:26:9"
																},
																"nativeSrc": "12835:33:9",
																"nodeType": "YulFunctionCall",
																"src": "12835:33:9"
															},
															"nativeSrc": "12835:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "12835:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "12731:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12772:6:9",
														"nodeType": "YulTypedName",
														"src": "12772:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12780:3:9",
														"nodeType": "YulTypedName",
														"src": "12780:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12788:5:9",
														"nodeType": "YulTypedName",
														"src": "12788:5:9",
														"type": ""
													}
												],
												"src": "12731:143:9"
											},
											{
												"body": {
													"nativeSrc": "12957:274:9",
													"nodeType": "YulBlock",
													"src": "12957:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "13003:83:9",
																"nodeType": "YulBlock",
																"src": "13003:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13005:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "13005:77:9"
																			},
																			"nativeSrc": "13005:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "13005:79:9"
																		},
																		"nativeSrc": "13005:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "13005:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12978:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "12978:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12987:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12987:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12974:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12974:3:9"
																		},
																		"nativeSrc": "12974:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12974:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12999:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12999:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12970:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12970:3:9"
																},
																"nativeSrc": "12970:32:9",
																"nodeType": "YulFunctionCall",
																"src": "12970:32:9"
															},
															"nativeSrc": "12967:119:9",
															"nodeType": "YulIf",
															"src": "12967:119:9"
														},
														{
															"nativeSrc": "13096:128:9",
															"nodeType": "YulBlock",
															"src": "13096:128:9",
															"statements": [
																{
																	"nativeSrc": "13111:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13111:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13125:1:9",
																		"nodeType": "YulLiteral",
																		"src": "13125:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13115:6:9",
																			"nodeType": "YulTypedName",
																			"src": "13115:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13140:74:9",
																	"nodeType": "YulAssignment",
																	"src": "13140:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13186:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "13186:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13197:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "13197:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13182:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "13182:3:9"
																				},
																				"nativeSrc": "13182:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13182:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13206:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "13206:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "13150:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "13150:31:9"
																		},
																		"nativeSrc": "13150:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13150:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13140:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "13140:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "12880:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12927:9:9",
														"nodeType": "YulTypedName",
														"src": "12927:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12938:7:9",
														"nodeType": "YulTypedName",
														"src": "12938:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12950:6:9",
														"nodeType": "YulTypedName",
														"src": "12950:6:9",
														"type": ""
													}
												],
												"src": "12880:351:9"
											},
											{
												"body": {
													"nativeSrc": "13343:69:9",
													"nodeType": "YulBlock",
													"src": "13343:69:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13365:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13365:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13373:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13373:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13361:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13361:3:9"
																		},
																		"nativeSrc": "13361:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13361:14:9"
																	},
																	{
																		"hexValue": "496e76616c69642070726963652066726f6d206f7261636c65",
																		"kind": "string",
																		"nativeSrc": "13377:27:9",
																		"nodeType": "YulLiteral",
																		"src": "13377:27:9",
																		"type": "",
																		"value": "Invalid price from oracle"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13354:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13354:6:9"
																},
																"nativeSrc": "13354:51:9",
																"nodeType": "YulFunctionCall",
																"src": "13354:51:9"
															},
															"nativeSrc": "13354:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "13354:51:9"
														}
													]
												},
												"name": "store_literal_in_memory_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620",
												"nativeSrc": "13237:175:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13335:6:9",
														"nodeType": "YulTypedName",
														"src": "13335:6:9",
														"type": ""
													}
												],
												"src": "13237:175:9"
											},
											{
												"body": {
													"nativeSrc": "13564:220:9",
													"nodeType": "YulBlock",
													"src": "13564:220:9",
													"statements": [
														{
															"nativeSrc": "13574:74:9",
															"nodeType": "YulAssignment",
															"src": "13574:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13640:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13640:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13645:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13645:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13581:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13581:58:9"
																},
																"nativeSrc": "13581:67:9",
																"nodeType": "YulFunctionCall",
																"src": "13581:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13574:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13574:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13746:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13746:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620",
																	"nativeSrc": "13657:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13657:88:9"
																},
																"nativeSrc": "13657:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13657:93:9"
															},
															"nativeSrc": "13657:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13657:93:9"
														},
														{
															"nativeSrc": "13759:19:9",
															"nodeType": "YulAssignment",
															"src": "13759:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13770:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13770:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13775:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13775:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13766:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13766:3:9"
																},
																"nativeSrc": "13766:12:9",
																"nodeType": "YulFunctionCall",
																"src": "13766:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13759:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13759:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13418:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13552:3:9",
														"nodeType": "YulTypedName",
														"src": "13552:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13560:3:9",
														"nodeType": "YulTypedName",
														"src": "13560:3:9",
														"type": ""
													}
												],
												"src": "13418:366:9"
											},
											{
												"body": {
													"nativeSrc": "13961:248:9",
													"nodeType": "YulBlock",
													"src": "13961:248:9",
													"statements": [
														{
															"nativeSrc": "13971:26:9",
															"nodeType": "YulAssignment",
															"src": "13971:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13983:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13983:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13994:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13994:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13979:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13979:3:9"
																},
																"nativeSrc": "13979:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13979:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13971:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13971:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14018:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14018:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14029:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14029:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14014:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14014:3:9"
																		},
																		"nativeSrc": "14014:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14014:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14037:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14037:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14043:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14043:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14033:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14033:3:9"
																		},
																		"nativeSrc": "14033:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14033:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14007:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14007:6:9"
																},
																"nativeSrc": "14007:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14007:47:9"
															},
															"nativeSrc": "14007:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14007:47:9"
														},
														{
															"nativeSrc": "14063:139:9",
															"nodeType": "YulAssignment",
															"src": "14063:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14197:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14197:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14071:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "14071:124:9"
																},
																"nativeSrc": "14071:131:9",
																"nodeType": "YulFunctionCall",
																"src": "14071:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14063:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14063:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13790:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13941:9:9",
														"nodeType": "YulTypedName",
														"src": "13941:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13956:4:9",
														"nodeType": "YulTypedName",
														"src": "13956:4:9",
														"type": ""
													}
												],
												"src": "13790:419:9"
											},
											{
												"body": {
													"nativeSrc": "14321:66:9",
													"nodeType": "YulBlock",
													"src": "14321:66:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14343:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14343:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14351:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14351:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14339:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14339:3:9"
																		},
																		"nativeSrc": "14339:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14339:14:9"
																	},
																	{
																		"hexValue": "507269766174652053616c6520736f6c64206f75742e",
																		"kind": "string",
																		"nativeSrc": "14355:24:9",
																		"nodeType": "YulLiteral",
																		"src": "14355:24:9",
																		"type": "",
																		"value": "Private Sale sold out."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14332:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14332:6:9"
																},
																"nativeSrc": "14332:48:9",
																"nodeType": "YulFunctionCall",
																"src": "14332:48:9"
															},
															"nativeSrc": "14332:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "14332:48:9"
														}
													]
												},
												"name": "store_literal_in_memory_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb",
												"nativeSrc": "14215:172:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14313:6:9",
														"nodeType": "YulTypedName",
														"src": "14313:6:9",
														"type": ""
													}
												],
												"src": "14215:172:9"
											},
											{
												"body": {
													"nativeSrc": "14539:220:9",
													"nodeType": "YulBlock",
													"src": "14539:220:9",
													"statements": [
														{
															"nativeSrc": "14549:74:9",
															"nodeType": "YulAssignment",
															"src": "14549:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14615:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14615:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14620:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14620:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14556:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "14556:58:9"
																},
																"nativeSrc": "14556:67:9",
																"nodeType": "YulFunctionCall",
																"src": "14556:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14549:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14549:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14721:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14721:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb",
																	"nativeSrc": "14632:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "14632:88:9"
																},
																"nativeSrc": "14632:93:9",
																"nodeType": "YulFunctionCall",
																"src": "14632:93:9"
															},
															"nativeSrc": "14632:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "14632:93:9"
														},
														{
															"nativeSrc": "14734:19:9",
															"nodeType": "YulAssignment",
															"src": "14734:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14745:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14745:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14750:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14750:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14741:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14741:3:9"
																},
																"nativeSrc": "14741:12:9",
																"nodeType": "YulFunctionCall",
																"src": "14741:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14734:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14734:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14393:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14527:3:9",
														"nodeType": "YulTypedName",
														"src": "14527:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14535:3:9",
														"nodeType": "YulTypedName",
														"src": "14535:3:9",
														"type": ""
													}
												],
												"src": "14393:366:9"
											},
											{
												"body": {
													"nativeSrc": "14936:248:9",
													"nodeType": "YulBlock",
													"src": "14936:248:9",
													"statements": [
														{
															"nativeSrc": "14946:26:9",
															"nodeType": "YulAssignment",
															"src": "14946:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14958:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14958:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14969:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14969:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14954:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14954:3:9"
																},
																"nativeSrc": "14954:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14954:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14946:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14946:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14993:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14993:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15004:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15004:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14989:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14989:3:9"
																		},
																		"nativeSrc": "14989:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14989:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15012:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "15012:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15018:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "15018:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15008:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15008:3:9"
																		},
																		"nativeSrc": "15008:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15008:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14982:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14982:6:9"
																},
																"nativeSrc": "14982:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14982:47:9"
															},
															"nativeSrc": "14982:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14982:47:9"
														},
														{
															"nativeSrc": "15038:139:9",
															"nodeType": "YulAssignment",
															"src": "15038:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15172:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "15172:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15046:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "15046:124:9"
																},
																"nativeSrc": "15046:131:9",
																"nodeType": "YulFunctionCall",
																"src": "15046:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15038:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15038:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14765:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14916:9:9",
														"nodeType": "YulTypedName",
														"src": "14916:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14931:4:9",
														"nodeType": "YulTypedName",
														"src": "14931:4:9",
														"type": ""
													}
												],
												"src": "14765:419:9"
											},
											{
												"body": {
													"nativeSrc": "15296:114:9",
													"nodeType": "YulBlock",
													"src": "15296:114:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15318:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15318:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15326:1:9",
																				"nodeType": "YulLiteral",
																				"src": "15326:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15314:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15314:3:9"
																		},
																		"nativeSrc": "15314:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15314:14:9"
																	},
																	{
																		"hexValue": "4578636565647320507269766174652053616c6520746f6b656e206c696d6974",
																		"kind": "string",
																		"nativeSrc": "15330:34:9",
																		"nodeType": "YulLiteral",
																		"src": "15330:34:9",
																		"type": "",
																		"value": "Exceeds Private Sale token limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15307:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15307:6:9"
																},
																"nativeSrc": "15307:58:9",
																"nodeType": "YulFunctionCall",
																"src": "15307:58:9"
															},
															"nativeSrc": "15307:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "15307:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15386:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "15386:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15394:2:9",
																				"nodeType": "YulLiteral",
																				"src": "15394:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15382:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "15382:3:9"
																		},
																		"nativeSrc": "15382:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15382:15:9"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "15399:3:9",
																		"nodeType": "YulLiteral",
																		"src": "15399:3:9",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15375:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15375:6:9"
																},
																"nativeSrc": "15375:28:9",
																"nodeType": "YulFunctionCall",
																"src": "15375:28:9"
															},
															"nativeSrc": "15375:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "15375:28:9"
														}
													]
												},
												"name": "store_literal_in_memory_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e",
												"nativeSrc": "15190:220:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15288:6:9",
														"nodeType": "YulTypedName",
														"src": "15288:6:9",
														"type": ""
													}
												],
												"src": "15190:220:9"
											},
											{
												"body": {
													"nativeSrc": "15562:220:9",
													"nodeType": "YulBlock",
													"src": "15562:220:9",
													"statements": [
														{
															"nativeSrc": "15572:74:9",
															"nodeType": "YulAssignment",
															"src": "15572:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15638:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15638:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15643:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15643:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15579:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "15579:58:9"
																},
																"nativeSrc": "15579:67:9",
																"nodeType": "YulFunctionCall",
																"src": "15579:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15572:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15572:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15744:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15744:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e",
																	"nativeSrc": "15655:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "15655:88:9"
																},
																"nativeSrc": "15655:93:9",
																"nodeType": "YulFunctionCall",
																"src": "15655:93:9"
															},
															"nativeSrc": "15655:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "15655:93:9"
														},
														{
															"nativeSrc": "15757:19:9",
															"nodeType": "YulAssignment",
															"src": "15757:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15768:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15768:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15773:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15773:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15764:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15764:3:9"
																},
																"nativeSrc": "15764:12:9",
																"nodeType": "YulFunctionCall",
																"src": "15764:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15757:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15757:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15416:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15550:3:9",
														"nodeType": "YulTypedName",
														"src": "15550:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15558:3:9",
														"nodeType": "YulTypedName",
														"src": "15558:3:9",
														"type": ""
													}
												],
												"src": "15416:366:9"
											},
											{
												"body": {
													"nativeSrc": "15959:248:9",
													"nodeType": "YulBlock",
													"src": "15959:248:9",
													"statements": [
														{
															"nativeSrc": "15969:26:9",
															"nodeType": "YulAssignment",
															"src": "15969:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15981:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "15981:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15992:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15992:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15977:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15977:3:9"
																},
																"nativeSrc": "15977:18:9",
																"nodeType": "YulFunctionCall",
																"src": "15977:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15969:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15969:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16016:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16016:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16027:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16027:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16012:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16012:3:9"
																		},
																		"nativeSrc": "16012:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16012:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16035:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "16035:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16041:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16041:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16031:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16031:3:9"
																		},
																		"nativeSrc": "16031:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16031:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16005:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16005:6:9"
																},
																"nativeSrc": "16005:47:9",
																"nodeType": "YulFunctionCall",
																"src": "16005:47:9"
															},
															"nativeSrc": "16005:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "16005:47:9"
														},
														{
															"nativeSrc": "16061:139:9",
															"nodeType": "YulAssignment",
															"src": "16061:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16195:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "16195:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16069:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "16069:124:9"
																},
																"nativeSrc": "16069:131:9",
																"nodeType": "YulFunctionCall",
																"src": "16069:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16061:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16061:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15788:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15939:9:9",
														"nodeType": "YulTypedName",
														"src": "15939:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15954:4:9",
														"nodeType": "YulTypedName",
														"src": "15954:4:9",
														"type": ""
													}
												],
												"src": "15788:419:9"
											},
											{
												"body": {
													"nativeSrc": "16319:62:9",
													"nodeType": "YulBlock",
													"src": "16319:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16341:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16341:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16349:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16349:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16337:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16337:3:9"
																		},
																		"nativeSrc": "16337:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16337:14:9"
																	},
																	{
																		"hexValue": "5072652d53616c6520736f6c64206f75742e",
																		"kind": "string",
																		"nativeSrc": "16353:20:9",
																		"nodeType": "YulLiteral",
																		"src": "16353:20:9",
																		"type": "",
																		"value": "Pre-Sale sold out."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16330:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16330:6:9"
																},
																"nativeSrc": "16330:44:9",
																"nodeType": "YulFunctionCall",
																"src": "16330:44:9"
															},
															"nativeSrc": "16330:44:9",
															"nodeType": "YulExpressionStatement",
															"src": "16330:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513",
												"nativeSrc": "16213:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16311:6:9",
														"nodeType": "YulTypedName",
														"src": "16311:6:9",
														"type": ""
													}
												],
												"src": "16213:168:9"
											},
											{
												"body": {
													"nativeSrc": "16533:220:9",
													"nodeType": "YulBlock",
													"src": "16533:220:9",
													"statements": [
														{
															"nativeSrc": "16543:74:9",
															"nodeType": "YulAssignment",
															"src": "16543:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16609:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16609:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16614:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16614:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16550:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "16550:58:9"
																},
																"nativeSrc": "16550:67:9",
																"nodeType": "YulFunctionCall",
																"src": "16550:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16543:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16543:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16715:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16715:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513",
																	"nativeSrc": "16626:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "16626:88:9"
																},
																"nativeSrc": "16626:93:9",
																"nodeType": "YulFunctionCall",
																"src": "16626:93:9"
															},
															"nativeSrc": "16626:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "16626:93:9"
														},
														{
															"nativeSrc": "16728:19:9",
															"nodeType": "YulAssignment",
															"src": "16728:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16739:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16739:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16744:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16744:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16735:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16735:3:9"
																},
																"nativeSrc": "16735:12:9",
																"nodeType": "YulFunctionCall",
																"src": "16735:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16728:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16728:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16387:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16521:3:9",
														"nodeType": "YulTypedName",
														"src": "16521:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16529:3:9",
														"nodeType": "YulTypedName",
														"src": "16529:3:9",
														"type": ""
													}
												],
												"src": "16387:366:9"
											},
											{
												"body": {
													"nativeSrc": "16930:248:9",
													"nodeType": "YulBlock",
													"src": "16930:248:9",
													"statements": [
														{
															"nativeSrc": "16940:26:9",
															"nodeType": "YulAssignment",
															"src": "16940:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16952:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16952:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16963:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16963:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16948:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16948:3:9"
																},
																"nativeSrc": "16948:18:9",
																"nodeType": "YulFunctionCall",
																"src": "16948:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16940:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16940:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16987:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16987:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16998:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16998:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16983:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16983:3:9"
																		},
																		"nativeSrc": "16983:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16983:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17006:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "17006:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17012:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17012:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17002:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17002:3:9"
																		},
																		"nativeSrc": "17002:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17002:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16976:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16976:6:9"
																},
																"nativeSrc": "16976:47:9",
																"nodeType": "YulFunctionCall",
																"src": "16976:47:9"
															},
															"nativeSrc": "16976:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "16976:47:9"
														},
														{
															"nativeSrc": "17032:139:9",
															"nodeType": "YulAssignment",
															"src": "17032:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17166:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "17166:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17040:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "17040:124:9"
																},
																"nativeSrc": "17040:131:9",
																"nodeType": "YulFunctionCall",
																"src": "17040:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17032:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17032:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16759:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16910:9:9",
														"nodeType": "YulTypedName",
														"src": "16910:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16925:4:9",
														"nodeType": "YulTypedName",
														"src": "16925:4:9",
														"type": ""
													}
												],
												"src": "16759:419:9"
											},
											{
												"body": {
													"nativeSrc": "17290:74:9",
													"nodeType": "YulBlock",
													"src": "17290:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17312:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "17312:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17320:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17320:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17308:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17308:3:9"
																		},
																		"nativeSrc": "17308:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17308:14:9"
																	},
																	{
																		"hexValue": "507572636861736520616d6f756e74206f7574206f66206c696d6974732e",
																		"kind": "string",
																		"nativeSrc": "17324:32:9",
																		"nodeType": "YulLiteral",
																		"src": "17324:32:9",
																		"type": "",
																		"value": "Purchase amount out of limits."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17301:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17301:6:9"
																},
																"nativeSrc": "17301:56:9",
																"nodeType": "YulFunctionCall",
																"src": "17301:56:9"
															},
															"nativeSrc": "17301:56:9",
															"nodeType": "YulExpressionStatement",
															"src": "17301:56:9"
														}
													]
												},
												"name": "store_literal_in_memory_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec",
												"nativeSrc": "17184:180:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17282:6:9",
														"nodeType": "YulTypedName",
														"src": "17282:6:9",
														"type": ""
													}
												],
												"src": "17184:180:9"
											},
											{
												"body": {
													"nativeSrc": "17516:220:9",
													"nodeType": "YulBlock",
													"src": "17516:220:9",
													"statements": [
														{
															"nativeSrc": "17526:74:9",
															"nodeType": "YulAssignment",
															"src": "17526:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17592:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17592:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17597:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17597:2:9",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17533:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "17533:58:9"
																},
																"nativeSrc": "17533:67:9",
																"nodeType": "YulFunctionCall",
																"src": "17533:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17526:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17526:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17698:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17698:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec",
																	"nativeSrc": "17609:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "17609:88:9"
																},
																"nativeSrc": "17609:93:9",
																"nodeType": "YulFunctionCall",
																"src": "17609:93:9"
															},
															"nativeSrc": "17609:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "17609:93:9"
														},
														{
															"nativeSrc": "17711:19:9",
															"nodeType": "YulAssignment",
															"src": "17711:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17722:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17722:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17727:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17727:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17718:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17718:3:9"
																},
																"nativeSrc": "17718:12:9",
																"nodeType": "YulFunctionCall",
																"src": "17718:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17711:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17711:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17370:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17504:3:9",
														"nodeType": "YulTypedName",
														"src": "17504:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17512:3:9",
														"nodeType": "YulTypedName",
														"src": "17512:3:9",
														"type": ""
													}
												],
												"src": "17370:366:9"
											},
											{
												"body": {
													"nativeSrc": "17913:248:9",
													"nodeType": "YulBlock",
													"src": "17913:248:9",
													"statements": [
														{
															"nativeSrc": "17923:26:9",
															"nodeType": "YulAssignment",
															"src": "17923:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17935:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17935:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17946:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17946:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17931:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17931:3:9"
																},
																"nativeSrc": "17931:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17931:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17923:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17923:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17970:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17970:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17981:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17981:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17966:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17966:3:9"
																		},
																		"nativeSrc": "17966:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17966:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17989:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "17989:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17995:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17995:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17985:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17985:3:9"
																		},
																		"nativeSrc": "17985:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17985:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17959:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17959:6:9"
																},
																"nativeSrc": "17959:47:9",
																"nodeType": "YulFunctionCall",
																"src": "17959:47:9"
															},
															"nativeSrc": "17959:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "17959:47:9"
														},
														{
															"nativeSrc": "18015:139:9",
															"nodeType": "YulAssignment",
															"src": "18015:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18149:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "18149:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18023:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "18023:124:9"
																},
																"nativeSrc": "18023:131:9",
																"nodeType": "YulFunctionCall",
																"src": "18023:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18015:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18015:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17742:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17893:9:9",
														"nodeType": "YulTypedName",
														"src": "17893:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17908:4:9",
														"nodeType": "YulTypedName",
														"src": "17908:4:9",
														"type": ""
													}
												],
												"src": "17742:419:9"
											},
											{
												"body": {
													"nativeSrc": "18273:73:9",
													"nodeType": "YulBlock",
													"src": "18273:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18295:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "18295:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18303:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18303:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18291:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18291:3:9"
																		},
																		"nativeSrc": "18291:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18291:14:9"
																	},
																	{
																		"hexValue": "45786365656473205072652d53616c6520746f6b656e206c696d69742e",
																		"kind": "string",
																		"nativeSrc": "18307:31:9",
																		"nodeType": "YulLiteral",
																		"src": "18307:31:9",
																		"type": "",
																		"value": "Exceeds Pre-Sale token limit."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18284:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18284:6:9"
																},
																"nativeSrc": "18284:55:9",
																"nodeType": "YulFunctionCall",
																"src": "18284:55:9"
															},
															"nativeSrc": "18284:55:9",
															"nodeType": "YulExpressionStatement",
															"src": "18284:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67",
												"nativeSrc": "18167:179:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18265:6:9",
														"nodeType": "YulTypedName",
														"src": "18265:6:9",
														"type": ""
													}
												],
												"src": "18167:179:9"
											},
											{
												"body": {
													"nativeSrc": "18498:220:9",
													"nodeType": "YulBlock",
													"src": "18498:220:9",
													"statements": [
														{
															"nativeSrc": "18508:74:9",
															"nodeType": "YulAssignment",
															"src": "18508:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18574:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18574:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18579:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18579:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18515:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "18515:58:9"
																},
																"nativeSrc": "18515:67:9",
																"nodeType": "YulFunctionCall",
																"src": "18515:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18508:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18508:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18680:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18680:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67",
																	"nativeSrc": "18591:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "18591:88:9"
																},
																"nativeSrc": "18591:93:9",
																"nodeType": "YulFunctionCall",
																"src": "18591:93:9"
															},
															"nativeSrc": "18591:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "18591:93:9"
														},
														{
															"nativeSrc": "18693:19:9",
															"nodeType": "YulAssignment",
															"src": "18693:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18704:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18704:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18709:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18709:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18700:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18700:3:9"
																},
																"nativeSrc": "18700:12:9",
																"nodeType": "YulFunctionCall",
																"src": "18700:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18693:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18693:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18352:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18486:3:9",
														"nodeType": "YulTypedName",
														"src": "18486:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18494:3:9",
														"nodeType": "YulTypedName",
														"src": "18494:3:9",
														"type": ""
													}
												],
												"src": "18352:366:9"
											},
											{
												"body": {
													"nativeSrc": "18895:248:9",
													"nodeType": "YulBlock",
													"src": "18895:248:9",
													"statements": [
														{
															"nativeSrc": "18905:26:9",
															"nodeType": "YulAssignment",
															"src": "18905:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18917:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18917:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18928:2:9",
																		"nodeType": "YulLiteral",
																		"src": "18928:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18913:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18913:3:9"
																},
																"nativeSrc": "18913:18:9",
																"nodeType": "YulFunctionCall",
																"src": "18913:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18905:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18905:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18952:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18952:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18963:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18963:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18948:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18948:3:9"
																		},
																		"nativeSrc": "18948:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18948:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18971:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "18971:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18977:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18977:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18967:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18967:3:9"
																		},
																		"nativeSrc": "18967:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18967:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18941:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18941:6:9"
																},
																"nativeSrc": "18941:47:9",
																"nodeType": "YulFunctionCall",
																"src": "18941:47:9"
															},
															"nativeSrc": "18941:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "18941:47:9"
														},
														{
															"nativeSrc": "18997:139:9",
															"nodeType": "YulAssignment",
															"src": "18997:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19131:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "19131:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19005:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "19005:124:9"
																},
																"nativeSrc": "19005:131:9",
																"nodeType": "YulFunctionCall",
																"src": "19005:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18997:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18997:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18724:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18875:9:9",
														"nodeType": "YulTypedName",
														"src": "18875:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18890:4:9",
														"nodeType": "YulTypedName",
														"src": "18890:4:9",
														"type": ""
													}
												],
												"src": "18724:419:9"
											},
											{
												"body": {
													"nativeSrc": "19255:114:9",
													"nodeType": "YulBlock",
													"src": "19255:114:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19277:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "19277:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19285:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19285:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19273:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19273:3:9"
																		},
																		"nativeSrc": "19273:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19273:14:9"
																	},
																	{
																		"hexValue": "56657374696e6720706572696f64206e6f742079657420636f6d706c65746564",
																		"kind": "string",
																		"nativeSrc": "19289:34:9",
																		"nodeType": "YulLiteral",
																		"src": "19289:34:9",
																		"type": "",
																		"value": "Vesting period not yet completed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19266:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19266:6:9"
																},
																"nativeSrc": "19266:58:9",
																"nodeType": "YulFunctionCall",
																"src": "19266:58:9"
															},
															"nativeSrc": "19266:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "19266:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19345:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "19345:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19353:2:9",
																				"nodeType": "YulLiteral",
																				"src": "19353:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19341:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19341:3:9"
																		},
																		"nativeSrc": "19341:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19341:15:9"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "19358:3:9",
																		"nodeType": "YulLiteral",
																		"src": "19358:3:9",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19334:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19334:6:9"
																},
																"nativeSrc": "19334:28:9",
																"nodeType": "YulFunctionCall",
																"src": "19334:28:9"
															},
															"nativeSrc": "19334:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "19334:28:9"
														}
													]
												},
												"name": "store_literal_in_memory_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d",
												"nativeSrc": "19149:220:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19247:6:9",
														"nodeType": "YulTypedName",
														"src": "19247:6:9",
														"type": ""
													}
												],
												"src": "19149:220:9"
											},
											{
												"body": {
													"nativeSrc": "19521:220:9",
													"nodeType": "YulBlock",
													"src": "19521:220:9",
													"statements": [
														{
															"nativeSrc": "19531:74:9",
															"nodeType": "YulAssignment",
															"src": "19531:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19597:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19597:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19602:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19602:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19538:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "19538:58:9"
																},
																"nativeSrc": "19538:67:9",
																"nodeType": "YulFunctionCall",
																"src": "19538:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19531:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19531:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19703:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19703:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d",
																	"nativeSrc": "19614:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "19614:88:9"
																},
																"nativeSrc": "19614:93:9",
																"nodeType": "YulFunctionCall",
																"src": "19614:93:9"
															},
															"nativeSrc": "19614:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "19614:93:9"
														},
														{
															"nativeSrc": "19716:19:9",
															"nodeType": "YulAssignment",
															"src": "19716:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19727:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "19727:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19732:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19732:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19723:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19723:3:9"
																},
																"nativeSrc": "19723:12:9",
																"nodeType": "YulFunctionCall",
																"src": "19723:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19716:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19716:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19375:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19509:3:9",
														"nodeType": "YulTypedName",
														"src": "19509:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19517:3:9",
														"nodeType": "YulTypedName",
														"src": "19517:3:9",
														"type": ""
													}
												],
												"src": "19375:366:9"
											},
											{
												"body": {
													"nativeSrc": "19918:248:9",
													"nodeType": "YulBlock",
													"src": "19918:248:9",
													"statements": [
														{
															"nativeSrc": "19928:26:9",
															"nodeType": "YulAssignment",
															"src": "19928:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19940:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "19940:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19951:2:9",
																		"nodeType": "YulLiteral",
																		"src": "19951:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19936:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19936:3:9"
																},
																"nativeSrc": "19936:18:9",
																"nodeType": "YulFunctionCall",
																"src": "19936:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19928:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "19928:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19975:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "19975:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19986:1:9",
																				"nodeType": "YulLiteral",
																				"src": "19986:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19971:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19971:3:9"
																		},
																		"nativeSrc": "19971:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19971:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19994:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "19994:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20000:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20000:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19990:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19990:3:9"
																		},
																		"nativeSrc": "19990:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19990:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19964:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19964:6:9"
																},
																"nativeSrc": "19964:47:9",
																"nodeType": "YulFunctionCall",
																"src": "19964:47:9"
															},
															"nativeSrc": "19964:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "19964:47:9"
														},
														{
															"nativeSrc": "20020:139:9",
															"nodeType": "YulAssignment",
															"src": "20020:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20154:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "20154:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20028:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "20028:124:9"
																},
																"nativeSrc": "20028:131:9",
																"nodeType": "YulFunctionCall",
																"src": "20028:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20020:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20020:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19747:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19898:9:9",
														"nodeType": "YulTypedName",
														"src": "19898:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19913:4:9",
														"nodeType": "YulTypedName",
														"src": "19913:4:9",
														"type": ""
													}
												],
												"src": "19747:419:9"
											},
											{
												"body": {
													"nativeSrc": "20278:71:9",
													"nodeType": "YulBlock",
													"src": "20278:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20300:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "20300:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20308:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20308:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20296:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20296:3:9"
																		},
																		"nativeSrc": "20296:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20296:14:9"
																	},
																	{
																		"hexValue": "4e6f2076657374656420746f6b656e7320746f2072656c65617365",
																		"kind": "string",
																		"nativeSrc": "20312:29:9",
																		"nodeType": "YulLiteral",
																		"src": "20312:29:9",
																		"type": "",
																		"value": "No vested tokens to release"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20289:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20289:6:9"
																},
																"nativeSrc": "20289:53:9",
																"nodeType": "YulFunctionCall",
																"src": "20289:53:9"
															},
															"nativeSrc": "20289:53:9",
															"nodeType": "YulExpressionStatement",
															"src": "20289:53:9"
														}
													]
												},
												"name": "store_literal_in_memory_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b",
												"nativeSrc": "20172:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20270:6:9",
														"nodeType": "YulTypedName",
														"src": "20270:6:9",
														"type": ""
													}
												],
												"src": "20172:177:9"
											},
											{
												"body": {
													"nativeSrc": "20501:220:9",
													"nodeType": "YulBlock",
													"src": "20501:220:9",
													"statements": [
														{
															"nativeSrc": "20511:74:9",
															"nodeType": "YulAssignment",
															"src": "20511:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20577:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20577:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20582:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20582:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20518:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "20518:58:9"
																},
																"nativeSrc": "20518:67:9",
																"nodeType": "YulFunctionCall",
																"src": "20518:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20511:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20511:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20683:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20683:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b",
																	"nativeSrc": "20594:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "20594:88:9"
																},
																"nativeSrc": "20594:93:9",
																"nodeType": "YulFunctionCall",
																"src": "20594:93:9"
															},
															"nativeSrc": "20594:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "20594:93:9"
														},
														{
															"nativeSrc": "20696:19:9",
															"nodeType": "YulAssignment",
															"src": "20696:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20707:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "20707:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20712:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20712:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20703:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20703:3:9"
																},
																"nativeSrc": "20703:12:9",
																"nodeType": "YulFunctionCall",
																"src": "20703:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20696:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20696:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20355:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20489:3:9",
														"nodeType": "YulTypedName",
														"src": "20489:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20497:3:9",
														"nodeType": "YulTypedName",
														"src": "20497:3:9",
														"type": ""
													}
												],
												"src": "20355:366:9"
											},
											{
												"body": {
													"nativeSrc": "20898:248:9",
													"nodeType": "YulBlock",
													"src": "20898:248:9",
													"statements": [
														{
															"nativeSrc": "20908:26:9",
															"nodeType": "YulAssignment",
															"src": "20908:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20920:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "20920:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20931:2:9",
																		"nodeType": "YulLiteral",
																		"src": "20931:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20916:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "20916:3:9"
																},
																"nativeSrc": "20916:18:9",
																"nodeType": "YulFunctionCall",
																"src": "20916:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20908:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "20908:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20955:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20955:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20966:1:9",
																				"nodeType": "YulLiteral",
																				"src": "20966:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20951:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20951:3:9"
																		},
																		"nativeSrc": "20951:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20951:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20974:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "20974:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20980:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "20980:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20970:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "20970:3:9"
																		},
																		"nativeSrc": "20970:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "20970:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20944:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "20944:6:9"
																},
																"nativeSrc": "20944:47:9",
																"nodeType": "YulFunctionCall",
																"src": "20944:47:9"
															},
															"nativeSrc": "20944:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "20944:47:9"
														},
														{
															"nativeSrc": "21000:139:9",
															"nodeType": "YulAssignment",
															"src": "21000:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21134:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "21134:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21008:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "21008:124:9"
																},
																"nativeSrc": "21008:131:9",
																"nodeType": "YulFunctionCall",
																"src": "21008:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21000:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21000:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20727:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20878:9:9",
														"nodeType": "YulTypedName",
														"src": "20878:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20893:4:9",
														"nodeType": "YulTypedName",
														"src": "20893:4:9",
														"type": ""
													}
												],
												"src": "20727:419:9"
											},
											{
												"body": {
													"nativeSrc": "21258:120:9",
													"nodeType": "YulBlock",
													"src": "21258:120:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21280:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "21280:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21288:1:9",
																				"nodeType": "YulLiteral",
																				"src": "21288:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21276:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21276:3:9"
																		},
																		"nativeSrc": "21276:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21276:14:9"
																	},
																	{
																		"hexValue": "507269766174652053616c652073686f756c6420626520636f6e636c75646564",
																		"kind": "string",
																		"nativeSrc": "21292:34:9",
																		"nodeType": "YulLiteral",
																		"src": "21292:34:9",
																		"type": "",
																		"value": "Private Sale should be concluded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21269:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21269:6:9"
																},
																"nativeSrc": "21269:58:9",
																"nodeType": "YulFunctionCall",
																"src": "21269:58:9"
															},
															"nativeSrc": "21269:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "21269:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21348:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "21348:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21356:2:9",
																				"nodeType": "YulLiteral",
																				"src": "21356:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21344:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21344:3:9"
																		},
																		"nativeSrc": "21344:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21344:15:9"
																	},
																	{
																		"hexValue": "2066697273742e",
																		"kind": "string",
																		"nativeSrc": "21361:9:9",
																		"nodeType": "YulLiteral",
																		"src": "21361:9:9",
																		"type": "",
																		"value": " first."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21337:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21337:6:9"
																},
																"nativeSrc": "21337:34:9",
																"nodeType": "YulFunctionCall",
																"src": "21337:34:9"
															},
															"nativeSrc": "21337:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "21337:34:9"
														}
													]
												},
												"name": "store_literal_in_memory_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878",
												"nativeSrc": "21152:226:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21250:6:9",
														"nodeType": "YulTypedName",
														"src": "21250:6:9",
														"type": ""
													}
												],
												"src": "21152:226:9"
											},
											{
												"body": {
													"nativeSrc": "21530:220:9",
													"nodeType": "YulBlock",
													"src": "21530:220:9",
													"statements": [
														{
															"nativeSrc": "21540:74:9",
															"nodeType": "YulAssignment",
															"src": "21540:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21606:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21606:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21611:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21611:2:9",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21547:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "21547:58:9"
																},
																"nativeSrc": "21547:67:9",
																"nodeType": "YulFunctionCall",
																"src": "21547:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21540:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21540:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21712:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21712:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878",
																	"nativeSrc": "21623:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "21623:88:9"
																},
																"nativeSrc": "21623:93:9",
																"nodeType": "YulFunctionCall",
																"src": "21623:93:9"
															},
															"nativeSrc": "21623:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "21623:93:9"
														},
														{
															"nativeSrc": "21725:19:9",
															"nodeType": "YulAssignment",
															"src": "21725:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21736:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "21736:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21741:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21741:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21732:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21732:3:9"
																},
																"nativeSrc": "21732:12:9",
																"nodeType": "YulFunctionCall",
																"src": "21732:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21725:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21725:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21384:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21518:3:9",
														"nodeType": "YulTypedName",
														"src": "21518:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21526:3:9",
														"nodeType": "YulTypedName",
														"src": "21526:3:9",
														"type": ""
													}
												],
												"src": "21384:366:9"
											},
											{
												"body": {
													"nativeSrc": "21927:248:9",
													"nodeType": "YulBlock",
													"src": "21927:248:9",
													"statements": [
														{
															"nativeSrc": "21937:26:9",
															"nodeType": "YulAssignment",
															"src": "21937:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21949:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "21949:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21960:2:9",
																		"nodeType": "YulLiteral",
																		"src": "21960:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21945:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "21945:3:9"
																},
																"nativeSrc": "21945:18:9",
																"nodeType": "YulFunctionCall",
																"src": "21945:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21937:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "21937:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21984:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "21984:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21995:1:9",
																				"nodeType": "YulLiteral",
																				"src": "21995:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21980:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21980:3:9"
																		},
																		"nativeSrc": "21980:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21980:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22003:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "22003:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22009:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22009:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21999:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "21999:3:9"
																		},
																		"nativeSrc": "21999:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "21999:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21973:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "21973:6:9"
																},
																"nativeSrc": "21973:47:9",
																"nodeType": "YulFunctionCall",
																"src": "21973:47:9"
															},
															"nativeSrc": "21973:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "21973:47:9"
														},
														{
															"nativeSrc": "22029:139:9",
															"nodeType": "YulAssignment",
															"src": "22029:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22163:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "22163:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22037:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "22037:124:9"
																},
																"nativeSrc": "22037:131:9",
																"nodeType": "YulFunctionCall",
																"src": "22037:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22029:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "22029:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21756:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21907:9:9",
														"nodeType": "YulTypedName",
														"src": "21907:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21922:4:9",
														"nodeType": "YulTypedName",
														"src": "21922:4:9",
														"type": ""
													}
												],
												"src": "21756:419:9"
											},
											{
												"body": {
													"nativeSrc": "22287:76:9",
													"nodeType": "YulBlock",
													"src": "22287:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22309:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "22309:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22317:1:9",
																				"nodeType": "YulLiteral",
																				"src": "22317:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22305:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22305:3:9"
																		},
																		"nativeSrc": "22305:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22305:14:9"
																	},
																	{
																		"hexValue": "507269766174652053616c6520746172676574206e6f7420726561636865642e",
																		"kind": "string",
																		"nativeSrc": "22321:34:9",
																		"nodeType": "YulLiteral",
																		"src": "22321:34:9",
																		"type": "",
																		"value": "Private Sale target not reached."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22298:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22298:6:9"
																},
																"nativeSrc": "22298:58:9",
																"nodeType": "YulFunctionCall",
																"src": "22298:58:9"
															},
															"nativeSrc": "22298:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "22298:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e",
												"nativeSrc": "22181:182:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22279:6:9",
														"nodeType": "YulTypedName",
														"src": "22279:6:9",
														"type": ""
													}
												],
												"src": "22181:182:9"
											},
											{
												"body": {
													"nativeSrc": "22515:220:9",
													"nodeType": "YulBlock",
													"src": "22515:220:9",
													"statements": [
														{
															"nativeSrc": "22525:74:9",
															"nodeType": "YulAssignment",
															"src": "22525:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22591:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22591:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22596:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22596:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22532:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "22532:58:9"
																},
																"nativeSrc": "22532:67:9",
																"nodeType": "YulFunctionCall",
																"src": "22532:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22525:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22525:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22697:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22697:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e",
																	"nativeSrc": "22608:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "22608:88:9"
																},
																"nativeSrc": "22608:93:9",
																"nodeType": "YulFunctionCall",
																"src": "22608:93:9"
															},
															"nativeSrc": "22608:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "22608:93:9"
														},
														{
															"nativeSrc": "22710:19:9",
															"nodeType": "YulAssignment",
															"src": "22710:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22721:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "22721:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22726:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22726:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22717:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22717:3:9"
																},
																"nativeSrc": "22717:12:9",
																"nodeType": "YulFunctionCall",
																"src": "22717:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22710:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22710:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22369:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22503:3:9",
														"nodeType": "YulTypedName",
														"src": "22503:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22511:3:9",
														"nodeType": "YulTypedName",
														"src": "22511:3:9",
														"type": ""
													}
												],
												"src": "22369:366:9"
											},
											{
												"body": {
													"nativeSrc": "22912:248:9",
													"nodeType": "YulBlock",
													"src": "22912:248:9",
													"statements": [
														{
															"nativeSrc": "22922:26:9",
															"nodeType": "YulAssignment",
															"src": "22922:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22934:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "22934:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22945:2:9",
																		"nodeType": "YulLiteral",
																		"src": "22945:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22930:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "22930:3:9"
																},
																"nativeSrc": "22930:18:9",
																"nodeType": "YulFunctionCall",
																"src": "22930:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22922:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "22922:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22969:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22969:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22980:1:9",
																				"nodeType": "YulLiteral",
																				"src": "22980:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22965:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22965:3:9"
																		},
																		"nativeSrc": "22965:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22965:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22988:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "22988:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22994:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "22994:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22984:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "22984:3:9"
																		},
																		"nativeSrc": "22984:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "22984:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22958:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "22958:6:9"
																},
																"nativeSrc": "22958:47:9",
																"nodeType": "YulFunctionCall",
																"src": "22958:47:9"
															},
															"nativeSrc": "22958:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "22958:47:9"
														},
														{
															"nativeSrc": "23014:139:9",
															"nodeType": "YulAssignment",
															"src": "23014:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23148:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "23148:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23022:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "23022:124:9"
																},
																"nativeSrc": "23022:131:9",
																"nodeType": "YulFunctionCall",
																"src": "23022:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23014:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23014:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22741:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22892:9:9",
														"nodeType": "YulTypedName",
														"src": "22892:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22907:4:9",
														"nodeType": "YulTypedName",
														"src": "22907:4:9",
														"type": ""
													}
												],
												"src": "22741:419:9"
											},
											{
												"body": {
													"nativeSrc": "23272:73:9",
													"nodeType": "YulBlock",
													"src": "23272:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23294:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "23294:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23302:1:9",
																				"nodeType": "YulLiteral",
																				"src": "23302:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23290:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23290:3:9"
																		},
																		"nativeSrc": "23290:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23290:14:9"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "23306:31:9",
																		"nodeType": "YulLiteral",
																		"src": "23306:31:9",
																		"type": "",
																		"value": "Amount must be greater than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23283:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "23283:6:9"
																},
																"nativeSrc": "23283:55:9",
																"nodeType": "YulFunctionCall",
																"src": "23283:55:9"
															},
															"nativeSrc": "23283:55:9",
															"nodeType": "YulExpressionStatement",
															"src": "23283:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
												"nativeSrc": "23166:179:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23264:6:9",
														"nodeType": "YulTypedName",
														"src": "23264:6:9",
														"type": ""
													}
												],
												"src": "23166:179:9"
											},
											{
												"body": {
													"nativeSrc": "23497:220:9",
													"nodeType": "YulBlock",
													"src": "23497:220:9",
													"statements": [
														{
															"nativeSrc": "23507:74:9",
															"nodeType": "YulAssignment",
															"src": "23507:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23573:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23573:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23578:2:9",
																		"nodeType": "YulLiteral",
																		"src": "23578:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23514:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "23514:58:9"
																},
																"nativeSrc": "23514:67:9",
																"nodeType": "YulFunctionCall",
																"src": "23514:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23507:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23507:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23679:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23679:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																	"nativeSrc": "23590:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "23590:88:9"
																},
																"nativeSrc": "23590:93:9",
																"nodeType": "YulFunctionCall",
																"src": "23590:93:9"
															},
															"nativeSrc": "23590:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "23590:93:9"
														},
														{
															"nativeSrc": "23692:19:9",
															"nodeType": "YulAssignment",
															"src": "23692:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23703:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "23703:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23708:2:9",
																		"nodeType": "YulLiteral",
																		"src": "23708:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23699:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23699:3:9"
																},
																"nativeSrc": "23699:12:9",
																"nodeType": "YulFunctionCall",
																"src": "23699:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23692:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23692:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23351:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23485:3:9",
														"nodeType": "YulTypedName",
														"src": "23485:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23493:3:9",
														"nodeType": "YulTypedName",
														"src": "23493:3:9",
														"type": ""
													}
												],
												"src": "23351:366:9"
											},
											{
												"body": {
													"nativeSrc": "23894:248:9",
													"nodeType": "YulBlock",
													"src": "23894:248:9",
													"statements": [
														{
															"nativeSrc": "23904:26:9",
															"nodeType": "YulAssignment",
															"src": "23904:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23916:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "23916:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23927:2:9",
																		"nodeType": "YulLiteral",
																		"src": "23927:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23912:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "23912:3:9"
																},
																"nativeSrc": "23912:18:9",
																"nodeType": "YulFunctionCall",
																"src": "23912:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23904:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23904:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23951:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23951:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23962:1:9",
																				"nodeType": "YulLiteral",
																				"src": "23962:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23947:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23947:3:9"
																		},
																		"nativeSrc": "23947:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23947:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23970:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "23970:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23976:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "23976:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23966:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "23966:3:9"
																		},
																		"nativeSrc": "23966:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "23966:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23940:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "23940:6:9"
																},
																"nativeSrc": "23940:47:9",
																"nodeType": "YulFunctionCall",
																"src": "23940:47:9"
															},
															"nativeSrc": "23940:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "23940:47:9"
														},
														{
															"nativeSrc": "23996:139:9",
															"nodeType": "YulAssignment",
															"src": "23996:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24130:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "24130:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24004:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "24004:124:9"
																},
																"nativeSrc": "24004:131:9",
																"nodeType": "YulFunctionCall",
																"src": "24004:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23996:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "23996:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23723:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23874:9:9",
														"nodeType": "YulTypedName",
														"src": "23874:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23889:4:9",
														"nodeType": "YulTypedName",
														"src": "23889:4:9",
														"type": ""
													}
												],
												"src": "23723:419:9"
											},
											{
												"body": {
													"nativeSrc": "24254:73:9",
													"nodeType": "YulBlock",
													"src": "24254:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24276:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "24276:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24284:1:9",
																				"nodeType": "YulLiteral",
																				"src": "24284:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24272:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24272:3:9"
																		},
																		"nativeSrc": "24272:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24272:14:9"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e636520746f207374616b65",
																		"kind": "string",
																		"nativeSrc": "24288:31:9",
																		"nodeType": "YulLiteral",
																		"src": "24288:31:9",
																		"type": "",
																		"value": "Insufficient balance to stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24265:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24265:6:9"
																},
																"nativeSrc": "24265:55:9",
																"nodeType": "YulFunctionCall",
																"src": "24265:55:9"
															},
															"nativeSrc": "24265:55:9",
															"nodeType": "YulExpressionStatement",
															"src": "24265:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0",
												"nativeSrc": "24148:179:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24246:6:9",
														"nodeType": "YulTypedName",
														"src": "24246:6:9",
														"type": ""
													}
												],
												"src": "24148:179:9"
											},
											{
												"body": {
													"nativeSrc": "24479:220:9",
													"nodeType": "YulBlock",
													"src": "24479:220:9",
													"statements": [
														{
															"nativeSrc": "24489:74:9",
															"nodeType": "YulAssignment",
															"src": "24489:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24555:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24555:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24560:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24560:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24496:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "24496:58:9"
																},
																"nativeSrc": "24496:67:9",
																"nodeType": "YulFunctionCall",
																"src": "24496:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24489:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24489:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24661:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24661:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0",
																	"nativeSrc": "24572:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "24572:88:9"
																},
																"nativeSrc": "24572:93:9",
																"nodeType": "YulFunctionCall",
																"src": "24572:93:9"
															},
															"nativeSrc": "24572:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "24572:93:9"
														},
														{
															"nativeSrc": "24674:19:9",
															"nodeType": "YulAssignment",
															"src": "24674:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24685:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "24685:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24690:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24690:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24681:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24681:3:9"
																},
																"nativeSrc": "24681:12:9",
																"nodeType": "YulFunctionCall",
																"src": "24681:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24674:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24674:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24333:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24467:3:9",
														"nodeType": "YulTypedName",
														"src": "24467:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24475:3:9",
														"nodeType": "YulTypedName",
														"src": "24475:3:9",
														"type": ""
													}
												],
												"src": "24333:366:9"
											},
											{
												"body": {
													"nativeSrc": "24876:248:9",
													"nodeType": "YulBlock",
													"src": "24876:248:9",
													"statements": [
														{
															"nativeSrc": "24886:26:9",
															"nodeType": "YulAssignment",
															"src": "24886:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24898:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "24898:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24909:2:9",
																		"nodeType": "YulLiteral",
																		"src": "24909:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24894:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "24894:3:9"
																},
																"nativeSrc": "24894:18:9",
																"nodeType": "YulFunctionCall",
																"src": "24894:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24886:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "24886:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24933:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "24933:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24944:1:9",
																				"nodeType": "YulLiteral",
																				"src": "24944:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24929:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24929:3:9"
																		},
																		"nativeSrc": "24929:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24929:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24952:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "24952:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24958:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "24958:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24948:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "24948:3:9"
																		},
																		"nativeSrc": "24948:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "24948:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24922:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "24922:6:9"
																},
																"nativeSrc": "24922:47:9",
																"nodeType": "YulFunctionCall",
																"src": "24922:47:9"
															},
															"nativeSrc": "24922:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "24922:47:9"
														},
														{
															"nativeSrc": "24978:139:9",
															"nodeType": "YulAssignment",
															"src": "24978:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25112:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "25112:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24986:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "24986:124:9"
																},
																"nativeSrc": "24986:131:9",
																"nodeType": "YulFunctionCall",
																"src": "24986:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24978:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "24978:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24705:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24856:9:9",
														"nodeType": "YulTypedName",
														"src": "24856:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24871:4:9",
														"nodeType": "YulTypedName",
														"src": "24871:4:9",
														"type": ""
													}
												],
												"src": "24705:419:9"
											},
											{
												"body": {
													"nativeSrc": "25256:206:9",
													"nodeType": "YulBlock",
													"src": "25256:206:9",
													"statements": [
														{
															"nativeSrc": "25266:26:9",
															"nodeType": "YulAssignment",
															"src": "25266:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25278:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "25278:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25289:2:9",
																		"nodeType": "YulLiteral",
																		"src": "25289:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25274:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "25274:3:9"
																},
																"nativeSrc": "25274:18:9",
																"nodeType": "YulFunctionCall",
																"src": "25274:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25266:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "25266:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25346:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "25346:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25359:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "25359:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25370:1:9",
																				"nodeType": "YulLiteral",
																				"src": "25370:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25355:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "25355:3:9"
																		},
																		"nativeSrc": "25355:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25355:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25302:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "25302:43:9"
																},
																"nativeSrc": "25302:71:9",
																"nodeType": "YulFunctionCall",
																"src": "25302:71:9"
															},
															"nativeSrc": "25302:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "25302:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25427:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "25427:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25440:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "25440:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25451:2:9",
																				"nodeType": "YulLiteral",
																				"src": "25451:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25436:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "25436:3:9"
																		},
																		"nativeSrc": "25436:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25436:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25383:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "25383:43:9"
																},
																"nativeSrc": "25383:72:9",
																"nodeType": "YulFunctionCall",
																"src": "25383:72:9"
															},
															"nativeSrc": "25383:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "25383:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "25130:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25220:9:9",
														"nodeType": "YulTypedName",
														"src": "25220:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25232:6:9",
														"nodeType": "YulTypedName",
														"src": "25232:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25240:6:9",
														"nodeType": "YulTypedName",
														"src": "25240:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25251:4:9",
														"nodeType": "YulTypedName",
														"src": "25251:4:9",
														"type": ""
													}
												],
												"src": "25130:332:9"
											},
											{
												"body": {
													"nativeSrc": "25622:288:9",
													"nodeType": "YulBlock",
													"src": "25622:288:9",
													"statements": [
														{
															"nativeSrc": "25632:26:9",
															"nodeType": "YulAssignment",
															"src": "25632:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25644:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "25644:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25655:2:9",
																		"nodeType": "YulLiteral",
																		"src": "25655:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25640:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "25640:3:9"
																},
																"nativeSrc": "25640:18:9",
																"nodeType": "YulFunctionCall",
																"src": "25640:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25632:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "25632:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25712:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "25712:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25725:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "25725:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25736:1:9",
																				"nodeType": "YulLiteral",
																				"src": "25736:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25721:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "25721:3:9"
																		},
																		"nativeSrc": "25721:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25721:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25668:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "25668:43:9"
																},
																"nativeSrc": "25668:71:9",
																"nodeType": "YulFunctionCall",
																"src": "25668:71:9"
															},
															"nativeSrc": "25668:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "25668:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25793:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "25793:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25806:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "25806:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25817:2:9",
																				"nodeType": "YulLiteral",
																				"src": "25817:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25802:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "25802:3:9"
																		},
																		"nativeSrc": "25802:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25802:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25749:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "25749:43:9"
																},
																"nativeSrc": "25749:72:9",
																"nodeType": "YulFunctionCall",
																"src": "25749:72:9"
															},
															"nativeSrc": "25749:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "25749:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25875:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "25875:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25888:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "25888:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25899:2:9",
																				"nodeType": "YulLiteral",
																				"src": "25899:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25884:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "25884:3:9"
																		},
																		"nativeSrc": "25884:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "25884:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25831:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "25831:43:9"
																},
																"nativeSrc": "25831:72:9",
																"nodeType": "YulFunctionCall",
																"src": "25831:72:9"
															},
															"nativeSrc": "25831:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "25831:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "25468:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25578:9:9",
														"nodeType": "YulTypedName",
														"src": "25578:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "25590:6:9",
														"nodeType": "YulTypedName",
														"src": "25590:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25598:6:9",
														"nodeType": "YulTypedName",
														"src": "25598:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25606:6:9",
														"nodeType": "YulTypedName",
														"src": "25606:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25617:4:9",
														"nodeType": "YulTypedName",
														"src": "25617:4:9",
														"type": ""
													}
												],
												"src": "25468:442:9"
											},
											{
												"body": {
													"nativeSrc": "26022:75:9",
													"nodeType": "YulBlock",
													"src": "26022:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "26044:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "26044:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26052:1:9",
																				"nodeType": "YulLiteral",
																				"src": "26052:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26040:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "26040:3:9"
																		},
																		"nativeSrc": "26040:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "26040:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "26056:33:9",
																		"nodeType": "YulLiteral",
																		"src": "26056:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26033:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "26033:6:9"
																},
																"nativeSrc": "26033:57:9",
																"nodeType": "YulFunctionCall",
																"src": "26033:57:9"
															},
															"nativeSrc": "26033:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "26033:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "25916:181:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "26014:6:9",
														"nodeType": "YulTypedName",
														"src": "26014:6:9",
														"type": ""
													}
												],
												"src": "25916:181:9"
											},
											{
												"body": {
													"nativeSrc": "26249:220:9",
													"nodeType": "YulBlock",
													"src": "26249:220:9",
													"statements": [
														{
															"nativeSrc": "26259:74:9",
															"nodeType": "YulAssignment",
															"src": "26259:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26325:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "26325:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26330:2:9",
																		"nodeType": "YulLiteral",
																		"src": "26330:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26266:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "26266:58:9"
																},
																"nativeSrc": "26266:67:9",
																"nodeType": "YulFunctionCall",
																"src": "26266:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26259:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "26259:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26431:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "26431:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "26342:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "26342:88:9"
																},
																"nativeSrc": "26342:93:9",
																"nodeType": "YulFunctionCall",
																"src": "26342:93:9"
															},
															"nativeSrc": "26342:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "26342:93:9"
														},
														{
															"nativeSrc": "26444:19:9",
															"nodeType": "YulAssignment",
															"src": "26444:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26455:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "26455:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26460:2:9",
																		"nodeType": "YulLiteral",
																		"src": "26460:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26451:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "26451:3:9"
																},
																"nativeSrc": "26451:12:9",
																"nodeType": "YulFunctionCall",
																"src": "26451:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26444:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "26444:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26103:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26237:3:9",
														"nodeType": "YulTypedName",
														"src": "26237:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26245:3:9",
														"nodeType": "YulTypedName",
														"src": "26245:3:9",
														"type": ""
													}
												],
												"src": "26103:366:9"
											},
											{
												"body": {
													"nativeSrc": "26646:248:9",
													"nodeType": "YulBlock",
													"src": "26646:248:9",
													"statements": [
														{
															"nativeSrc": "26656:26:9",
															"nodeType": "YulAssignment",
															"src": "26656:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26668:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "26668:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26679:2:9",
																		"nodeType": "YulLiteral",
																		"src": "26679:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26664:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "26664:3:9"
																},
																"nativeSrc": "26664:18:9",
																"nodeType": "YulFunctionCall",
																"src": "26664:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26656:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "26656:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26703:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "26703:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26714:1:9",
																				"nodeType": "YulLiteral",
																				"src": "26714:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26699:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "26699:3:9"
																		},
																		"nativeSrc": "26699:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "26699:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26722:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "26722:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26728:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "26728:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26718:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "26718:3:9"
																		},
																		"nativeSrc": "26718:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "26718:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26692:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "26692:6:9"
																},
																"nativeSrc": "26692:47:9",
																"nodeType": "YulFunctionCall",
																"src": "26692:47:9"
															},
															"nativeSrc": "26692:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "26692:47:9"
														},
														{
															"nativeSrc": "26748:139:9",
															"nodeType": "YulAssignment",
															"src": "26748:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26882:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "26882:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26756:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "26756:124:9"
																},
																"nativeSrc": "26756:131:9",
																"nodeType": "YulFunctionCall",
																"src": "26756:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26748:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "26748:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26475:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26626:9:9",
														"nodeType": "YulTypedName",
														"src": "26626:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26641:4:9",
														"nodeType": "YulTypedName",
														"src": "26641:4:9",
														"type": ""
													}
												],
												"src": "26475:419:9"
											},
											{
												"body": {
													"nativeSrc": "26928:152:9",
													"nodeType": "YulBlock",
													"src": "26928:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26945:1:9",
																		"nodeType": "YulLiteral",
																		"src": "26945:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26948:77:9",
																		"nodeType": "YulLiteral",
																		"src": "26948:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26938:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "26938:6:9"
																},
																"nativeSrc": "26938:88:9",
																"nodeType": "YulFunctionCall",
																"src": "26938:88:9"
															},
															"nativeSrc": "26938:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "26938:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27042:1:9",
																		"nodeType": "YulLiteral",
																		"src": "27042:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27045:4:9",
																		"nodeType": "YulLiteral",
																		"src": "27045:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27035:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "27035:6:9"
																},
																"nativeSrc": "27035:15:9",
																"nodeType": "YulFunctionCall",
																"src": "27035:15:9"
															},
															"nativeSrc": "27035:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "27035:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27066:1:9",
																		"nodeType": "YulLiteral",
																		"src": "27066:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27069:4:9",
																		"nodeType": "YulLiteral",
																		"src": "27069:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "27059:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "27059:6:9"
																},
																"nativeSrc": "27059:15:9",
																"nodeType": "YulFunctionCall",
																"src": "27059:15:9"
															},
															"nativeSrc": "27059:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "27059:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "26900:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "26900:180:9"
											},
											{
												"body": {
													"nativeSrc": "27134:362:9",
													"nodeType": "YulBlock",
													"src": "27134:362:9",
													"statements": [
														{
															"nativeSrc": "27144:25:9",
															"nodeType": "YulAssignment",
															"src": "27144:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "27167:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "27167:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "27149:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "27149:17:9"
																},
																"nativeSrc": "27149:20:9",
																"nodeType": "YulFunctionCall",
																"src": "27149:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "27144:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "27144:1:9"
																}
															]
														},
														{
															"nativeSrc": "27178:25:9",
															"nodeType": "YulAssignment",
															"src": "27178:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "27201:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "27201:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "27183:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "27183:17:9"
																},
																"nativeSrc": "27183:20:9",
																"nodeType": "YulFunctionCall",
																"src": "27183:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "27178:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "27178:1:9"
																}
															]
														},
														{
															"nativeSrc": "27212:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "27212:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "27235:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "27235:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "27238:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "27238:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "27231:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "27231:3:9"
																},
																"nativeSrc": "27231:9:9",
																"nodeType": "YulFunctionCall",
																"src": "27231:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "27216:11:9",
																	"nodeType": "YulTypedName",
																	"src": "27216:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27249:41:9",
															"nodeType": "YulAssignment",
															"src": "27249:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "27278:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "27278:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "27260:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "27260:17:9"
																},
																"nativeSrc": "27260:30:9",
																"nodeType": "YulFunctionCall",
																"src": "27260:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "27249:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "27249:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "27467:22:9",
																"nodeType": "YulBlock",
																"src": "27467:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "27469:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "27469:16:9"
																			},
																			"nativeSrc": "27469:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "27469:18:9"
																		},
																		"nativeSrc": "27469:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "27469:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "27400:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "27400:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "27393:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "27393:6:9"
																				},
																				"nativeSrc": "27393:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "27393:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "27423:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "27423:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "27430:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "27430:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "27439:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "27439:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "27426:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "27426:3:9"
																						},
																						"nativeSrc": "27426:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "27426:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "27420:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "27420:2:9"
																				},
																				"nativeSrc": "27420:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "27420:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "27373:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "27373:2:9"
																		},
																		"nativeSrc": "27373:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "27373:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "27353:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "27353:6:9"
																},
																"nativeSrc": "27353:113:9",
																"nodeType": "YulFunctionCall",
																"src": "27353:113:9"
															},
															"nativeSrc": "27350:139:9",
															"nodeType": "YulIf",
															"src": "27350:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "27086:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "27117:1:9",
														"nodeType": "YulTypedName",
														"src": "27117:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "27120:1:9",
														"nodeType": "YulTypedName",
														"src": "27120:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "27126:7:9",
														"nodeType": "YulTypedName",
														"src": "27126:7:9",
														"type": ""
													}
												],
												"src": "27086:410:9"
											},
											{
												"body": {
													"nativeSrc": "27530:152:9",
													"nodeType": "YulBlock",
													"src": "27530:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27547:1:9",
																		"nodeType": "YulLiteral",
																		"src": "27547:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27550:77:9",
																		"nodeType": "YulLiteral",
																		"src": "27550:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27540:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "27540:6:9"
																},
																"nativeSrc": "27540:88:9",
																"nodeType": "YulFunctionCall",
																"src": "27540:88:9"
															},
															"nativeSrc": "27540:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "27540:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27644:1:9",
																		"nodeType": "YulLiteral",
																		"src": "27644:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27647:4:9",
																		"nodeType": "YulLiteral",
																		"src": "27647:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27637:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "27637:6:9"
																},
																"nativeSrc": "27637:15:9",
																"nodeType": "YulFunctionCall",
																"src": "27637:15:9"
															},
															"nativeSrc": "27637:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "27637:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27668:1:9",
																		"nodeType": "YulLiteral",
																		"src": "27668:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27671:4:9",
																		"nodeType": "YulLiteral",
																		"src": "27671:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "27661:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "27661:6:9"
																},
																"nativeSrc": "27661:15:9",
																"nodeType": "YulFunctionCall",
																"src": "27661:15:9"
															},
															"nativeSrc": "27661:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "27661:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "27502:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "27502:180:9"
											},
											{
												"body": {
													"nativeSrc": "27730:143:9",
													"nodeType": "YulBlock",
													"src": "27730:143:9",
													"statements": [
														{
															"nativeSrc": "27740:25:9",
															"nodeType": "YulAssignment",
															"src": "27740:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "27763:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "27763:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "27745:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "27745:17:9"
																},
																"nativeSrc": "27745:20:9",
																"nodeType": "YulFunctionCall",
																"src": "27745:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "27740:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "27740:1:9"
																}
															]
														},
														{
															"nativeSrc": "27774:25:9",
															"nodeType": "YulAssignment",
															"src": "27774:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "27797:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "27797:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "27779:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "27779:17:9"
																},
																"nativeSrc": "27779:20:9",
																"nodeType": "YulFunctionCall",
																"src": "27779:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "27774:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "27774:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "27821:22:9",
																"nodeType": "YulBlock",
																"src": "27821:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "27823:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "27823:16:9"
																			},
																			"nativeSrc": "27823:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "27823:18:9"
																		},
																		"nativeSrc": "27823:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "27823:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "27818:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "27818:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "27811:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "27811:6:9"
																},
																"nativeSrc": "27811:9:9",
																"nodeType": "YulFunctionCall",
																"src": "27811:9:9"
															},
															"nativeSrc": "27808:35:9",
															"nodeType": "YulIf",
															"src": "27808:35:9"
														},
														{
															"nativeSrc": "27853:14:9",
															"nodeType": "YulAssignment",
															"src": "27853:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "27862:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "27862:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "27865:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "27865:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "27858:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "27858:3:9"
																},
																"nativeSrc": "27858:9:9",
																"nodeType": "YulFunctionCall",
																"src": "27858:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "27853:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "27853:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "27688:185:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "27719:1:9",
														"nodeType": "YulTypedName",
														"src": "27719:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "27722:1:9",
														"nodeType": "YulTypedName",
														"src": "27722:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "27728:1:9",
														"nodeType": "YulTypedName",
														"src": "27728:1:9",
														"type": ""
													}
												],
												"src": "27688:185:9"
											},
											{
												"body": {
													"nativeSrc": "27985:114:9",
													"nodeType": "YulBlock",
													"src": "27985:114:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28007:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "28007:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28015:1:9",
																				"nodeType": "YulLiteral",
																				"src": "28015:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28003:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "28003:3:9"
																		},
																		"nativeSrc": "28003:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "28003:14:9"
																	},
																	{
																		"hexValue": "55534420616d6f756e74206d7573742062652067726561746572207468616e20",
																		"kind": "string",
																		"nativeSrc": "28019:34:9",
																		"nodeType": "YulLiteral",
																		"src": "28019:34:9",
																		"type": "",
																		"value": "USD amount must be greater than "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27996:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "27996:6:9"
																},
																"nativeSrc": "27996:58:9",
																"nodeType": "YulFunctionCall",
																"src": "27996:58:9"
															},
															"nativeSrc": "27996:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "27996:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28075:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "28075:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28083:2:9",
																				"nodeType": "YulLiteral",
																				"src": "28083:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28071:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "28071:3:9"
																		},
																		"nativeSrc": "28071:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "28071:15:9"
																	},
																	{
																		"hexValue": "30",
																		"kind": "string",
																		"nativeSrc": "28088:3:9",
																		"nodeType": "YulLiteral",
																		"src": "28088:3:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28064:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "28064:6:9"
																},
																"nativeSrc": "28064:28:9",
																"nodeType": "YulFunctionCall",
																"src": "28064:28:9"
															},
															"nativeSrc": "28064:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "28064:28:9"
														}
													]
												},
												"name": "store_literal_in_memory_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a",
												"nativeSrc": "27879:220:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "27977:6:9",
														"nodeType": "YulTypedName",
														"src": "27977:6:9",
														"type": ""
													}
												],
												"src": "27879:220:9"
											},
											{
												"body": {
													"nativeSrc": "28251:220:9",
													"nodeType": "YulBlock",
													"src": "28251:220:9",
													"statements": [
														{
															"nativeSrc": "28261:74:9",
															"nodeType": "YulAssignment",
															"src": "28261:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28327:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "28327:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28332:2:9",
																		"nodeType": "YulLiteral",
																		"src": "28332:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28268:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "28268:58:9"
																},
																"nativeSrc": "28268:67:9",
																"nodeType": "YulFunctionCall",
																"src": "28268:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "28261:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28433:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "28433:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a",
																	"nativeSrc": "28344:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "28344:88:9"
																},
																"nativeSrc": "28344:93:9",
																"nodeType": "YulFunctionCall",
																"src": "28344:93:9"
															},
															"nativeSrc": "28344:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "28344:93:9"
														},
														{
															"nativeSrc": "28446:19:9",
															"nodeType": "YulAssignment",
															"src": "28446:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28457:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "28457:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28462:2:9",
																		"nodeType": "YulLiteral",
																		"src": "28462:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28453:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "28453:3:9"
																},
																"nativeSrc": "28453:12:9",
																"nodeType": "YulFunctionCall",
																"src": "28453:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28446:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "28446:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "28105:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28239:3:9",
														"nodeType": "YulTypedName",
														"src": "28239:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28247:3:9",
														"nodeType": "YulTypedName",
														"src": "28247:3:9",
														"type": ""
													}
												],
												"src": "28105:366:9"
											},
											{
												"body": {
													"nativeSrc": "28648:248:9",
													"nodeType": "YulBlock",
													"src": "28648:248:9",
													"statements": [
														{
															"nativeSrc": "28658:26:9",
															"nodeType": "YulAssignment",
															"src": "28658:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28670:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "28670:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28681:2:9",
																		"nodeType": "YulLiteral",
																		"src": "28681:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28666:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "28666:3:9"
																},
																"nativeSrc": "28666:18:9",
																"nodeType": "YulFunctionCall",
																"src": "28666:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28658:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "28658:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28705:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "28705:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28716:1:9",
																				"nodeType": "YulLiteral",
																				"src": "28716:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28701:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "28701:3:9"
																		},
																		"nativeSrc": "28701:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "28701:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28724:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "28724:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28730:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "28730:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28720:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "28720:3:9"
																		},
																		"nativeSrc": "28720:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "28720:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28694:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "28694:6:9"
																},
																"nativeSrc": "28694:47:9",
																"nodeType": "YulFunctionCall",
																"src": "28694:47:9"
															},
															"nativeSrc": "28694:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "28694:47:9"
														},
														{
															"nativeSrc": "28750:139:9",
															"nodeType": "YulAssignment",
															"src": "28750:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "28884:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "28884:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28758:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "28758:124:9"
																},
																"nativeSrc": "28758:131:9",
																"nodeType": "YulFunctionCall",
																"src": "28758:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28750:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "28750:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28477:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28628:9:9",
														"nodeType": "YulTypedName",
														"src": "28628:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28643:4:9",
														"nodeType": "YulTypedName",
														"src": "28643:4:9",
														"type": ""
													}
												],
												"src": "28477:419:9"
											},
											{
												"body": {
													"nativeSrc": "29008:123:9",
													"nodeType": "YulBlock",
													"src": "29008:123:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "29030:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "29030:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29038:1:9",
																				"nodeType": "YulLiteral",
																				"src": "29038:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29026:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "29026:3:9"
																		},
																		"nativeSrc": "29026:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "29026:14:9"
																	},
																	{
																		"hexValue": "507269766174652053616c6520746f6b656e73206d7573742062652067726561",
																		"kind": "string",
																		"nativeSrc": "29042:34:9",
																		"nodeType": "YulLiteral",
																		"src": "29042:34:9",
																		"type": "",
																		"value": "Private Sale tokens must be grea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29019:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "29019:6:9"
																},
																"nativeSrc": "29019:58:9",
																"nodeType": "YulFunctionCall",
																"src": "29019:58:9"
															},
															"nativeSrc": "29019:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "29019:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "29098:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "29098:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29106:2:9",
																				"nodeType": "YulLiteral",
																				"src": "29106:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29094:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "29094:3:9"
																		},
																		"nativeSrc": "29094:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "29094:15:9"
																	},
																	{
																		"hexValue": "746572207468616e2030",
																		"kind": "string",
																		"nativeSrc": "29111:12:9",
																		"nodeType": "YulLiteral",
																		"src": "29111:12:9",
																		"type": "",
																		"value": "ter than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29087:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "29087:6:9"
																},
																"nativeSrc": "29087:37:9",
																"nodeType": "YulFunctionCall",
																"src": "29087:37:9"
															},
															"nativeSrc": "29087:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "29087:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85",
												"nativeSrc": "28902:229:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "29000:6:9",
														"nodeType": "YulTypedName",
														"src": "29000:6:9",
														"type": ""
													}
												],
												"src": "28902:229:9"
											},
											{
												"body": {
													"nativeSrc": "29283:220:9",
													"nodeType": "YulBlock",
													"src": "29283:220:9",
													"statements": [
														{
															"nativeSrc": "29293:74:9",
															"nodeType": "YulAssignment",
															"src": "29293:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29359:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "29359:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29364:2:9",
																		"nodeType": "YulLiteral",
																		"src": "29364:2:9",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29300:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "29300:58:9"
																},
																"nativeSrc": "29300:67:9",
																"nodeType": "YulFunctionCall",
																"src": "29300:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29293:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "29293:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29465:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "29465:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85",
																	"nativeSrc": "29376:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "29376:88:9"
																},
																"nativeSrc": "29376:93:9",
																"nodeType": "YulFunctionCall",
																"src": "29376:93:9"
															},
															"nativeSrc": "29376:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "29376:93:9"
														},
														{
															"nativeSrc": "29478:19:9",
															"nodeType": "YulAssignment",
															"src": "29478:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29489:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "29489:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29494:2:9",
																		"nodeType": "YulLiteral",
																		"src": "29494:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29485:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "29485:3:9"
																},
																"nativeSrc": "29485:12:9",
																"nodeType": "YulFunctionCall",
																"src": "29485:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29478:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "29478:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "29137:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29271:3:9",
														"nodeType": "YulTypedName",
														"src": "29271:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29279:3:9",
														"nodeType": "YulTypedName",
														"src": "29279:3:9",
														"type": ""
													}
												],
												"src": "29137:366:9"
											},
											{
												"body": {
													"nativeSrc": "29680:248:9",
													"nodeType": "YulBlock",
													"src": "29680:248:9",
													"statements": [
														{
															"nativeSrc": "29690:26:9",
															"nodeType": "YulAssignment",
															"src": "29690:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29702:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "29702:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29713:2:9",
																		"nodeType": "YulLiteral",
																		"src": "29713:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29698:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "29698:3:9"
																},
																"nativeSrc": "29698:18:9",
																"nodeType": "YulFunctionCall",
																"src": "29698:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29690:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "29690:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29737:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "29737:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29748:1:9",
																				"nodeType": "YulLiteral",
																				"src": "29748:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29733:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "29733:3:9"
																		},
																		"nativeSrc": "29733:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "29733:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29756:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "29756:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29762:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "29762:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29752:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "29752:3:9"
																		},
																		"nativeSrc": "29752:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "29752:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29726:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "29726:6:9"
																},
																"nativeSrc": "29726:47:9",
																"nodeType": "YulFunctionCall",
																"src": "29726:47:9"
															},
															"nativeSrc": "29726:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "29726:47:9"
														},
														{
															"nativeSrc": "29782:139:9",
															"nodeType": "YulAssignment",
															"src": "29782:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "29916:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "29916:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29790:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "29790:124:9"
																},
																"nativeSrc": "29790:131:9",
																"nodeType": "YulFunctionCall",
																"src": "29790:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29782:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "29782:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "29509:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29660:9:9",
														"nodeType": "YulTypedName",
														"src": "29660:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29675:4:9",
														"nodeType": "YulTypedName",
														"src": "29675:4:9",
														"type": ""
													}
												],
												"src": "29509:419:9"
											},
											{
												"body": {
													"nativeSrc": "30040:129:9",
													"nodeType": "YulBlock",
													"src": "30040:129:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "30062:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "30062:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30070:1:9",
																				"nodeType": "YulLiteral",
																				"src": "30070:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30058:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "30058:3:9"
																		},
																		"nativeSrc": "30058:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "30058:14:9"
																	},
																	{
																		"hexValue": "507269766174652053616c6520736f6c6420746f6b656e732065786365656420",
																		"kind": "string",
																		"nativeSrc": "30074:34:9",
																		"nodeType": "YulLiteral",
																		"src": "30074:34:9",
																		"type": "",
																		"value": "Private Sale sold tokens exceed "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30051:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "30051:6:9"
																},
																"nativeSrc": "30051:58:9",
																"nodeType": "YulFunctionCall",
																"src": "30051:58:9"
															},
															"nativeSrc": "30051:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "30051:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "30130:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "30130:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30138:2:9",
																				"nodeType": "YulLiteral",
																				"src": "30138:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30126:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "30126:3:9"
																		},
																		"nativeSrc": "30126:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "30126:15:9"
																	},
																	{
																		"hexValue": "617661696c61626c6520746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "30143:18:9",
																		"nodeType": "YulLiteral",
																		"src": "30143:18:9",
																		"type": "",
																		"value": "available tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30119:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "30119:6:9"
																},
																"nativeSrc": "30119:43:9",
																"nodeType": "YulFunctionCall",
																"src": "30119:43:9"
															},
															"nativeSrc": "30119:43:9",
															"nodeType": "YulExpressionStatement",
															"src": "30119:43:9"
														}
													]
												},
												"name": "store_literal_in_memory_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2",
												"nativeSrc": "29934:235:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "30032:6:9",
														"nodeType": "YulTypedName",
														"src": "30032:6:9",
														"type": ""
													}
												],
												"src": "29934:235:9"
											},
											{
												"body": {
													"nativeSrc": "30321:220:9",
													"nodeType": "YulBlock",
													"src": "30321:220:9",
													"statements": [
														{
															"nativeSrc": "30331:74:9",
															"nodeType": "YulAssignment",
															"src": "30331:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30397:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "30397:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30402:2:9",
																		"nodeType": "YulLiteral",
																		"src": "30402:2:9",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30338:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "30338:58:9"
																},
																"nativeSrc": "30338:67:9",
																"nodeType": "YulFunctionCall",
																"src": "30338:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "30331:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "30331:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30503:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "30503:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2",
																	"nativeSrc": "30414:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "30414:88:9"
																},
																"nativeSrc": "30414:93:9",
																"nodeType": "YulFunctionCall",
																"src": "30414:93:9"
															},
															"nativeSrc": "30414:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "30414:93:9"
														},
														{
															"nativeSrc": "30516:19:9",
															"nodeType": "YulAssignment",
															"src": "30516:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30527:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "30527:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30532:2:9",
																		"nodeType": "YulLiteral",
																		"src": "30532:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30523:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "30523:3:9"
																},
																"nativeSrc": "30523:12:9",
																"nodeType": "YulFunctionCall",
																"src": "30523:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "30516:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "30516:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "30175:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "30309:3:9",
														"nodeType": "YulTypedName",
														"src": "30309:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "30317:3:9",
														"nodeType": "YulTypedName",
														"src": "30317:3:9",
														"type": ""
													}
												],
												"src": "30175:366:9"
											},
											{
												"body": {
													"nativeSrc": "30718:248:9",
													"nodeType": "YulBlock",
													"src": "30718:248:9",
													"statements": [
														{
															"nativeSrc": "30728:26:9",
															"nodeType": "YulAssignment",
															"src": "30728:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30740:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "30740:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30751:2:9",
																		"nodeType": "YulLiteral",
																		"src": "30751:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30736:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "30736:3:9"
																},
																"nativeSrc": "30736:18:9",
																"nodeType": "YulFunctionCall",
																"src": "30736:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30728:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "30728:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30775:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "30775:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30786:1:9",
																				"nodeType": "YulLiteral",
																				"src": "30786:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30771:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "30771:3:9"
																		},
																		"nativeSrc": "30771:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "30771:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30794:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "30794:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30800:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "30800:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30790:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "30790:3:9"
																		},
																		"nativeSrc": "30790:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "30790:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30764:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "30764:6:9"
																},
																"nativeSrc": "30764:47:9",
																"nodeType": "YulFunctionCall",
																"src": "30764:47:9"
															},
															"nativeSrc": "30764:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "30764:47:9"
														},
														{
															"nativeSrc": "30820:139:9",
															"nodeType": "YulAssignment",
															"src": "30820:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "30954:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "30954:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30828:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "30828:124:9"
																},
																"nativeSrc": "30828:131:9",
																"nodeType": "YulFunctionCall",
																"src": "30828:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30820:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "30820:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "30547:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30698:9:9",
														"nodeType": "YulTypedName",
														"src": "30698:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30713:4:9",
														"nodeType": "YulTypedName",
														"src": "30713:4:9",
														"type": ""
													}
												],
												"src": "30547:419:9"
											},
											{
												"body": {
													"nativeSrc": "31078:74:9",
													"nodeType": "YulBlock",
													"src": "31078:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "31100:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "31100:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31108:1:9",
																				"nodeType": "YulLiteral",
																				"src": "31108:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31096:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "31096:3:9"
																		},
																		"nativeSrc": "31096:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "31096:14:9"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2070726963652063616c63756c61746564",
																		"kind": "string",
																		"nativeSrc": "31112:32:9",
																		"nodeType": "YulLiteral",
																		"src": "31112:32:9",
																		"type": "",
																		"value": "Invalid token price calculated"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31089:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "31089:6:9"
																},
																"nativeSrc": "31089:56:9",
																"nodeType": "YulFunctionCall",
																"src": "31089:56:9"
															},
															"nativeSrc": "31089:56:9",
															"nodeType": "YulExpressionStatement",
															"src": "31089:56:9"
														}
													]
												},
												"name": "store_literal_in_memory_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4",
												"nativeSrc": "30972:180:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "31070:6:9",
														"nodeType": "YulTypedName",
														"src": "31070:6:9",
														"type": ""
													}
												],
												"src": "30972:180:9"
											},
											{
												"body": {
													"nativeSrc": "31304:220:9",
													"nodeType": "YulBlock",
													"src": "31304:220:9",
													"statements": [
														{
															"nativeSrc": "31314:74:9",
															"nodeType": "YulAssignment",
															"src": "31314:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31380:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "31380:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31385:2:9",
																		"nodeType": "YulLiteral",
																		"src": "31385:2:9",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "31321:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "31321:58:9"
																},
																"nativeSrc": "31321:67:9",
																"nodeType": "YulFunctionCall",
																"src": "31321:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "31314:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "31314:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31486:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "31486:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4",
																	"nativeSrc": "31397:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "31397:88:9"
																},
																"nativeSrc": "31397:93:9",
																"nodeType": "YulFunctionCall",
																"src": "31397:93:9"
															},
															"nativeSrc": "31397:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "31397:93:9"
														},
														{
															"nativeSrc": "31499:19:9",
															"nodeType": "YulAssignment",
															"src": "31499:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31510:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "31510:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31515:2:9",
																		"nodeType": "YulLiteral",
																		"src": "31515:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31506:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "31506:3:9"
																},
																"nativeSrc": "31506:12:9",
																"nodeType": "YulFunctionCall",
																"src": "31506:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "31499:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "31499:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "31158:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "31292:3:9",
														"nodeType": "YulTypedName",
														"src": "31292:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "31300:3:9",
														"nodeType": "YulTypedName",
														"src": "31300:3:9",
														"type": ""
													}
												],
												"src": "31158:366:9"
											},
											{
												"body": {
													"nativeSrc": "31701:248:9",
													"nodeType": "YulBlock",
													"src": "31701:248:9",
													"statements": [
														{
															"nativeSrc": "31711:26:9",
															"nodeType": "YulAssignment",
															"src": "31711:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "31723:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "31723:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31734:2:9",
																		"nodeType": "YulLiteral",
																		"src": "31734:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31719:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "31719:3:9"
																},
																"nativeSrc": "31719:18:9",
																"nodeType": "YulFunctionCall",
																"src": "31719:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31711:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "31711:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31758:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "31758:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31769:1:9",
																				"nodeType": "YulLiteral",
																				"src": "31769:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31754:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "31754:3:9"
																		},
																		"nativeSrc": "31754:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "31754:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "31777:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "31777:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31783:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "31783:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31773:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "31773:3:9"
																		},
																		"nativeSrc": "31773:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "31773:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31747:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "31747:6:9"
																},
																"nativeSrc": "31747:47:9",
																"nodeType": "YulFunctionCall",
																"src": "31747:47:9"
															},
															"nativeSrc": "31747:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "31747:47:9"
														},
														{
															"nativeSrc": "31803:139:9",
															"nodeType": "YulAssignment",
															"src": "31803:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "31937:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "31937:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "31811:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "31811:124:9"
																},
																"nativeSrc": "31811:131:9",
																"nodeType": "YulFunctionCall",
																"src": "31811:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31803:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "31803:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "31530:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31681:9:9",
														"nodeType": "YulTypedName",
														"src": "31681:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31696:4:9",
														"nodeType": "YulTypedName",
														"src": "31696:4:9",
														"type": ""
													}
												],
												"src": "31530:419:9"
											},
											{
												"body": {
													"nativeSrc": "32061:121:9",
													"nodeType": "YulBlock",
													"src": "32061:121:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "32083:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "32083:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32091:1:9",
																				"nodeType": "YulLiteral",
																				"src": "32091:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32079:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "32079:3:9"
																		},
																		"nativeSrc": "32079:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "32079:14:9"
																	},
																	{
																		"hexValue": "43616c63756c6174656420746f6b656e73206d75737420626520677265617465",
																		"kind": "string",
																		"nativeSrc": "32095:34:9",
																		"nodeType": "YulLiteral",
																		"src": "32095:34:9",
																		"type": "",
																		"value": "Calculated tokens must be greate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32072:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "32072:6:9"
																},
																"nativeSrc": "32072:58:9",
																"nodeType": "YulFunctionCall",
																"src": "32072:58:9"
															},
															"nativeSrc": "32072:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "32072:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "32151:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "32151:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32159:2:9",
																				"nodeType": "YulLiteral",
																				"src": "32159:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32147:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "32147:3:9"
																		},
																		"nativeSrc": "32147:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "32147:15:9"
																	},
																	{
																		"hexValue": "72207468616e2030",
																		"kind": "string",
																		"nativeSrc": "32164:10:9",
																		"nodeType": "YulLiteral",
																		"src": "32164:10:9",
																		"type": "",
																		"value": "r than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32140:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "32140:6:9"
																},
																"nativeSrc": "32140:35:9",
																"nodeType": "YulFunctionCall",
																"src": "32140:35:9"
															},
															"nativeSrc": "32140:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "32140:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996",
												"nativeSrc": "31955:227:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "32053:6:9",
														"nodeType": "YulTypedName",
														"src": "32053:6:9",
														"type": ""
													}
												],
												"src": "31955:227:9"
											},
											{
												"body": {
													"nativeSrc": "32334:220:9",
													"nodeType": "YulBlock",
													"src": "32334:220:9",
													"statements": [
														{
															"nativeSrc": "32344:74:9",
															"nodeType": "YulAssignment",
															"src": "32344:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32410:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "32410:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32415:2:9",
																		"nodeType": "YulLiteral",
																		"src": "32415:2:9",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32351:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "32351:58:9"
																},
																"nativeSrc": "32351:67:9",
																"nodeType": "YulFunctionCall",
																"src": "32351:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "32344:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "32344:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32516:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "32516:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996",
																	"nativeSrc": "32427:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "32427:88:9"
																},
																"nativeSrc": "32427:93:9",
																"nodeType": "YulFunctionCall",
																"src": "32427:93:9"
															},
															"nativeSrc": "32427:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "32427:93:9"
														},
														{
															"nativeSrc": "32529:19:9",
															"nodeType": "YulAssignment",
															"src": "32529:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32540:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "32540:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32545:2:9",
																		"nodeType": "YulLiteral",
																		"src": "32545:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32536:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "32536:3:9"
																},
																"nativeSrc": "32536:12:9",
																"nodeType": "YulFunctionCall",
																"src": "32536:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "32529:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "32529:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "32188:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "32322:3:9",
														"nodeType": "YulTypedName",
														"src": "32322:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "32330:3:9",
														"nodeType": "YulTypedName",
														"src": "32330:3:9",
														"type": ""
													}
												],
												"src": "32188:366:9"
											},
											{
												"body": {
													"nativeSrc": "32731:248:9",
													"nodeType": "YulBlock",
													"src": "32731:248:9",
													"statements": [
														{
															"nativeSrc": "32741:26:9",
															"nodeType": "YulAssignment",
															"src": "32741:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "32753:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "32753:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32764:2:9",
																		"nodeType": "YulLiteral",
																		"src": "32764:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32749:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "32749:3:9"
																},
																"nativeSrc": "32749:18:9",
																"nodeType": "YulFunctionCall",
																"src": "32749:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32741:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "32741:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32788:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "32788:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32799:1:9",
																				"nodeType": "YulLiteral",
																				"src": "32799:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32784:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "32784:3:9"
																		},
																		"nativeSrc": "32784:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "32784:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "32807:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "32807:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "32813:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "32813:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "32803:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "32803:3:9"
																		},
																		"nativeSrc": "32803:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "32803:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32777:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "32777:6:9"
																},
																"nativeSrc": "32777:47:9",
																"nodeType": "YulFunctionCall",
																"src": "32777:47:9"
															},
															"nativeSrc": "32777:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "32777:47:9"
														},
														{
															"nativeSrc": "32833:139:9",
															"nodeType": "YulAssignment",
															"src": "32833:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "32967:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "32967:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32841:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "32841:124:9"
																},
																"nativeSrc": "32841:131:9",
																"nodeType": "YulFunctionCall",
																"src": "32841:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32833:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "32833:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "32560:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "32711:9:9",
														"nodeType": "YulTypedName",
														"src": "32711:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "32726:4:9",
														"nodeType": "YulTypedName",
														"src": "32726:4:9",
														"type": ""
													}
												],
												"src": "32560:419:9"
											},
											{
												"body": {
													"nativeSrc": "33029:147:9",
													"nodeType": "YulBlock",
													"src": "33029:147:9",
													"statements": [
														{
															"nativeSrc": "33039:25:9",
															"nodeType": "YulAssignment",
															"src": "33039:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "33062:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "33062:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "33044:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "33044:17:9"
																},
																"nativeSrc": "33044:20:9",
																"nodeType": "YulFunctionCall",
																"src": "33044:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "33039:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "33039:1:9"
																}
															]
														},
														{
															"nativeSrc": "33073:25:9",
															"nodeType": "YulAssignment",
															"src": "33073:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "33096:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "33096:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "33078:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "33078:17:9"
																},
																"nativeSrc": "33078:20:9",
																"nodeType": "YulFunctionCall",
																"src": "33078:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "33073:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "33073:1:9"
																}
															]
														},
														{
															"nativeSrc": "33107:16:9",
															"nodeType": "YulAssignment",
															"src": "33107:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "33118:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "33118:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "33121:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "33121:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33114:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "33114:3:9"
																},
																"nativeSrc": "33114:9:9",
																"nodeType": "YulFunctionCall",
																"src": "33114:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "33107:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "33107:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "33147:22:9",
																"nodeType": "YulBlock",
																"src": "33147:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "33149:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "33149:16:9"
																			},
																			"nativeSrc": "33149:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "33149:18:9"
																		},
																		"nativeSrc": "33149:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "33149:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "33139:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "33139:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "33142:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "33142:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "33136:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "33136:2:9"
																},
																"nativeSrc": "33136:10:9",
																"nodeType": "YulFunctionCall",
																"src": "33136:10:9"
															},
															"nativeSrc": "33133:36:9",
															"nodeType": "YulIf",
															"src": "33133:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "32985:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "33016:1:9",
														"nodeType": "YulTypedName",
														"src": "33016:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "33019:1:9",
														"nodeType": "YulTypedName",
														"src": "33019:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "33025:3:9",
														"nodeType": "YulTypedName",
														"src": "33025:3:9",
														"type": ""
													}
												],
												"src": "32985:191:9"
											},
											{
												"body": {
													"nativeSrc": "33227:149:9",
													"nodeType": "YulBlock",
													"src": "33227:149:9",
													"statements": [
														{
															"nativeSrc": "33237:25:9",
															"nodeType": "YulAssignment",
															"src": "33237:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "33260:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "33260:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "33242:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "33242:17:9"
																},
																"nativeSrc": "33242:20:9",
																"nodeType": "YulFunctionCall",
																"src": "33242:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "33237:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "33237:1:9"
																}
															]
														},
														{
															"nativeSrc": "33271:25:9",
															"nodeType": "YulAssignment",
															"src": "33271:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "33294:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "33294:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "33276:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "33276:17:9"
																},
																"nativeSrc": "33276:20:9",
																"nodeType": "YulFunctionCall",
																"src": "33276:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "33271:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "33271:1:9"
																}
															]
														},
														{
															"nativeSrc": "33305:17:9",
															"nodeType": "YulAssignment",
															"src": "33305:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "33317:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "33317:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "33320:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "33320:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "33313:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "33313:3:9"
																},
																"nativeSrc": "33313:9:9",
																"nodeType": "YulFunctionCall",
																"src": "33313:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "33305:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "33305:4:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "33347:22:9",
																"nodeType": "YulBlock",
																"src": "33347:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "33349:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "33349:16:9"
																			},
																			"nativeSrc": "33349:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "33349:18:9"
																		},
																		"nativeSrc": "33349:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "33349:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "33338:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "33338:4:9"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "33344:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "33344:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "33335:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "33335:2:9"
																},
																"nativeSrc": "33335:11:9",
																"nodeType": "YulFunctionCall",
																"src": "33335:11:9"
															},
															"nativeSrc": "33332:37:9",
															"nodeType": "YulIf",
															"src": "33332:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "33182:194:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "33213:1:9",
														"nodeType": "YulTypedName",
														"src": "33213:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "33216:1:9",
														"nodeType": "YulTypedName",
														"src": "33216:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "33222:4:9",
														"nodeType": "YulTypedName",
														"src": "33222:4:9",
														"type": ""
													}
												],
												"src": "33182:194:9"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Direct ETH transfers not allowed\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IPriceOracle_$1322_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IPriceOracle_$1322_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IPriceOracle_$1322_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IPriceOracle_$1322__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IPriceOracle_$1322_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_SaleStage_$1404(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_SaleStage_$1404(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_SaleStage_$1404(value)\n    }\n\n    function convert_t_enum$_SaleStage_$1404_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_SaleStage_$1404(value)\n    }\n\n    function abi_encode_t_enum$_SaleStage_$1404_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_SaleStage_$1404_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_SaleStage_$1404__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_SaleStage_$1404_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sales targets not yet met.\")\n\n    }\n\n    function abi_encode_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale has already started\")\n\n        mstore(add(memPtr, 32), \" or concluded.\")\n\n    }\n\n    function abi_encode_t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f(memPtr) {\n\n        mstore(add(memPtr, 0), \"No sale is active.\")\n\n    }\n\n    function abi_encode_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid price from oracle\")\n\n    }\n\n    function abi_encode_t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale sold out.\")\n\n    }\n\n    function abi_encode_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds Private Sale token limit\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pre-Sale sold out.\")\n\n    }\n\n    function abi_encode_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec(memPtr) {\n\n        mstore(add(memPtr, 0), \"Purchase amount out of limits.\")\n\n    }\n\n    function abi_encode_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds Pre-Sale token limit.\")\n\n    }\n\n    function abi_encode_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Vesting period not yet completed\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b(memPtr) {\n\n        mstore(add(memPtr, 0), \"No vested tokens to release\")\n\n    }\n\n    function abi_encode_t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale should be concluded\")\n\n        mstore(add(memPtr, 32), \" first.\")\n\n    }\n\n    function abi_encode_t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale target not reached.\")\n\n    }\n\n    function abi_encode_t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance to stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a(memPtr) {\n\n        mstore(add(memPtr, 0), \"USD amount must be greater than \")\n\n        mstore(add(memPtr, 32), \"0\")\n\n    }\n\n    function abi_encode_t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale tokens must be grea\")\n\n        mstore(add(memPtr, 32), \"ter than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Private Sale sold tokens exceed \")\n\n        mstore(add(memPtr, 32), \"available tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token price calculated\")\n\n    }\n\n    function abi_encode_t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996(memPtr) {\n\n        mstore(add(memPtr, 0), \"Calculated tokens must be greate\")\n\n        mstore(add(memPtr, 32), \"r than 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610212575f3560e01c806370a0823111610117578063b0e686301161009f578063c040e6b81161006e578063c040e6b814610787578063c552e04b146107b1578063dd62ed3e146107db578063e6bd92b914610817578063f2fde38b1461084157610252565b8063b0e68630146106df578063b68ed11f14610709578063ba20cf4c14610733578063bda956331461075d57610252565b80638f7713ff116100e65780638f7713ff146105fb578063902d55a514610625578063920168b31461064f57806395d89b4114610679578063a9059cbb146106a357610252565b806370a0823114610557578063715018a6146105935780637547c7a3146105a95780638da5cb5b146105d157610252565b80632b1cbc381161019a5780633610724e116101695780633610724e146104bb57806340f02ab6146104d757806354dd1da41461050157806355dd574c146105175780635fb3b9441461052d57610252565b80632b1cbc3814610429578063313ce5671461046557806332c85ac01461048f578063338dbf59146104a557610252565b806318160ddd116101e157806318160ddd14610347578063192399d11461037157806323b872dd146103ad57806324600fc3146103e95780632630c12f146103ff57610252565b806306fdde031461028d578063095ea7b3146102b75780630fe83bb8146102f35780631514617e1461031d57610252565b36610252576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102499061235b565b60405180910390fd5b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102849061235b565b60405180910390fd5b348015610298575f80fd5b506102a1610869565b6040516102ae91906123d9565b60405180910390f35b3480156102c2575f80fd5b506102dd60048036038101906102d8919061248a565b6108f9565b6040516102ea91906124e2565b60405180910390f35b3480156102fe575f80fd5b5061030761091b565b604051610314919061250a565b60405180910390f35b348015610328575f80fd5b50610331610921565b60405161033e919061250a565b60405180910390f35b348015610352575f80fd5b5061035b610927565b604051610368919061250a565b60405180910390f35b34801561037c575f80fd5b5061039760048036038101906103929190612523565b610930565b6040516103a4919061250a565b60405180910390f35b3480156103b8575f80fd5b506103d360048036038101906103ce919061254e565b610945565b6040516103e091906124e2565b60405180910390f35b3480156103f4575f80fd5b506103fd610973565b005b34801561040a575f80fd5b506104136109d8565b60405161042091906125f9565b60405180910390f35b348015610434575f80fd5b5061044f600480360381019061044a9190612523565b6109fd565b60405161045c919061250a565b60405180910390f35b348015610470575f80fd5b50610479610a12565b604051610486919061262d565b60405180910390f35b34801561049a575f80fd5b506104a3610a1a565b005b3480156104b0575f80fd5b506104b9610aa1565b005b6104d560048036038101906104d09190612646565b610b49565b005b3480156104e2575f80fd5b506104eb6110e1565b6040516104f8919061250a565b60405180910390f35b34801561050c575f80fd5b506105156110e7565b005b348015610522575f80fd5b5061052b6112da565b005b348015610538575f80fd5b506105416113c9565b60405161054e919061250a565b60405180910390f35b348015610562575f80fd5b5061057d60048036038101906105789190612523565b6113cf565b60405161058a919061250a565b60405180910390f35b34801561059e575f80fd5b506105a7611414565b005b3480156105b4575f80fd5b506105cf60048036038101906105ca9190612646565b611427565b005b3480156105dc575f80fd5b506105e5611646565b6040516105f29190612680565b60405180910390f35b348015610606575f80fd5b5061060f61166e565b60405161061c919061250a565b60405180910390f35b348015610630575f80fd5b50610639611674565b604051610646919061250a565b60405180910390f35b34801561065a575f80fd5b50610663611683565b604051610670919061250a565b60405180910390f35b348015610684575f80fd5b5061068d611689565b60405161069a91906123d9565b60405180910390f35b3480156106ae575f80fd5b506106c960048036038101906106c4919061248a565b611719565b6040516106d691906124e2565b60405180910390f35b3480156106ea575f80fd5b506106f361173b565b604051610700919061250a565b60405180910390f35b348015610714575f80fd5b5061071d611741565b60405161072a919061250a565b60405180910390f35b34801561073e575f80fd5b50610747611747565b604051610754919061250a565b60405180910390f35b348015610768575f80fd5b5061077161174d565b60405161077e919061250a565b60405180910390f35b348015610792575f80fd5b5061079b611753565b6040516107a8919061270c565b60405180910390f35b3480156107bc575f80fd5b506107c5611765565b6040516107d2919061250a565b60405180910390f35b3480156107e6575f80fd5b5061080160048036038101906107fc9190612725565b61176b565b60405161080e919061250a565b60405180910390f35b348015610822575f80fd5b5061082b6117ed565b604051610838919061250a565b60405180910390f35b34801561084c575f80fd5b5061086760048036038101906108629190612523565b6117f3565b005b60606003805461087890612790565b80601f01602080910402602001604051908101604052809291908181526020018280546108a490612790565b80156108ef5780601f106108c6576101008083540402835291602001916108ef565b820191905f5260205f20905b8154815290600101906020018083116108d257829003601f168201915b5050505050905090565b5f80610903611877565b905061091081858561187e565b600191505092915050565b600d5481565b60145481565b5f600254905090565b6012602052805f5260405f205f915090505481565b5f8061094f611877565b905061095c858285611890565b610967858585611922565b60019150509392505050565b61097b611a12565b610983611a99565b61098b611646565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f193505050501580156109cd573d5f803e3d5ffd5b506109d6611ae8565b565b60165f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6013602052805f5260405f205f915090505481565b5f6012905090565b610a22611a12565b600854600b541480610a375750600d54601054145b610a76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6d9061280a565b60405180910390fd5b5f60115f6101000a81548160ff02191690836002811115610a9a57610a99612699565b5b0217905550565b610aa9611a12565b5f6002811115610abc57610abb612699565b5b60115f9054906101000a900460ff166002811115610add57610adc612699565b5b14610b1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1490612898565b60405180910390fd5b600160115f6101000a81548160ff02191690836002811115610b4257610b41612699565b5b0217905550565b610b51611a99565b5f6002811115610b6457610b63612699565b5b60115f9054906101000a900460ff166002811115610b8557610b84612699565b5b03610bc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbc90612900565b60405180910390fd5b5f60165f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e15f4736040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c30573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c549190612932565b90505f8111610c98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8f906129a7565b60405180910390fd5b5f60016002811115610cad57610cac612699565b5b60115f9054906101000a900460ff166002811115610cce57610ccd612699565b5b03610f0057600854600b5410610d19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1090612a0f565b60405180910390fd5b610d4e610d49670de0b6b3a7640000610d3b8587611af290919063ffffffff16565b611b0790919063ffffffff16565b611b1c565b9050610d6581600b54611cfa90919063ffffffff16565b600b81905550600854600b541115610db2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da990612a9d565b60405180910390fd5b610e028160125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611cfa90919063ffffffff16565b60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610e6c601454610e5e60155442611cfa90919063ffffffff16565b611cfa90919063ffffffff16565b60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167f8fa81bb0702332ea2a0aee44bb9e4d359cf4a2c5a820dd59d9129369bdbca73f82604051610ef3919061250a565b60405180910390a26110d4565b600280811115610f1357610f12612699565b5b60115f9054906101000a900460ff166002811115610f3457610f33612699565b5b036110d357600d5460105410610f7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7690612b05565b60405180910390fd5b68056bc75e2d631000008310158015610fa1575068a2a15d09519be000008311155b610fe0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd790612b6d565b60405180910390fd5b611015611010670de0b6b3a76400006110028587611af290919063ffffffff16565b611b0790919063ffffffff16565b611d0f565b905061102c81601054611cfa90919063ffffffff16565b601081905550600d546010541115611079576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107090612bd5565b60405180910390fd5b611084303383611922565b3373ffffffffffffffffffffffffffffffffffffffff167f550498dc565cc74203b9d14cba907c9f60ceefe26e82b37df98f6cb98529cf19826040516110ca919061250a565b60405180910390a25b5b50506110de611ae8565b50565b60155481565b6110ef611a99565b60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205442101561116f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116690612c63565b60405180910390fd5b5f60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116111f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111e990612ccb565b60405180910390fd5b5f60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611281303383611922565b3373ffffffffffffffffffffffffffffffffffffffff167f6bc5063c7239b75c8bf325a2a2238f726fada322163996bb6c93d5594fb119f0826040516112c7919061250a565b60405180910390a2506112d8611ae8565b565b6112e2611a12565b600160028111156112f6576112f5612699565b5b60115f9054906101000a900460ff16600281111561131757611316612699565b5b14611357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134e90612d59565b60405180910390fd5b600854600b541461139d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139490612dc1565b60405180910390fd5b600260115f6101000a81548160ff021916908360028111156113c2576113c1612699565b5b0217905550565b600b5481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61141c611a12565b6114255f611e1b565b565b61142f611a99565b5f8111611471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146890612e29565b60405180910390fd5b8061147b336113cf565b10156114bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b390612e91565b60405180910390fd5b6114c7333083611922565b6115178160125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611cfa90919063ffffffff16565b60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061156d60155442611cfa90919063ffffffff16565b60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167fdd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc8260135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054604051611633929190612eaf565b60405180910390a2611643611ae8565b50565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600f5481565b6aa56fa5b99019a5c800000081565b600e5481565b60606004805461169890612790565b80601f01602080910402602001604051908101604052809291908181526020018280546116c490612790565b801561170f5780601f106116e65761010080835404028352916020019161170f565b820191905f5260205f20905b8154815290600101906020018083116116f257829003601f168201915b5050505050905090565b5f80611723611877565b9050611730818585611922565b600191505092915050565b60095481565b60105481565b60075481565b600a5481565b60115f9054906101000a900460ff1681565b60085481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600c5481565b6117fb611a12565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361186b575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016118629190612680565b60405180910390fd5b61187481611e1b565b50565b5f33905090565b61188b8383836001611ede565b505050565b5f61189b848461176b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461191c578181101561190d578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161190493929190612ed6565b60405180910390fd5b61191b84848484035f611ede565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611992575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016119899190612680565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a02575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016119f99190612680565b60405180910390fd5b611a0d8383836120ad565b505050565b611a1a611877565b73ffffffffffffffffffffffffffffffffffffffff16611a38611646565b73ffffffffffffffffffffffffffffffffffffffff1614611a9757611a5b611877565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611a8e9190612680565b60405180910390fd5b565b600260065403611ade576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad590612f55565b60405180910390fd5b6002600681905550565b6001600681905550565b5f8183611aff9190612fa0565b905092915050565b5f8183611b14919061300e565b905092915050565b5f808211611b5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b56906130ae565b60405180910390fd5b5f60085411611ba3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9a9061313c565b60405180910390fd5b600854600b541115611bea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611be1906131ca565b60405180910390fd5b5f611c02600954600a546122c690919063ffffffff16565b90505f611c42611c31600854611c23600b5486611af290919063ffffffff16565b611b0790919063ffffffff16565b600954611cfa90919063ffffffff16565b90506009548110158015611c585750600a548111155b611c97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8e90613232565b60405180910390fd5b5f611cab8286611b0790919063ffffffff16565b90505f8111611cef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ce6906132c0565b60405180910390fd5b809350505050919050565b5f8183611d0791906132de565b905092915050565b5f80611d64611d53600d54611d45601054611d37600e54600f546122c690919063ffffffff16565b611af290919063ffffffff16565b611b0790919063ffffffff16565b600e54611cfa90919063ffffffff16565b9050600e548110158015611d7a5750600f548111155b611db9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611db090613232565b60405180910390fd5b5f611dcd8285611b0790919063ffffffff16565b90505f8111611e11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e08906132c0565b60405180910390fd5b8092505050919050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611f4e575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611f459190612680565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611fbe575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611fb59190612680565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156120a7578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161209e919061250a565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036120fd578060025f8282546120f191906132de565b925050819055506121cb565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015612186578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161217d93929190612ed6565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612212578060025f828254039250508190555061225c565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516122b9919061250a565b60405180910390a3505050565b5f81836122d39190613311565b905092915050565b5f82825260208201905092915050565b7f44697265637420455448207472616e7366657273206e6f7420616c6c6f7765645f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f6123456021836122db565b9150612350826122eb565b604082019050919050565b5f6020820190508181035f83015261237281612339565b9050919050565b5f81519050919050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6123ab82612379565b6123b581856122db565b93506123c5818560208601612383565b6123ce81612391565b840191505092915050565b5f6020820190508181035f8301526123f181846123a1565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f612426826123fd565b9050919050565b6124368161241c565b8114612440575f80fd5b50565b5f813590506124518161242d565b92915050565b5f819050919050565b61246981612457565b8114612473575f80fd5b50565b5f8135905061248481612460565b92915050565b5f80604083850312156124a05761249f6123f9565b5b5f6124ad85828601612443565b92505060206124be85828601612476565b9150509250929050565b5f8115159050919050565b6124dc816124c8565b82525050565b5f6020820190506124f55f8301846124d3565b92915050565b61250481612457565b82525050565b5f60208201905061251d5f8301846124fb565b92915050565b5f60208284031215612538576125376123f9565b5b5f61254584828501612443565b91505092915050565b5f805f60608486031215612565576125646123f9565b5b5f61257286828701612443565b935050602061258386828701612443565b925050604061259486828701612476565b9150509250925092565b5f819050919050565b5f6125c16125bc6125b7846123fd565b61259e565b6123fd565b9050919050565b5f6125d2826125a7565b9050919050565b5f6125e3826125c8565b9050919050565b6125f3816125d9565b82525050565b5f60208201905061260c5f8301846125ea565b92915050565b5f60ff82169050919050565b61262781612612565b82525050565b5f6020820190506126405f83018461261e565b92915050565b5f6020828403121561265b5761265a6123f9565b5b5f61266884828501612476565b91505092915050565b61267a8161241c565b82525050565b5f6020820190506126935f830184612671565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600381106126d7576126d6612699565b5b50565b5f8190506126e7826126c6565b919050565b5f6126f6826126da565b9050919050565b612706816126ec565b82525050565b5f60208201905061271f5f8301846126fd565b92915050565b5f806040838503121561273b5761273a6123f9565b5b5f61274885828601612443565b925050602061275985828601612443565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806127a757607f821691505b6020821081036127ba576127b9612763565b5b50919050565b7f53616c65732074617267657473206e6f7420796574206d65742e0000000000005f82015250565b5f6127f4601a836122db565b91506127ff826127c0565b602082019050919050565b5f6020820190508181035f830152612821816127e8565b9050919050565b7f507269766174652053616c652068617320616c726561647920737461727465645f8201527f206f7220636f6e636c756465642e000000000000000000000000000000000000602082015250565b5f612882602e836122db565b915061288d82612828565b604082019050919050565b5f6020820190508181035f8301526128af81612876565b9050919050565b7f4e6f2073616c65206973206163746976652e00000000000000000000000000005f82015250565b5f6128ea6012836122db565b91506128f5826128b6565b602082019050919050565b5f6020820190508181035f830152612917816128de565b9050919050565b5f8151905061292c81612460565b92915050565b5f60208284031215612947576129466123f9565b5b5f6129548482850161291e565b91505092915050565b7f496e76616c69642070726963652066726f6d206f7261636c65000000000000005f82015250565b5f6129916019836122db565b915061299c8261295d565b602082019050919050565b5f6020820190508181035f8301526129be81612985565b9050919050565b7f507269766174652053616c6520736f6c64206f75742e000000000000000000005f82015250565b5f6129f96016836122db565b9150612a04826129c5565b602082019050919050565b5f6020820190508181035f830152612a26816129ed565b9050919050565b7f4578636565647320507269766174652053616c6520746f6b656e206c696d69745f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f612a876021836122db565b9150612a9282612a2d565b604082019050919050565b5f6020820190508181035f830152612ab481612a7b565b9050919050565b7f5072652d53616c6520736f6c64206f75742e00000000000000000000000000005f82015250565b5f612aef6012836122db565b9150612afa82612abb565b602082019050919050565b5f6020820190508181035f830152612b1c81612ae3565b9050919050565b7f507572636861736520616d6f756e74206f7574206f66206c696d6974732e00005f82015250565b5f612b57601e836122db565b9150612b6282612b23565b602082019050919050565b5f6020820190508181035f830152612b8481612b4b565b9050919050565b7f45786365656473205072652d53616c6520746f6b656e206c696d69742e0000005f82015250565b5f612bbf601d836122db565b9150612bca82612b8b565b602082019050919050565b5f6020820190508181035f830152612bec81612bb3565b9050919050565b7f56657374696e6720706572696f64206e6f742079657420636f6d706c657465645f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f612c4d6021836122db565b9150612c5882612bf3565b604082019050919050565b5f6020820190508181035f830152612c7a81612c41565b9050919050565b7f4e6f2076657374656420746f6b656e7320746f2072656c6561736500000000005f82015250565b5f612cb5601b836122db565b9150612cc082612c81565b602082019050919050565b5f6020820190508181035f830152612ce281612ca9565b9050919050565b7f507269766174652053616c652073686f756c6420626520636f6e636c756465645f8201527f2066697273742e00000000000000000000000000000000000000000000000000602082015250565b5f612d436027836122db565b9150612d4e82612ce9565b604082019050919050565b5f6020820190508181035f830152612d7081612d37565b9050919050565b7f507269766174652053616c6520746172676574206e6f7420726561636865642e5f82015250565b5f612dab6020836122db565b9150612db682612d77565b602082019050919050565b5f6020820190508181035f830152612dd881612d9f565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e20300000005f82015250565b5f612e13601d836122db565b9150612e1e82612ddf565b602082019050919050565b5f6020820190508181035f830152612e4081612e07565b9050919050565b7f496e73756666696369656e742062616c616e636520746f207374616b650000005f82015250565b5f612e7b601d836122db565b9150612e8682612e47565b602082019050919050565b5f6020820190508181035f830152612ea881612e6f565b9050919050565b5f604082019050612ec25f8301856124fb565b612ecf60208301846124fb565b9392505050565b5f606082019050612ee95f830186612671565b612ef660208301856124fb565b612f0360408301846124fb565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612f3f601f836122db565b9150612f4a82612f0b565b602082019050919050565b5f6020820190508181035f830152612f6c81612f33565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612faa82612457565b9150612fb583612457565b9250828202612fc381612457565b91508282048414831517612fda57612fd9612f73565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61301882612457565b915061302383612457565b92508261303357613032612fe1565b5b828204905092915050565b7f55534420616d6f756e74206d7573742062652067726561746572207468616e205f8201527f3000000000000000000000000000000000000000000000000000000000000000602082015250565b5f6130986021836122db565b91506130a38261303e565b604082019050919050565b5f6020820190508181035f8301526130c58161308c565b9050919050565b7f507269766174652053616c6520746f6b656e73206d75737420626520677265615f8201527f746572207468616e203000000000000000000000000000000000000000000000602082015250565b5f613126602a836122db565b9150613131826130cc565b604082019050919050565b5f6020820190508181035f8301526131538161311a565b9050919050565b7f507269766174652053616c6520736f6c6420746f6b656e7320657863656564205f8201527f617661696c61626c6520746f6b656e7300000000000000000000000000000000602082015250565b5f6131b46030836122db565b91506131bf8261315a565b604082019050919050565b5f6020820190508181035f8301526131e1816131a8565b9050919050565b7f496e76616c696420746f6b656e2070726963652063616c63756c6174656400005f82015250565b5f61321c601e836122db565b9150613227826131e8565b602082019050919050565b5f6020820190508181035f83015261324981613210565b9050919050565b7f43616c63756c6174656420746f6b656e73206d757374206265206772656174655f8201527f72207468616e2030000000000000000000000000000000000000000000000000602082015250565b5f6132aa6028836122db565b91506132b582613250565b604082019050919050565b5f6020820190508181035f8301526132d78161329e565b9050919050565b5f6132e882612457565b91506132f383612457565b925082820190508082111561330b5761330a612f73565b5b92915050565b5f61331b82612457565b915061332683612457565b925082820390508181111561333e5761333d612f73565b5b9291505056fea26469706673582212207e52ffddca16469ac02c372fcb7231cec9398546de86c6ce0bc957967aa9008164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x212 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x117 JUMPI DUP1 PUSH4 0xB0E68630 GT PUSH2 0x9F JUMPI DUP1 PUSH4 0xC040E6B8 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x787 JUMPI DUP1 PUSH4 0xC552E04B EQ PUSH2 0x7B1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0xE6BD92B9 EQ PUSH2 0x817 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x841 JUMPI PUSH2 0x252 JUMP JUMPDEST DUP1 PUSH4 0xB0E68630 EQ PUSH2 0x6DF JUMPI DUP1 PUSH4 0xB68ED11F EQ PUSH2 0x709 JUMPI DUP1 PUSH4 0xBA20CF4C EQ PUSH2 0x733 JUMPI DUP1 PUSH4 0xBDA95633 EQ PUSH2 0x75D JUMPI PUSH2 0x252 JUMP JUMPDEST DUP1 PUSH4 0x8F7713FF GT PUSH2 0xE6 JUMPI DUP1 PUSH4 0x8F7713FF EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x625 JUMPI DUP1 PUSH4 0x920168B3 EQ PUSH2 0x64F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x679 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6A3 JUMPI PUSH2 0x252 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5D1 JUMPI PUSH2 0x252 JUMP JUMPDEST DUP1 PUSH4 0x2B1CBC38 GT PUSH2 0x19A JUMPI DUP1 PUSH4 0x3610724E GT PUSH2 0x169 JUMPI DUP1 PUSH4 0x3610724E EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0x40F02AB6 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x54DD1DA4 EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0x55DD574C EQ PUSH2 0x517 JUMPI DUP1 PUSH4 0x5FB3B944 EQ PUSH2 0x52D JUMPI PUSH2 0x252 JUMP JUMPDEST DUP1 PUSH4 0x2B1CBC38 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x32C85AC0 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x338DBF59 EQ PUSH2 0x4A5 JUMPI PUSH2 0x252 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x192399D1 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0x2630C12F EQ PUSH2 0x3FF JUMPI PUSH2 0x252 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xFE83BB8 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x1514617E EQ PUSH2 0x31D JUMPI PUSH2 0x252 JUMP JUMPDEST CALLDATASIZE PUSH2 0x252 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x249 SWAP1 PUSH2 0x235B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x284 SWAP1 PUSH2 0x235B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x869 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x248A JUMP JUMPDEST PUSH2 0x8F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35B PUSH2 0x927 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x397 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A4 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x254E JUMP JUMPDEST PUSH2 0x945 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH2 0x973 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x25F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x434 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x9FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x479 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A3 PUSH2 0xA1A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B9 PUSH2 0xAA1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x2646 JUMP JUMPDEST PUSH2 0xB49 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EB PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F8 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x515 PUSH2 0x10E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x522 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x52B PUSH2 0x12DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x541 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x562 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x57D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x578 SWAP2 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A7 PUSH2 0x1414 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x2646 JUMP JUMPDEST PUSH2 0x1427 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E5 PUSH2 0x1646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F2 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x606 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60F PUSH2 0x166E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x630 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x639 PUSH2 0x1674 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x663 PUSH2 0x1683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x670 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x684 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x68D PUSH2 0x1689 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x248A JUMP JUMPDEST PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x24E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F3 PUSH2 0x173B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x714 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x71D PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72A SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x747 PUSH2 0x1747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x768 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x771 PUSH2 0x174D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77E SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x792 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x79B PUSH2 0x1753 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0x270C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C5 PUSH2 0x1765 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D2 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x801 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0x2725 JUMP JUMPDEST PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80E SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x822 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x82B PUSH2 0x17ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x838 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x867 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x862 SWAP2 SWAP1 PUSH2 0x2523 JUMP JUMPDEST PUSH2 0x17F3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x878 SWAP1 PUSH2 0x2790 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8A4 SWAP1 PUSH2 0x2790 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8EF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8EF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8D2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x903 PUSH2 0x1877 JUMP JUMPDEST SWAP1 POP PUSH2 0x910 DUP2 DUP6 DUP6 PUSH2 0x187E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x94F PUSH2 0x1877 JUMP JUMPDEST SWAP1 POP PUSH2 0x95C DUP6 DUP3 DUP6 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x967 DUP6 DUP6 DUP6 PUSH2 0x1922 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x97B PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x983 PUSH2 0x1A99 JUMP JUMPDEST PUSH2 0x98B PUSH2 0x1646 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9CD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0x9D6 PUSH2 0x1AE8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x16 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA22 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xB SLOAD EQ DUP1 PUSH2 0xA37 JUMPI POP PUSH1 0xD SLOAD PUSH1 0x10 SLOAD EQ JUMPDEST PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6D SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA9A JUMPI PUSH2 0xA99 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xAA9 PUSH2 0x1A12 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xABC JUMPI PUSH2 0xABB PUSH2 0x2699 JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xADD JUMPI PUSH2 0xADC PUSH2 0x2699 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB14 SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB42 JUMPI PUSH2 0xB41 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB51 PUSH2 0x1A99 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB64 JUMPI PUSH2 0xB63 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB85 JUMPI PUSH2 0xB84 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xBC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBC SWAP1 PUSH2 0x2900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x16 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8E15F473 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC30 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC54 SWAP2 SWAP1 PUSH2 0x2932 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8F SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCAD JUMPI PUSH2 0xCAC PUSH2 0x2699 JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCCE JUMPI PUSH2 0xCCD PUSH2 0x2699 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xF00 JUMPI PUSH1 0x8 SLOAD PUSH1 0xB SLOAD LT PUSH2 0xD19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD10 SWAP1 PUSH2 0x2A0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD4E PUSH2 0xD49 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD3B DUP6 DUP8 PUSH2 0x1AF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B1C JUMP JUMPDEST SWAP1 POP PUSH2 0xD65 DUP2 PUSH1 0xB SLOAD PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0xB SLOAD GT ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA9 SWAP1 PUSH2 0x2A9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE02 DUP2 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xE6C PUSH1 0x14 SLOAD PUSH2 0xE5E PUSH1 0x15 SLOAD TIMESTAMP PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FA81BB0702332EA2A0AEE44BB9E4D359CF4A2C5A820DD59D9129369BDBCA73F DUP3 PUSH1 0x40 MLOAD PUSH2 0xEF3 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xF13 JUMPI PUSH2 0xF12 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF34 JUMPI PUSH2 0xF33 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x10D3 JUMPI PUSH1 0xD SLOAD PUSH1 0x10 SLOAD LT PUSH2 0xF7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF76 SWAP1 PUSH2 0x2B05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH9 0x56BC75E2D63100000 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0xFA1 JUMPI POP PUSH9 0xA2A15D09519BE00000 DUP4 GT ISZERO JUMPDEST PUSH2 0xFE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD7 SWAP1 PUSH2 0x2B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1015 PUSH2 0x1010 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1002 DUP6 DUP8 PUSH2 0x1AF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D0F JUMP JUMPDEST SWAP1 POP PUSH2 0x102C DUP2 PUSH1 0x10 SLOAD PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 DUP2 SWAP1 SSTORE POP PUSH1 0xD SLOAD PUSH1 0x10 SLOAD GT ISZERO PUSH2 0x1079 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1070 SWAP1 PUSH2 0x2BD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1084 ADDRESS CALLER DUP4 PUSH2 0x1922 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x550498DC565CC74203B9D14CBA907C9F60CEEFE26E82B37DF98F6CB98529CF19 DUP3 PUSH1 0x40 MLOAD PUSH2 0x10CA SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST JUMPDEST POP POP PUSH2 0x10DE PUSH2 0x1AE8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x10EF PUSH2 0x1A99 JUMP JUMPDEST PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x116F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1166 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x11F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E9 SWAP1 PUSH2 0x2CCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1281 ADDRESS CALLER DUP4 PUSH2 0x1922 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6BC5063C7239B75C8BF325A2A2238F726FADA322163996BB6C93D5594FB119F0 DUP3 PUSH1 0x40 MLOAD PUSH2 0x12C7 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x12D8 PUSH2 0x1AE8 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x12E2 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x12F6 JUMPI PUSH2 0x12F5 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1317 JUMPI PUSH2 0x1316 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1357 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134E SWAP1 PUSH2 0x2D59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xB SLOAD EQ PUSH2 0x139D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1394 SWAP1 PUSH2 0x2DC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x11 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13C2 JUMPI PUSH2 0x13C1 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141C PUSH2 0x1A12 JUMP JUMPDEST PUSH2 0x1425 PUSH0 PUSH2 0x1E1B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x142F PUSH2 0x1A99 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1471 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1468 SWAP1 PUSH2 0x2E29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x147B CALLER PUSH2 0x13CF JUMP JUMPDEST LT ISZERO PUSH2 0x14BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B3 SWAP1 PUSH2 0x2E91 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14C7 CALLER ADDRESS DUP4 PUSH2 0x1922 JUMP JUMPDEST PUSH2 0x1517 DUP2 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x156D PUSH1 0x15 SLOAD TIMESTAMP PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDD2A19C3BDD089CBE77C04F5655F83DE0504D6140D12C8667646F55D0557C4DC DUP3 PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1633 SWAP3 SWAP2 SWAP1 PUSH2 0x2EAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1643 PUSH2 0x1AE8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH11 0xA56FA5B99019A5C8000000 DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1698 SWAP1 PUSH2 0x2790 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x16C4 SWAP1 PUSH2 0x2790 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x170F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x170F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1723 PUSH2 0x1877 JUMP JUMPDEST SWAP1 POP PUSH2 0x1730 DUP2 DUP6 DUP6 PUSH2 0x1922 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x17FB PUSH2 0x1A12 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x186B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1862 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1874 DUP2 PUSH2 0x1E1B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x188B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EDE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x189B DUP5 DUP5 PUSH2 0x176B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x191C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x190D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1904 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ED6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x191B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1EDE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1992 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1989 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A02 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F9 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0D DUP4 DUP4 DUP4 PUSH2 0x20AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A1A PUSH2 0x1877 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A38 PUSH2 0x1646 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A97 JUMPI PUSH2 0x1A5B PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A8E SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x1ADE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD5 SWAP1 PUSH2 0x2F55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1AFF SWAP2 SWAP1 PUSH2 0x2FA0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1B14 SWAP2 SWAP1 PUSH2 0x300E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 GT PUSH2 0x1B5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B56 SWAP1 PUSH2 0x30AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 SLOAD GT PUSH2 0x1BA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9A SWAP1 PUSH2 0x313C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xB SLOAD GT ISZERO PUSH2 0x1BEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE1 SWAP1 PUSH2 0x31CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1C02 PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x22C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1C42 PUSH2 0x1C31 PUSH1 0x8 SLOAD PUSH2 0x1C23 PUSH1 0xB SLOAD DUP7 PUSH2 0x1AF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x1C58 JUMPI POP PUSH1 0xA SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x1C97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8E SWAP1 PUSH2 0x3232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1CAB DUP3 DUP7 PUSH2 0x1B07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1CEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE6 SWAP1 PUSH2 0x32C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x1D07 SWAP2 SWAP1 PUSH2 0x32DE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1D64 PUSH2 0x1D53 PUSH1 0xD SLOAD PUSH2 0x1D45 PUSH1 0x10 SLOAD PUSH2 0x1D37 PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH2 0x22C6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1AF2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x1CFA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xE SLOAD DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x1D7A JUMPI POP PUSH1 0xF SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x1DB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB0 SWAP1 PUSH2 0x3232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1DCD DUP3 DUP6 PUSH2 0x1B07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1E11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E08 SWAP1 PUSH2 0x32C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F4E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F45 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FBE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FB5 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x20A7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x209E SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20FD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x20F1 SWAP2 SWAP1 PUSH2 0x32DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x21CB JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2186 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x217D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ED6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2212 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x225C JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x22B9 SWAP2 SWAP1 PUSH2 0x250A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x22D3 SWAP2 SWAP1 PUSH2 0x3311 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x44697265637420455448207472616E7366657273206E6F7420616C6C6F776564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2345 PUSH1 0x21 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2350 DUP3 PUSH2 0x22EB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2372 DUP2 PUSH2 0x2339 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23AB DUP3 PUSH2 0x2379 JUMP JUMPDEST PUSH2 0x23B5 DUP2 DUP6 PUSH2 0x22DB JUMP JUMPDEST SWAP4 POP PUSH2 0x23C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2383 JUMP JUMPDEST PUSH2 0x23CE DUP2 PUSH2 0x2391 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23F1 DUP2 DUP5 PUSH2 0x23A1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2426 DUP3 PUSH2 0x23FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2436 DUP2 PUSH2 0x241C JUMP JUMPDEST DUP2 EQ PUSH2 0x2440 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2451 DUP2 PUSH2 0x242D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2469 DUP2 PUSH2 0x2457 JUMP JUMPDEST DUP2 EQ PUSH2 0x2473 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2484 DUP2 PUSH2 0x2460 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24A0 JUMPI PUSH2 0x249F PUSH2 0x23F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24AD DUP6 DUP3 DUP7 ADD PUSH2 0x2443 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24BE DUP6 DUP3 DUP7 ADD PUSH2 0x2476 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24DC DUP2 PUSH2 0x24C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24F5 PUSH0 DUP4 ADD DUP5 PUSH2 0x24D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2504 DUP2 PUSH2 0x2457 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x251D PUSH0 DUP4 ADD DUP5 PUSH2 0x24FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2538 JUMPI PUSH2 0x2537 PUSH2 0x23F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2545 DUP5 DUP3 DUP6 ADD PUSH2 0x2443 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2565 JUMPI PUSH2 0x2564 PUSH2 0x23F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2572 DUP7 DUP3 DUP8 ADD PUSH2 0x2443 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2583 DUP7 DUP3 DUP8 ADD PUSH2 0x2443 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2594 DUP7 DUP3 DUP8 ADD PUSH2 0x2476 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25C1 PUSH2 0x25BC PUSH2 0x25B7 DUP5 PUSH2 0x23FD JUMP JUMPDEST PUSH2 0x259E JUMP JUMPDEST PUSH2 0x23FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25D2 DUP3 PUSH2 0x25A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25E3 DUP3 PUSH2 0x25C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F3 DUP2 PUSH2 0x25D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x260C PUSH0 DUP4 ADD DUP5 PUSH2 0x25EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2627 DUP2 PUSH2 0x2612 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2640 PUSH0 DUP4 ADD DUP5 PUSH2 0x261E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x265B JUMPI PUSH2 0x265A PUSH2 0x23F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2668 DUP5 DUP3 DUP6 ADD PUSH2 0x2476 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x267A DUP2 PUSH2 0x241C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2693 PUSH0 DUP4 ADD DUP5 PUSH2 0x2671 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x26D7 JUMPI PUSH2 0x26D6 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x26E7 DUP3 PUSH2 0x26C6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26F6 DUP3 PUSH2 0x26DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2706 DUP2 PUSH2 0x26EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x271F PUSH0 DUP4 ADD DUP5 PUSH2 0x26FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x273B JUMPI PUSH2 0x273A PUSH2 0x23F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2748 DUP6 DUP3 DUP7 ADD PUSH2 0x2443 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2759 DUP6 DUP3 DUP7 ADD PUSH2 0x2443 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x27A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x27BA JUMPI PUSH2 0x27B9 PUSH2 0x2763 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53616C65732074617267657473206E6F7420796574206D65742E000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27F4 PUSH1 0x1A DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x27FF DUP3 PUSH2 0x27C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2821 DUP2 PUSH2 0x27E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C652068617320616C72656164792073746172746564 PUSH0 DUP3 ADD MSTORE PUSH32 0x206F7220636F6E636C756465642E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2882 PUSH1 0x2E DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x288D DUP3 PUSH2 0x2828 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28AF DUP2 PUSH2 0x2876 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2073616C65206973206163746976652E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28EA PUSH1 0x12 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x28F5 DUP3 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2917 DUP2 PUSH2 0x28DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x292C DUP2 PUSH2 0x2460 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2947 JUMPI PUSH2 0x2946 PUSH2 0x23F9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2954 DUP5 DUP3 DUP6 ADD PUSH2 0x291E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642070726963652066726F6D206F7261636C6500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2991 PUSH1 0x19 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x299C DUP3 PUSH2 0x295D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29BE DUP2 PUSH2 0x2985 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520736F6C64206F75742E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29F9 PUSH1 0x16 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2A04 DUP3 PUSH2 0x29C5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A26 DUP2 PUSH2 0x29ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4578636565647320507269766174652053616C6520746F6B656E206C696D6974 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A87 PUSH1 0x21 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2A92 DUP3 PUSH2 0x2A2D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AB4 DUP2 PUSH2 0x2A7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072652D53616C6520736F6C64206F75742E0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AEF PUSH1 0x12 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2AFA DUP3 PUSH2 0x2ABB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B1C DUP2 PUSH2 0x2AE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507572636861736520616D6F756E74206F7574206F66206C696D6974732E0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B57 PUSH1 0x1E DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2B62 DUP3 PUSH2 0x2B23 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B84 DUP2 PUSH2 0x2B4B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473205072652D53616C6520746F6B656E206C696D69742E000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BBF PUSH1 0x1D DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2BCA DUP3 PUSH2 0x2B8B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BEC DUP2 PUSH2 0x2BB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x56657374696E6720706572696F64206E6F742079657420636F6D706C65746564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C4D PUSH1 0x21 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2C58 DUP3 PUSH2 0x2BF3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C7A DUP2 PUSH2 0x2C41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F2076657374656420746F6B656E7320746F2072656C656173650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CB5 PUSH1 0x1B DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2CC0 DUP3 PUSH2 0x2C81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CE2 DUP2 PUSH2 0x2CA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C652073686F756C6420626520636F6E636C75646564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2066697273742E00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D43 PUSH1 0x27 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2D4E DUP3 PUSH2 0x2CE9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D70 DUP2 PUSH2 0x2D37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520746172676574206E6F7420726561636865642E PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DAB PUSH1 0x20 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2DB6 DUP3 PUSH2 0x2D77 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DD8 DUP2 PUSH2 0x2D9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E2030000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E13 PUSH1 0x1D DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2E1E DUP3 PUSH2 0x2DDF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E40 DUP2 PUSH2 0x2E07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F207374616B65000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E7B PUSH1 0x1D DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2E86 DUP3 PUSH2 0x2E47 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EA8 DUP2 PUSH2 0x2E6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EC2 PUSH0 DUP4 ADD DUP6 PUSH2 0x24FB JUMP JUMPDEST PUSH2 0x2ECF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x24FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2EE9 PUSH0 DUP4 ADD DUP7 PUSH2 0x2671 JUMP JUMPDEST PUSH2 0x2EF6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x24FB JUMP JUMPDEST PUSH2 0x2F03 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x24FB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F3F PUSH1 0x1F DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x2F4A DUP3 PUSH2 0x2F0B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F6C DUP2 PUSH2 0x2F33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2FAA DUP3 PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FB5 DUP4 PUSH2 0x2457 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2FC3 DUP2 PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2FDA JUMPI PUSH2 0x2FD9 PUSH2 0x2F73 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3018 DUP3 PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP PUSH2 0x3023 DUP4 PUSH2 0x2457 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3033 JUMPI PUSH2 0x3032 PUSH2 0x2FE1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x55534420616D6F756E74206D7573742062652067726561746572207468616E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3098 PUSH1 0x21 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x30A3 DUP3 PUSH2 0x303E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30C5 DUP2 PUSH2 0x308C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520746F6B656E73206D7573742062652067726561 PUSH0 DUP3 ADD MSTORE PUSH32 0x746572207468616E203000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3126 PUSH1 0x2A DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x3131 DUP3 PUSH2 0x30CC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3153 DUP2 PUSH2 0x311A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x507269766174652053616C6520736F6C6420746F6B656E732065786365656420 PUSH0 DUP3 ADD MSTORE PUSH32 0x617661696C61626C6520746F6B656E7300000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x31B4 PUSH1 0x30 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x31BF DUP3 PUSH2 0x315A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x31E1 DUP2 PUSH2 0x31A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E2070726963652063616C63756C617465640000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x321C PUSH1 0x1E DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x3227 DUP3 PUSH2 0x31E8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3249 DUP2 PUSH2 0x3210 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616C63756C6174656420746F6B656E73206D75737420626520677265617465 PUSH0 DUP3 ADD MSTORE PUSH32 0x72207468616E2030000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32AA PUSH1 0x28 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP2 POP PUSH2 0x32B5 DUP3 PUSH2 0x3250 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x32D7 DUP2 PUSH2 0x329E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x32E8 DUP3 PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP PUSH2 0x32F3 DUP4 PUSH2 0x2457 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x330B JUMPI PUSH2 0x330A PUSH2 0x2F73 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x331B DUP3 PUSH2 0x2457 JUMP JUMPDEST SWAP2 POP PUSH2 0x3326 DUP4 PUSH2 0x2457 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x333E JUMPI PUSH2 0x333D PUSH2 0x2F73 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0x52FFDDCA16469AC02C372FCB7231CEC9398546DE86C6CE0BC957967AA90081 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "379:7050:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7377:43;;;;;;;;;;:::i;:::-;;;;;;;;379:7050;7284:43;;;;;;;;;;:::i;:::-;;;;;;;;2074:89:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1095:53:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1622:41;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1508:49:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7118:122:8;;;;;;;;;;;;;:::i;:::-;;1733:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1563:53;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6887:225:8;;;;;;;;;;;;;:::i;:::-;;2329:181;;;;;;;;;;;;;:::i;:::-;;2792:1594;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1677:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6298:583;;;;;;;;;;;;;:::i;:::-;;2516:270;;;;;;;;;;;;;:::i;:::-;;939:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;5791:501:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1255:47:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;472:61;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1174:52;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;773:55:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1328:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;607:55;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;856:54;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1436:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;692:56;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1012:52:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:3;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;1095:53:8:-;;;;:::o;1622:41::-;;;;:::o;3144:97:3:-;3196:7;3222:12;;3215:19;;3144:97;:::o;1508:49:8:-;;;;;;;;;;;;;;;;;:::o;5039:244:3:-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;7118:122:8:-;1531:13:0;:11;:13::i;:::-;2261:21:2::1;:19;:21::i;:::-;7193:7:8::2;:5;:7::i;:::-;7185:25;;:48;7211:21;7185:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;2303:20:2::1;:18;:20::i;:::-;7118:122:8:o:0;1733:31::-;;;;;;;;;;;;;:::o;1563:53::-;;;;;;;;;;;;;;;;;:::o;3002:82:3:-;3051:5;3075:2;3068:9;;3002:82;:::o;6887:225:8:-;1531:13:0;:11;:13::i;:::-;6970:17:8::1;;6945:21;;:42;:80;;;;7012:13;;6991:17;;:34;6945:80;6937:136;;;;;;;;;;;;:::i;:::-;;;;;;;;;7091:14;7083:5;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;6887:225::o:0;2329:181::-;1531:13:0;:11;:13::i;:::-;2403:14:8::1;2394:23;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;;2386:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2486:17;2478:5;;:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2329:181::o:0;2792:1594::-;2261:21:2;:19;:21::i;:::-;2887:14:8::1;2878:23;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;::::0;2870:54:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2935:19;2957:11;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2935:50;;3053:1;3039:11;:15;3031:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3095:19;3137:17;3128:26;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;::::0;3124:1256:::1;;3202:17;;3178:21;;:41;3170:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;3274:67;3301:39;3332:7;3301:26;3315:11;3301:9;:13;;:26;;;;:::i;:::-;:30;;:39;;;;:::i;:::-;3274:26;:67::i;:::-;3260:81;;3379:38;3405:11;3379:21;;:25;;:38;;;;:::i;:::-;3355:21;:62;;;;3464:17;;3439:21;;:42;;3431:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;3562:43;3593:11;3562:14;:26;3577:10;3562:26;;;;;;;;;;;;;;;;:30;;:43;;;;:::i;:::-;3533:14;:26;3548:10;3533:26;;;;;;;;;;;;;;;:72;;;;3652:55;3691:15;;3652:34;3672:13;;3652:15;:19;;:34;;;;:::i;:::-;:38;;:55;;;;:::i;:::-;3619:18;:30;3638:10;3619:30;;;;;;;;;;;;;;;:88;;;;3738:10;3726:36;;;3750:11;3726:36;;;;;;:::i;:::-;;;;;;;;3124:1256;;;3792:17;3783:26:::0;::::1;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;::::0;3779:601:::1;;3853:13;;3833:17;;:33;3825:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3924:14;3911:9;:27;;:60;;;;;3955:16;3942:9;:29;;3911:60;3903:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;4034:63;4057:39;4088:7;4057:26;4071:11;4057:9;:13;;:26;;;;:::i;:::-;:30;;:39;;;;:::i;:::-;4034:22;:63::i;:::-;4020:77;;4131:34;4153:11;4131:17;;:21;;:34;;;;:::i;:::-;4111:17;:54;;;;4208:13;;4187:17;;:34;;4179:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;4269:49;4287:4;4294:10;4306:11;4269:9;:49::i;:::-;4345:10;4337:32;;;4357:11;4337:32;;;;;;:::i;:::-;;;;;;;;3779:601;3124:1256;2860:1526;;2303:20:2::0;:18;:20::i;:::-;2792:1594:8;:::o;1677:39::-;;;;:::o;6298:583::-;2261:21:2;:19;:21::i;:::-;6388:18:8::1;:30;6407:10;6388:30;;;;;;;;;;;;;;;;6369:15;:49;;6361:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;6466:14;6483;:26;6498:10;6483:26;;;;;;;;;;;;;;;;6466:43;;6536:1;6527:6;:10;6519:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;6718:1;6689:14;:26;6704:10;6689:26;;;;;;;;;;;;;;;:30;;;;6762:1;6729:18;:30;6748:10;6729:30;;;;;;;;;;;;;;;:34;;;;6774:44;6792:4;6799:10;6811:6;6774:9;:44::i;:::-;6855:10;6834:40;;;6867:6;6834:40;;;;;;:::i;:::-;;;;;;;;6351:530;2303:20:2::0;:18;:20::i;:::-;6298:583:8:o;2516:270::-;1531:13:0;:11;:13::i;:::-;2586:17:8::1;2577:26;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;2569:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2690:17;;2665:21;;:42;2657:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;2762:17;2754:5;;:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2516:270::o:0;939:40::-;;;;:::o;3299:116:3:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5791:501:8:-;2261:21:2;:19;:21::i;:::-;5877:1:8::1;5868:6;:10;5860:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5955:6;5930:21;5940:10;5930:9;:21::i;:::-;:31;;5922:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;6006:44;6016:10;6036:4;6043:6;6006:9;:44::i;:::-;6090:38;6121:6;6090:14;:26;6105:10;6090:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;6061:14;:26;6076:10;6061:26;;;;;;;;;;;;;;;:67;;;;6171:34;6191:13;;6171:15;:19;;:34;;;;:::i;:::-;6138:18;:30;6157:10;6138:30;;;;;;;;;;;;;;;:67;;;;6234:10;6221:64;;;6246:6;6254:18;:30;6273:10;6254:30;;;;;;;;;;;;;;;;6221:64;;;;;;;:::i;:::-;;;;;;;;2303:20:2::0;:18;:20::i;:::-;5791:501:8;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1255:47:8:-;;;;:::o;472:61::-;511:22;472:61;:::o;1174:52::-;;;;:::o;2276:93:3:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;773:55:8:-;;;;:::o;1328:36::-;;;;:::o;607:55::-;;;;:::o;856:54::-;;;;:::o;1436:39::-;;;;;;;;;;;;;:::o;692:56::-;;;;:::o;3846:140:3:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;1012:52:8:-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8989:128:3:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;3465:96:7:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;4392:864:8:-;4470:7;4509:1;4497:9;:13;4489:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;4586:1;4566:17;;:21;4558:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;4677:17;;4652:21;;:42;;4644:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;4758:18;4779:46;4803:21;;4779:19;;:23;;:46;;;;:::i;:::-;4758:67;;4835:20;4858:109;4897:60;4939:17;;4897:37;4912:21;;4897:10;:14;;:37;;;;:::i;:::-;:41;;:60;;;;:::i;:::-;4858:21;;:25;;:109;;;;:::i;:::-;4835:132;;5002:21;;4986:12;:37;;:76;;;;;5043:19;;5027:12;:35;;4986:76;4978:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;5108:14;5125:27;5139:12;5125:9;:13;;:27;;;;:::i;:::-;5108:44;;5179:1;5170:6;:10;5162:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;5243:6;5236:13;;;;;4392:864;;;:::o;2755:96:7:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;5262:523:8:-;5336:7;5355:20;5378:127;5413:82;5481:13;;5413:63;5458:17;;5414:38;5434:17;;5414:15;;:19;;:38;;;;:::i;:::-;5413:44;;:63;;;;:::i;:::-;:67;;:82;;;;:::i;:::-;5378:17;;:21;;:127;;;;:::i;:::-;5355:150;;5539:17;;5523:12;:33;;:68;;;;;5576:15;;5560:12;:31;;5523:68;5515:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5637:14;5654:27;5668:12;5654:9;:13;;:27;;;;:::i;:::-;5637:44;;5708:1;5699:6;:10;5691:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;5772:6;5765:13;;;;5262:523;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:3:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;3122:96:7:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;7:169:9:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:220::-;322:34;318:1;310:6;306:14;299:58;391:3;386:2;378:6;374:15;367:28;182:220;:::o;408:366::-;550:3;571:67;635:2;630:3;571:67;:::i;:::-;564:74;;647:93;736:3;647:93;:::i;:::-;765:2;760:3;756:12;749:19;;408:366;;;:::o;780:419::-;946:4;984:2;973:9;969:18;961:26;;1033:9;1027:4;1023:20;1019:1;1008:9;1004:17;997:47;1061:131;1187:4;1061:131;:::i;:::-;1053:139;;780:419;;;:::o;1205:99::-;1257:6;1291:5;1285:12;1275:22;;1205:99;;;:::o;1310:139::-;1399:6;1394:3;1389;1383:23;1440:1;1431:6;1426:3;1422:16;1415:27;1310:139;;;:::o;1455:102::-;1496:6;1547:2;1543:7;1538:2;1531:5;1527:14;1523:28;1513:38;;1455:102;;;:::o;1563:377::-;1651:3;1679:39;1712:5;1679:39;:::i;:::-;1734:71;1798:6;1793:3;1734:71;:::i;:::-;1727:78;;1814:65;1872:6;1867:3;1860:4;1853:5;1849:16;1814:65;:::i;:::-;1904:29;1926:6;1904:29;:::i;:::-;1899:3;1895:39;1888:46;;1655:285;1563:377;;;;:::o;1946:313::-;2059:4;2097:2;2086:9;2082:18;2074:26;;2146:9;2140:4;2136:20;2132:1;2121:9;2117:17;2110:47;2174:78;2247:4;2238:6;2174:78;:::i;:::-;2166:86;;1946:313;;;;:::o;2346:117::-;2455:1;2452;2445:12;2592:126;2629:7;2669:42;2662:5;2658:54;2647:65;;2592:126;;;:::o;2724:96::-;2761:7;2790:24;2808:5;2790:24;:::i;:::-;2779:35;;2724:96;;;:::o;2826:122::-;2899:24;2917:5;2899:24;:::i;:::-;2892:5;2889:35;2879:63;;2938:1;2935;2928:12;2879:63;2826:122;:::o;2954:139::-;3000:5;3038:6;3025:20;3016:29;;3054:33;3081:5;3054:33;:::i;:::-;2954:139;;;;:::o;3099:77::-;3136:7;3165:5;3154:16;;3099:77;;;:::o;3182:122::-;3255:24;3273:5;3255:24;:::i;:::-;3248:5;3245:35;3235:63;;3294:1;3291;3284:12;3235:63;3182:122;:::o;3310:139::-;3356:5;3394:6;3381:20;3372:29;;3410:33;3437:5;3410:33;:::i;:::-;3310:139;;;;:::o;3455:474::-;3523:6;3531;3580:2;3568:9;3559:7;3555:23;3551:32;3548:119;;;3586:79;;:::i;:::-;3548:119;3706:1;3731:53;3776:7;3767:6;3756:9;3752:22;3731:53;:::i;:::-;3721:63;;3677:117;3833:2;3859:53;3904:7;3895:6;3884:9;3880:22;3859:53;:::i;:::-;3849:63;;3804:118;3455:474;;;;;:::o;3935:90::-;3969:7;4012:5;4005:13;3998:21;3987:32;;3935:90;;;:::o;4031:109::-;4112:21;4127:5;4112:21;:::i;:::-;4107:3;4100:34;4031:109;;:::o;4146:210::-;4233:4;4271:2;4260:9;4256:18;4248:26;;4284:65;4346:1;4335:9;4331:17;4322:6;4284:65;:::i;:::-;4146:210;;;;:::o;4362:118::-;4449:24;4467:5;4449:24;:::i;:::-;4444:3;4437:37;4362:118;;:::o;4486:222::-;4579:4;4617:2;4606:9;4602:18;4594:26;;4630:71;4698:1;4687:9;4683:17;4674:6;4630:71;:::i;:::-;4486:222;;;;:::o;4714:329::-;4773:6;4822:2;4810:9;4801:7;4797:23;4793:32;4790:119;;;4828:79;;:::i;:::-;4790:119;4948:1;4973:53;5018:7;5009:6;4998:9;4994:22;4973:53;:::i;:::-;4963:63;;4919:117;4714:329;;;;:::o;5049:619::-;5126:6;5134;5142;5191:2;5179:9;5170:7;5166:23;5162:32;5159:119;;;5197:79;;:::i;:::-;5159:119;5317:1;5342:53;5387:7;5378:6;5367:9;5363:22;5342:53;:::i;:::-;5332:63;;5288:117;5444:2;5470:53;5515:7;5506:6;5495:9;5491:22;5470:53;:::i;:::-;5460:63;;5415:118;5572:2;5598:53;5643:7;5634:6;5623:9;5619:22;5598:53;:::i;:::-;5588:63;;5543:118;5049:619;;;;;:::o;5674:60::-;5702:3;5723:5;5716:12;;5674:60;;;:::o;5740:142::-;5790:9;5823:53;5841:34;5850:24;5868:5;5850:24;:::i;:::-;5841:34;:::i;:::-;5823:53;:::i;:::-;5810:66;;5740:142;;;:::o;5888:126::-;5938:9;5971:37;6002:5;5971:37;:::i;:::-;5958:50;;5888:126;;;:::o;6020:147::-;6091:9;6124:37;6155:5;6124:37;:::i;:::-;6111:50;;6020:147;;;:::o;6173:173::-;6281:58;6333:5;6281:58;:::i;:::-;6276:3;6269:71;6173:173;;:::o;6352:264::-;6466:4;6504:2;6493:9;6489:18;6481:26;;6517:92;6606:1;6595:9;6591:17;6582:6;6517:92;:::i;:::-;6352:264;;;;:::o;6622:86::-;6657:7;6697:4;6690:5;6686:16;6675:27;;6622:86;;;:::o;6714:112::-;6797:22;6813:5;6797:22;:::i;:::-;6792:3;6785:35;6714:112;;:::o;6832:214::-;6921:4;6959:2;6948:9;6944:18;6936:26;;6972:67;7036:1;7025:9;7021:17;7012:6;6972:67;:::i;:::-;6832:214;;;;:::o;7052:329::-;7111:6;7160:2;7148:9;7139:7;7135:23;7131:32;7128:119;;;7166:79;;:::i;:::-;7128:119;7286:1;7311:53;7356:7;7347:6;7336:9;7332:22;7311:53;:::i;:::-;7301:63;;7257:117;7052:329;;;;:::o;7387:118::-;7474:24;7492:5;7474:24;:::i;:::-;7469:3;7462:37;7387:118;;:::o;7511:222::-;7604:4;7642:2;7631:9;7627:18;7619:26;;7655:71;7723:1;7712:9;7708:17;7699:6;7655:71;:::i;:::-;7511:222;;;;:::o;7739:180::-;7787:77;7784:1;7777:88;7884:4;7881:1;7874:15;7908:4;7905:1;7898:15;7925:119;8012:1;8005:5;8002:12;7992:46;;8018:18;;:::i;:::-;7992:46;7925:119;:::o;8050:139::-;8101:7;8130:5;8119:16;;8136:47;8177:5;8136:47;:::i;:::-;8050:139;;;:::o;8195:::-;8257:9;8290:38;8322:5;8290:38;:::i;:::-;8277:51;;8195:139;;;:::o;8340:155::-;8439:49;8482:5;8439:49;:::i;:::-;8434:3;8427:62;8340:155;;:::o;8501:246::-;8606:4;8644:2;8633:9;8629:18;8621:26;;8657:83;8737:1;8726:9;8722:17;8713:6;8657:83;:::i;:::-;8501:246;;;;:::o;8753:474::-;8821:6;8829;8878:2;8866:9;8857:7;8853:23;8849:32;8846:119;;;8884:79;;:::i;:::-;8846:119;9004:1;9029:53;9074:7;9065:6;9054:9;9050:22;9029:53;:::i;:::-;9019:63;;8975:117;9131:2;9157:53;9202:7;9193:6;9182:9;9178:22;9157:53;:::i;:::-;9147:63;;9102:118;8753:474;;;;;:::o;9233:180::-;9281:77;9278:1;9271:88;9378:4;9375:1;9368:15;9402:4;9399:1;9392:15;9419:320;9463:6;9500:1;9494:4;9490:12;9480:22;;9547:1;9541:4;9537:12;9568:18;9558:81;;9624:4;9616:6;9612:17;9602:27;;9558:81;9686:2;9678:6;9675:14;9655:18;9652:38;9649:84;;9705:18;;:::i;:::-;9649:84;9470:269;9419:320;;;:::o;9745:176::-;9885:28;9881:1;9873:6;9869:14;9862:52;9745:176;:::o;9927:366::-;10069:3;10090:67;10154:2;10149:3;10090:67;:::i;:::-;10083:74;;10166:93;10255:3;10166:93;:::i;:::-;10284:2;10279:3;10275:12;10268:19;;9927:366;;;:::o;10299:419::-;10465:4;10503:2;10492:9;10488:18;10480:26;;10552:9;10546:4;10542:20;10538:1;10527:9;10523:17;10516:47;10580:131;10706:4;10580:131;:::i;:::-;10572:139;;10299:419;;;:::o;10724:233::-;10864:34;10860:1;10852:6;10848:14;10841:58;10933:16;10928:2;10920:6;10916:15;10909:41;10724:233;:::o;10963:366::-;11105:3;11126:67;11190:2;11185:3;11126:67;:::i;:::-;11119:74;;11202:93;11291:3;11202:93;:::i;:::-;11320:2;11315:3;11311:12;11304:19;;10963:366;;;:::o;11335:419::-;11501:4;11539:2;11528:9;11524:18;11516:26;;11588:9;11582:4;11578:20;11574:1;11563:9;11559:17;11552:47;11616:131;11742:4;11616:131;:::i;:::-;11608:139;;11335:419;;;:::o;11760:168::-;11900:20;11896:1;11888:6;11884:14;11877:44;11760:168;:::o;11934:366::-;12076:3;12097:67;12161:2;12156:3;12097:67;:::i;:::-;12090:74;;12173:93;12262:3;12173:93;:::i;:::-;12291:2;12286:3;12282:12;12275:19;;11934:366;;;:::o;12306:419::-;12472:4;12510:2;12499:9;12495:18;12487:26;;12559:9;12553:4;12549:20;12545:1;12534:9;12530:17;12523:47;12587:131;12713:4;12587:131;:::i;:::-;12579:139;;12306:419;;;:::o;12731:143::-;12788:5;12819:6;12813:13;12804:22;;12835:33;12862:5;12835:33;:::i;:::-;12731:143;;;;:::o;12880:351::-;12950:6;12999:2;12987:9;12978:7;12974:23;12970:32;12967:119;;;13005:79;;:::i;:::-;12967:119;13125:1;13150:64;13206:7;13197:6;13186:9;13182:22;13150:64;:::i;:::-;13140:74;;13096:128;12880:351;;;;:::o;13237:175::-;13377:27;13373:1;13365:6;13361:14;13354:51;13237:175;:::o;13418:366::-;13560:3;13581:67;13645:2;13640:3;13581:67;:::i;:::-;13574:74;;13657:93;13746:3;13657:93;:::i;:::-;13775:2;13770:3;13766:12;13759:19;;13418:366;;;:::o;13790:419::-;13956:4;13994:2;13983:9;13979:18;13971:26;;14043:9;14037:4;14033:20;14029:1;14018:9;14014:17;14007:47;14071:131;14197:4;14071:131;:::i;:::-;14063:139;;13790:419;;;:::o;14215:172::-;14355:24;14351:1;14343:6;14339:14;14332:48;14215:172;:::o;14393:366::-;14535:3;14556:67;14620:2;14615:3;14556:67;:::i;:::-;14549:74;;14632:93;14721:3;14632:93;:::i;:::-;14750:2;14745:3;14741:12;14734:19;;14393:366;;;:::o;14765:419::-;14931:4;14969:2;14958:9;14954:18;14946:26;;15018:9;15012:4;15008:20;15004:1;14993:9;14989:17;14982:47;15046:131;15172:4;15046:131;:::i;:::-;15038:139;;14765:419;;;:::o;15190:220::-;15330:34;15326:1;15318:6;15314:14;15307:58;15399:3;15394:2;15386:6;15382:15;15375:28;15190:220;:::o;15416:366::-;15558:3;15579:67;15643:2;15638:3;15579:67;:::i;:::-;15572:74;;15655:93;15744:3;15655:93;:::i;:::-;15773:2;15768:3;15764:12;15757:19;;15416:366;;;:::o;15788:419::-;15954:4;15992:2;15981:9;15977:18;15969:26;;16041:9;16035:4;16031:20;16027:1;16016:9;16012:17;16005:47;16069:131;16195:4;16069:131;:::i;:::-;16061:139;;15788:419;;;:::o;16213:168::-;16353:20;16349:1;16341:6;16337:14;16330:44;16213:168;:::o;16387:366::-;16529:3;16550:67;16614:2;16609:3;16550:67;:::i;:::-;16543:74;;16626:93;16715:3;16626:93;:::i;:::-;16744:2;16739:3;16735:12;16728:19;;16387:366;;;:::o;16759:419::-;16925:4;16963:2;16952:9;16948:18;16940:26;;17012:9;17006:4;17002:20;16998:1;16987:9;16983:17;16976:47;17040:131;17166:4;17040:131;:::i;:::-;17032:139;;16759:419;;;:::o;17184:180::-;17324:32;17320:1;17312:6;17308:14;17301:56;17184:180;:::o;17370:366::-;17512:3;17533:67;17597:2;17592:3;17533:67;:::i;:::-;17526:74;;17609:93;17698:3;17609:93;:::i;:::-;17727:2;17722:3;17718:12;17711:19;;17370:366;;;:::o;17742:419::-;17908:4;17946:2;17935:9;17931:18;17923:26;;17995:9;17989:4;17985:20;17981:1;17970:9;17966:17;17959:47;18023:131;18149:4;18023:131;:::i;:::-;18015:139;;17742:419;;;:::o;18167:179::-;18307:31;18303:1;18295:6;18291:14;18284:55;18167:179;:::o;18352:366::-;18494:3;18515:67;18579:2;18574:3;18515:67;:::i;:::-;18508:74;;18591:93;18680:3;18591:93;:::i;:::-;18709:2;18704:3;18700:12;18693:19;;18352:366;;;:::o;18724:419::-;18890:4;18928:2;18917:9;18913:18;18905:26;;18977:9;18971:4;18967:20;18963:1;18952:9;18948:17;18941:47;19005:131;19131:4;19005:131;:::i;:::-;18997:139;;18724:419;;;:::o;19149:220::-;19289:34;19285:1;19277:6;19273:14;19266:58;19358:3;19353:2;19345:6;19341:15;19334:28;19149:220;:::o;19375:366::-;19517:3;19538:67;19602:2;19597:3;19538:67;:::i;:::-;19531:74;;19614:93;19703:3;19614:93;:::i;:::-;19732:2;19727:3;19723:12;19716:19;;19375:366;;;:::o;19747:419::-;19913:4;19951:2;19940:9;19936:18;19928:26;;20000:9;19994:4;19990:20;19986:1;19975:9;19971:17;19964:47;20028:131;20154:4;20028:131;:::i;:::-;20020:139;;19747:419;;;:::o;20172:177::-;20312:29;20308:1;20300:6;20296:14;20289:53;20172:177;:::o;20355:366::-;20497:3;20518:67;20582:2;20577:3;20518:67;:::i;:::-;20511:74;;20594:93;20683:3;20594:93;:::i;:::-;20712:2;20707:3;20703:12;20696:19;;20355:366;;;:::o;20727:419::-;20893:4;20931:2;20920:9;20916:18;20908:26;;20980:9;20974:4;20970:20;20966:1;20955:9;20951:17;20944:47;21008:131;21134:4;21008:131;:::i;:::-;21000:139;;20727:419;;;:::o;21152:226::-;21292:34;21288:1;21280:6;21276:14;21269:58;21361:9;21356:2;21348:6;21344:15;21337:34;21152:226;:::o;21384:366::-;21526:3;21547:67;21611:2;21606:3;21547:67;:::i;:::-;21540:74;;21623:93;21712:3;21623:93;:::i;:::-;21741:2;21736:3;21732:12;21725:19;;21384:366;;;:::o;21756:419::-;21922:4;21960:2;21949:9;21945:18;21937:26;;22009:9;22003:4;21999:20;21995:1;21984:9;21980:17;21973:47;22037:131;22163:4;22037:131;:::i;:::-;22029:139;;21756:419;;;:::o;22181:182::-;22321:34;22317:1;22309:6;22305:14;22298:58;22181:182;:::o;22369:366::-;22511:3;22532:67;22596:2;22591:3;22532:67;:::i;:::-;22525:74;;22608:93;22697:3;22608:93;:::i;:::-;22726:2;22721:3;22717:12;22710:19;;22369:366;;;:::o;22741:419::-;22907:4;22945:2;22934:9;22930:18;22922:26;;22994:9;22988:4;22984:20;22980:1;22969:9;22965:17;22958:47;23022:131;23148:4;23022:131;:::i;:::-;23014:139;;22741:419;;;:::o;23166:179::-;23306:31;23302:1;23294:6;23290:14;23283:55;23166:179;:::o;23351:366::-;23493:3;23514:67;23578:2;23573:3;23514:67;:::i;:::-;23507:74;;23590:93;23679:3;23590:93;:::i;:::-;23708:2;23703:3;23699:12;23692:19;;23351:366;;;:::o;23723:419::-;23889:4;23927:2;23916:9;23912:18;23904:26;;23976:9;23970:4;23966:20;23962:1;23951:9;23947:17;23940:47;24004:131;24130:4;24004:131;:::i;:::-;23996:139;;23723:419;;;:::o;24148:179::-;24288:31;24284:1;24276:6;24272:14;24265:55;24148:179;:::o;24333:366::-;24475:3;24496:67;24560:2;24555:3;24496:67;:::i;:::-;24489:74;;24572:93;24661:3;24572:93;:::i;:::-;24690:2;24685:3;24681:12;24674:19;;24333:366;;;:::o;24705:419::-;24871:4;24909:2;24898:9;24894:18;24886:26;;24958:9;24952:4;24948:20;24944:1;24933:9;24929:17;24922:47;24986:131;25112:4;24986:131;:::i;:::-;24978:139;;24705:419;;;:::o;25130:332::-;25251:4;25289:2;25278:9;25274:18;25266:26;;25302:71;25370:1;25359:9;25355:17;25346:6;25302:71;:::i;:::-;25383:72;25451:2;25440:9;25436:18;25427:6;25383:72;:::i;:::-;25130:332;;;;;:::o;25468:442::-;25617:4;25655:2;25644:9;25640:18;25632:26;;25668:71;25736:1;25725:9;25721:17;25712:6;25668:71;:::i;:::-;25749:72;25817:2;25806:9;25802:18;25793:6;25749:72;:::i;:::-;25831;25899:2;25888:9;25884:18;25875:6;25831:72;:::i;:::-;25468:442;;;;;;:::o;25916:181::-;26056:33;26052:1;26044:6;26040:14;26033:57;25916:181;:::o;26103:366::-;26245:3;26266:67;26330:2;26325:3;26266:67;:::i;:::-;26259:74;;26342:93;26431:3;26342:93;:::i;:::-;26460:2;26455:3;26451:12;26444:19;;26103:366;;;:::o;26475:419::-;26641:4;26679:2;26668:9;26664:18;26656:26;;26728:9;26722:4;26718:20;26714:1;26703:9;26699:17;26692:47;26756:131;26882:4;26756:131;:::i;:::-;26748:139;;26475:419;;;:::o;26900:180::-;26948:77;26945:1;26938:88;27045:4;27042:1;27035:15;27069:4;27066:1;27059:15;27086:410;27126:7;27149:20;27167:1;27149:20;:::i;:::-;27144:25;;27183:20;27201:1;27183:20;:::i;:::-;27178:25;;27238:1;27235;27231:9;27260:30;27278:11;27260:30;:::i;:::-;27249:41;;27439:1;27430:7;27426:15;27423:1;27420:22;27400:1;27393:9;27373:83;27350:139;;27469:18;;:::i;:::-;27350:139;27134:362;27086:410;;;;:::o;27502:180::-;27550:77;27547:1;27540:88;27647:4;27644:1;27637:15;27671:4;27668:1;27661:15;27688:185;27728:1;27745:20;27763:1;27745:20;:::i;:::-;27740:25;;27779:20;27797:1;27779:20;:::i;:::-;27774:25;;27818:1;27808:35;;27823:18;;:::i;:::-;27808:35;27865:1;27862;27858:9;27853:14;;27688:185;;;;:::o;27879:220::-;28019:34;28015:1;28007:6;28003:14;27996:58;28088:3;28083:2;28075:6;28071:15;28064:28;27879:220;:::o;28105:366::-;28247:3;28268:67;28332:2;28327:3;28268:67;:::i;:::-;28261:74;;28344:93;28433:3;28344:93;:::i;:::-;28462:2;28457:3;28453:12;28446:19;;28105:366;;;:::o;28477:419::-;28643:4;28681:2;28670:9;28666:18;28658:26;;28730:9;28724:4;28720:20;28716:1;28705:9;28701:17;28694:47;28758:131;28884:4;28758:131;:::i;:::-;28750:139;;28477:419;;;:::o;28902:229::-;29042:34;29038:1;29030:6;29026:14;29019:58;29111:12;29106:2;29098:6;29094:15;29087:37;28902:229;:::o;29137:366::-;29279:3;29300:67;29364:2;29359:3;29300:67;:::i;:::-;29293:74;;29376:93;29465:3;29376:93;:::i;:::-;29494:2;29489:3;29485:12;29478:19;;29137:366;;;:::o;29509:419::-;29675:4;29713:2;29702:9;29698:18;29690:26;;29762:9;29756:4;29752:20;29748:1;29737:9;29733:17;29726:47;29790:131;29916:4;29790:131;:::i;:::-;29782:139;;29509:419;;;:::o;29934:235::-;30074:34;30070:1;30062:6;30058:14;30051:58;30143:18;30138:2;30130:6;30126:15;30119:43;29934:235;:::o;30175:366::-;30317:3;30338:67;30402:2;30397:3;30338:67;:::i;:::-;30331:74;;30414:93;30503:3;30414:93;:::i;:::-;30532:2;30527:3;30523:12;30516:19;;30175:366;;;:::o;30547:419::-;30713:4;30751:2;30740:9;30736:18;30728:26;;30800:9;30794:4;30790:20;30786:1;30775:9;30771:17;30764:47;30828:131;30954:4;30828:131;:::i;:::-;30820:139;;30547:419;;;:::o;30972:180::-;31112:32;31108:1;31100:6;31096:14;31089:56;30972:180;:::o;31158:366::-;31300:3;31321:67;31385:2;31380:3;31321:67;:::i;:::-;31314:74;;31397:93;31486:3;31397:93;:::i;:::-;31515:2;31510:3;31506:12;31499:19;;31158:366;;;:::o;31530:419::-;31696:4;31734:2;31723:9;31719:18;31711:26;;31783:9;31777:4;31773:20;31769:1;31758:9;31754:17;31747:47;31811:131;31937:4;31811:131;:::i;:::-;31803:139;;31530:419;;;:::o;31955:227::-;32095:34;32091:1;32083:6;32079:14;32072:58;32164:10;32159:2;32151:6;32147:15;32140:35;31955:227;:::o;32188:366::-;32330:3;32351:67;32415:2;32410:3;32351:67;:::i;:::-;32344:74;;32427:93;32516:3;32427:93;:::i;:::-;32545:2;32540:3;32536:12;32529:19;;32188:366;;;:::o;32560:419::-;32726:4;32764:2;32753:9;32749:18;32741:26;;32813:9;32807:4;32803:20;32799:1;32788:9;32784:17;32777:47;32841:131;32967:4;32841:131;:::i;:::-;32833:139;;32560:419;;;:::o;32985:191::-;33025:3;33044:20;33062:1;33044:20;:::i;:::-;33039:25;;33078:20;33096:1;33078:20;:::i;:::-;33073:25;;33121:1;33118;33114:9;33107:16;;33142:3;33139:1;33136:10;33133:36;;;33149:18;;:::i;:::-;33133:36;32985:191;;;;:::o;33182:194::-;33222:4;33242:20;33260:1;33242:20;:::i;:::-;33237:25;;33276:20;33294:1;33276:20;:::i;:::-;33271:25;;33320:1;33317;33313:9;33305:17;;33344:1;33338:4;33335:11;33332:37;;;33349:18;;:::i;:::-;33332:37;33182:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2635600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "531",
								"TOTAL_SUPPLY()": "392",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2875",
								"buyTokens(uint256)": "infinite",
								"decimals()": "406",
								"haltSales()": "infinite",
								"name()": "infinite",
								"owner()": "2627",
								"preSaleEndPrice()": "2470",
								"preSaleSoldTokens()": "2492",
								"preSaleStartPrice()": "2514",
								"preSaleTarget()": "2535",
								"preSaleTokens()": "2516",
								"priceOracle()": "infinite",
								"privateSaleEndPrice()": "2536",
								"privateSaleSoldTokens()": "2558",
								"privateSaleStartPrice()": "2470",
								"privateSaleTarget()": "2514",
								"privateSaleTokens()": "2491",
								"releaseVestedTokens()": "infinite",
								"renounceOwnership()": "infinite",
								"stage()": "2598",
								"stakeDuration()": "2492",
								"stakeTokens(uint256)": "infinite",
								"startPreSale()": "infinite",
								"startPrivateSale()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2478",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"vestingBalance(address)": "2870",
								"vestingDuration()": "2538",
								"vestingReleaseTime(address)": "2848",
								"withdrawFunds()": "infinite"
							},
							"internal": {
								"calculatePreSaleTokens(uint256)": "infinite",
								"calculatePrivateSaleTokens(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 379,
									"end": 7429,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 379,
									"end": 7429,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 379,
									"end": 7429,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 642,
									"end": 662,
									"name": "PUSH",
									"source": 8,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 607,
									"end": 662,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 607,
									"end": 662,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 727,
									"end": 748,
									"name": "PUSH",
									"source": 8,
									"value": "201FCAFC2577D298500000"
								},
								{
									"begin": 692,
									"end": 748,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 692,
									"end": 748,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 812,
									"end": 828,
									"name": "PUSH",
									"source": 8,
									"value": "38D7EA4C68000"
								},
								{
									"begin": 773,
									"end": 828,
									"name": "PUSH",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 773,
									"end": 828,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 893,
									"end": 910,
									"name": "PUSH",
									"source": 8,
									"value": "B3697B81284000"
								},
								{
									"begin": 856,
									"end": 910,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 856,
									"end": 910,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 978,
									"end": 979,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 939,
									"end": 979,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 939,
									"end": 979,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1064,
									"name": "PUSH",
									"source": 8,
									"value": "FB768105935A2F3000000"
								},
								{
									"begin": 1012,
									"end": 1064,
									"name": "PUSH",
									"source": 8,
									"value": "C"
								},
								{
									"begin": 1012,
									"end": 1064,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1126,
									"end": 1148,
									"name": "PUSH",
									"source": 8,
									"value": "854FDABD6AA1D32FB00000"
								},
								{
									"begin": 1095,
									"end": 1148,
									"name": "PUSH",
									"source": 8,
									"value": "D"
								},
								{
									"begin": 1095,
									"end": 1148,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1209,
									"end": 1226,
									"name": "PUSH",
									"source": 8,
									"value": "B3697B81284000"
								},
								{
									"begin": 1174,
									"end": 1226,
									"name": "PUSH",
									"source": 8,
									"value": "E"
								},
								{
									"begin": 1174,
									"end": 1226,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1288,
									"end": 1302,
									"name": "PUSH",
									"source": 8,
									"value": "16345785D8A0000"
								},
								{
									"begin": 1255,
									"end": 1302,
									"name": "PUSH",
									"source": 8,
									"value": "F"
								},
								{
									"begin": 1255,
									"end": 1302,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1363,
									"end": 1364,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1364,
									"name": "PUSH",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 1328,
									"end": 1364,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1461,
									"end": 1475,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1436,
									"end": 1475,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1436,
									"end": 1475,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 1663,
									"name": "PUSH",
									"source": 8,
									"value": "ED4E00"
								},
								{
									"begin": 1622,
									"end": 1663,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1622,
									"end": 1663,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1708,
									"end": 1716,
									"name": "PUSH",
									"source": 8,
									"value": "1E13380"
								},
								{
									"begin": 1677,
									"end": 1716,
									"name": "PUSH",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 1677,
									"end": 1716,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "tag",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 2101,
									"end": 2323,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "tag",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2169,
									"end": 2179,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "426574746F6B656E000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "4245545400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2191,
									"end": 2225,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 2205,
									"end": 2209,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 511,
									"end": 533,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "A56FA5B99019A5C8000000"
								},
								{
									"begin": 2191,
									"end": 2196,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2191,
									"end": 2196,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2191,
									"end": 2196,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2191,
									"end": 2225,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2191,
									"end": 2225,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2191,
									"end": 2225,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2191,
									"end": 2225,
									"modifierDepth": 2,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 2191,
									"end": 2225,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2262,
									"end": 2274,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2235,
									"end": 2246,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 2235,
									"end": 2246,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2235,
									"end": 2275,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2101,
									"end": 2323,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 379,
									"end": 7429,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 379,
									"end": 7429,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 274,
									"end": 391,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 274,
									"end": 391,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 383,
									"end": 384,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 380,
									"end": 381,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 373,
									"end": 385,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 520,
									"end": 646,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 520,
									"end": 646,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 557,
									"end": 564,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 639,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 590,
									"end": 595,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 586,
									"end": 640,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 575,
									"end": 640,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 575,
									"end": 640,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 520,
									"end": 646,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 520,
									"end": 646,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 520,
									"end": 646,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 520,
									"end": 646,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 652,
									"end": 748,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 652,
									"end": 748,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 689,
									"end": 696,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 742,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 736,
									"end": 741,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 718,
									"end": 742,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 718,
									"end": 742,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 718,
									"end": 742,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 718,
									"end": 742,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 707,
									"end": 742,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 707,
									"end": 742,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 652,
									"end": 748,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 652,
									"end": 748,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 652,
									"end": 748,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 652,
									"end": 748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 754,
									"end": 876,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 754,
									"end": 876,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 827,
									"end": 851,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 845,
									"end": 850,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 827,
									"end": 851,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 827,
									"end": 851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 827,
									"end": 851,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 827,
									"end": 851,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 817,
									"end": 852,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 807,
									"end": 870,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 807,
									"end": 870,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 866,
									"end": 867,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 863,
									"end": 864,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 856,
									"end": 868,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 807,
									"end": 870,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 807,
									"end": 870,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 754,
									"end": 876,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 754,
									"end": 876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 882,
									"end": 1025,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 882,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 939,
									"end": 944,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 970,
									"end": 976,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 964,
									"end": 977,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 955,
									"end": 977,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 955,
									"end": 977,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 986,
									"end": 1019,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 1013,
									"end": 1018,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 986,
									"end": 1019,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 986,
									"end": 1019,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 986,
									"end": 1019,
									"name": "tag",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 986,
									"end": 1019,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 882,
									"end": 1025,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 882,
									"end": 1025,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 882,
									"end": 1025,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 882,
									"end": 1025,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 882,
									"end": 1025,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1031,
									"end": 1382,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1031,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1138,
									"end": 1147,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1129,
									"end": 1136,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1121,
									"end": 1153,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1156,
									"end": 1235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1276,
									"end": 1277,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 1357,
									"end": 1364,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1348,
									"end": 1354,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1346,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1333,
									"end": 1355,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1301,
									"end": 1365,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 1301,
									"end": 1365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1301,
									"end": 1365,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 1301,
									"end": 1365,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1365,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1291,
									"end": 1365,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1247,
									"end": 1375,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1031,
									"end": 1382,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1031,
									"end": 1382,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1031,
									"end": 1382,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1031,
									"end": 1382,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1031,
									"end": 1382,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1388,
									"end": 1487,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 1388,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1474,
									"end": 1479,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1468,
									"end": 1480,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1480,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1458,
									"end": 1480,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1388,
									"end": 1487,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1388,
									"end": 1487,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1388,
									"end": 1487,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1388,
									"end": 1487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1679,
									"end": 1859,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1679,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1727,
									"end": 1804,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1724,
									"end": 1725,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1717,
									"end": 1805,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1824,
									"end": 1828,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1821,
									"end": 1822,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1814,
									"end": 1829,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1848,
									"end": 1852,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1845,
									"end": 1846,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1838,
									"end": 1853,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 2185,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 1865,
									"end": 2185,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1909,
									"end": 1915,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1946,
									"end": 1947,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1940,
									"end": 1944,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1936,
									"end": 1948,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1926,
									"end": 1948,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1926,
									"end": 1948,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1993,
									"end": 1994,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1987,
									"end": 1991,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1983,
									"end": 1995,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2014,
									"end": 2032,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2004,
									"end": 2085,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 2004,
									"end": 2085,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2074,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 2062,
									"end": 2068,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2058,
									"end": 2075,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2048,
									"end": 2075,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2048,
									"end": 2075,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2004,
									"end": 2085,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 2004,
									"end": 2085,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2132,
									"end": 2134,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2124,
									"end": 2130,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2121,
									"end": 2135,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2101,
									"end": 2119,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2098,
									"end": 2136,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2095,
									"end": 2179,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 2095,
									"end": 2179,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2151,
									"end": 2169,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 2151,
									"end": 2169,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2151,
									"end": 2169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2151,
									"end": 2169,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 2151,
									"end": 2169,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2095,
									"end": 2179,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 2095,
									"end": 2179,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1916,
									"end": 2185,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 2185,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 2185,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 2185,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1865,
									"end": 2185,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2191,
									"end": 2332,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2191,
									"end": 2332,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2240,
									"end": 2244,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2263,
									"end": 2266,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2255,
									"end": 2266,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2255,
									"end": 2266,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2286,
									"end": 2289,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2283,
									"end": 2284,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2290,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2320,
									"end": 2324,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2317,
									"end": 2318,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2307,
									"end": 2325,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 2299,
									"end": 2325,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2299,
									"end": 2325,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2191,
									"end": 2332,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2191,
									"end": 2332,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2191,
									"end": 2332,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2191,
									"end": 2332,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2338,
									"end": 2431,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2338,
									"end": 2431,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2381,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2422,
									"end": 2424,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2417,
									"end": 2419,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2410,
									"end": 2415,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2406,
									"end": 2420,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2402,
									"end": 2425,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 2392,
									"end": 2425,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2392,
									"end": 2425,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2338,
									"end": 2431,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2338,
									"end": 2431,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2338,
									"end": 2431,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2338,
									"end": 2431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2437,
									"end": 2544,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2437,
									"end": 2544,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2481,
									"end": 2489,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2531,
									"end": 2536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2525,
									"end": 2529,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2521,
									"end": 2537,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2500,
									"end": 2537,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2500,
									"end": 2537,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2437,
									"end": 2544,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2437,
									"end": 2544,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2437,
									"end": 2544,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2437,
									"end": 2544,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2437,
									"end": 2544,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2550,
									"end": 2943,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 2550,
									"end": 2943,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2619,
									"end": 2625,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2669,
									"end": 2670,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2657,
									"end": 2667,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2653,
									"end": 2671,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2692,
									"end": 2789,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 2722,
									"end": 2788,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2711,
									"end": 2720,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2692,
									"end": 2789,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2692,
									"end": 2789,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2692,
									"end": 2789,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 2692,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 2840,
									"end": 2848,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2829,
									"end": 2838,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 2810,
									"end": 2849,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "tag",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 2810,
									"end": 2849,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2798,
									"end": 2849,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 2798,
									"end": 2849,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2882,
									"end": 2886,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2878,
									"end": 2887,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 2876,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 2888,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2858,
									"end": 2888,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2858,
									"end": 2888,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2921,
									"end": 2929,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2917,
									"end": 2936,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2910,
									"end": 2915,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2907,
									"end": 2937,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2897,
									"end": 2937,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2897,
									"end": 2937,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2626,
									"end": 2943,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2626,
									"end": 2943,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2550,
									"end": 2943,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2550,
									"end": 2943,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2550,
									"end": 2943,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2550,
									"end": 2943,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2550,
									"end": 2943,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2550,
									"end": 2943,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2949,
									"end": 3026,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 2949,
									"end": 3026,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2986,
									"end": 2993,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3015,
									"end": 3020,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3004,
									"end": 3020,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3004,
									"end": 3020,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2949,
									"end": 3026,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2949,
									"end": 3026,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2949,
									"end": 3026,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2949,
									"end": 3026,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3032,
									"end": 3092,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3032,
									"end": 3092,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3060,
									"end": 3063,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3081,
									"end": 3086,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3074,
									"end": 3086,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3074,
									"end": 3086,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3032,
									"end": 3092,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3032,
									"end": 3092,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3032,
									"end": 3092,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3032,
									"end": 3092,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3098,
									"end": 3240,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3098,
									"end": 3240,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3148,
									"end": 3157,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3181,
									"end": 3234,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 3199,
									"end": 3233,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 3208,
									"end": 3232,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 3226,
									"end": 3231,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3208,
									"end": 3232,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 3208,
									"end": 3232,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3208,
									"end": 3232,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 3208,
									"end": 3232,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3199,
									"end": 3233,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3199,
									"end": 3233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3199,
									"end": 3233,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 3199,
									"end": 3233,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3181,
									"end": 3234,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 3181,
									"end": 3234,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3181,
									"end": 3234,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 3181,
									"end": 3234,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3168,
									"end": 3234,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3168,
									"end": 3234,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3098,
									"end": 3240,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3098,
									"end": 3240,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3098,
									"end": 3240,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3098,
									"end": 3240,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3246,
									"end": 3321,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 3246,
									"end": 3321,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3289,
									"end": 3292,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3310,
									"end": 3315,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3303,
									"end": 3315,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3303,
									"end": 3315,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3246,
									"end": 3321,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3246,
									"end": 3321,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3246,
									"end": 3321,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3246,
									"end": 3321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3327,
									"end": 3596,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 3327,
									"end": 3596,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3437,
									"end": 3476,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 3468,
									"end": 3475,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3437,
									"end": 3476,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3437,
									"end": 3476,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3437,
									"end": 3476,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 3437,
									"end": 3476,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3498,
									"end": 3589,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 3547,
									"end": 3588,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 3571,
									"end": 3587,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3547,
									"end": 3588,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 3547,
									"end": 3588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3547,
									"end": 3588,
									"name": "tag",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 3547,
									"end": 3588,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3539,
									"end": 3545,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3532,
									"end": 3536,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3526,
									"end": 3537,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3498,
									"end": 3589,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 3498,
									"end": 3589,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3498,
									"end": 3589,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 3498,
									"end": 3589,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3492,
									"end": 3496,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3485,
									"end": 3590,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3403,
									"end": 3596,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3327,
									"end": 3596,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3327,
									"end": 3596,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3327,
									"end": 3596,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3327,
									"end": 3596,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3602,
									"end": 3675,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3602,
									"end": 3675,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3647,
									"end": 3650,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3602,
									"end": 3675,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3602,
									"end": 3675,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3681,
									"end": 3870,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 3681,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3758,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 3758,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 3758,
									"end": 3790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3758,
									"end": 3790,
									"name": "tag",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 3758,
									"end": 3790,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3799,
									"end": 3864,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 3857,
									"end": 3863,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3849,
									"end": 3855,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3843,
									"end": 3847,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3799,
									"end": 3864,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 3799,
									"end": 3864,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3799,
									"end": 3864,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 3799,
									"end": 3864,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3734,
									"end": 3870,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3681,
									"end": 3870,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3681,
									"end": 3870,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3681,
									"end": 3870,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3876,
									"end": 4062,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 3876,
									"end": 4062,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3936,
									"end": 4056,
									"name": "tag",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 3936,
									"end": 4056,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3953,
									"end": 3956,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3946,
									"end": 3951,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 3957,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3936,
									"end": 4056,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3936,
									"end": 4056,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 3936,
									"end": 4056,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4007,
									"end": 4046,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 4044,
									"end": 4045,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4037,
									"end": 4042,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4007,
									"end": 4046,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 4007,
									"end": 4046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4007,
									"end": 4046,
									"name": "tag",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 4007,
									"end": 4046,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3980,
									"end": 3981,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3973,
									"end": 3978,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3969,
									"end": 3982,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3960,
									"end": 3982,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3960,
									"end": 3982,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3936,
									"end": 4056,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 3936,
									"end": 4056,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3936,
									"end": 4056,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 3936,
									"end": 4056,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3876,
									"end": 4062,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3876,
									"end": 4062,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3876,
									"end": 4062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4068,
									"end": 4611,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 4068,
									"end": 4611,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4169,
									"end": 4171,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4164,
									"end": 4167,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4161,
									"end": 4172,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4158,
									"end": 4604,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4158,
									"end": 4604,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 4158,
									"end": 4604,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4203,
									"end": 4241,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 4235,
									"end": 4240,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4203,
									"end": 4241,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 4203,
									"end": 4241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4203,
									"end": 4241,
									"name": "tag",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 4203,
									"end": 4241,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4287,
									"end": 4316,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 4305,
									"end": 4315,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4287,
									"end": 4316,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 4287,
									"end": 4316,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4287,
									"end": 4316,
									"name": "tag",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 4287,
									"end": 4316,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4277,
									"end": 4285,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4273,
									"end": 4317,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4470,
									"end": 4472,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4458,
									"end": 4468,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4455,
									"end": 4473,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4452,
									"end": 4501,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4452,
									"end": 4501,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 4452,
									"end": 4501,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4491,
									"end": 4499,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4476,
									"end": 4499,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4476,
									"end": 4499,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4452,
									"end": 4501,
									"name": "tag",
									"source": 9,
									"value": "128"
								},
								{
									"begin": 4452,
									"end": 4501,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4514,
									"end": 4594,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 4570,
									"end": 4592,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 4588,
									"end": 4591,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4570,
									"end": 4592,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 4570,
									"end": 4592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4570,
									"end": 4592,
									"name": "tag",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 4570,
									"end": 4592,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4560,
									"end": 4568,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4556,
									"end": 4593,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4543,
									"end": 4554,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4514,
									"end": 4594,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 4514,
									"end": 4594,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4514,
									"end": 4594,
									"name": "tag",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 4514,
									"end": 4594,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4173,
									"end": 4604,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4173,
									"end": 4604,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4158,
									"end": 4604,
									"name": "tag",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 4158,
									"end": 4604,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4068,
									"end": 4611,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4068,
									"end": 4611,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4068,
									"end": 4611,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4068,
									"end": 4611,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4617,
									"end": 4734,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 4617,
									"end": 4734,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4671,
									"end": 4679,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4721,
									"end": 4726,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4715,
									"end": 4719,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4711,
									"end": 4727,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 4690,
									"end": 4727,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4690,
									"end": 4727,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4617,
									"end": 4734,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4617,
									"end": 4734,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4617,
									"end": 4734,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4617,
									"end": 4734,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4617,
									"end": 4734,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4740,
									"end": 4909,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 4740,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4784,
									"end": 4790,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4817,
									"end": 4868,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 4865,
									"end": 4866,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4861,
									"end": 4867,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4853,
									"end": 4858,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4850,
									"end": 4851,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 4846,
									"end": 4859,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4817,
									"end": 4868,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 4817,
									"end": 4868,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4817,
									"end": 4868,
									"name": "tag",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 4817,
									"end": 4868,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4813,
									"end": 4869,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4898,
									"end": 4902,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4892,
									"end": 4896,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4888,
									"end": 4903,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4878,
									"end": 4903,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4878,
									"end": 4903,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4791,
									"end": 4909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4740,
									"end": 4909,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4740,
									"end": 4909,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4740,
									"end": 4909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4740,
									"end": 4909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4740,
									"end": 4909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4914,
									"end": 5209,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 4914,
									"end": 5209,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4990,
									"end": 4994,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5136,
									"end": 5165,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 5161,
									"end": 5164,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5155,
									"end": 5159,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5136,
									"end": 5165,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 5136,
									"end": 5165,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5136,
									"end": 5165,
									"name": "tag",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 5136,
									"end": 5165,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5128,
									"end": 5165,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5128,
									"end": 5165,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5198,
									"end": 5201,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5195,
									"end": 5196,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 5191,
									"end": 5202,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 5185,
									"end": 5189,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5182,
									"end": 5203,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 5174,
									"end": 5203,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5174,
									"end": 5203,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4914,
									"end": 5209,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4914,
									"end": 5209,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4914,
									"end": 5209,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4914,
									"end": 5209,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4914,
									"end": 5209,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5214,
									"end": 6609,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 5214,
									"end": 6609,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5331,
									"end": 5368,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 5364,
									"end": 5367,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5331,
									"end": 5368,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 5331,
									"end": 5368,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5331,
									"end": 5368,
									"name": "tag",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 5331,
									"end": 5368,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5433,
									"end": 5451,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5425,
									"end": 5431,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5422,
									"end": 5452,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 5419,
									"end": 5475,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5419,
									"end": 5475,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 5419,
									"end": 5475,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5455,
									"end": 5473,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 5455,
									"end": 5473,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 5455,
									"end": 5473,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5455,
									"end": 5473,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 5455,
									"end": 5473,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5419,
									"end": 5475,
									"name": "tag",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 5419,
									"end": 5475,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5499,
									"end": 5537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 5531,
									"end": 5535,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5525,
									"end": 5536,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 5499,
									"end": 5537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 5499,
									"end": 5537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5499,
									"end": 5537,
									"name": "tag",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 5499,
									"end": 5537,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5584,
									"end": 5651,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 5644,
									"end": 5650,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5636,
									"end": 5642,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5630,
									"end": 5634,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5584,
									"end": 5651,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 5584,
									"end": 5651,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5584,
									"end": 5651,
									"name": "tag",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 5584,
									"end": 5651,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5678,
									"end": 5679,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5702,
									"end": 5706,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5689,
									"end": 5706,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5689,
									"end": 5706,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5734,
									"end": 5736,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 5726,
									"end": 5732,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5723,
									"end": 5737,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 5751,
									"end": 5752,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5746,
									"end": 6364,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5746,
									"end": 6364,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 5746,
									"end": 6364,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 5746,
									"end": 6364,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6408,
									"end": 6409,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6425,
									"end": 6431,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6422,
									"end": 6499,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6422,
									"end": 6499,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 6422,
									"end": 6499,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6474,
									"end": 6483,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6469,
									"end": 6472,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 6465,
									"end": 6484,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6459,
									"end": 6485,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 6450,
									"end": 6485,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6450,
									"end": 6485,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6422,
									"end": 6499,
									"name": "tag",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 6422,
									"end": 6499,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6525,
									"end": 6592,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 6585,
									"end": 6591,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6578,
									"end": 6583,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6525,
									"end": 6592,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 6525,
									"end": 6592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6525,
									"end": 6592,
									"name": "tag",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 6525,
									"end": 6592,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6519,
									"end": 6523,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6512,
									"end": 6593,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6381,
									"end": 6603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5716,
									"end": 6603,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 5716,
									"end": 6603,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5746,
									"end": 6364,
									"name": "tag",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 5746,
									"end": 6364,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5798,
									"end": 5802,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 5794,
									"end": 5803,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 5786,
									"end": 5792,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5782,
									"end": 5804,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5832,
									"end": 5869,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 5864,
									"end": 5868,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5832,
									"end": 5869,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 5832,
									"end": 5869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5832,
									"end": 5869,
									"name": "tag",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 5832,
									"end": 5869,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5891,
									"end": 5892,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5905,
									"end": 6113,
									"name": "tag",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 5905,
									"end": 6113,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5919,
									"end": 5926,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5916,
									"end": 5917,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5913,
									"end": 5927,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5905,
									"end": 6113,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5905,
									"end": 6113,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 5905,
									"end": 6113,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5998,
									"end": 6007,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5993,
									"end": 5996,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 5989,
									"end": 6008,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5983,
									"end": 6009,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5975,
									"end": 5981,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5968,
									"end": 6010,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6049,
									"end": 6050,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6041,
									"end": 6047,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6037,
									"end": 6051,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6027,
									"end": 6051,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6027,
									"end": 6051,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6096,
									"end": 6098,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6085,
									"end": 6094,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6081,
									"end": 6099,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6068,
									"end": 6099,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 6068,
									"end": 6099,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5942,
									"end": 5946,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5939,
									"end": 5940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5935,
									"end": 5947,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5930,
									"end": 5947,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5930,
									"end": 5947,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5905,
									"end": 6113,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 5905,
									"end": 6113,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5905,
									"end": 6113,
									"name": "tag",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 5905,
									"end": 6113,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6141,
									"end": 6147,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6132,
									"end": 6139,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6129,
									"end": 6148,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6126,
									"end": 6305,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6126,
									"end": 6305,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 6126,
									"end": 6305,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6199,
									"end": 6208,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6194,
									"end": 6197,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 6190,
									"end": 6209,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6184,
									"end": 6210,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 6242,
									"end": 6290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "151"
								},
								{
									"begin": 6284,
									"end": 6288,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6276,
									"end": 6282,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 6272,
									"end": 6289,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6261,
									"end": 6270,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6242,
									"end": 6290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 6242,
									"end": 6290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6242,
									"end": 6290,
									"name": "tag",
									"source": 9,
									"value": "151"
								},
								{
									"begin": 6242,
									"end": 6290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6234,
									"end": 6240,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6227,
									"end": 6291,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6149,
									"end": 6305,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6126,
									"end": 6305,
									"name": "tag",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 6126,
									"end": 6305,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6351,
									"end": 6352,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6347,
									"end": 6348,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 6339,
									"end": 6345,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 6335,
									"end": 6349,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 6331,
									"end": 6353,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6325,
									"end": 6329,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 6318,
									"end": 6354,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5753,
									"end": 6364,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5753,
									"end": 6364,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5753,
									"end": 6364,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5716,
									"end": 6603,
									"name": "tag",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 5716,
									"end": 6603,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5716,
									"end": 6603,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5306,
									"end": 6609,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5306,
									"end": 6609,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5306,
									"end": 6609,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5214,
									"end": 6609,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5214,
									"end": 6609,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5214,
									"end": 6609,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6615,
									"end": 6733,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 6615,
									"end": 6733,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6726,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 6720,
									"end": 6725,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6726,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 6702,
									"end": 6726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6726,
									"name": "tag",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 6702,
									"end": 6726,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6697,
									"end": 6700,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6690,
									"end": 6727,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6615,
									"end": 6733,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6615,
									"end": 6733,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6615,
									"end": 6733,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6739,
									"end": 6961,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 6739,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6832,
									"end": 6836,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6870,
									"end": 6872,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6859,
									"end": 6868,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6855,
									"end": 6873,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6847,
									"end": 6873,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6847,
									"end": 6873,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6883,
									"end": 6954,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 6951,
									"end": 6952,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6949,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6936,
									"end": 6953,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6927,
									"end": 6933,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6883,
									"end": 6954,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 6883,
									"end": 6954,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6883,
									"end": 6954,
									"name": "tag",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 6883,
									"end": 6954,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6739,
									"end": 6961,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6739,
									"end": 6961,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6739,
									"end": 6961,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6739,
									"end": 6961,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6739,
									"end": 6961,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7147,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 6967,
									"end": 7147,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7015,
									"end": 7092,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7012,
									"end": 7013,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7005,
									"end": 7093,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 7112,
									"end": 7116,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 7109,
									"end": 7110,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 7102,
									"end": 7117,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 7136,
									"end": 7140,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 7133,
									"end": 7134,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7126,
									"end": 7141,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 7153,
									"end": 7344,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 7153,
									"end": 7344,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7193,
									"end": 7196,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7212,
									"end": 7232,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 7230,
									"end": 7231,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7212,
									"end": 7232,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 7212,
									"end": 7232,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7212,
									"end": 7232,
									"name": "tag",
									"source": 9,
									"value": "158"
								},
								{
									"begin": 7212,
									"end": 7232,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7207,
									"end": 7232,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7207,
									"end": 7232,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7246,
									"end": 7266,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 7264,
									"end": 7265,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7246,
									"end": 7266,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 7246,
									"end": 7266,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7246,
									"end": 7266,
									"name": "tag",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 7246,
									"end": 7266,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7241,
									"end": 7266,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7289,
									"end": 7290,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7286,
									"end": 7287,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7282,
									"end": 7291,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7275,
									"end": 7291,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7275,
									"end": 7291,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7310,
									"end": 7313,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 7307,
									"end": 7308,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7304,
									"end": 7314,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7301,
									"end": 7337,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7301,
									"end": 7337,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 7301,
									"end": 7337,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7317,
									"end": 7335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 7317,
									"end": 7335,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 7317,
									"end": 7335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7317,
									"end": 7335,
									"name": "tag",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 7317,
									"end": 7335,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7301,
									"end": 7337,
									"name": "tag",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 7301,
									"end": 7337,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7153,
									"end": 7344,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7153,
									"end": 7344,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7153,
									"end": 7344,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7153,
									"end": 7344,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7153,
									"end": 7344,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7350,
									"end": 7468,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 7350,
									"end": 7468,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7437,
									"end": 7461,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "163"
								},
								{
									"begin": 7455,
									"end": 7460,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7437,
									"end": 7461,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 7437,
									"end": 7461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7437,
									"end": 7461,
									"name": "tag",
									"source": 9,
									"value": "163"
								},
								{
									"begin": 7437,
									"end": 7461,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7432,
									"end": 7435,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7425,
									"end": 7462,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 7350,
									"end": 7468,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7350,
									"end": 7468,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7350,
									"end": 7468,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7474,
									"end": 7916,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 7474,
									"end": 7916,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7623,
									"end": 7627,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7661,
									"end": 7663,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 7650,
									"end": 7659,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7646,
									"end": 7664,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7638,
									"end": 7664,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7638,
									"end": 7664,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7674,
									"end": 7745,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 7742,
									"end": 7743,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7731,
									"end": 7740,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7727,
									"end": 7744,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7718,
									"end": 7724,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 7674,
									"end": 7745,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 7674,
									"end": 7745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7674,
									"end": 7745,
									"name": "tag",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 7674,
									"end": 7745,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7755,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 7823,
									"end": 7825,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7812,
									"end": 7821,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7808,
									"end": 7826,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7799,
									"end": 7805,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7755,
									"end": 7827,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 7755,
									"end": 7827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7755,
									"end": 7827,
									"name": "tag",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 7755,
									"end": 7827,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7837,
									"end": 7909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 7905,
									"end": 7907,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 7894,
									"end": 7903,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7890,
									"end": 7908,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7881,
									"end": 7887,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7837,
									"end": 7909,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 7837,
									"end": 7909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7837,
									"end": 7909,
									"name": "tag",
									"source": 9,
									"value": "167"
								},
								{
									"begin": 7837,
									"end": 7909,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7474,
									"end": 7916,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 7474,
									"end": 7916,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 7474,
									"end": 7916,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7474,
									"end": 7916,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7474,
									"end": 7916,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7474,
									"end": 7916,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7474,
									"end": 7916,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7922,
									"end": 8144,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 7922,
									"end": 8144,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8015,
									"end": 8019,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8053,
									"end": 8055,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8042,
									"end": 8051,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8038,
									"end": 8056,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8030,
									"end": 8056,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8030,
									"end": 8056,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8066,
									"end": 8137,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 8134,
									"end": 8135,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8123,
									"end": 8132,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8119,
									"end": 8136,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8110,
									"end": 8116,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8066,
									"end": 8137,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 8066,
									"end": 8137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8066,
									"end": 8137,
									"name": "tag",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 8066,
									"end": 8137,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7922,
									"end": 8144,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7922,
									"end": 8144,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7922,
									"end": 8144,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7922,
									"end": 8144,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7922,
									"end": 8144,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 379,
									"end": 7429,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 379,
									"end": 7429,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 379,
									"end": 7429,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 379,
									"end": 7429,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 379,
									"end": 7429,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 379,
									"end": 7429,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 379,
									"end": 7429,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 379,
									"end": 7429,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 379,
									"end": 7429,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207e52ffddca16469ac02c372fcb7231cec9398546de86c6ce0bc957967aa9008164736f6c634300081a0033",
									".code": [
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "B0E68630"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "C040E6B8"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "C040E6B8"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "C552E04B"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "E6BD92B9"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "B0E68630"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "B68ED11F"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "BA20CF4C"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "BDA95633"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "8F7713FF"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "8F7713FF"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "902D55A5"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "920168B3"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "7547C7A3"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "2B1CBC38"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "3610724E"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "3610724E"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "40F02AB6"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "54DD1DA4"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "55DD574C"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "5FB3B944"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "2B1CBC38"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "32C85AC0"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "338DBF59"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "192399D1"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "24600FC3"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "2630C12F"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "FE83BB8"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH",
											"source": 8,
											"value": "1514617E"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 7377,
											"end": 7420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7377,
											"end": 7420,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 379,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 7284,
											"end": 7327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7284,
											"end": 7327,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1095,
											"end": 1148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1095,
											"end": 1148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1622,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1622,
											"end": 1663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1508,
											"end": 1557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 1508,
											"end": 1557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1508,
											"end": 1557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 7118,
											"end": 7240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 1733,
											"end": 1764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1733,
											"end": 1764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1563,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1563,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1563,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 6887,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2329,
											"end": 2510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 2792,
											"end": 4386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2792,
											"end": 4386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1677,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1677,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6298,
											"end": 6881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2516,
											"end": 2786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 939,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 939,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 5791,
											"end": 6292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 5791,
											"end": 6292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1255,
											"end": 1302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1255,
											"end": 1302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 472,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 472,
											"end": 533,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 533,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 472,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 472,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 472,
											"end": 533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 472,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 533,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 472,
											"end": 533,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 472,
											"end": 533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 472,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 533,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 1174,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1174,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 773,
											"end": 828,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 773,
											"end": 828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 773,
											"end": 828,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 828,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 773,
											"end": 828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 773,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 773,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 773,
											"end": 828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 828,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 773,
											"end": 828,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 773,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 773,
											"end": 828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 828,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1328,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1328,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 607,
											"end": 662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 607,
											"end": 662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 856,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 856,
											"end": 910,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 856,
											"end": 910,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 856,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 856,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 856,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 856,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 910,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 856,
											"end": 910,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 856,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 856,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 856,
											"end": 910,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 1436,
											"end": 1475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 1436,
											"end": 1475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 692,
											"end": 748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 692,
											"end": 748,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 692,
											"end": 748,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 692,
											"end": 748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 692,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 692,
											"end": 748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 692,
											"end": 748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 748,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 692,
											"end": 748,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 692,
											"end": 748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 692,
											"end": 748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 692,
											"end": 748,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 1012,
											"end": 1064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1012,
											"end": 1064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1095,
											"end": 1148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1508,
											"end": 1557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 7118,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7193,
											"end": 7200,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 7193,
											"end": 7198,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 7193,
											"end": 7200,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7193,
											"end": 7200,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 7193,
											"end": 7200,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7210,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7185,
											"end": 7210,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8FC"
										},
										{
											"begin": 7211,
											"end": 7232,
											"modifierDepth": 2,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7185,
											"end": 7233,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7233,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7118,
											"end": 7240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 6887,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 6970,
											"end": 6987,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6945,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 6945,
											"end": 6966,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6945,
											"end": 6987,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6945,
											"end": 7025,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6945,
											"end": 7025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 6945,
											"end": 7025,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6945,
											"end": 7025,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7012,
											"end": 7025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 7012,
											"end": 7025,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6991,
											"end": 7008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 6991,
											"end": 7008,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6991,
											"end": 7025,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6945,
											"end": 7025,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 6945,
											"end": 7025,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 6937,
											"end": 7073,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 6937,
											"end": 7073,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7091,
											"end": 7105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7083,
											"end": 7088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7083,
											"end": 7088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 7083,
											"end": 7105,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7105,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6887,
											"end": 7112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2329,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2403,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2394,
											"end": 2417,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2394,
											"end": 2399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2394,
											"end": 2399,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2399,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2399,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2394,
											"end": 2399,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2399,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2399,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2394,
											"end": 2399,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2394,
											"end": 2417,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2417,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2386,
											"end": 2468,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2386,
											"end": 2468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2486,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2478,
											"end": 2483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2478,
											"end": 2483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2478,
											"end": 2503,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2478,
											"end": 2503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2887,
											"end": 2901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2878,
											"end": 2901,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2878,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2878,
											"end": 2883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2883,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2878,
											"end": 2883,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2883,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2878,
											"end": 2883,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2878,
											"end": 2901,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 2878,
											"end": 2901,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2878,
											"end": 2901,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2870,
											"end": 2924,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 2870,
											"end": 2924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 2957,
											"end": 2968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2968,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2957,
											"end": 2968,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2968,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2957,
											"end": 2968,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2957,
											"end": 2983,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8E15F473"
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2985,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2957,
											"end": 2985,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2957,
											"end": 2985,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2985,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2985,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3039,
											"end": 3054,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 3031,
											"end": 3084,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 3031,
											"end": 3084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 3128,
											"end": 3154,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3128,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3133,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3128,
											"end": 3133,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3133,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3128,
											"end": 3133,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 3128,
											"end": 3154,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 3128,
											"end": 3154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3128,
											"end": 3154,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 4380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 3124,
											"end": 4380,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3202,
											"end": 3219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3202,
											"end": 3219,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3178,
											"end": 3199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3178,
											"end": 3199,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3178,
											"end": 3219,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 3170,
											"end": 3246,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 3170,
											"end": 3246,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3274,
											"end": 3341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 3301,
											"end": 3340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 3332,
											"end": 3339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3301,
											"end": 3327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 3315,
											"end": 3326,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3301,
											"end": 3310,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3301,
											"end": 3314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 3301,
											"end": 3314,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3301,
											"end": 3327,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3301,
											"end": 3327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3301,
											"end": 3327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3301,
											"end": 3327,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3301,
											"end": 3327,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3301,
											"end": 3327,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 3301,
											"end": 3327,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3301,
											"end": 3331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 3301,
											"end": 3331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3301,
											"end": 3340,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3301,
											"end": 3340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3301,
											"end": 3340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3301,
											"end": 3340,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3301,
											"end": 3340,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3301,
											"end": 3340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 3301,
											"end": 3340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3274,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 3274,
											"end": 3341,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3274,
											"end": 3341,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 3274,
											"end": 3341,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3260,
											"end": 3341,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3260,
											"end": 3341,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 3405,
											"end": 3416,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3379,
											"end": 3400,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 3379,
											"end": 3404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3417,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3417,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3379,
											"end": 3417,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3417,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3417,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 3379,
											"end": 3417,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3355,
											"end": 3376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3355,
											"end": 3417,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3355,
											"end": 3417,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3355,
											"end": 3417,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3355,
											"end": 3417,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3464,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3439,
											"end": 3460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 3439,
											"end": 3460,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3439,
											"end": 3481,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3439,
											"end": 3481,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 3431,
											"end": 3519,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 3431,
											"end": 3519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3605,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 3593,
											"end": 3604,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 3562,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3587,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3562,
											"end": 3588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3562,
											"end": 3588,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3588,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3562,
											"end": 3588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3588,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3562,
											"end": 3588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3562,
											"end": 3588,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3588,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 3562,
											"end": 3592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3605,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3605,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3562,
											"end": 3605,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3605,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3605,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 3562,
											"end": 3605,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 3533,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3558,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3533,
											"end": 3559,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3533,
											"end": 3559,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3559,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3533,
											"end": 3559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3559,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3533,
											"end": 3559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3533,
											"end": 3559,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3605,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3605,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3605,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3533,
											"end": 3605,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3652,
											"end": 3707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3691,
											"end": 3706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3691,
											"end": 3706,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 3672,
											"end": 3685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 3672,
											"end": 3685,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3652,
											"end": 3667,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3652,
											"end": 3671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 3652,
											"end": 3671,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3652,
											"end": 3686,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 3652,
											"end": 3686,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3652,
											"end": 3690,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 3652,
											"end": 3690,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3652,
											"end": 3707,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3652,
											"end": 3707,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3652,
											"end": 3707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3707,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3652,
											"end": 3707,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3652,
											"end": 3707,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3652,
											"end": 3707,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 3619,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3648,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3619,
											"end": 3649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3619,
											"end": 3649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3649,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3649,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3619,
											"end": 3649,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3649,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3649,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3619,
											"end": 3649,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3649,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3707,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3707,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3707,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3707,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3748,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8FA81BB0702332EA2A0AEE44BB9E4D359CF4A2C5A820DD59D9129369BDBCA73F"
										},
										{
											"begin": 3750,
											"end": 3761,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 3726,
											"end": 3762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3762,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 4380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 3124,
											"end": 4380,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 4380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 3124,
											"end": 4380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3792,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 3783,
											"end": 3809,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3783,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3783,
											"end": 3788,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3788,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3783,
											"end": 3788,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 3783,
											"end": 3809,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 3783,
											"end": 3809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3783,
											"end": 3809,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3779,
											"end": 4380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 3779,
											"end": 4380,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3853,
											"end": 3866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 3853,
											"end": 3866,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3850,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 3833,
											"end": 3850,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3866,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 3825,
											"end": 3889,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 3825,
											"end": 3889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3924,
											"end": 3938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "56BC75E2D63100000"
										},
										{
											"begin": 3911,
											"end": 3920,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3911,
											"end": 3938,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3911,
											"end": 3938,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3911,
											"end": 3971,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3911,
											"end": 3971,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3911,
											"end": 3971,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 3911,
											"end": 3971,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3911,
											"end": 3971,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3955,
											"end": 3971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "A2A15D09519BE00000"
										},
										{
											"begin": 3942,
											"end": 3951,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3971,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3971,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3911,
											"end": 3971,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 3911,
											"end": 3971,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 3903,
											"end": 4006,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 3903,
											"end": 4006,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 4057,
											"end": 4096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 4088,
											"end": 4095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4057,
											"end": 4083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 4071,
											"end": 4082,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4066,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 4057,
											"end": 4070,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4083,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4057,
											"end": 4083,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4083,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 4057,
											"end": 4083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 4057,
											"end": 4087,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4096,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4096,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4057,
											"end": 4096,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4096,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 4057,
											"end": 4096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 4034,
											"end": 4097,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4097,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 4034,
											"end": 4097,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4097,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4131,
											"end": 4165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 4153,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4131,
											"end": 4148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 4131,
											"end": 4148,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4131,
											"end": 4152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 4131,
											"end": 4152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4131,
											"end": 4165,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4131,
											"end": 4165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4131,
											"end": 4165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4131,
											"end": 4165,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4131,
											"end": 4165,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4131,
											"end": 4165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 4131,
											"end": 4165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4111,
											"end": 4128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 4111,
											"end": 4165,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4111,
											"end": 4165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4111,
											"end": 4165,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 4111,
											"end": 4165,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4208,
											"end": 4221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 4208,
											"end": 4221,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4187,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 4187,
											"end": 4204,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4187,
											"end": 4221,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4187,
											"end": 4221,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 4179,
											"end": 4255,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 4179,
											"end": 4255,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4269,
											"end": 4318,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 4287,
											"end": 4291,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4304,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4306,
											"end": 4317,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4269,
											"end": 4278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 4269,
											"end": 4318,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4269,
											"end": 4318,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 4269,
											"end": 4318,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4345,
											"end": 4355,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "550498DC565CC74203B9D14CBA907C9F60CEEFE26E82B37DF98F6CB98529CF19"
										},
										{
											"begin": 4357,
											"end": 4368,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 4337,
											"end": 4369,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4369,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 3779,
											"end": 4380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 3779,
											"end": 4380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 4380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 3124,
											"end": 4380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 4386,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2860,
											"end": 4386,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2792,
											"end": 4386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 4386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6298,
											"end": 6881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6388,
											"end": 6406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 6388,
											"end": 6418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6417,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6388,
											"end": 6418,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6388,
											"end": 6418,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6418,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6418,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6388,
											"end": 6418,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6418,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6418,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6388,
											"end": 6418,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6388,
											"end": 6418,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6388,
											"end": 6418,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6369,
											"end": 6384,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 6369,
											"end": 6418,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6369,
											"end": 6418,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 6361,
											"end": 6456,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 6361,
											"end": 6456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6466,
											"end": 6480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 6483,
											"end": 6509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6498,
											"end": 6508,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6483,
											"end": 6509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6483,
											"end": 6509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6509,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6483,
											"end": 6509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6509,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6483,
											"end": 6509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6509,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6509,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6466,
											"end": 6509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6466,
											"end": 6509,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6536,
											"end": 6537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6533,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6527,
											"end": 6537,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "335"
										},
										{
											"begin": 6519,
											"end": 6569,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 6519,
											"end": 6569,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6718,
											"end": 6719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6689,
											"end": 6703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 6689,
											"end": 6715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6704,
											"end": 6714,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6689,
											"end": 6715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6689,
											"end": 6715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6715,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6689,
											"end": 6715,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6715,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6689,
											"end": 6715,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6689,
											"end": 6715,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6719,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6719,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6719,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6689,
											"end": 6719,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6762,
											"end": 6763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 6729,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6748,
											"end": 6758,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6729,
											"end": 6759,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6729,
											"end": 6759,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6759,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6759,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6729,
											"end": 6759,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6759,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6759,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6729,
											"end": 6759,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6759,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6763,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6763,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6763,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6729,
											"end": 6763,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 6792,
											"end": 6796,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6799,
											"end": 6809,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6811,
											"end": 6817,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 6774,
											"end": 6818,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6818,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 6774,
											"end": 6818,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6855,
											"end": 6865,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6BC5063C7239B75C8BF325A2A2238F726FADA322163996BB6C93D5594FB119F0"
										},
										{
											"begin": 6867,
											"end": 6873,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 6834,
											"end": 6874,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6834,
											"end": 6874,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 6351,
											"end": 6881,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "338"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6298,
											"end": 6881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 2516,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2577,
											"end": 2603,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2577,
											"end": 2582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2582,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2577,
											"end": 2582,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2582,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2582,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2577,
											"end": 2582,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2577,
											"end": 2603,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2577,
											"end": 2603,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 2569,
											"end": 2647,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 2569,
											"end": 2647,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2690,
											"end": 2707,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2665,
											"end": 2686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 2665,
											"end": 2686,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2665,
											"end": 2707,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 2657,
											"end": 2744,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 2657,
											"end": 2744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2754,
											"end": 2759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2754,
											"end": 2759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2754,
											"end": 2779,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2779,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2516,
											"end": 2786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 939,
											"end": 979,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 939,
											"end": 979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5877,
											"end": 5878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5868,
											"end": 5874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5868,
											"end": 5878,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 5860,
											"end": 5912,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 5860,
											"end": 5912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5955,
											"end": 5961,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5930,
											"end": 5951,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 5940,
											"end": 5950,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5930,
											"end": 5939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 5930,
											"end": 5951,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5930,
											"end": 5951,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 5930,
											"end": 5951,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5930,
											"end": 5961,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5930,
											"end": 5961,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 5922,
											"end": 5995,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 5922,
											"end": 5995,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 6016,
											"end": 6026,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6036,
											"end": 6040,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6043,
											"end": 6049,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6015,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 6006,
											"end": 6050,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6006,
											"end": 6050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 6006,
											"end": 6050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 6121,
											"end": 6127,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 6090,
											"end": 6116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6115,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6090,
											"end": 6116,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6090,
											"end": 6116,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6116,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6116,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6090,
											"end": 6116,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6116,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6116,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6116,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6090,
											"end": 6116,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6090,
											"end": 6116,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6116,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 6090,
											"end": 6120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6128,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6090,
											"end": 6128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6128,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6128,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 6090,
											"end": 6128,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 6061,
											"end": 6087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6076,
											"end": 6086,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6061,
											"end": 6087,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6061,
											"end": 6087,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6087,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6087,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6061,
											"end": 6087,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6087,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6087,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6087,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6061,
											"end": 6087,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6061,
											"end": 6087,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6128,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6061,
											"end": 6128,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6171,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 6191,
											"end": 6204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 6191,
											"end": 6204,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6171,
											"end": 6186,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 6171,
											"end": 6190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 6171,
											"end": 6190,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6171,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6171,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6171,
											"end": 6205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6171,
											"end": 6205,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6171,
											"end": 6205,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6171,
											"end": 6205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 6171,
											"end": 6205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 6138,
											"end": 6168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6157,
											"end": 6167,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6138,
											"end": 6168,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6138,
											"end": 6168,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6168,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6168,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6138,
											"end": 6168,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6168,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6168,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6138,
											"end": 6168,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6138,
											"end": 6168,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6205,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6205,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 6138,
											"end": 6205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6234,
											"end": 6244,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "DD2A19C3BDD089CBE77C04F5655F83DE0504D6140D12C8667646F55D0557C4DC"
										},
										{
											"begin": 6246,
											"end": 6252,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6254,
											"end": 6272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 6254,
											"end": 6284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6273,
											"end": 6283,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6254,
											"end": 6284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6254,
											"end": 6284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6254,
											"end": 6284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6254,
											"end": 6284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6254,
											"end": 6284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6254,
											"end": 6284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6254,
											"end": 6284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6254,
											"end": 6284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6254,
											"end": 6284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6254,
											"end": 6284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6254,
											"end": 6284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6254,
											"end": 6284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6254,
											"end": 6284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6254,
											"end": 6284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6254,
											"end": 6284,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6254,
											"end": 6284,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 6221,
											"end": 6285,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6221,
											"end": 6285,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5791,
											"end": 6292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5791,
											"end": 6292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 472,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 511,
											"end": 533,
											"name": "PUSH",
											"source": 8,
											"value": "A56FA5B99019A5C8000000"
										},
										{
											"begin": 472,
											"end": 533,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 472,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 773,
											"end": 828,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 773,
											"end": 828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 773,
											"end": 828,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 773,
											"end": 828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 607,
											"end": 662,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 607,
											"end": 662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 856,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 856,
											"end": 910,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 856,
											"end": 910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 692,
											"end": 748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 692,
											"end": 748,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 692,
											"end": 748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 3,
											"value": "407"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "420"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 5256,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4392,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4470,
											"end": 4477,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4509,
											"end": 4510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4497,
											"end": 4506,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4497,
											"end": 4510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 4489,
											"end": 4548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 4489,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4586,
											"end": 4587,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4566,
											"end": 4583,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4566,
											"end": 4583,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4587,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 4558,
											"end": 4634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 4558,
											"end": 4634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4677,
											"end": 4694,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4677,
											"end": 4694,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4652,
											"end": 4673,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 4652,
											"end": 4673,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 4644,
											"end": 4747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 4644,
											"end": 4747,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4758,
											"end": 4776,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 4803,
											"end": 4824,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 4803,
											"end": 4824,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4779,
											"end": 4798,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 4779,
											"end": 4798,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4779,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 4779,
											"end": 4802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4779,
											"end": 4825,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4779,
											"end": 4825,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4779,
											"end": 4825,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4779,
											"end": 4825,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4779,
											"end": 4825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4779,
											"end": 4825,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 4779,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4758,
											"end": 4825,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4758,
											"end": 4825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4835,
											"end": 4855,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 4897,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 4939,
											"end": 4956,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 4939,
											"end": 4956,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 4912,
											"end": 4933,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 4912,
											"end": 4933,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 4897,
											"end": 4911,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4934,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4934,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4897,
											"end": 4934,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4934,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 4897,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 4897,
											"end": 4938,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4957,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4957,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4897,
											"end": 4957,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4957,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 4897,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4879,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 4858,
											"end": 4879,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 4858,
											"end": 4883,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4967,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4967,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4858,
											"end": 4967,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4858,
											"end": 4967,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 4858,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4835,
											"end": 4967,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4835,
											"end": 4967,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5002,
											"end": 5023,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 5002,
											"end": 5023,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4986,
											"end": 4998,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4986,
											"end": 5023,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4986,
											"end": 5023,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4986,
											"end": 5062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4986,
											"end": 5062,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4986,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 4986,
											"end": 5062,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4986,
											"end": 5062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5062,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 5043,
											"end": 5062,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 5062,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 5062,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4986,
											"end": 5062,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 4986,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 4978,
											"end": 5097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 4978,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5122,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 5139,
											"end": 5151,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5134,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 5125,
											"end": 5138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5152,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5152,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5125,
											"end": 5152,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5152,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 5125,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5152,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5108,
											"end": 5152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5179,
											"end": 5180,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5170,
											"end": 5176,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5170,
											"end": 5180,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 5162,
											"end": 5225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 5162,
											"end": 5225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5243,
											"end": 5249,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5236,
											"end": 5249,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5236,
											"end": 5249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5236,
											"end": 5249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5236,
											"end": 5249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5236,
											"end": 5249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 5256,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 5256,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 5256,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 5256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5262,
											"end": 5785,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 5262,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5336,
											"end": 5343,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5355,
											"end": 5375,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5378,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 5413,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 5481,
											"end": 5494,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 5481,
											"end": 5494,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 5458,
											"end": 5475,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 5458,
											"end": 5475,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5414,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 5434,
											"end": 5451,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 5434,
											"end": 5451,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 5414,
											"end": 5429,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5414,
											"end": 5433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 5414,
											"end": 5433,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5414,
											"end": 5452,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5414,
											"end": 5452,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5414,
											"end": 5452,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5414,
											"end": 5452,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5414,
											"end": 5452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5414,
											"end": 5452,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 5414,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 5413,
											"end": 5457,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5476,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5476,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5476,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5413,
											"end": 5476,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5476,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 5413,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 5413,
											"end": 5480,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5495,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5495,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5413,
											"end": 5495,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5413,
											"end": 5495,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 5413,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5378,
											"end": 5395,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 5378,
											"end": 5395,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5378,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 5378,
											"end": 5399,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5378,
											"end": 5505,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5378,
											"end": 5505,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5378,
											"end": 5505,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5378,
											"end": 5505,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5378,
											"end": 5505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5378,
											"end": 5505,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 5378,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5505,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5505,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5539,
											"end": 5556,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 5539,
											"end": 5556,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5535,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5556,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5556,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5591,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5591,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 5523,
											"end": 5591,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5576,
											"end": 5591,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 5576,
											"end": 5591,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5560,
											"end": 5572,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5560,
											"end": 5591,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5560,
											"end": 5591,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5591,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 5523,
											"end": 5591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 5515,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 5515,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5637,
											"end": 5651,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5654,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 5668,
											"end": 5680,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5654,
											"end": 5663,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5654,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 5654,
											"end": 5667,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5654,
											"end": 5681,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5654,
											"end": 5681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5654,
											"end": 5681,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5654,
											"end": 5681,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5654,
											"end": 5681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5654,
											"end": 5681,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 5654,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5637,
											"end": 5681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5637,
											"end": 5681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5708,
											"end": 5709,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5699,
											"end": 5709,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 5691,
											"end": 5754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 5691,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5772,
											"end": 5778,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5765,
											"end": 5778,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5765,
											"end": 5778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5765,
											"end": 5778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5765,
											"end": 5778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5785,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5785,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5785,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 3,
											"value": "396"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "467"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "468"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 3,
											"value": "468"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "467"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "469"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "470"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 3,
											"value": "470"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 3,
											"value": "469"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "471"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "472"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 3,
											"value": "472"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 3,
											"value": "471"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 3,
											"value": "410"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "474"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "453"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "474"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "477"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "402"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "477"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "479"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "480"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "479"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "480"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "481"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 3,
											"value": "481"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 182,
											"end": 402,
											"name": "tag",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 182,
											"end": 402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 322,
											"end": 356,
											"name": "PUSH",
											"source": 9,
											"value": "44697265637420455448207472616E7366657273206E6F7420616C6C6F776564"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 299,
											"end": 357,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 391,
											"end": 394,
											"name": "PUSH",
											"source": 9,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 386,
											"end": 388,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 378,
											"end": 384,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 374,
											"end": 389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 367,
											"end": 395,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 182,
											"end": 402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 182,
											"end": 402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 408,
											"end": 774,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 408,
											"end": 774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 550,
											"end": 553,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 635,
											"end": 637,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 571,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 571,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 571,
											"end": 638,
											"name": "tag",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 571,
											"end": 638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 564,
											"end": 638,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 564,
											"end": 638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 736,
											"end": 739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 647,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "486"
										},
										{
											"begin": 647,
											"end": 740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 647,
											"end": 740,
											"name": "tag",
											"source": 9,
											"value": "568"
										},
										{
											"begin": 647,
											"end": 740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 765,
											"end": 767,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 763,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 756,
											"end": 768,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 749,
											"end": 768,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 749,
											"end": 768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 408,
											"end": 774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 408,
											"end": 774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 408,
											"end": 774,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 408,
											"end": 774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 780,
											"end": 1199,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 780,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 946,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 986,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 973,
											"end": 982,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 969,
											"end": 987,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 961,
											"end": 987,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 961,
											"end": 987,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1033,
											"end": 1042,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1023,
											"end": 1043,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1004,
											"end": 1021,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1044,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1061,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1061,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 1061,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1061,
											"end": 1192,
											"name": "tag",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 1061,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1053,
											"end": 1192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1053,
											"end": 1192,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 780,
											"end": 1199,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 780,
											"end": 1199,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 780,
											"end": 1199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 780,
											"end": 1199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1304,
											"name": "tag",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 1205,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1296,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1297,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1297,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1297,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1304,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1304,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1310,
											"end": 1449,
											"name": "tag",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 1310,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1394,
											"end": 1397,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1392,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1383,
											"end": 1406,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1441,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1437,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1426,
											"end": 1429,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1415,
											"end": 1442,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1310,
											"end": 1449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1310,
											"end": 1449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1310,
											"end": 1449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1310,
											"end": 1449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1557,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 1455,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1549,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1543,
											"end": 1550,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1540,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1541,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1523,
											"end": 1551,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1513,
											"end": 1551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1513,
											"end": 1551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1557,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1557,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1651,
											"end": 1654,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 1712,
											"end": 1717,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1679,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 1679,
											"end": 1718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1679,
											"end": 1718,
											"name": "tag",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 1679,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1734,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 1798,
											"end": 1804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 1796,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1734,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 1734,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1734,
											"end": 1805,
											"name": "tag",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 1734,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1805,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 1870,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1864,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1853,
											"end": 1858,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1849,
											"end": 1865,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "489"
										},
										{
											"begin": 1814,
											"end": 1879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1814,
											"end": 1879,
											"name": "tag",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 1814,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 1926,
											"end": 1932,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 1904,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1904,
											"end": 1933,
											"name": "tag",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 1904,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1934,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1888,
											"end": 1934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1888,
											"end": 1934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1655,
											"end": 1940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2059,
											"end": 2063,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2099,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2082,
											"end": 2100,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2100,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2146,
											"end": 2155,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2144,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2136,
											"end": 2156,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2132,
											"end": 2133,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2134,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2110,
											"end": 2157,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2174,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 2247,
											"end": 2251,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2174,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 2174,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2174,
											"end": 2252,
											"name": "tag",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 2174,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2252,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2166,
											"end": 2252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 2259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1946,
											"end": 2259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2346,
											"end": 2463,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 2346,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2455,
											"end": 2456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2453,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2445,
											"end": 2457,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2718,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 2592,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2636,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2711,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2662,
											"end": 2667,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2658,
											"end": 2712,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2647,
											"end": 2712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2647,
											"end": 2712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2718,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2820,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 2724,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2761,
											"end": 2768,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 2808,
											"end": 2813,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 2790,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 2814,
											"name": "tag",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 2790,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2820,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2724,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2948,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 2826,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 2917,
											"end": 2922,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 2899,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "tag",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 2899,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2892,
											"end": 2897,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2889,
											"end": 2924,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2879,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 2879,
											"end": 2942,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2936,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2928,
											"end": 2940,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2879,
											"end": 2942,
											"name": "tag",
											"source": 9,
											"value": "589"
										},
										{
											"begin": 2879,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2948,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3000,
											"end": 3005,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3016,
											"end": 3045,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3016,
											"end": 3045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 3081,
											"end": 3086,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 3054,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "tag",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 3093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3176,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 3099,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3136,
											"end": 3143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3170,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3154,
											"end": 3170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3176,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3176,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3304,
											"name": "tag",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 3182,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 3273,
											"end": 3278,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 3255,
											"end": 3279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3279,
											"name": "tag",
											"source": 9,
											"value": "594"
										},
										{
											"begin": 3255,
											"end": 3279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3248,
											"end": 3253,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3245,
											"end": 3280,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3235,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 3235,
											"end": 3298,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3295,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3292,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3296,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3235,
											"end": 3298,
											"name": "tag",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 3235,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3304,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "tag",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3356,
											"end": 3361,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3400,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3381,
											"end": 3401,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3401,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 3437,
											"end": 3442,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 3410,
											"end": 3443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 3443,
											"name": "tag",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 3410,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3449,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3529,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3537,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3580,
											"end": 3582,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3568,
											"end": 3577,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3559,
											"end": 3566,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3555,
											"end": 3578,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3583,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3667,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 3548,
											"end": 3667,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 3586,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 3586,
											"end": 3665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3586,
											"end": 3665,
											"name": "tag",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 3586,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3667,
											"name": "tag",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 3548,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3706,
											"end": 3707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "601"
										},
										{
											"begin": 3776,
											"end": 3783,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3773,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3756,
											"end": 3765,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3752,
											"end": 3774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 3784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 3731,
											"end": 3784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3731,
											"end": 3784,
											"name": "tag",
											"source": 9,
											"value": "601"
										},
										{
											"begin": 3731,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3784,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3784,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3677,
											"end": 3794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3859,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 3904,
											"end": 3911,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3895,
											"end": 3901,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3884,
											"end": 3893,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3880,
											"end": 3902,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3859,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 3859,
											"end": 3912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3859,
											"end": 3912,
											"name": "tag",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 3859,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3849,
											"end": 3912,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3849,
											"end": 3912,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3929,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3935,
											"end": 4025,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 3935,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3969,
											"end": 3976,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4012,
											"end": 4017,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4005,
											"end": 4018,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3998,
											"end": 4019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 4019,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 4019,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3935,
											"end": 4025,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3935,
											"end": 4025,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3935,
											"end": 4025,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3935,
											"end": 4025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4140,
											"name": "tag",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 4031,
											"end": 4140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 4127,
											"end": 4132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 4112,
											"end": 4133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4112,
											"end": 4133,
											"name": "tag",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 4112,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4107,
											"end": 4110,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4100,
											"end": 4134,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4233,
											"end": 4237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4271,
											"end": 4273,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4260,
											"end": 4269,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4256,
											"end": 4274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4248,
											"end": 4274,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4248,
											"end": 4274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "607"
										},
										{
											"begin": 4346,
											"end": 4347,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4344,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4331,
											"end": 4348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "503"
										},
										{
											"begin": 4284,
											"end": 4349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4349,
											"name": "tag",
											"source": 9,
											"value": "607"
										},
										{
											"begin": 4284,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4480,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 4362,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4449,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 4467,
											"end": 4472,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4449,
											"end": 4473,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 4449,
											"end": 4473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4449,
											"end": 4473,
											"name": "tag",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 4449,
											"end": 4473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4444,
											"end": 4447,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4474,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4362,
											"end": 4480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4579,
											"end": 4583,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4617,
											"end": 4619,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4606,
											"end": 4615,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4620,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4620,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "611"
										},
										{
											"begin": 4698,
											"end": 4699,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4687,
											"end": 4696,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4700,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 4630,
											"end": 4701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4630,
											"end": 4701,
											"name": "tag",
											"source": 9,
											"value": "611"
										},
										{
											"begin": 4630,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4708,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4824,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4810,
											"end": 4819,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4801,
											"end": 4808,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4797,
											"end": 4820,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 4825,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4909,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "613"
										},
										{
											"begin": 4790,
											"end": 4909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "614"
										},
										{
											"begin": 4828,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 4828,
											"end": 4907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4907,
											"name": "tag",
											"source": 9,
											"value": "614"
										},
										{
											"begin": 4828,
											"end": 4907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4909,
											"name": "tag",
											"source": 9,
											"value": "613"
										},
										{
											"begin": 4790,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4948,
											"end": 4949,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "615"
										},
										{
											"begin": 5018,
											"end": 5025,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4998,
											"end": 5007,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4994,
											"end": 5016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 4973,
											"end": 5026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "tag",
											"source": 9,
											"value": "615"
										},
										{
											"begin": 4973,
											"end": 5026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5026,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4919,
											"end": 5036,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 5043,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 5043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5126,
											"end": 5132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5134,
											"end": 5140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5142,
											"end": 5148,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5179,
											"end": 5188,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5170,
											"end": 5177,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5166,
											"end": 5189,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5162,
											"end": 5194,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5159,
											"end": 5278,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5159,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "617"
										},
										{
											"begin": 5159,
											"end": 5278,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "618"
										},
										{
											"begin": 5197,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 5197,
											"end": 5276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5197,
											"end": 5276,
											"name": "tag",
											"source": 9,
											"value": "618"
										},
										{
											"begin": 5197,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5159,
											"end": 5278,
											"name": "tag",
											"source": 9,
											"value": "617"
										},
										{
											"begin": 5159,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5317,
											"end": 5318,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "619"
										},
										{
											"begin": 5387,
											"end": 5394,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5378,
											"end": 5384,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5367,
											"end": 5376,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5363,
											"end": 5385,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 5342,
											"end": 5395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5395,
											"name": "tag",
											"source": 9,
											"value": "619"
										},
										{
											"begin": 5342,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5332,
											"end": 5395,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5332,
											"end": 5395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5288,
											"end": 5405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5446,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5470,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "620"
										},
										{
											"begin": 5515,
											"end": 5522,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5506,
											"end": 5512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5495,
											"end": 5504,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5513,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 5470,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5523,
											"name": "tag",
											"source": 9,
											"value": "620"
										},
										{
											"begin": 5470,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5523,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5460,
											"end": 5523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5415,
											"end": 5533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5572,
											"end": 5574,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5634,
											"end": 5640,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5623,
											"end": 5632,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5619,
											"end": 5641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 5598,
											"end": 5651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "tag",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 5598,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5588,
											"end": 5651,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5588,
											"end": 5651,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5543,
											"end": 5661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5668,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5734,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 5674,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5702,
											"end": 5705,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5716,
											"end": 5728,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5716,
											"end": 5728,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5734,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5740,
											"end": 5882,
											"name": "tag",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 5740,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5790,
											"end": 5799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "624"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "625"
										},
										{
											"begin": 5850,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "626"
										},
										{
											"begin": 5868,
											"end": 5873,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5850,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 5850,
											"end": 5874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5850,
											"end": 5874,
											"name": "tag",
											"source": 9,
											"value": "626"
										},
										{
											"begin": 5850,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 5841,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "tag",
											"source": 9,
											"value": "625"
										},
										{
											"begin": 5841,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5823,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 5823,
											"end": 5876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5823,
											"end": 5876,
											"name": "tag",
											"source": 9,
											"value": "624"
										},
										{
											"begin": 5823,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5810,
											"end": 5876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5810,
											"end": 5876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5740,
											"end": 5882,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5740,
											"end": 5882,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5740,
											"end": 5882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5740,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6014,
											"name": "tag",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 5888,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5938,
											"end": 5947,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5971,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "628"
										},
										{
											"begin": 6002,
											"end": 6007,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5971,
											"end": 6008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "506"
										},
										{
											"begin": 5971,
											"end": 6008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5971,
											"end": 6008,
											"name": "tag",
											"source": 9,
											"value": "628"
										},
										{
											"begin": 5971,
											"end": 6008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5958,
											"end": 6008,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5958,
											"end": 6008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6014,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6020,
											"end": 6167,
											"name": "tag",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 6020,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6091,
											"end": 6100,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6124,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "630"
										},
										{
											"begin": 6155,
											"end": 6160,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6124,
											"end": 6161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "507"
										},
										{
											"begin": 6124,
											"end": 6161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6124,
											"end": 6161,
											"name": "tag",
											"source": 9,
											"value": "630"
										},
										{
											"begin": 6124,
											"end": 6161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6161,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6161,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6020,
											"end": 6167,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6020,
											"end": 6167,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6020,
											"end": 6167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6020,
											"end": 6167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6346,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 6173,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "632"
										},
										{
											"begin": 6333,
											"end": 6338,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "508"
										},
										{
											"begin": 6281,
											"end": 6339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6339,
											"name": "tag",
											"source": 9,
											"value": "632"
										},
										{
											"begin": 6281,
											"end": 6339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6276,
											"end": 6279,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6269,
											"end": 6340,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6616,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 6352,
											"end": 6616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6466,
											"end": 6470,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6504,
											"end": 6506,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6493,
											"end": 6502,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6489,
											"end": 6507,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6481,
											"end": 6507,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6481,
											"end": 6507,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6517,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "634"
										},
										{
											"begin": 6606,
											"end": 6607,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6595,
											"end": 6604,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6591,
											"end": 6608,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6582,
											"end": 6588,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6517,
											"end": 6609,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 6517,
											"end": 6609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6517,
											"end": 6609,
											"name": "tag",
											"source": 9,
											"value": "634"
										},
										{
											"begin": 6517,
											"end": 6609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6616,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6616,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6708,
											"name": "tag",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 6622,
											"end": 6708,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6657,
											"end": 6664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6697,
											"end": 6701,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6690,
											"end": 6695,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6686,
											"end": 6702,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6675,
											"end": 6702,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6675,
											"end": 6702,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6708,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6708,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6708,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6622,
											"end": 6708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6714,
											"end": 6826,
											"name": "tag",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 6714,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6797,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "637"
										},
										{
											"begin": 6813,
											"end": 6818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6797,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "510"
										},
										{
											"begin": 6797,
											"end": 6819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6797,
											"end": 6819,
											"name": "tag",
											"source": 9,
											"value": "637"
										},
										{
											"begin": 6797,
											"end": 6819,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6792,
											"end": 6795,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6785,
											"end": 6820,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6714,
											"end": 6826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6714,
											"end": 6826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6714,
											"end": 6826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 7046,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 6832,
											"end": 7046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6959,
											"end": 6961,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6948,
											"end": 6957,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6944,
											"end": 6962,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6936,
											"end": 6962,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6936,
											"end": 6962,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6972,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "639"
										},
										{
											"begin": 7036,
											"end": 7037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7025,
											"end": 7034,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7021,
											"end": 7038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7012,
											"end": 7018,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6972,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "511"
										},
										{
											"begin": 6972,
											"end": 7039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6972,
											"end": 7039,
											"name": "tag",
											"source": 9,
											"value": "639"
										},
										{
											"begin": 6972,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 7046,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 7046,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 7046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 7046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6832,
											"end": 7046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7052,
											"end": 7381,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 7052,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7111,
											"end": 7117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7160,
											"end": 7162,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7148,
											"end": 7157,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7139,
											"end": 7146,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7135,
											"end": 7158,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7163,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7247,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "641"
										},
										{
											"begin": 7128,
											"end": 7247,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7166,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "642"
										},
										{
											"begin": 7166,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 7166,
											"end": 7245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7166,
											"end": 7245,
											"name": "tag",
											"source": 9,
											"value": "642"
										},
										{
											"begin": 7166,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7128,
											"end": 7247,
											"name": "tag",
											"source": 9,
											"value": "641"
										},
										{
											"begin": 7128,
											"end": 7247,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7286,
											"end": 7287,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7311,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "643"
										},
										{
											"begin": 7356,
											"end": 7363,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7353,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7345,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "501"
										},
										{
											"begin": 7311,
											"end": 7364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7364,
											"name": "tag",
											"source": 9,
											"value": "643"
										},
										{
											"begin": 7311,
											"end": 7364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7301,
											"end": 7364,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7301,
											"end": 7364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7257,
											"end": 7374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7052,
											"end": 7381,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7052,
											"end": 7381,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7052,
											"end": 7381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7052,
											"end": 7381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7052,
											"end": 7381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7387,
											"end": 7505,
											"name": "tag",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 7387,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7474,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "645"
										},
										{
											"begin": 7492,
											"end": 7497,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7474,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 7474,
											"end": 7498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7474,
											"end": 7498,
											"name": "tag",
											"source": 9,
											"value": "645"
										},
										{
											"begin": 7474,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7469,
											"end": 7472,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7462,
											"end": 7499,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7387,
											"end": 7505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7387,
											"end": 7505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7387,
											"end": 7505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7511,
											"end": 7733,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 7511,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7604,
											"end": 7608,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7642,
											"end": 7644,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7631,
											"end": 7640,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7619,
											"end": 7645,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7619,
											"end": 7645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7655,
											"end": 7726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "647"
										},
										{
											"begin": 7723,
											"end": 7724,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7712,
											"end": 7721,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7708,
											"end": 7725,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7699,
											"end": 7705,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7655,
											"end": 7726,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 7655,
											"end": 7726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7655,
											"end": 7726,
											"name": "tag",
											"source": 9,
											"value": "647"
										},
										{
											"begin": 7655,
											"end": 7726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7511,
											"end": 7733,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7511,
											"end": 7733,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7511,
											"end": 7733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7511,
											"end": 7733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7511,
											"end": 7733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7739,
											"end": 7919,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 7739,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7787,
											"end": 7864,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7784,
											"end": 7785,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7777,
											"end": 7865,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 7888,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 7881,
											"end": 7882,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7874,
											"end": 7889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7912,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7905,
											"end": 7906,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7898,
											"end": 7913,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7925,
											"end": 8044,
											"name": "tag",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 7925,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8012,
											"end": 8013,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8005,
											"end": 8010,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8002,
											"end": 8014,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7992,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "650"
										},
										{
											"begin": 7992,
											"end": 8038,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "651"
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 8018,
											"end": 8036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "tag",
											"source": 9,
											"value": "651"
										},
										{
											"begin": 8018,
											"end": 8036,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7992,
											"end": 8038,
											"name": "tag",
											"source": 9,
											"value": "650"
										},
										{
											"begin": 7992,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7925,
											"end": 8044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7925,
											"end": 8044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8189,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 8050,
											"end": 8189,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8101,
											"end": 8108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8130,
											"end": 8135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "653"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 8136,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8183,
											"name": "tag",
											"source": 9,
											"value": "653"
										},
										{
											"begin": 8136,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8189,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8189,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8189,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8195,
											"end": 8334,
											"name": "tag",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 8195,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8266,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8290,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "655"
										},
										{
											"begin": 8322,
											"end": 8327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8290,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 8290,
											"end": 8328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8290,
											"end": 8328,
											"name": "tag",
											"source": 9,
											"value": "655"
										},
										{
											"begin": 8290,
											"end": 8328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8277,
											"end": 8328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8277,
											"end": 8328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8195,
											"end": 8334,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8195,
											"end": 8334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8195,
											"end": 8334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8195,
											"end": 8334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8495,
											"name": "tag",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 8340,
											"end": 8495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "657"
										},
										{
											"begin": 8482,
											"end": 8487,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8488,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "515"
										},
										{
											"begin": 8439,
											"end": 8488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8439,
											"end": 8488,
											"name": "tag",
											"source": 9,
											"value": "657"
										},
										{
											"begin": 8439,
											"end": 8488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8434,
											"end": 8437,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8427,
											"end": 8489,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8747,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 8501,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8644,
											"end": 8646,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8633,
											"end": 8642,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8629,
											"end": 8647,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8621,
											"end": 8647,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8621,
											"end": 8647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8657,
											"end": 8740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "659"
										},
										{
											"begin": 8737,
											"end": 8738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8726,
											"end": 8735,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8722,
											"end": 8739,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8713,
											"end": 8719,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8657,
											"end": 8740,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "516"
										},
										{
											"begin": 8657,
											"end": 8740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8657,
											"end": 8740,
											"name": "tag",
											"source": 9,
											"value": "659"
										},
										{
											"begin": 8657,
											"end": 8740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8747,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8747,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8753,
											"end": 9227,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 8753,
											"end": 9227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8821,
											"end": 8827,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8829,
											"end": 8835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8878,
											"end": 8880,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8866,
											"end": 8875,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8857,
											"end": 8864,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8853,
											"end": 8876,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8849,
											"end": 8881,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8846,
											"end": 8965,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8846,
											"end": 8965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "661"
										},
										{
											"begin": 8846,
											"end": 8965,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 8884,
											"end": 8963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 8884,
											"end": 8963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8884,
											"end": 8963,
											"name": "tag",
											"source": 9,
											"value": "662"
										},
										{
											"begin": 8884,
											"end": 8963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8846,
											"end": 8965,
											"name": "tag",
											"source": 9,
											"value": "661"
										},
										{
											"begin": 8846,
											"end": 8965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9004,
											"end": 9005,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9029,
											"end": 9082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "663"
										},
										{
											"begin": 9074,
											"end": 9081,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9065,
											"end": 9071,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9054,
											"end": 9063,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9050,
											"end": 9072,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9029,
											"end": 9082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 9029,
											"end": 9082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9029,
											"end": 9082,
											"name": "tag",
											"source": 9,
											"value": "663"
										},
										{
											"begin": 9029,
											"end": 9082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9019,
											"end": 9082,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9019,
											"end": 9082,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8975,
											"end": 9092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9131,
											"end": 9133,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9157,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "664"
										},
										{
											"begin": 9202,
											"end": 9209,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9193,
											"end": 9199,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9182,
											"end": 9191,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9178,
											"end": 9200,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 9157,
											"end": 9210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9210,
											"name": "tag",
											"source": 9,
											"value": "664"
										},
										{
											"begin": 9157,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9147,
											"end": 9210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9147,
											"end": 9210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9102,
											"end": 9220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8753,
											"end": 9227,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8753,
											"end": 9227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8753,
											"end": 9227,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8753,
											"end": 9227,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8753,
											"end": 9227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8753,
											"end": 9227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9233,
											"end": 9413,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 9233,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9281,
											"end": 9358,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9271,
											"end": 9359,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9402,
											"end": 9406,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9399,
											"end": 9400,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9392,
											"end": 9407,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9419,
											"end": 9739,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 9419,
											"end": 9739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9463,
											"end": 9469,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9500,
											"end": 9501,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9494,
											"end": 9498,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9490,
											"end": 9502,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9480,
											"end": 9502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9480,
											"end": 9502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9547,
											"end": 9548,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9541,
											"end": 9545,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9537,
											"end": 9549,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9568,
											"end": 9586,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "667"
										},
										{
											"begin": 9558,
											"end": 9639,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9624,
											"end": 9628,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 9616,
											"end": 9622,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9612,
											"end": 9629,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9602,
											"end": 9629,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9602,
											"end": 9629,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9558,
											"end": 9639,
											"name": "tag",
											"source": 9,
											"value": "667"
										},
										{
											"begin": 9558,
											"end": 9639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9686,
											"end": 9688,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9678,
											"end": 9684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9675,
											"end": 9689,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9655,
											"end": 9673,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9652,
											"end": 9690,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9649,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "668"
										},
										{
											"begin": 9649,
											"end": 9733,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "669"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 9705,
											"end": 9723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "tag",
											"source": 9,
											"value": "669"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9649,
											"end": 9733,
											"name": "tag",
											"source": 9,
											"value": "668"
										},
										{
											"begin": 9649,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9470,
											"end": 9739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9419,
											"end": 9739,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9419,
											"end": 9739,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9419,
											"end": 9739,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9419,
											"end": 9739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9745,
											"end": 9921,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 9745,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9885,
											"end": 9913,
											"name": "PUSH",
											"source": 9,
											"value": "53616C65732074617267657473206E6F7420796574206D65742E000000000000"
										},
										{
											"begin": 9881,
											"end": 9882,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9873,
											"end": 9879,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9869,
											"end": 9883,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9862,
											"end": 9914,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9745,
											"end": 9921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9745,
											"end": 9921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9927,
											"end": 10293,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 9927,
											"end": 10293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10069,
											"end": 10072,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10090,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "672"
										},
										{
											"begin": 10154,
											"end": 10156,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 10149,
											"end": 10152,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10090,
											"end": 10157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 10090,
											"end": 10157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10090,
											"end": 10157,
											"name": "tag",
											"source": 9,
											"value": "672"
										},
										{
											"begin": 10090,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10157,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10166,
											"end": 10259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "673"
										},
										{
											"begin": 10255,
											"end": 10258,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10166,
											"end": 10259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 10166,
											"end": 10259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10166,
											"end": 10259,
											"name": "tag",
											"source": 9,
											"value": "673"
										},
										{
											"begin": 10166,
											"end": 10259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10284,
											"end": 10286,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10279,
											"end": 10282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10287,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10287,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9927,
											"end": 10293,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9927,
											"end": 10293,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9927,
											"end": 10293,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9927,
											"end": 10293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10299,
											"end": 10718,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 10299,
											"end": 10718,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10465,
											"end": 10469,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10503,
											"end": 10505,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10492,
											"end": 10501,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10488,
											"end": 10506,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10480,
											"end": 10506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10480,
											"end": 10506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10552,
											"end": 10561,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10546,
											"end": 10550,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10542,
											"end": 10562,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10538,
											"end": 10539,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10527,
											"end": 10536,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10523,
											"end": 10540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10516,
											"end": 10563,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10580,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "675"
										},
										{
											"begin": 10706,
											"end": 10710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10580,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 10580,
											"end": 10711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10580,
											"end": 10711,
											"name": "tag",
											"source": 9,
											"value": "675"
										},
										{
											"begin": 10580,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10572,
											"end": 10711,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10572,
											"end": 10711,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10299,
											"end": 10718,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10299,
											"end": 10718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10299,
											"end": 10718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10299,
											"end": 10718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10957,
											"name": "tag",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 10724,
											"end": 10957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10864,
											"end": 10898,
											"name": "PUSH",
											"source": 9,
											"value": "507269766174652053616C652068617320616C72656164792073746172746564"
										},
										{
											"begin": 10860,
											"end": 10861,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10852,
											"end": 10858,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10848,
											"end": 10862,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10841,
											"end": 10899,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10933,
											"end": 10949,
											"name": "PUSH",
											"source": 9,
											"value": "206F7220636F6E636C756465642E000000000000000000000000000000000000"
										},
										{
											"begin": 10928,
											"end": 10930,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10920,
											"end": 10926,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10916,
											"end": 10931,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10909,
											"end": 10950,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 11329,
											"name": "tag",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 10963,
											"end": 11329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11105,
											"end": 11108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11126,
											"end": 11193,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "678"
										},
										{
											"begin": 11190,
											"end": 11192,
											"name": "PUSH",
											"source": 9,
											"value": "2E"
										},
										{
											"begin": 11185,
											"end": 11188,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11126,
											"end": 11193,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 11126,
											"end": 11193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11126,
											"end": 11193,
											"name": "tag",
											"source": 9,
											"value": "678"
										},
										{
											"begin": 11126,
											"end": 11193,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11119,
											"end": 11193,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11119,
											"end": 11193,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11202,
											"end": 11295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "679"
										},
										{
											"begin": 11291,
											"end": 11294,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11202,
											"end": 11295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "520"
										},
										{
											"begin": 11202,
											"end": 11295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11202,
											"end": 11295,
											"name": "tag",
											"source": 9,
											"value": "679"
										},
										{
											"begin": 11202,
											"end": 11295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11320,
											"end": 11322,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11315,
											"end": 11318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11311,
											"end": 11323,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11304,
											"end": 11323,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11304,
											"end": 11323,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 11329,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 11329,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 11329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 11329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11754,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 11335,
											"end": 11754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11501,
											"end": 11505,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11539,
											"end": 11541,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11528,
											"end": 11537,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11524,
											"end": 11542,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11516,
											"end": 11542,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11516,
											"end": 11542,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11588,
											"end": 11597,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11582,
											"end": 11586,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11598,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11574,
											"end": 11575,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11563,
											"end": 11572,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11559,
											"end": 11576,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11552,
											"end": 11599,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11616,
											"end": 11747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "681"
										},
										{
											"begin": 11742,
											"end": 11746,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11616,
											"end": 11747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "521"
										},
										{
											"begin": 11616,
											"end": 11747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11616,
											"end": 11747,
											"name": "tag",
											"source": 9,
											"value": "681"
										},
										{
											"begin": 11616,
											"end": 11747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11608,
											"end": 11747,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11608,
											"end": 11747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11754,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11760,
											"end": 11928,
											"name": "tag",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 11760,
											"end": 11928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11900,
											"end": 11920,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F2073616C65206973206163746976652E0000000000000000000000000000"
										},
										{
											"begin": 11896,
											"end": 11897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11888,
											"end": 11894,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11884,
											"end": 11898,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11877,
											"end": 11921,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11760,
											"end": 11928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11760,
											"end": 11928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11934,
											"end": 12300,
											"name": "tag",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 11934,
											"end": 12300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12076,
											"end": 12079,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12097,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "684"
										},
										{
											"begin": 12161,
											"end": 12163,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 12156,
											"end": 12159,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12097,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 12097,
											"end": 12164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12097,
											"end": 12164,
											"name": "tag",
											"source": 9,
											"value": "684"
										},
										{
											"begin": 12097,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12090,
											"end": 12164,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12090,
											"end": 12164,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "685"
										},
										{
											"begin": 12262,
											"end": 12265,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "522"
										},
										{
											"begin": 12173,
											"end": 12266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12173,
											"end": 12266,
											"name": "tag",
											"source": 9,
											"value": "685"
										},
										{
											"begin": 12173,
											"end": 12266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12291,
											"end": 12293,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12286,
											"end": 12289,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12282,
											"end": 12294,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12275,
											"end": 12294,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12275,
											"end": 12294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11934,
											"end": 12300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11934,
											"end": 12300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11934,
											"end": 12300,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11934,
											"end": 12300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12725,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 12306,
											"end": 12725,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12472,
											"end": 12476,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12510,
											"end": 12512,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12499,
											"end": 12508,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12513,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12513,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12487,
											"end": 12513,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12559,
											"end": 12568,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12553,
											"end": 12557,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12549,
											"end": 12569,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12545,
											"end": 12546,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12534,
											"end": 12543,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12530,
											"end": 12547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12523,
											"end": 12570,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "687"
										},
										{
											"begin": 12713,
											"end": 12717,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 12587,
											"end": 12718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12718,
											"name": "tag",
											"source": 9,
											"value": "687"
										},
										{
											"begin": 12587,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12579,
											"end": 12718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12579,
											"end": 12718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12725,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12725,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12725,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 12874,
											"name": "tag",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 12731,
											"end": 12874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12788,
											"end": 12793,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12819,
											"end": 12825,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12813,
											"end": 12826,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12804,
											"end": 12826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12804,
											"end": 12826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12835,
											"end": 12868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "689"
										},
										{
											"begin": 12862,
											"end": 12867,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12835,
											"end": 12868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 12835,
											"end": 12868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12835,
											"end": 12868,
											"name": "tag",
											"source": 9,
											"value": "689"
										},
										{
											"begin": 12835,
											"end": 12868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 12874,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 12874,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 12874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 12874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 12874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12880,
											"end": 13231,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 12880,
											"end": 13231,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12950,
											"end": 12956,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12999,
											"end": 13001,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 12996,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12978,
											"end": 12985,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12974,
											"end": 12997,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12970,
											"end": 13002,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 12967,
											"end": 13086,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12967,
											"end": 13086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "691"
										},
										{
											"begin": 12967,
											"end": 13086,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13005,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "692"
										},
										{
											"begin": 13005,
											"end": 13084,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 13005,
											"end": 13084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13005,
											"end": 13084,
											"name": "tag",
											"source": 9,
											"value": "692"
										},
										{
											"begin": 13005,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12967,
											"end": 13086,
											"name": "tag",
											"source": 9,
											"value": "691"
										},
										{
											"begin": 12967,
											"end": 13086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13125,
											"end": 13126,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13150,
											"end": 13214,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "693"
										},
										{
											"begin": 13206,
											"end": 13213,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13197,
											"end": 13203,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13186,
											"end": 13195,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13182,
											"end": 13204,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13150,
											"end": 13214,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "524"
										},
										{
											"begin": 13150,
											"end": 13214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13150,
											"end": 13214,
											"name": "tag",
											"source": 9,
											"value": "693"
										},
										{
											"begin": 13150,
											"end": 13214,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13140,
											"end": 13214,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13140,
											"end": 13214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13096,
											"end": 13224,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12880,
											"end": 13231,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12880,
											"end": 13231,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12880,
											"end": 13231,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12880,
											"end": 13231,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12880,
											"end": 13231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13237,
											"end": 13412,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 13237,
											"end": 13412,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13377,
											"end": 13404,
											"name": "PUSH",
											"source": 9,
											"value": "496E76616C69642070726963652066726F6D206F7261636C6500000000000000"
										},
										{
											"begin": 13373,
											"end": 13374,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13365,
											"end": 13371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13361,
											"end": 13375,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13354,
											"end": 13405,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13237,
											"end": 13412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13237,
											"end": 13412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13418,
											"end": 13784,
											"name": "tag",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 13418,
											"end": 13784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13560,
											"end": 13563,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13581,
											"end": 13648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "696"
										},
										{
											"begin": 13645,
											"end": 13647,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 13640,
											"end": 13643,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13581,
											"end": 13648,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 13581,
											"end": 13648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13581,
											"end": 13648,
											"name": "tag",
											"source": 9,
											"value": "696"
										},
										{
											"begin": 13581,
											"end": 13648,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13574,
											"end": 13648,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13574,
											"end": 13648,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13657,
											"end": 13750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "697"
										},
										{
											"begin": 13746,
											"end": 13749,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13657,
											"end": 13750,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 13657,
											"end": 13750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13657,
											"end": 13750,
											"name": "tag",
											"source": 9,
											"value": "697"
										},
										{
											"begin": 13657,
											"end": 13750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13775,
											"end": 13777,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13770,
											"end": 13773,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13766,
											"end": 13778,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13759,
											"end": 13778,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13759,
											"end": 13778,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13418,
											"end": 13784,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13418,
											"end": 13784,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13418,
											"end": 13784,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13418,
											"end": 13784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13790,
											"end": 14209,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 13790,
											"end": 14209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13956,
											"end": 13960,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13994,
											"end": 13996,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13983,
											"end": 13992,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13979,
											"end": 13997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13971,
											"end": 13997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13971,
											"end": 13997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14037,
											"end": 14041,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14033,
											"end": 14053,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14029,
											"end": 14030,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14018,
											"end": 14027,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14014,
											"end": 14031,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14007,
											"end": 14054,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14071,
											"end": 14202,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "699"
										},
										{
											"begin": 14197,
											"end": 14201,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14071,
											"end": 14202,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "526"
										},
										{
											"begin": 14071,
											"end": 14202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14071,
											"end": 14202,
											"name": "tag",
											"source": 9,
											"value": "699"
										},
										{
											"begin": 14071,
											"end": 14202,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14063,
											"end": 14202,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14063,
											"end": 14202,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13790,
											"end": 14209,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13790,
											"end": 14209,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13790,
											"end": 14209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13790,
											"end": 14209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14215,
											"end": 14387,
											"name": "tag",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 14215,
											"end": 14387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14355,
											"end": 14379,
											"name": "PUSH",
											"source": 9,
											"value": "507269766174652053616C6520736F6C64206F75742E00000000000000000000"
										},
										{
											"begin": 14351,
											"end": 14352,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14343,
											"end": 14349,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14339,
											"end": 14353,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14332,
											"end": 14380,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14215,
											"end": 14387,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14215,
											"end": 14387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14393,
											"end": 14759,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 14393,
											"end": 14759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14535,
											"end": 14538,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14556,
											"end": 14623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "702"
										},
										{
											"begin": 14620,
											"end": 14622,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 14615,
											"end": 14618,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14556,
											"end": 14623,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 14556,
											"end": 14623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14556,
											"end": 14623,
											"name": "tag",
											"source": 9,
											"value": "702"
										},
										{
											"begin": 14556,
											"end": 14623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14549,
											"end": 14623,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14549,
											"end": 14623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14632,
											"end": 14725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "703"
										},
										{
											"begin": 14721,
											"end": 14724,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14632,
											"end": 14725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 14632,
											"end": 14725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14632,
											"end": 14725,
											"name": "tag",
											"source": 9,
											"value": "703"
										},
										{
											"begin": 14632,
											"end": 14725,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14750,
											"end": 14752,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14745,
											"end": 14748,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14741,
											"end": 14753,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14734,
											"end": 14753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14734,
											"end": 14753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14393,
											"end": 14759,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14393,
											"end": 14759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14393,
											"end": 14759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14393,
											"end": 14759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14765,
											"end": 15184,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 14765,
											"end": 15184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14931,
											"end": 14935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14969,
											"end": 14971,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14958,
											"end": 14967,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14954,
											"end": 14972,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14972,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14946,
											"end": 14972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15018,
											"end": 15027,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15012,
											"end": 15016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15008,
											"end": 15028,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15004,
											"end": 15005,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14993,
											"end": 15002,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14989,
											"end": 15006,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14982,
											"end": 15029,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15046,
											"end": 15177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "705"
										},
										{
											"begin": 15172,
											"end": 15176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15046,
											"end": 15177,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 15046,
											"end": 15177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15046,
											"end": 15177,
											"name": "tag",
											"source": 9,
											"value": "705"
										},
										{
											"begin": 15046,
											"end": 15177,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15038,
											"end": 15177,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15038,
											"end": 15177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14765,
											"end": 15184,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14765,
											"end": 15184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14765,
											"end": 15184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14765,
											"end": 15184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15190,
											"end": 15410,
											"name": "tag",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 15190,
											"end": 15410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15330,
											"end": 15364,
											"name": "PUSH",
											"source": 9,
											"value": "4578636565647320507269766174652053616C6520746F6B656E206C696D6974"
										},
										{
											"begin": 15326,
											"end": 15327,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15318,
											"end": 15324,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15314,
											"end": 15328,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15307,
											"end": 15365,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15399,
											"end": 15402,
											"name": "PUSH",
											"source": 9,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15394,
											"end": 15396,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15386,
											"end": 15392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15382,
											"end": 15397,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15375,
											"end": 15403,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15190,
											"end": 15410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15190,
											"end": 15410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15416,
											"end": 15782,
											"name": "tag",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 15416,
											"end": 15782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15558,
											"end": 15561,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15579,
											"end": 15646,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "708"
										},
										{
											"begin": 15643,
											"end": 15645,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 15638,
											"end": 15641,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15579,
											"end": 15646,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 15579,
											"end": 15646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15579,
											"end": 15646,
											"name": "tag",
											"source": 9,
											"value": "708"
										},
										{
											"begin": 15579,
											"end": 15646,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15572,
											"end": 15646,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15572,
											"end": 15646,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "709"
										},
										{
											"begin": 15744,
											"end": 15747,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 15655,
											"end": 15748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "tag",
											"source": 9,
											"value": "709"
										},
										{
											"begin": 15655,
											"end": 15748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15773,
											"end": 15775,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15768,
											"end": 15771,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15764,
											"end": 15776,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15757,
											"end": 15776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15757,
											"end": 15776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15416,
											"end": 15782,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15416,
											"end": 15782,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15416,
											"end": 15782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15416,
											"end": 15782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15788,
											"end": 16207,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 15788,
											"end": 16207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15954,
											"end": 15958,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15992,
											"end": 15994,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15981,
											"end": 15990,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15977,
											"end": 15995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15969,
											"end": 15995,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15969,
											"end": 15995,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16041,
											"end": 16050,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16035,
											"end": 16039,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16031,
											"end": 16051,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16027,
											"end": 16028,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16016,
											"end": 16025,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16012,
											"end": 16029,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16005,
											"end": 16052,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16069,
											"end": 16200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "711"
										},
										{
											"begin": 16195,
											"end": 16199,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16069,
											"end": 16200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "530"
										},
										{
											"begin": 16069,
											"end": 16200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16069,
											"end": 16200,
											"name": "tag",
											"source": 9,
											"value": "711"
										},
										{
											"begin": 16069,
											"end": 16200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16061,
											"end": 16200,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16061,
											"end": 16200,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15788,
											"end": 16207,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15788,
											"end": 16207,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15788,
											"end": 16207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15788,
											"end": 16207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16213,
											"end": 16381,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 16213,
											"end": 16381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16353,
											"end": 16373,
											"name": "PUSH",
											"source": 9,
											"value": "5072652D53616C6520736F6C64206F75742E0000000000000000000000000000"
										},
										{
											"begin": 16349,
											"end": 16350,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16341,
											"end": 16347,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16337,
											"end": 16351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16330,
											"end": 16374,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16213,
											"end": 16381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16213,
											"end": 16381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16387,
											"end": 16753,
											"name": "tag",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 16387,
											"end": 16753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16529,
											"end": 16532,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16550,
											"end": 16617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "714"
										},
										{
											"begin": 16614,
											"end": 16616,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 16609,
											"end": 16612,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16550,
											"end": 16617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 16550,
											"end": 16617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16550,
											"end": 16617,
											"name": "tag",
											"source": 9,
											"value": "714"
										},
										{
											"begin": 16550,
											"end": 16617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16543,
											"end": 16617,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16543,
											"end": 16617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16626,
											"end": 16719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "715"
										},
										{
											"begin": 16715,
											"end": 16718,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16626,
											"end": 16719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 16626,
											"end": 16719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16626,
											"end": 16719,
											"name": "tag",
											"source": 9,
											"value": "715"
										},
										{
											"begin": 16626,
											"end": 16719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16744,
											"end": 16746,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16739,
											"end": 16742,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16735,
											"end": 16747,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16728,
											"end": 16747,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16728,
											"end": 16747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16387,
											"end": 16753,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16387,
											"end": 16753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16387,
											"end": 16753,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16387,
											"end": 16753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16759,
											"end": 17178,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 16759,
											"end": 17178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16925,
											"end": 16929,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16963,
											"end": 16965,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16952,
											"end": 16961,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16948,
											"end": 16966,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16940,
											"end": 16966,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16940,
											"end": 16966,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17012,
											"end": 17021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17006,
											"end": 17010,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17002,
											"end": 17022,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16998,
											"end": 16999,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16987,
											"end": 16996,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17000,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16976,
											"end": 17023,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17040,
											"end": 17171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "717"
										},
										{
											"begin": 17166,
											"end": 17170,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17040,
											"end": 17171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "532"
										},
										{
											"begin": 17040,
											"end": 17171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17040,
											"end": 17171,
											"name": "tag",
											"source": 9,
											"value": "717"
										},
										{
											"begin": 17040,
											"end": 17171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17032,
											"end": 17171,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17032,
											"end": 17171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16759,
											"end": 17178,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16759,
											"end": 17178,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16759,
											"end": 17178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16759,
											"end": 17178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17184,
											"end": 17364,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 17184,
											"end": 17364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17324,
											"end": 17356,
											"name": "PUSH",
											"source": 9,
											"value": "507572636861736520616D6F756E74206F7574206F66206C696D6974732E0000"
										},
										{
											"begin": 17320,
											"end": 17321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17312,
											"end": 17318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17308,
											"end": 17322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17301,
											"end": 17357,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17184,
											"end": 17364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17184,
											"end": 17364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17370,
											"end": 17736,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 17370,
											"end": 17736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17512,
											"end": 17515,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17533,
											"end": 17600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "720"
										},
										{
											"begin": 17597,
											"end": 17599,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 17592,
											"end": 17595,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17533,
											"end": 17600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 17533,
											"end": 17600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17533,
											"end": 17600,
											"name": "tag",
											"source": 9,
											"value": "720"
										},
										{
											"begin": 17533,
											"end": 17600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17526,
											"end": 17600,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17526,
											"end": 17600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17609,
											"end": 17702,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "721"
										},
										{
											"begin": 17698,
											"end": 17701,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17609,
											"end": 17702,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 17609,
											"end": 17702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17609,
											"end": 17702,
											"name": "tag",
											"source": 9,
											"value": "721"
										},
										{
											"begin": 17609,
											"end": 17702,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17727,
											"end": 17729,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17722,
											"end": 17725,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17718,
											"end": 17730,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17711,
											"end": 17730,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17711,
											"end": 17730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17370,
											"end": 17736,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17370,
											"end": 17736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17370,
											"end": 17736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17370,
											"end": 17736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17742,
											"end": 18161,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 17742,
											"end": 18161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17908,
											"end": 17912,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17946,
											"end": 17948,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17935,
											"end": 17944,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17931,
											"end": 17949,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17923,
											"end": 17949,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17923,
											"end": 17949,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17995,
											"end": 18004,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17989,
											"end": 17993,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17985,
											"end": 18005,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17981,
											"end": 17982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17970,
											"end": 17979,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17966,
											"end": 17983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17959,
											"end": 18006,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18023,
											"end": 18154,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "723"
										},
										{
											"begin": 18149,
											"end": 18153,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18023,
											"end": 18154,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 18023,
											"end": 18154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18023,
											"end": 18154,
											"name": "tag",
											"source": 9,
											"value": "723"
										},
										{
											"begin": 18023,
											"end": 18154,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18015,
											"end": 18154,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18015,
											"end": 18154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17742,
											"end": 18161,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17742,
											"end": 18161,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17742,
											"end": 18161,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17742,
											"end": 18161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18167,
											"end": 18346,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 18167,
											"end": 18346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18307,
											"end": 18338,
											"name": "PUSH",
											"source": 9,
											"value": "45786365656473205072652D53616C6520746F6B656E206C696D69742E000000"
										},
										{
											"begin": 18303,
											"end": 18304,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18295,
											"end": 18301,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18291,
											"end": 18305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18284,
											"end": 18339,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18167,
											"end": 18346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18167,
											"end": 18346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18352,
											"end": 18718,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 18352,
											"end": 18718,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18494,
											"end": 18497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18515,
											"end": 18582,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "726"
										},
										{
											"begin": 18579,
											"end": 18581,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 18574,
											"end": 18577,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18515,
											"end": 18582,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 18515,
											"end": 18582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18515,
											"end": 18582,
											"name": "tag",
											"source": 9,
											"value": "726"
										},
										{
											"begin": 18515,
											"end": 18582,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18508,
											"end": 18582,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18508,
											"end": 18582,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18591,
											"end": 18684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "727"
										},
										{
											"begin": 18680,
											"end": 18683,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18591,
											"end": 18684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 18591,
											"end": 18684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18591,
											"end": 18684,
											"name": "tag",
											"source": 9,
											"value": "727"
										},
										{
											"begin": 18591,
											"end": 18684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18709,
											"end": 18711,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18704,
											"end": 18707,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18700,
											"end": 18712,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18693,
											"end": 18712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18693,
											"end": 18712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18352,
											"end": 18718,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18352,
											"end": 18718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18352,
											"end": 18718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18352,
											"end": 18718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18724,
											"end": 19143,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 18724,
											"end": 19143,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18890,
											"end": 18894,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18928,
											"end": 18930,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18917,
											"end": 18926,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18913,
											"end": 18931,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18905,
											"end": 18931,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18905,
											"end": 18931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18977,
											"end": 18986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18971,
											"end": 18975,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18967,
											"end": 18987,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18963,
											"end": 18964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18952,
											"end": 18961,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18948,
											"end": 18965,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18941,
											"end": 18988,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19005,
											"end": 19136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "729"
										},
										{
											"begin": 19131,
											"end": 19135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19005,
											"end": 19136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 19005,
											"end": 19136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19005,
											"end": 19136,
											"name": "tag",
											"source": 9,
											"value": "729"
										},
										{
											"begin": 19005,
											"end": 19136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18997,
											"end": 19136,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18997,
											"end": 19136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18724,
											"end": 19143,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18724,
											"end": 19143,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18724,
											"end": 19143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18724,
											"end": 19143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19149,
											"end": 19369,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 19149,
											"end": 19369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19289,
											"end": 19323,
											"name": "PUSH",
											"source": 9,
											"value": "56657374696E6720706572696F64206E6F742079657420636F6D706C65746564"
										},
										{
											"begin": 19285,
											"end": 19286,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19277,
											"end": 19283,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19273,
											"end": 19287,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19266,
											"end": 19324,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19358,
											"end": 19361,
											"name": "PUSH",
											"source": 9,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19353,
											"end": 19355,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19345,
											"end": 19351,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19341,
											"end": 19356,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19334,
											"end": 19362,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19149,
											"end": 19369,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19149,
											"end": 19369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19375,
											"end": 19741,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 19375,
											"end": 19741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19517,
											"end": 19520,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19538,
											"end": 19605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "732"
										},
										{
											"begin": 19602,
											"end": 19604,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 19597,
											"end": 19600,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19538,
											"end": 19605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 19538,
											"end": 19605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19538,
											"end": 19605,
											"name": "tag",
											"source": 9,
											"value": "732"
										},
										{
											"begin": 19538,
											"end": 19605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19531,
											"end": 19605,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19531,
											"end": 19605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19614,
											"end": 19707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "733"
										},
										{
											"begin": 19703,
											"end": 19706,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19614,
											"end": 19707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 19614,
											"end": 19707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19614,
											"end": 19707,
											"name": "tag",
											"source": 9,
											"value": "733"
										},
										{
											"begin": 19614,
											"end": 19707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19732,
											"end": 19734,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 19727,
											"end": 19730,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19723,
											"end": 19735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19716,
											"end": 19735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19716,
											"end": 19735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19375,
											"end": 19741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19375,
											"end": 19741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19375,
											"end": 19741,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19375,
											"end": 19741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19747,
											"end": 20166,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 19747,
											"end": 20166,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19913,
											"end": 19917,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19951,
											"end": 19953,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19940,
											"end": 19949,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19936,
											"end": 19954,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19928,
											"end": 19954,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19928,
											"end": 19954,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20000,
											"end": 20009,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19994,
											"end": 19998,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19990,
											"end": 20010,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19986,
											"end": 19987,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19975,
											"end": 19984,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19971,
											"end": 19988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19964,
											"end": 20011,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20028,
											"end": 20159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "735"
										},
										{
											"begin": 20154,
											"end": 20158,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20028,
											"end": 20159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 20028,
											"end": 20159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20028,
											"end": 20159,
											"name": "tag",
											"source": 9,
											"value": "735"
										},
										{
											"begin": 20028,
											"end": 20159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20020,
											"end": 20159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20020,
											"end": 20159,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19747,
											"end": 20166,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19747,
											"end": 20166,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19747,
											"end": 20166,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19747,
											"end": 20166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20172,
											"end": 20349,
											"name": "tag",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 20172,
											"end": 20349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20312,
											"end": 20341,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F2076657374656420746F6B656E7320746F2072656C656173650000000000"
										},
										{
											"begin": 20308,
											"end": 20309,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20300,
											"end": 20306,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20296,
											"end": 20310,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20289,
											"end": 20342,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20172,
											"end": 20349,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20172,
											"end": 20349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20355,
											"end": 20721,
											"name": "tag",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 20355,
											"end": 20721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20497,
											"end": 20500,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20518,
											"end": 20585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "738"
										},
										{
											"begin": 20582,
											"end": 20584,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 20577,
											"end": 20580,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20518,
											"end": 20585,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 20518,
											"end": 20585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20518,
											"end": 20585,
											"name": "tag",
											"source": 9,
											"value": "738"
										},
										{
											"begin": 20518,
											"end": 20585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20511,
											"end": 20585,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20511,
											"end": 20585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20594,
											"end": 20687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "739"
										},
										{
											"begin": 20683,
											"end": 20686,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20594,
											"end": 20687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "539"
										},
										{
											"begin": 20594,
											"end": 20687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20594,
											"end": 20687,
											"name": "tag",
											"source": 9,
											"value": "739"
										},
										{
											"begin": 20594,
											"end": 20687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20712,
											"end": 20714,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20707,
											"end": 20710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20703,
											"end": 20715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20696,
											"end": 20715,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20696,
											"end": 20715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20355,
											"end": 20721,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20355,
											"end": 20721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20355,
											"end": 20721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20355,
											"end": 20721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20727,
											"end": 21146,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 20727,
											"end": 21146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20893,
											"end": 20897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20931,
											"end": 20933,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20920,
											"end": 20929,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20916,
											"end": 20934,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20908,
											"end": 20934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20908,
											"end": 20934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20980,
											"end": 20989,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20974,
											"end": 20978,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20970,
											"end": 20990,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20966,
											"end": 20967,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20955,
											"end": 20964,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20951,
											"end": 20968,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20944,
											"end": 20991,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21008,
											"end": 21139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "741"
										},
										{
											"begin": 21134,
											"end": 21138,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21008,
											"end": 21139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "540"
										},
										{
											"begin": 21008,
											"end": 21139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21008,
											"end": 21139,
											"name": "tag",
											"source": 9,
											"value": "741"
										},
										{
											"begin": 21008,
											"end": 21139,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21000,
											"end": 21139,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21000,
											"end": 21139,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20727,
											"end": 21146,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20727,
											"end": 21146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20727,
											"end": 21146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20727,
											"end": 21146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21152,
											"end": 21378,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 21152,
											"end": 21378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21292,
											"end": 21326,
											"name": "PUSH",
											"source": 9,
											"value": "507269766174652053616C652073686F756C6420626520636F6E636C75646564"
										},
										{
											"begin": 21288,
											"end": 21289,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21280,
											"end": 21286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21276,
											"end": 21290,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21269,
											"end": 21327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21361,
											"end": 21370,
											"name": "PUSH",
											"source": 9,
											"value": "2066697273742E00000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21356,
											"end": 21358,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21348,
											"end": 21354,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21344,
											"end": 21359,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21337,
											"end": 21371,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21152,
											"end": 21378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21152,
											"end": 21378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21384,
											"end": 21750,
											"name": "tag",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 21384,
											"end": 21750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21526,
											"end": 21529,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21547,
											"end": 21614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "744"
										},
										{
											"begin": 21611,
											"end": 21613,
											"name": "PUSH",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 21606,
											"end": 21609,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21547,
											"end": 21614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 21547,
											"end": 21614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21547,
											"end": 21614,
											"name": "tag",
											"source": 9,
											"value": "744"
										},
										{
											"begin": 21547,
											"end": 21614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21540,
											"end": 21614,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21540,
											"end": 21614,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21623,
											"end": 21716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "745"
										},
										{
											"begin": 21712,
											"end": 21715,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21623,
											"end": 21716,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 21623,
											"end": 21716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21623,
											"end": 21716,
											"name": "tag",
											"source": 9,
											"value": "745"
										},
										{
											"begin": 21623,
											"end": 21716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21741,
											"end": 21743,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21736,
											"end": 21739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21732,
											"end": 21744,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21725,
											"end": 21744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21725,
											"end": 21744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21384,
											"end": 21750,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21384,
											"end": 21750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21384,
											"end": 21750,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21384,
											"end": 21750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21756,
											"end": 22175,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 21756,
											"end": 22175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21922,
											"end": 21926,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21960,
											"end": 21962,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21949,
											"end": 21958,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21945,
											"end": 21963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21937,
											"end": 21963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21937,
											"end": 21963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22009,
											"end": 22018,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22003,
											"end": 22007,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21999,
											"end": 22019,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21995,
											"end": 21996,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21984,
											"end": 21993,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21980,
											"end": 21997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21973,
											"end": 22020,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22037,
											"end": 22168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "747"
										},
										{
											"begin": 22163,
											"end": 22167,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22037,
											"end": 22168,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "542"
										},
										{
											"begin": 22037,
											"end": 22168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22037,
											"end": 22168,
											"name": "tag",
											"source": 9,
											"value": "747"
										},
										{
											"begin": 22037,
											"end": 22168,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22029,
											"end": 22168,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22029,
											"end": 22168,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21756,
											"end": 22175,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21756,
											"end": 22175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21756,
											"end": 22175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21756,
											"end": 22175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22181,
											"end": 22363,
											"name": "tag",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 22181,
											"end": 22363,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22321,
											"end": 22355,
											"name": "PUSH",
											"source": 9,
											"value": "507269766174652053616C6520746172676574206E6F7420726561636865642E"
										},
										{
											"begin": 22317,
											"end": 22318,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22309,
											"end": 22315,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22305,
											"end": 22319,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22298,
											"end": 22356,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22181,
											"end": 22363,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22181,
											"end": 22363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22369,
											"end": 22735,
											"name": "tag",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 22369,
											"end": 22735,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22511,
											"end": 22514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22532,
											"end": 22599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "750"
										},
										{
											"begin": 22596,
											"end": 22598,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22591,
											"end": 22594,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22532,
											"end": 22599,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 22532,
											"end": 22599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22532,
											"end": 22599,
											"name": "tag",
											"source": 9,
											"value": "750"
										},
										{
											"begin": 22532,
											"end": 22599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22525,
											"end": 22599,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22525,
											"end": 22599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22608,
											"end": 22701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "751"
										},
										{
											"begin": 22697,
											"end": 22700,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22608,
											"end": 22701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 22608,
											"end": 22701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22608,
											"end": 22701,
											"name": "tag",
											"source": 9,
											"value": "751"
										},
										{
											"begin": 22608,
											"end": 22701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22726,
											"end": 22728,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22721,
											"end": 22724,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22717,
											"end": 22729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22710,
											"end": 22729,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22710,
											"end": 22729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22369,
											"end": 22735,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22369,
											"end": 22735,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22369,
											"end": 22735,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22369,
											"end": 22735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22741,
											"end": 23160,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 22741,
											"end": 23160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22907,
											"end": 22911,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22945,
											"end": 22947,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22934,
											"end": 22943,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22930,
											"end": 22948,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22922,
											"end": 22948,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22922,
											"end": 22948,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22994,
											"end": 23003,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22988,
											"end": 22992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22984,
											"end": 23004,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22980,
											"end": 22981,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22969,
											"end": 22978,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22965,
											"end": 22982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22958,
											"end": 23005,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23022,
											"end": 23153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "753"
										},
										{
											"begin": 23148,
											"end": 23152,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23022,
											"end": 23153,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "544"
										},
										{
											"begin": 23022,
											"end": 23153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23022,
											"end": 23153,
											"name": "tag",
											"source": 9,
											"value": "753"
										},
										{
											"begin": 23022,
											"end": 23153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23014,
											"end": 23153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23014,
											"end": 23153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22741,
											"end": 23160,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22741,
											"end": 23160,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22741,
											"end": 23160,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22741,
											"end": 23160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23166,
											"end": 23345,
											"name": "tag",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 23166,
											"end": 23345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23306,
											"end": 23337,
											"name": "PUSH",
											"source": 9,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E2030000000"
										},
										{
											"begin": 23302,
											"end": 23303,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23294,
											"end": 23300,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23290,
											"end": 23304,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23283,
											"end": 23338,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23166,
											"end": 23345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23166,
											"end": 23345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23351,
											"end": 23717,
											"name": "tag",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 23351,
											"end": 23717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23493,
											"end": 23496,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23514,
											"end": 23581,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "756"
										},
										{
											"begin": 23578,
											"end": 23580,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 23573,
											"end": 23576,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23514,
											"end": 23581,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 23514,
											"end": 23581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23514,
											"end": 23581,
											"name": "tag",
											"source": 9,
											"value": "756"
										},
										{
											"begin": 23514,
											"end": 23581,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23507,
											"end": 23581,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23507,
											"end": 23581,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23590,
											"end": 23683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "757"
										},
										{
											"begin": 23679,
											"end": 23682,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23590,
											"end": 23683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "545"
										},
										{
											"begin": 23590,
											"end": 23683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23590,
											"end": 23683,
											"name": "tag",
											"source": 9,
											"value": "757"
										},
										{
											"begin": 23590,
											"end": 23683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23708,
											"end": 23710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23703,
											"end": 23706,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23699,
											"end": 23711,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23692,
											"end": 23711,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23692,
											"end": 23711,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23351,
											"end": 23717,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23351,
											"end": 23717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23351,
											"end": 23717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23351,
											"end": 23717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 23723,
											"end": 24142,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 23723,
											"end": 24142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23889,
											"end": 23893,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23927,
											"end": 23929,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 23916,
											"end": 23925,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 23912,
											"end": 23930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23904,
											"end": 23930,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23904,
											"end": 23930,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23976,
											"end": 23985,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23970,
											"end": 23974,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 23966,
											"end": 23986,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 23962,
											"end": 23963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 23951,
											"end": 23960,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 23947,
											"end": 23964,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23940,
											"end": 23987,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24004,
											"end": 24135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "759"
										},
										{
											"begin": 24130,
											"end": 24134,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24004,
											"end": 24135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "546"
										},
										{
											"begin": 24004,
											"end": 24135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24004,
											"end": 24135,
											"name": "tag",
											"source": 9,
											"value": "759"
										},
										{
											"begin": 24004,
											"end": 24135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 23996,
											"end": 24135,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23996,
											"end": 24135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23723,
											"end": 24142,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 23723,
											"end": 24142,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 23723,
											"end": 24142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 23723,
											"end": 24142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24148,
											"end": 24327,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 24148,
											"end": 24327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24288,
											"end": 24319,
											"name": "PUSH",
											"source": 9,
											"value": "496E73756666696369656E742062616C616E636520746F207374616B65000000"
										},
										{
											"begin": 24284,
											"end": 24285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24276,
											"end": 24282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24272,
											"end": 24286,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24265,
											"end": 24320,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24148,
											"end": 24327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24148,
											"end": 24327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24333,
											"end": 24699,
											"name": "tag",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 24333,
											"end": 24699,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24475,
											"end": 24478,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24496,
											"end": 24563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "762"
										},
										{
											"begin": 24560,
											"end": 24562,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 24555,
											"end": 24558,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24496,
											"end": 24563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 24496,
											"end": 24563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24496,
											"end": 24563,
											"name": "tag",
											"source": 9,
											"value": "762"
										},
										{
											"begin": 24496,
											"end": 24563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24489,
											"end": 24563,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24489,
											"end": 24563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "763"
										},
										{
											"begin": 24661,
											"end": 24664,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 24572,
											"end": 24665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "tag",
											"source": 9,
											"value": "763"
										},
										{
											"begin": 24572,
											"end": 24665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24690,
											"end": 24692,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24685,
											"end": 24688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24681,
											"end": 24693,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24674,
											"end": 24693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24674,
											"end": 24693,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24333,
											"end": 24699,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24333,
											"end": 24699,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24333,
											"end": 24699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24333,
											"end": 24699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24705,
											"end": 25124,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 24705,
											"end": 25124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24871,
											"end": 24875,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24909,
											"end": 24911,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 24898,
											"end": 24907,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24894,
											"end": 24912,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24886,
											"end": 24912,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24886,
											"end": 24912,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24958,
											"end": 24967,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24952,
											"end": 24956,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24948,
											"end": 24968,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 24944,
											"end": 24945,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 24933,
											"end": 24942,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 24929,
											"end": 24946,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24922,
											"end": 24969,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 24986,
											"end": 25117,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "765"
										},
										{
											"begin": 25112,
											"end": 25116,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24986,
											"end": 25117,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "548"
										},
										{
											"begin": 24986,
											"end": 25117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24986,
											"end": 25117,
											"name": "tag",
											"source": 9,
											"value": "765"
										},
										{
											"begin": 24986,
											"end": 25117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24978,
											"end": 25117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24978,
											"end": 25117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24705,
											"end": 25124,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 24705,
											"end": 25124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24705,
											"end": 25124,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24705,
											"end": 25124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25130,
											"end": 25462,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 25130,
											"end": 25462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25251,
											"end": 25255,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25289,
											"end": 25291,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 25278,
											"end": 25287,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25274,
											"end": 25292,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25266,
											"end": 25292,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25266,
											"end": 25292,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25302,
											"end": 25373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "767"
										},
										{
											"begin": 25370,
											"end": 25371,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25359,
											"end": 25368,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25355,
											"end": 25372,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25346,
											"end": 25352,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 25302,
											"end": 25373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 25302,
											"end": 25373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25302,
											"end": 25373,
											"name": "tag",
											"source": 9,
											"value": "767"
										},
										{
											"begin": 25302,
											"end": 25373,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25383,
											"end": 25455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "768"
										},
										{
											"begin": 25451,
											"end": 25453,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25440,
											"end": 25449,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25436,
											"end": 25454,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25427,
											"end": 25433,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 25383,
											"end": 25455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 25383,
											"end": 25455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25383,
											"end": 25455,
											"name": "tag",
											"source": 9,
											"value": "768"
										},
										{
											"begin": 25383,
											"end": 25455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25130,
											"end": 25462,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 25130,
											"end": 25462,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25130,
											"end": 25462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25130,
											"end": 25462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25130,
											"end": 25462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25130,
											"end": 25462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25468,
											"end": 25910,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 25468,
											"end": 25910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25617,
											"end": 25621,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25655,
											"end": 25657,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 25644,
											"end": 25653,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25640,
											"end": 25658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25632,
											"end": 25658,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25632,
											"end": 25658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25668,
											"end": 25739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "770"
										},
										{
											"begin": 25736,
											"end": 25737,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 25725,
											"end": 25734,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25721,
											"end": 25738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25712,
											"end": 25718,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 25668,
											"end": 25739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "512"
										},
										{
											"begin": 25668,
											"end": 25739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25668,
											"end": 25739,
											"name": "tag",
											"source": 9,
											"value": "770"
										},
										{
											"begin": 25668,
											"end": 25739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25749,
											"end": 25821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "771"
										},
										{
											"begin": 25817,
											"end": 25819,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 25806,
											"end": 25815,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25802,
											"end": 25820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25793,
											"end": 25799,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 25749,
											"end": 25821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 25749,
											"end": 25821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25749,
											"end": 25821,
											"name": "tag",
											"source": 9,
											"value": "771"
										},
										{
											"begin": 25749,
											"end": 25821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25831,
											"end": 25903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "772"
										},
										{
											"begin": 25899,
											"end": 25901,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 25888,
											"end": 25897,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 25884,
											"end": 25902,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25875,
											"end": 25881,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 25831,
											"end": 25903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 25831,
											"end": 25903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25831,
											"end": 25903,
											"name": "tag",
											"source": 9,
											"value": "772"
										},
										{
											"begin": 25831,
											"end": 25903,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25468,
											"end": 25910,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 25468,
											"end": 25910,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 25468,
											"end": 25910,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25468,
											"end": 25910,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25468,
											"end": 25910,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25468,
											"end": 25910,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25468,
											"end": 25910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25916,
											"end": 26097,
											"name": "tag",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 25916,
											"end": 26097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26056,
											"end": 26089,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 26052,
											"end": 26053,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26044,
											"end": 26050,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26040,
											"end": 26054,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26033,
											"end": 26090,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 25916,
											"end": 26097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25916,
											"end": 26097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26103,
											"end": 26469,
											"name": "tag",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 26103,
											"end": 26469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26245,
											"end": 26248,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26266,
											"end": 26333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "775"
										},
										{
											"begin": 26330,
											"end": 26332,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 26325,
											"end": 26328,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26266,
											"end": 26333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 26266,
											"end": 26333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26266,
											"end": 26333,
											"name": "tag",
											"source": 9,
											"value": "775"
										},
										{
											"begin": 26266,
											"end": 26333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26259,
											"end": 26333,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26259,
											"end": 26333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26342,
											"end": 26435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "776"
										},
										{
											"begin": 26431,
											"end": 26434,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26342,
											"end": 26435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 26342,
											"end": 26435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26342,
											"end": 26435,
											"name": "tag",
											"source": 9,
											"value": "776"
										},
										{
											"begin": 26342,
											"end": 26435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26460,
											"end": 26462,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26455,
											"end": 26458,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26451,
											"end": 26463,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26444,
											"end": 26463,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26444,
											"end": 26463,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26103,
											"end": 26469,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26103,
											"end": 26469,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26103,
											"end": 26469,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26103,
											"end": 26469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26475,
											"end": 26894,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 26475,
											"end": 26894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26641,
											"end": 26645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26679,
											"end": 26681,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 26668,
											"end": 26677,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 26664,
											"end": 26682,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26656,
											"end": 26682,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26656,
											"end": 26682,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26728,
											"end": 26737,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26722,
											"end": 26726,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26718,
											"end": 26738,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 26714,
											"end": 26715,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26703,
											"end": 26712,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 26699,
											"end": 26716,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 26692,
											"end": 26739,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 26756,
											"end": 26887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "778"
										},
										{
											"begin": 26882,
											"end": 26886,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 26756,
											"end": 26887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 26756,
											"end": 26887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26756,
											"end": 26887,
											"name": "tag",
											"source": 9,
											"value": "778"
										},
										{
											"begin": 26756,
											"end": 26887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26748,
											"end": 26887,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26748,
											"end": 26887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26475,
											"end": 26894,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 26475,
											"end": 26894,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 26475,
											"end": 26894,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 26475,
											"end": 26894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 26900,
											"end": 27080,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 26900,
											"end": 27080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 26948,
											"end": 27025,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26945,
											"end": 26946,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 26938,
											"end": 27026,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27045,
											"end": 27049,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 27042,
											"end": 27043,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 27035,
											"end": 27050,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27069,
											"end": 27073,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 27066,
											"end": 27067,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27059,
											"end": 27074,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 27086,
											"end": 27496,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 27086,
											"end": 27496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27126,
											"end": 27133,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27149,
											"end": 27169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "781"
										},
										{
											"begin": 27167,
											"end": 27168,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27149,
											"end": 27169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 27149,
											"end": 27169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27149,
											"end": 27169,
											"name": "tag",
											"source": 9,
											"value": "781"
										},
										{
											"begin": 27149,
											"end": 27169,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27144,
											"end": 27169,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27144,
											"end": 27169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27183,
											"end": 27203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "782"
										},
										{
											"begin": 27201,
											"end": 27202,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27183,
											"end": 27203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 27183,
											"end": 27203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27183,
											"end": 27203,
											"name": "tag",
											"source": 9,
											"value": "782"
										},
										{
											"begin": 27183,
											"end": 27203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27178,
											"end": 27203,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 27178,
											"end": 27203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27238,
											"end": 27239,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27235,
											"end": 27236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27231,
											"end": 27240,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 27260,
											"end": 27290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "783"
										},
										{
											"begin": 27278,
											"end": 27289,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 27260,
											"end": 27290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 27260,
											"end": 27290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27260,
											"end": 27290,
											"name": "tag",
											"source": 9,
											"value": "783"
										},
										{
											"begin": 27260,
											"end": 27290,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27249,
											"end": 27290,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27249,
											"end": 27290,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27439,
											"end": 27440,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27430,
											"end": 27437,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27426,
											"end": 27441,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 27423,
											"end": 27424,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 27420,
											"end": 27442,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 27400,
											"end": 27401,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27393,
											"end": 27402,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 27373,
											"end": 27456,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 27350,
											"end": 27489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "784"
										},
										{
											"begin": 27350,
											"end": 27489,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 27469,
											"end": 27487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "785"
										},
										{
											"begin": 27469,
											"end": 27487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 27469,
											"end": 27487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27469,
											"end": 27487,
											"name": "tag",
											"source": 9,
											"value": "785"
										},
										{
											"begin": 27469,
											"end": 27487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27350,
											"end": 27489,
											"name": "tag",
											"source": 9,
											"value": "784"
										},
										{
											"begin": 27350,
											"end": 27489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27134,
											"end": 27496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27086,
											"end": 27496,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 27086,
											"end": 27496,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27086,
											"end": 27496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27086,
											"end": 27496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27086,
											"end": 27496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27502,
											"end": 27682,
											"name": "tag",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 27502,
											"end": 27682,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27550,
											"end": 27627,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27547,
											"end": 27548,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27540,
											"end": 27628,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27647,
											"end": 27651,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 27644,
											"end": 27645,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 27637,
											"end": 27652,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27671,
											"end": 27675,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 27668,
											"end": 27669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27661,
											"end": 27676,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 27688,
											"end": 27873,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 27688,
											"end": 27873,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27728,
											"end": 27729,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 27745,
											"end": 27765,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "788"
										},
										{
											"begin": 27763,
											"end": 27764,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27745,
											"end": 27765,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 27745,
											"end": 27765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27745,
											"end": 27765,
											"name": "tag",
											"source": 9,
											"value": "788"
										},
										{
											"begin": 27745,
											"end": 27765,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27740,
											"end": 27765,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27740,
											"end": 27765,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27779,
											"end": 27799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "789"
										},
										{
											"begin": 27797,
											"end": 27798,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 27779,
											"end": 27799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 27779,
											"end": 27799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27779,
											"end": 27799,
											"name": "tag",
											"source": 9,
											"value": "789"
										},
										{
											"begin": 27779,
											"end": 27799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27774,
											"end": 27799,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 27774,
											"end": 27799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27818,
											"end": 27819,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27808,
											"end": 27843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "790"
										},
										{
											"begin": 27808,
											"end": 27843,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 27823,
											"end": 27841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "791"
										},
										{
											"begin": 27823,
											"end": 27841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 27823,
											"end": 27841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27823,
											"end": 27841,
											"name": "tag",
											"source": 9,
											"value": "791"
										},
										{
											"begin": 27823,
											"end": 27841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27808,
											"end": 27843,
											"name": "tag",
											"source": 9,
											"value": "790"
										},
										{
											"begin": 27808,
											"end": 27843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 27865,
											"end": 27866,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27862,
											"end": 27863,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 27858,
											"end": 27867,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 27853,
											"end": 27867,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 27853,
											"end": 27867,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27688,
											"end": 27873,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 27688,
											"end": 27873,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 27688,
											"end": 27873,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27688,
											"end": 27873,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27688,
											"end": 27873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 27879,
											"end": 28099,
											"name": "tag",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 27879,
											"end": 28099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28019,
											"end": 28053,
											"name": "PUSH",
											"source": 9,
											"value": "55534420616D6F756E74206D7573742062652067726561746572207468616E20"
										},
										{
											"begin": 28015,
											"end": 28016,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28007,
											"end": 28013,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28003,
											"end": 28017,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 27996,
											"end": 28054,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28088,
											"end": 28091,
											"name": "PUSH",
											"source": 9,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28083,
											"end": 28085,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 28075,
											"end": 28081,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28071,
											"end": 28086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28064,
											"end": 28092,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 27879,
											"end": 28099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 27879,
											"end": 28099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 28105,
											"end": 28471,
											"name": "tag",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 28105,
											"end": 28471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28247,
											"end": 28250,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28268,
											"end": 28335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "794"
										},
										{
											"begin": 28332,
											"end": 28334,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 28327,
											"end": 28330,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 28268,
											"end": 28335,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 28268,
											"end": 28335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 28268,
											"end": 28335,
											"name": "tag",
											"source": 9,
											"value": "794"
										},
										{
											"begin": 28268,
											"end": 28335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28261,
											"end": 28335,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 28261,
											"end": 28335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28344,
											"end": 28437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "795"
										},
										{
											"begin": 28433,
											"end": 28436,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28344,
											"end": 28437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 28344,
											"end": 28437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 28344,
											"end": 28437,
											"name": "tag",
											"source": 9,
											"value": "795"
										},
										{
											"begin": 28344,
											"end": 28437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28462,
											"end": 28464,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 28457,
											"end": 28460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28453,
											"end": 28465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28446,
											"end": 28465,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28446,
											"end": 28465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28105,
											"end": 28471,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 28105,
											"end": 28471,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28105,
											"end": 28471,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28105,
											"end": 28471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 28477,
											"end": 28896,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 28477,
											"end": 28896,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28643,
											"end": 28647,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28681,
											"end": 28683,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 28670,
											"end": 28679,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 28666,
											"end": 28684,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28658,
											"end": 28684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28658,
											"end": 28684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28730,
											"end": 28739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28724,
											"end": 28728,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28720,
											"end": 28740,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 28716,
											"end": 28717,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 28705,
											"end": 28714,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 28701,
											"end": 28718,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 28694,
											"end": 28741,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28758,
											"end": 28889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "797"
										},
										{
											"begin": 28884,
											"end": 28888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 28758,
											"end": 28889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 28758,
											"end": 28889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 28758,
											"end": 28889,
											"name": "tag",
											"source": 9,
											"value": "797"
										},
										{
											"begin": 28758,
											"end": 28889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 28750,
											"end": 28889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28750,
											"end": 28889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28477,
											"end": 28896,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 28477,
											"end": 28896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 28477,
											"end": 28896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28477,
											"end": 28896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 28902,
											"end": 29131,
											"name": "tag",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 28902,
											"end": 29131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29042,
											"end": 29076,
											"name": "PUSH",
											"source": 9,
											"value": "507269766174652053616C6520746F6B656E73206D7573742062652067726561"
										},
										{
											"begin": 29038,
											"end": 29039,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29030,
											"end": 29036,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29026,
											"end": 29040,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29019,
											"end": 29077,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29111,
											"end": 29123,
											"name": "PUSH",
											"source": 9,
											"value": "746572207468616E203000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29106,
											"end": 29108,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29098,
											"end": 29104,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29094,
											"end": 29109,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29087,
											"end": 29124,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 28902,
											"end": 29131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 28902,
											"end": 29131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 29137,
											"end": 29503,
											"name": "tag",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 29137,
											"end": 29503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29279,
											"end": 29282,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29300,
											"end": 29367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "800"
										},
										{
											"begin": 29364,
											"end": 29366,
											"name": "PUSH",
											"source": 9,
											"value": "2A"
										},
										{
											"begin": 29359,
											"end": 29362,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 29300,
											"end": 29367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 29300,
											"end": 29367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 29300,
											"end": 29367,
											"name": "tag",
											"source": 9,
											"value": "800"
										},
										{
											"begin": 29300,
											"end": 29367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29293,
											"end": 29367,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29293,
											"end": 29367,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29376,
											"end": 29469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "801"
										},
										{
											"begin": 29465,
											"end": 29468,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29376,
											"end": 29469,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 29376,
											"end": 29469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 29376,
											"end": 29469,
											"name": "tag",
											"source": 9,
											"value": "801"
										},
										{
											"begin": 29376,
											"end": 29469,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29494,
											"end": 29496,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 29489,
											"end": 29492,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29485,
											"end": 29497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29478,
											"end": 29497,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29478,
											"end": 29497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29137,
											"end": 29503,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29137,
											"end": 29503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29137,
											"end": 29503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29137,
											"end": 29503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 29509,
											"end": 29928,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 29509,
											"end": 29928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29675,
											"end": 29679,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29713,
											"end": 29715,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 29702,
											"end": 29711,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 29698,
											"end": 29716,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29690,
											"end": 29716,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29690,
											"end": 29716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29762,
											"end": 29771,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29756,
											"end": 29760,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29752,
											"end": 29772,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 29748,
											"end": 29749,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 29737,
											"end": 29746,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 29733,
											"end": 29750,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 29726,
											"end": 29773,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29790,
											"end": 29921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "803"
										},
										{
											"begin": 29916,
											"end": 29920,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 29790,
											"end": 29921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "556"
										},
										{
											"begin": 29790,
											"end": 29921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 29790,
											"end": 29921,
											"name": "tag",
											"source": 9,
											"value": "803"
										},
										{
											"begin": 29790,
											"end": 29921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 29782,
											"end": 29921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29782,
											"end": 29921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29509,
											"end": 29928,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 29509,
											"end": 29928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 29509,
											"end": 29928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29509,
											"end": 29928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 29934,
											"end": 30169,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 29934,
											"end": 30169,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30074,
											"end": 30108,
											"name": "PUSH",
											"source": 9,
											"value": "507269766174652053616C6520736F6C6420746F6B656E732065786365656420"
										},
										{
											"begin": 30070,
											"end": 30071,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30062,
											"end": 30068,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30058,
											"end": 30072,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30051,
											"end": 30109,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30143,
											"end": 30161,
											"name": "PUSH",
											"source": 9,
											"value": "617661696C61626C6520746F6B656E7300000000000000000000000000000000"
										},
										{
											"begin": 30138,
											"end": 30140,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30130,
											"end": 30136,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30126,
											"end": 30141,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30119,
											"end": 30162,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 29934,
											"end": 30169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 29934,
											"end": 30169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 30175,
											"end": 30541,
											"name": "tag",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 30175,
											"end": 30541,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30317,
											"end": 30320,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30338,
											"end": 30405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "806"
										},
										{
											"begin": 30402,
											"end": 30404,
											"name": "PUSH",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 30397,
											"end": 30400,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 30338,
											"end": 30405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 30338,
											"end": 30405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 30338,
											"end": 30405,
											"name": "tag",
											"source": 9,
											"value": "806"
										},
										{
											"begin": 30338,
											"end": 30405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30331,
											"end": 30405,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 30331,
											"end": 30405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30414,
											"end": 30507,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "807"
										},
										{
											"begin": 30503,
											"end": 30506,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30414,
											"end": 30507,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 30414,
											"end": 30507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 30414,
											"end": 30507,
											"name": "tag",
											"source": 9,
											"value": "807"
										},
										{
											"begin": 30414,
											"end": 30507,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30532,
											"end": 30534,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 30527,
											"end": 30530,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30523,
											"end": 30535,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30516,
											"end": 30535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30516,
											"end": 30535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30175,
											"end": 30541,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 30175,
											"end": 30541,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30175,
											"end": 30541,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30175,
											"end": 30541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 30547,
											"end": 30966,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 30547,
											"end": 30966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30713,
											"end": 30717,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30751,
											"end": 30753,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 30740,
											"end": 30749,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 30736,
											"end": 30754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30728,
											"end": 30754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30728,
											"end": 30754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30800,
											"end": 30809,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 30794,
											"end": 30798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 30790,
											"end": 30810,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 30786,
											"end": 30787,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 30775,
											"end": 30784,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 30771,
											"end": 30788,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 30764,
											"end": 30811,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30828,
											"end": 30959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "809"
										},
										{
											"begin": 30954,
											"end": 30958,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 30828,
											"end": 30959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 30828,
											"end": 30959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 30828,
											"end": 30959,
											"name": "tag",
											"source": 9,
											"value": "809"
										},
										{
											"begin": 30828,
											"end": 30959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 30820,
											"end": 30959,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30820,
											"end": 30959,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30547,
											"end": 30966,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 30547,
											"end": 30966,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 30547,
											"end": 30966,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30547,
											"end": 30966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 30972,
											"end": 31152,
											"name": "tag",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 30972,
											"end": 31152,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31112,
											"end": 31144,
											"name": "PUSH",
											"source": 9,
											"value": "496E76616C696420746F6B656E2070726963652063616C63756C617465640000"
										},
										{
											"begin": 31108,
											"end": 31109,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31100,
											"end": 31106,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31096,
											"end": 31110,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31089,
											"end": 31145,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 30972,
											"end": 31152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 30972,
											"end": 31152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 31158,
											"end": 31524,
											"name": "tag",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 31158,
											"end": 31524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31300,
											"end": 31303,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31321,
											"end": 31388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "812"
										},
										{
											"begin": 31385,
											"end": 31387,
											"name": "PUSH",
											"source": 9,
											"value": "1E"
										},
										{
											"begin": 31380,
											"end": 31383,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 31321,
											"end": 31388,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 31321,
											"end": 31388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 31321,
											"end": 31388,
											"name": "tag",
											"source": 9,
											"value": "812"
										},
										{
											"begin": 31321,
											"end": 31388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31314,
											"end": 31388,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31314,
											"end": 31388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31397,
											"end": 31490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "813"
										},
										{
											"begin": 31486,
											"end": 31489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31397,
											"end": 31490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "559"
										},
										{
											"begin": 31397,
											"end": 31490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 31397,
											"end": 31490,
											"name": "tag",
											"source": 9,
											"value": "813"
										},
										{
											"begin": 31397,
											"end": 31490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31515,
											"end": 31517,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 31510,
											"end": 31513,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31506,
											"end": 31518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31499,
											"end": 31518,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31499,
											"end": 31518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31158,
											"end": 31524,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31158,
											"end": 31524,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31158,
											"end": 31524,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31158,
											"end": 31524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 31530,
											"end": 31949,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 31530,
											"end": 31949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31696,
											"end": 31700,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31734,
											"end": 31736,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 31723,
											"end": 31732,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 31719,
											"end": 31737,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31711,
											"end": 31737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31711,
											"end": 31737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31783,
											"end": 31792,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 31777,
											"end": 31781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 31773,
											"end": 31793,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 31769,
											"end": 31770,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 31758,
											"end": 31767,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 31754,
											"end": 31771,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 31747,
											"end": 31794,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31811,
											"end": 31942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "815"
										},
										{
											"begin": 31937,
											"end": 31941,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 31811,
											"end": 31942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 31811,
											"end": 31942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 31811,
											"end": 31942,
											"name": "tag",
											"source": 9,
											"value": "815"
										},
										{
											"begin": 31811,
											"end": 31942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 31803,
											"end": 31942,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31803,
											"end": 31942,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31530,
											"end": 31949,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 31530,
											"end": 31949,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 31530,
											"end": 31949,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31530,
											"end": 31949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 31955,
											"end": 32182,
											"name": "tag",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 31955,
											"end": 32182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32095,
											"end": 32129,
											"name": "PUSH",
											"source": 9,
											"value": "43616C63756C6174656420746F6B656E73206D75737420626520677265617465"
										},
										{
											"begin": 32091,
											"end": 32092,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32083,
											"end": 32089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32079,
											"end": 32093,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32072,
											"end": 32130,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 32164,
											"end": 32174,
											"name": "PUSH",
											"source": 9,
											"value": "72207468616E2030000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32159,
											"end": 32161,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 32151,
											"end": 32157,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32147,
											"end": 32162,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32140,
											"end": 32175,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 31955,
											"end": 32182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 31955,
											"end": 32182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 32188,
											"end": 32554,
											"name": "tag",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 32188,
											"end": 32554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32330,
											"end": 32333,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32351,
											"end": 32418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "818"
										},
										{
											"begin": 32415,
											"end": 32417,
											"name": "PUSH",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 32410,
											"end": 32413,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 32351,
											"end": 32418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 32351,
											"end": 32418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 32351,
											"end": 32418,
											"name": "tag",
											"source": 9,
											"value": "818"
										},
										{
											"begin": 32351,
											"end": 32418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32344,
											"end": 32418,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 32344,
											"end": 32418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32427,
											"end": 32520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "819"
										},
										{
											"begin": 32516,
											"end": 32519,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32427,
											"end": 32520,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "561"
										},
										{
											"begin": 32427,
											"end": 32520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 32427,
											"end": 32520,
											"name": "tag",
											"source": 9,
											"value": "819"
										},
										{
											"begin": 32427,
											"end": 32520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32545,
											"end": 32547,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 32540,
											"end": 32543,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32536,
											"end": 32548,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32529,
											"end": 32548,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32529,
											"end": 32548,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32188,
											"end": 32554,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 32188,
											"end": 32554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32188,
											"end": 32554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32188,
											"end": 32554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 32560,
											"end": 32979,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 32560,
											"end": 32979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32726,
											"end": 32730,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32764,
											"end": 32766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 32753,
											"end": 32762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 32749,
											"end": 32767,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32741,
											"end": 32767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32741,
											"end": 32767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32813,
											"end": 32822,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32807,
											"end": 32811,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32803,
											"end": 32823,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 32799,
											"end": 32800,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 32788,
											"end": 32797,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 32784,
											"end": 32801,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 32777,
											"end": 32824,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 32841,
											"end": 32972,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "821"
										},
										{
											"begin": 32967,
											"end": 32971,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 32841,
											"end": 32972,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 32841,
											"end": 32972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 32841,
											"end": 32972,
											"name": "tag",
											"source": 9,
											"value": "821"
										},
										{
											"begin": 32841,
											"end": 32972,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32833,
											"end": 32972,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32833,
											"end": 32972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32560,
											"end": 32979,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 32560,
											"end": 32979,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 32560,
											"end": 32979,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32560,
											"end": 32979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 32985,
											"end": 33176,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 32985,
											"end": 33176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33025,
											"end": 33028,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 33044,
											"end": 33064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "823"
										},
										{
											"begin": 33062,
											"end": 33063,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33044,
											"end": 33064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 33044,
											"end": 33064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 33044,
											"end": 33064,
											"name": "tag",
											"source": 9,
											"value": "823"
										},
										{
											"begin": 33044,
											"end": 33064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33039,
											"end": 33064,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 33039,
											"end": 33064,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33078,
											"end": 33098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "824"
										},
										{
											"begin": 33096,
											"end": 33097,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 33078,
											"end": 33098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 33078,
											"end": 33098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 33078,
											"end": 33098,
											"name": "tag",
											"source": 9,
											"value": "824"
										},
										{
											"begin": 33078,
											"end": 33098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33073,
											"end": 33098,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 33073,
											"end": 33098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33121,
											"end": 33122,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33118,
											"end": 33119,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33114,
											"end": 33123,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 33107,
											"end": 33123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 33107,
											"end": 33123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33142,
											"end": 33145,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 33139,
											"end": 33140,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33136,
											"end": 33146,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 33133,
											"end": 33169,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 33133,
											"end": 33169,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "825"
										},
										{
											"begin": 33133,
											"end": 33169,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 33149,
											"end": 33167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "826"
										},
										{
											"begin": 33149,
											"end": 33167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 33149,
											"end": 33167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 33149,
											"end": 33167,
											"name": "tag",
											"source": 9,
											"value": "826"
										},
										{
											"begin": 33149,
											"end": 33167,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33133,
											"end": 33169,
											"name": "tag",
											"source": 9,
											"value": "825"
										},
										{
											"begin": 33133,
											"end": 33169,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 32985,
											"end": 33176,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 32985,
											"end": 33176,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 32985,
											"end": 33176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32985,
											"end": 33176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 32985,
											"end": 33176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 33182,
											"end": 33376,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 33182,
											"end": 33376,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33222,
											"end": 33226,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 33242,
											"end": 33262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "828"
										},
										{
											"begin": 33260,
											"end": 33261,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33242,
											"end": 33262,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 33242,
											"end": 33262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 33242,
											"end": 33262,
											"name": "tag",
											"source": 9,
											"value": "828"
										},
										{
											"begin": 33242,
											"end": 33262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33237,
											"end": 33262,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 33237,
											"end": 33262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33276,
											"end": 33296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "829"
										},
										{
											"begin": 33294,
											"end": 33295,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 33276,
											"end": 33296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 33276,
											"end": 33296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 33276,
											"end": 33296,
											"name": "tag",
											"source": 9,
											"value": "829"
										},
										{
											"begin": 33276,
											"end": 33296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33271,
											"end": 33296,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 33271,
											"end": 33296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33320,
											"end": 33321,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33317,
											"end": 33318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 33313,
											"end": 33322,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 33305,
											"end": 33322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 33305,
											"end": 33322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33344,
											"end": 33345,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33338,
											"end": 33342,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 33335,
											"end": 33346,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 33332,
											"end": 33369,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 33332,
											"end": 33369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "830"
										},
										{
											"begin": 33332,
											"end": 33369,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 33349,
											"end": 33367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "831"
										},
										{
											"begin": 33349,
											"end": 33367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 33349,
											"end": 33367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 33349,
											"end": 33367,
											"name": "tag",
											"source": 9,
											"value": "831"
										},
										{
											"begin": 33349,
											"end": 33367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33332,
											"end": 33369,
											"name": "tag",
											"source": 9,
											"value": "830"
										},
										{
											"begin": 33332,
											"end": 33369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 33182,
											"end": 33376,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 33182,
											"end": 33376,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 33182,
											"end": 33376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33182,
											"end": 33376,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 33182,
											"end": 33376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/bettoken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TOTAL_SUPPLY()": "902d55a5",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyTokens(uint256)": "3610724e",
							"decimals()": "313ce567",
							"haltSales()": "32c85ac0",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"preSaleEndPrice()": "8f7713ff",
							"preSaleSoldTokens()": "b68ed11f",
							"preSaleStartPrice()": "920168b3",
							"preSaleTarget()": "e6bd92b9",
							"preSaleTokens()": "0fe83bb8",
							"priceOracle()": "2630c12f",
							"privateSaleEndPrice()": "bda95633",
							"privateSaleSoldTokens()": "5fb3b944",
							"privateSaleStartPrice()": "b0e68630",
							"privateSaleTarget()": "ba20cf4c",
							"privateSaleTokens()": "c552e04b",
							"releaseVestedTokens()": "54dd1da4",
							"renounceOwnership()": "715018a6",
							"stage()": "c040e6b8",
							"stakeDuration()": "40f02ab6",
							"stakeTokens(uint256)": "7547c7a3",
							"startPreSale()": "55dd574c",
							"startPrivateSale()": "338dbf59",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"vestingBalance(address)": "192399d1",
							"vestingDuration()": "1514617e",
							"vestingReleaseTime(address)": "2b1cbc38",
							"withdrawFunds()": "24600fc3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceOracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PreSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PrivateSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"VestedTokensReleased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"haltSales\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleEndPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleSoldTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleStartPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleTarget\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"contract IPriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleEndPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleSoldTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleStartPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleTarget\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateSaleTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseVestedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"internalType\":\"enum Bettoken.SaleStage\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPreSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPrivateSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingReleaseTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bettoken.sol\":\"Bettoken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/bettoken.sol\":{\"keccak256\":\"0xb4397a8a1c67cc1ff1d8f52a59d0f07c0106f1649f627157e89ef4dc5efd8eaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://413e6b06a0da858cfd3ae6505417f7451efa4f35d56ff674842cd374c22708c4\",\"dweb:/ipfs/QmciH8PTMUPh3tuJAMQbCCJYprkEJKaNFmJybfsjnkDF7B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 295,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1345,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "privateSaleTarget",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1352,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "privateSaleTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1359,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "privateSaleStartPrice",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1366,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "privateSaleEndPrice",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1369,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "privateSaleSoldTokens",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1376,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "preSaleTarget",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1383,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "preSaleTokens",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1390,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "preSaleStartPrice",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1397,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "preSaleEndPrice",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 1400,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "preSaleSoldTokens",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 1409,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "stage",
								"offset": 0,
								"slot": "17",
								"type": "t_enum(SaleStage)1404"
							},
							{
								"astId": 1413,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "vestingBalance",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1417,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "vestingReleaseTime",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1420,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "vestingDuration",
								"offset": 0,
								"slot": "20",
								"type": "t_uint256"
							},
							{
								"astId": 1423,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "stakeDuration",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							},
							{
								"astId": 1426,
								"contract": "contracts/bettoken.sol:Bettoken",
								"label": "priceOracle",
								"offset": 0,
								"slot": "22",
								"type": "t_contract(IPriceOracle)1322"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IPriceOracle)1322": {
								"encoding": "inplace",
								"label": "contract IPriceOracle",
								"numberOfBytes": "20"
							},
							"t_enum(SaleStage)1404": {
								"encoding": "inplace",
								"label": "enum Bettoken.SaleStage",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IPriceOracle": {
					"abi": [
						{
							"inputs": [],
							"name": "getLatestPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getLatestPrice()": "8e15f473"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bettoken.sol\":\"IPriceOracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/bettoken.sol\":{\"keccak256\":\"0xb4397a8a1c67cc1ff1d8f52a59d0f07c0106f1649f627157e89ef4dc5efd8eaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://413e6b06a0da858cfd3ae6505417f7451efa4f35d56ff674842cd374c22708c4\",\"dweb:/ipfs/QmciH8PTMUPh3tuJAMQbCCJYprkEJKaNFmJybfsjnkDF7B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 999,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								998
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 943,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 969,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 354,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 968,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 999,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 356,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 358,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 361,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "1428:7:3"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "1437:6:3"
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 365,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 968,
										"src": "1445:14:3"
									},
									"id": 366,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 367,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:3"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 360,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								189,
								968,
								942,
								998
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 371,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 376,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 381,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 383,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 864,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 407,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 864,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										961
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 416,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 415,
												"id": 417,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 864,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										967
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 864,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										891
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 864,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 445,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 448,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 864,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 472,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 864,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 484,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 864,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 501,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 500,
												"id": 513,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 864,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 545,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 864,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "5725:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 579,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 578,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 584,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5933:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5939:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "5943:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "5925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 864,
									"src": "5656:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6346:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 604,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "6360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "6534:362:3",
													"statements": [
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "6548:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"initialValue": {
																"baseExpression": {
																	"id": 617,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6570:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 619,
																"indexExpression": {
																	"id": 618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6580:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6603:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6617:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "6599:115:3",
															"trueBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "6624:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 625,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6674:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 626,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "6680:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 627,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "6693:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 624,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 629,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:3"
																	}
																]
															}
														},
														{
															"id": 640,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 632,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "6834:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 634,
																			"indexExpression": {
																				"id": 633,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6844:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 635,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "6852:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 636,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6866:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 639,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:3"
																}
															]
														}
													]
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "6356:540:3",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "6380:148:3",
													"statements": [
														{
															"expression": {
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 610,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "6910:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "7125:206:3",
													"statements": [
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 655,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "7284:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 657,
																			"indexExpression": {
																				"id": 656,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "7294:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7301:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:3"
																}
															]
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6906:425:3",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "6928:191:3",
													"statements": [
														{
															"id": 653,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 649,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "7073:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7089:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 652,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "7355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7361:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "7365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "7346:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "7341:30:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6302:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:3"
									},
									"scope": 864,
									"src": "6271:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "7777:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "7791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "7787:91:3",
												"trueBody": {
													"id": 692,
													"nodeType": "Block",
													"src": "7814:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 685,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 691,
															"nodeType": "RevertStatement",
															"src": "7828:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 695,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "7916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:3"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:3"
									},
									"scope": 864,
									"src": "7721:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8303:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "8317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "8313:89:3",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "8340:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 719,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 718,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 724,
															"nodeType": "RevertStatement",
															"src": "8354:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8411:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8279:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:3"
									},
									"scope": 864,
									"src": "8247:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "9063:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "9082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "9089:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "9098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 815,
														"src": "9073:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "9007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "9022:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "9039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:3"
									},
									"scope": 864,
									"src": "8989:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "10047:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "10061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 768,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "10057:89:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "10082:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "10096:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "10159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 783,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10155:90:3",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10182:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 789,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 788,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 794,
															"nodeType": "RevertStatement",
															"src": "10196:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 797,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "10254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 800,
															"indexExpression": {
																"id": 798,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "10266:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10284:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:3"
											},
											{
												"condition": {
													"id": 805,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "10303:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "10299:76:3",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "10314:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "10342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 808,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "10349:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 809,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "10358:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "10333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "EmitStatement",
															"src": "10328:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9999:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "10014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:3"
									},
									"scope": 864,
									"src": "9949:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "10752:388:3",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "10762:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10806:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 827,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "10789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "10828:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "10824:310:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "10867:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "10885:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "10904:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 849,
															"nodeType": "IfStatement",
															"src": "10881:130:3",
															"trueBody": {
																"id": 848,
																"nodeType": "Block",
																"src": "10911:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 843,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10963:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 844,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10972:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 845,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10990:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 842,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 847,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:3"
																	}
																]
															}
														},
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 851,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "11061:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 852,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "11068:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 853,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "11077:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 854,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "11096:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 850,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				755,
																				815
																			],
																			"referencedDeclaration": 815,
																			"src": "11052:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10688:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:3"
									},
									"scope": 864,
									"src": "10663:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "1401:9741:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "105:11038:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 876,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 885,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 942,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 942,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 942,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 942,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 942,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 942,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 969,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 969,
							"sourceUnit": 943,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 948,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "305:6:5"
									},
									"id": 949,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 947,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 968,
							"linearizedBaseContracts": [
								968,
								942
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 968,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 968,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 964,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 968,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 969,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							998
						]
					},
					"id": 999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 970,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 971,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 976,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 975,
												"id": 978,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 998,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 985,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 984,
												"id": 987,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 998,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 993,
												"id": 995,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 998,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 999,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1310
						]
					},
					"id": 1311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1001,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1310,
							"linearizedBaseContracts": [
								1310
							],
							"name": "SafeMath",
							"nameLocation": "490:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "717:140:7",
										"statements": [
											{
												"id": 1031,
												"nodeType": "UncheckedBlock",
												"src": "727:124:7",
												"statements": [
													{
														"assignments": [
															1014
														],
														"declarations": [
															{
																"constant": false,
																"id": 1014,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1031,
																"src": "751:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1013,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1018,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1015,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "763:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1016,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "767:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1019,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "786:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1020,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "790:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1026,
														"nodeType": "IfStatement",
														"src": "782:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1024,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1012,
															"id": 1025,
															"nodeType": "Return",
															"src": "793:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1028,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "838:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1029,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1012,
														"id": 1030,
														"nodeType": "Return",
														"src": "824:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:7"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "702:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1008,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "708:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:7"
									},
									"scope": 1310,
									"src": "641:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "1078:113:7",
										"statements": [
											{
												"id": 1059,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1045,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "1116:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1046,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1036,
																"src": "1120:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1052,
														"nodeType": "IfStatement",
														"src": "1112:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1050,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1044,
															"id": 1051,
															"nodeType": "Return",
															"src": "1123:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1054,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "1168:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1055,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "1172:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1057,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1044,
														"id": 1058,
														"nodeType": "Return",
														"src": "1154:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1018:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1029:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:7"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1063:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1040,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:7"
									},
									"scope": 1310,
									"src": "1002:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "1415:417:7",
										"statements": [
											{
												"id": 1101,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1073,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "1683:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1080,
														"nodeType": "IfStatement",
														"src": "1679:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1078,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1072,
															"id": 1079,
															"nodeType": "Return",
															"src": "1691:16:7"
														}
													},
													{
														"assignments": [
															1082
														],
														"declarations": [
															{
																"constant": false,
																"id": 1082,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1101,
																"src": "1721:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1081,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1086,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1083,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1084,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "1737:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1087,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "1756:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1088,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "1760:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1090,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "1765:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1096,
														"nodeType": "IfStatement",
														"src": "1752:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1094,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1072,
															"id": 1095,
															"nodeType": "Return",
															"src": "1768:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1098,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "1813:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1099,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1072,
														"id": 1100,
														"nodeType": "Return",
														"src": "1799:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1355:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1366:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:7"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1400:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1068,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1406:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:7"
									},
									"scope": 1310,
									"src": "1339:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "2057:114:7",
										"statements": [
											{
												"id": 1129,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1115,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "2095:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1122,
														"nodeType": "IfStatement",
														"src": "2091:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1120,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1114,
															"id": 1121,
															"nodeType": "Return",
															"src": "2103:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1124,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "2148:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1125,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "2152:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1127,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1114,
														"id": 1128,
														"nodeType": "Return",
														"src": "2134:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1997:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2008:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:7"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2042:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2048:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:7"
									},
									"scope": 1310,
									"src": "1981:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "2406:114:7",
										"statements": [
											{
												"id": 1157,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1143,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "2444:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1150,
														"nodeType": "IfStatement",
														"src": "2440:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1148,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1142,
															"id": 1149,
															"nodeType": "Return",
															"src": "2452:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1152,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "2497:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1153,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1136,
																		"src": "2501:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1155,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1142,
														"id": 1156,
														"nodeType": "Return",
														"src": "2483:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2346:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2357:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:7"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2391:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2397:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:7"
									},
									"scope": 1310,
									"src": "2330:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "2822:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1169,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "2839:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1170,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "2843:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1168,
												"id": 1172,
												"nodeType": "Return",
												"src": "2832:12:7"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "2768:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "2779:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:7"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "2813:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:7"
									},
									"scope": 1310,
									"src": "2755:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "3189:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1184,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "3206:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1185,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "3210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1183,
												"id": 1187,
												"nodeType": "Return",
												"src": "3199:12:7"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3135:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3146:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:7"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "3180:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:7"
									},
									"scope": 1310,
									"src": "3122:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "3532:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "3549:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "3553:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1198,
												"id": 1202,
												"nodeType": "Return",
												"src": "3542:12:7"
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3478:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3489:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:7"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3523:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:7"
									},
									"scope": 1310,
									"src": "3465:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "3917:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1214,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "3934:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1215,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "3938:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1213,
												"id": 1217,
												"nodeType": "Return",
												"src": "3927:12:7"
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "3863:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "3874:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:7"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "3908:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:7"
									},
									"scope": 1310,
									"src": "3850:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "4466:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1229,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "4483:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1230,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "4487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1232,
												"nodeType": "Return",
												"src": "4476:12:7"
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "4412:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "4423:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:7"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "4457:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:7"
									},
									"scope": 1310,
									"src": "4399:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "5054:106:7",
										"statements": [
											{
												"id": 1257,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1247,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1239,
																		"src": "5096:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1248,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "5101:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1250,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "5104:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1246,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1252,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1253,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "5138:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1254,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "5142:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1245,
														"id": 1256,
														"nodeType": "Return",
														"src": "5131:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "4972:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "4983:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "4994:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:7"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5045:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:7"
									},
									"scope": 1310,
									"src": "4959:201:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "5739:105:7",
										"statements": [
											{
												"id": 1282,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1272,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1264,
																		"src": "5781:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1275,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "5788:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1271,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1277,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1278,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "5822:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1279,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "5826:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1270,
														"id": 1281,
														"nodeType": "Return",
														"src": "5815:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5679:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1265,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:7"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5730:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:7"
									},
									"scope": 1310,
									"src": "5644:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "6585:105:7",
										"statements": [
											{
												"id": 1307,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1297,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1289,
																		"src": "6627:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1300,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "6634:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1296,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1302,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1303,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "6668:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1304,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "6672:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1295,
														"id": 1306,
														"nodeType": "Return",
														"src": "6661:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6503:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6514:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6525:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:7"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6576:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:7"
									},
									"scope": 1310,
									"src": "6490:200:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1311,
							"src": "482:6210:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:7"
				},
				"id": 7
			},
			"contracts/bettoken.sol": {
				"ast": {
					"absolutePath": "contracts/bettoken.sol",
					"exportedSymbols": {
						"Bettoken": [
							2021
						],
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						],
						"IPriceOracle": [
							1322
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							349
						],
						"SafeMath": [
							1310
						]
					},
					"id": 2022,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1313,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2022,
							"sourceUnit": 865,
							"src": "57:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2022,
							"sourceUnit": 148,
							"src": "113:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1315,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2022,
							"sourceUnit": 350,
							"src": "166:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2022,
							"sourceUnit": 1311,
							"src": "229:57:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPriceOracle",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1322,
							"linearizedBaseContracts": [
								1322
							],
							"name": "IPriceOracle",
							"nameLocation": "298:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8e15f473",
									"id": 1321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestPrice",
									"nameLocation": "326:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "340:2:8"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "366:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "365:9:8"
									},
									"scope": 1322,
									"src": "317:58:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2022,
							"src": "288:89:8",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1323,
										"name": "ERC20",
										"nameLocations": [
											"400:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "400:5:8"
									},
									"id": 1324,
									"nodeType": "InheritanceSpecifier",
									"src": "400:5:8"
								},
								{
									"baseName": {
										"id": 1325,
										"name": "Ownable",
										"nameLocations": [
											"407:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "407:7:8"
									},
									"id": 1326,
									"nodeType": "InheritanceSpecifier",
									"src": "407:7:8"
								},
								{
									"baseName": {
										"id": 1327,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"416:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "416:15:8"
									},
									"id": 1328,
									"nodeType": "InheritanceSpecifier",
									"src": "416:15:8"
								}
							],
							"canonicalName": "Bettoken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2021,
							"linearizedBaseContracts": [
								2021,
								349,
								147,
								864,
								189,
								968,
								942,
								998
							],
							"name": "Bettoken",
							"nameLocation": "388:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1331,
									"libraryName": {
										"id": 1329,
										"name": "SafeMath",
										"nameLocations": [
											"445:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "445:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "439:27:8",
									"typeName": {
										"id": 1330,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "458:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 1338,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "496:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "472:61:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1332,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "472:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_200000000000000000000000000_by_1",
											"typeString": "int_const 200000000000000000000000000"
										},
										"id": 1337,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3230305f3030305f303030",
											"id": 1333,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "511:11:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_200000000_by_1",
												"typeString": "int_const 200000000"
											},
											"value": "200_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1336,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1334,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "525:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1335,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "531:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "525:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "511:22:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200000000000000000000000000_by_1",
											"typeString": "int_const 200000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ba20cf4c",
									"id": 1345,
									"mutability": "mutable",
									"name": "privateSaleTarget",
									"nameLocation": "622:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "607:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1339,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "607:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"id": 1344,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f303030",
											"id": 1340,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "642:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1343,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1341,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "654:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1342,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "660:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "654:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "642:20:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c552e04b",
									"id": 1352,
									"mutability": "mutable",
									"name": "privateSaleTokens",
									"nameLocation": "707:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "692:56:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "692:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_38835764000000000000000000_by_1",
											"typeString": "int_const 38835764000000000000000000"
										},
										"id": 1351,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "33385f3833355f373634",
											"id": 1347,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "727:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_38835764_by_1",
												"typeString": "int_const 38835764"
											},
											"value": "38_835_764"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1350,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1348,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "740:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1349,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "746:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "740:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "727:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_38835764000000000000000000_by_1",
											"typeString": "int_const 38835764000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b0e68630",
									"id": 1359,
									"mutability": "mutable",
									"name": "privateSaleStartPrice",
									"nameLocation": "788:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "773:55:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1353,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "773:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										},
										"id": 1358,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e303031",
											"id": 1354,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "812:5:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1000",
												"typeString": "rational_const 1 / 1000"
											},
											"value": "0.001"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1357,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1355,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "820:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1356,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "826:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "820:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "812:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bda95633",
									"id": 1366,
									"mutability": "mutable",
									"name": "privateSaleEndPrice",
									"nameLocation": "871:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "856:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1360,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "856:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_50500000000000000_by_1",
											"typeString": "int_const 50500000000000000"
										},
										"id": 1365,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e30353035",
											"id": 1361,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "893:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_101_by_2000",
												"typeString": "rational_const 101 / 2000"
											},
											"value": "0.0505"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1364,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1362,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "902:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1363,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "908:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "902:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "893:17:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50500000000000000_by_1",
											"typeString": "int_const 50500000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5fb3b944",
									"id": 1369,
									"mutability": "mutable",
									"name": "privateSaleSoldTokens",
									"nameLocation": "954:21:8",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "939:40:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1367,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "939:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1368,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "978:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6bd92b9",
									"id": 1376,
									"mutability": "mutable",
									"name": "preSaleTarget",
									"nameLocation": "1027:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "1012:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1370,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1012:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_19000000000000000000000000_by_1",
											"typeString": "int_const 19000000000000000000000000"
										},
										"id": 1375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31395f3030305f303030",
											"id": 1371,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1043:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_19000000_by_1",
												"typeString": "int_const 19000000"
											},
											"value": "19_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1374,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1372,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1056:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1373,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1062:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1056:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1043:21:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_19000000000000000000000000_by_1",
											"typeString": "int_const 19000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0fe83bb8",
									"id": 1383,
									"mutability": "mutable",
									"name": "preSaleTokens",
									"nameLocation": "1110:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "1095:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1377,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1095:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_161164236000000000000000000_by_1",
											"typeString": "int_const 161164236000000000000000000"
										},
										"id": 1382,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3136315f3136345f323336",
											"id": 1378,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1126:11:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_161164236_by_1",
												"typeString": "int_const 161164236"
											},
											"value": "161_164_236"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1381,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1379,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1140:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1380,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1146:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1140:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1126:22:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_161164236000000000000000000_by_1",
											"typeString": "int_const 161164236000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "920168b3",
									"id": 1390,
									"mutability": "mutable",
									"name": "preSaleStartPrice",
									"nameLocation": "1189:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "1174:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1384,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1174:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_50500000000000000_by_1",
											"typeString": "int_const 50500000000000000"
										},
										"id": 1389,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e30353035",
											"id": 1385,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1209:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_101_by_2000",
												"typeString": "rational_const 101 / 2000"
											},
											"value": "0.0505"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1388,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1386,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1218:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1387,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1224:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1218:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1209:17:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50500000000000000_by_1",
											"typeString": "int_const 50500000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f7713ff",
									"id": 1397,
									"mutability": "mutable",
									"name": "preSaleEndPrice",
									"nameLocation": "1270:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "1255:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1391,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1255:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000_by_1",
											"typeString": "int_const 100000000000000000"
										},
										"id": 1396,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e31",
											"id": 1392,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1288:3:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_10",
												"typeString": "rational_const 1 / 10"
											},
											"value": "0.1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1395,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1393,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1294:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1394,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1300:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1294:8:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1288:14:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000_by_1",
											"typeString": "int_const 100000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b68ed11f",
									"id": 1400,
									"mutability": "mutable",
									"name": "preSaleSoldTokens",
									"nameLocation": "1343:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "1328:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1398,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1328:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1399,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1363:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Bettoken.SaleStage",
									"id": 1404,
									"members": [
										{
											"id": 1401,
											"name": "NONE",
											"nameLocation": "1407:4:8",
											"nodeType": "EnumValue",
											"src": "1407:4:8"
										},
										{
											"id": 1402,
											"name": "PRIVATE",
											"nameLocation": "1413:7:8",
											"nodeType": "EnumValue",
											"src": "1413:7:8"
										},
										{
											"id": 1403,
											"name": "PRESALE",
											"nameLocation": "1422:7:8",
											"nodeType": "EnumValue",
											"src": "1422:7:8"
										}
									],
									"name": "SaleStage",
									"nameLocation": "1395:9:8",
									"nodeType": "EnumDefinition",
									"src": "1390:41:8"
								},
								{
									"constant": false,
									"functionSelector": "c040e6b8",
									"id": 1409,
									"mutability": "mutable",
									"name": "stage",
									"nameLocation": "1453:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "1436:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_SaleStage_$1404",
										"typeString": "enum Bettoken.SaleStage"
									},
									"typeName": {
										"id": 1406,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1405,
											"name": "SaleStage",
											"nameLocations": [
												"1436:9:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1404,
											"src": "1436:9:8"
										},
										"referencedDeclaration": 1404,
										"src": "1436:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_SaleStage_$1404",
											"typeString": "enum Bettoken.SaleStage"
										}
									},
									"value": {
										"expression": {
											"id": 1407,
											"name": "SaleStage",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1404,
											"src": "1461:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_SaleStage_$1404_$",
												"typeString": "type(enum Bettoken.SaleStage)"
											}
										},
										"id": 1408,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberLocation": "1471:4:8",
										"memberName": "NONE",
										"nodeType": "MemberAccess",
										"referencedDeclaration": 1401,
										"src": "1461:14:8",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_SaleStage_$1404",
											"typeString": "enum Bettoken.SaleStage"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "192399d1",
									"id": 1413,
									"mutability": "mutable",
									"name": "vestingBalance",
									"nameLocation": "1543:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "1508:49:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1412,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1410,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1516:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1508:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1411,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1527:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2b1cbc38",
									"id": 1417,
									"mutability": "mutable",
									"name": "vestingReleaseTime",
									"nameLocation": "1598:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "1563:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1416,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1571:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1563:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1582:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1514617e",
									"id": 1420,
									"mutability": "mutable",
									"name": "vestingDuration",
									"nameLocation": "1637:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "1622:41:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1418,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1622:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 1419,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1655:8:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15552000_by_1",
											"typeString": "int_const 15552000"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "40f02ab6",
									"id": 1423,
									"mutability": "mutable",
									"name": "stakeDuration",
									"nameLocation": "1692:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "1677:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1421,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1677:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 1422,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1708:8:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2630c12f",
									"id": 1426,
									"mutability": "mutable",
									"name": "priceOracle",
									"nameLocation": "1753:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2021,
									"src": "1733:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPriceOracle_$1322",
										"typeString": "contract IPriceOracle"
									},
									"typeName": {
										"id": 1425,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1424,
											"name": "IPriceOracle",
											"nameLocations": [
												"1733:12:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1322,
											"src": "1733:12:8"
										},
										"referencedDeclaration": 1322,
										"src": "1733:12:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPriceOracle_$1322",
											"typeString": "contract IPriceOracle"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8fa81bb0702332ea2a0aee44bb9e4d359cf4a2c5a820dd59d9129369bdbca73f",
									"id": 1432,
									"name": "PrivateSale",
									"nameLocation": "1824:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1852:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "1836:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1836:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1867:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "1859:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1859:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:39:8"
									},
									"src": "1818:57:8"
								},
								{
									"anonymous": false,
									"eventSelector": "550498dc565cc74203b9d14cba907c9f60ceefe26e82b37df98f6cb98529cf19",
									"id": 1438,
									"name": "PreSale",
									"nameLocation": "1886:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1910:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "1894:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1925:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "1917:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1917:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:39:8"
									},
									"src": "1880:53:8"
								},
								{
									"anonymous": false,
									"eventSelector": "dd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc",
									"id": 1446,
									"name": "TokensStaked",
									"nameLocation": "1944:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "1973:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "1957:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1957:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1989:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "1981:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1981:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"indexed": false,
												"mutability": "mutable",
												"name": "releaseTime",
												"nameLocation": "2005:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "1997:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1956:61:8"
									},
									"src": "1938:80:8"
								},
								{
									"anonymous": false,
									"eventSelector": "6bc5063c7239b75c8bf325a2a2238f726fada322163996bb6c93d5594fb119f0",
									"id": 1452,
									"name": "VestedTokensReleased",
									"nameLocation": "2029:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2066:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2050:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2087:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2079:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2079:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2049:45:8"
									},
									"src": "2023:72:8"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "2181:142:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1468,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2205:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Bettoken_$2021",
																		"typeString": "contract Bettoken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Bettoken_$2021",
																		"typeString": "contract Bettoken"
																	}
																],
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2197:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2197:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2197:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1470,
															"name": "TOTAL_SUPPLY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "2212:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1465,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "2191:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2191:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "2191:34:8"
											},
											{
												"expression": {
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1473,
														"name": "priceOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "2235:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPriceOracle_$1322",
															"typeString": "contract IPriceOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1475,
																"name": "_priceOracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1454,
																"src": "2262:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1474,
															"name": "IPriceOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "2249:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IPriceOracle_$1322_$",
																"typeString": "type(contract IPriceOracle)"
															}
														},
														"id": 1476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2249:26:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPriceOracle_$1322",
															"typeString": "contract IPriceOracle"
														}
													},
													"src": "2235:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPriceOracle_$1322",
														"typeString": "contract IPriceOracle"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "2235:40:8"
											}
										]
									},
									"id": 1480,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "426574746f6b656e",
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2141:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_50252e7dcf80edd4c485aa3c52d8ff1d489c68f4538c7d0c90fd6f79a8bdf23d",
														"typeString": "literal_string \"Bettoken\""
													},
													"value": "Bettoken"
												},
												{
													"hexValue": "42455454",
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2153:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ec659342723f951f23b427400907d3b03293f1ce4abc0899fe27c23f6997c8e2",
														"typeString": "literal_string \"BETT\""
													},
													"value": "BETT"
												}
											],
											"id": 1459,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1456,
												"name": "ERC20",
												"nameLocations": [
													"2135:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "2135:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2135:25:8"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1461,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2169:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2173:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2169:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1463,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1460,
												"name": "Ownable",
												"nameLocations": [
													"2161:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2161:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2161:19:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "_priceOracle",
												"nameLocation": "2121:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "2113:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2113:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:22:8"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:0:8"
									},
									"scope": 2021,
									"src": "2101:222:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1498,
										"nodeType": "Block",
										"src": "2376:134:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_SaleStage_$1404",
																"typeString": "enum Bettoken.SaleStage"
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1486,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "2394:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1404",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1487,
																	"name": "SaleStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "2403:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_SaleStage_$1404_$",
																		"typeString": "type(enum Bettoken.SaleStage)"
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2413:4:8",
																"memberName": "NONE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1401,
																"src": "2403:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1404",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"src": "2394:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c652068617320616c72656164792073746172746564206f7220636f6e636c756465642e",
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2419:48:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804",
																"typeString": "literal_string \"Private Sale has already started or concluded.\""
															},
															"value": "Private Sale has already started or concluded."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_877229659ae4a603561afe2ca1e7fb65c1246a823ee66a1cd046483b8035f804",
																"typeString": "literal_string \"Private Sale has already started or concluded.\""
															}
														],
														"id": 1485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2386:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2386:82:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "2386:82:8"
											},
											{
												"expression": {
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1493,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "2478:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1404",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1494,
															"name": "SaleStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "2486:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_SaleStage_$1404_$",
																"typeString": "type(enum Bettoken.SaleStage)"
															}
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2496:7:8",
														"memberName": "PRIVATE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1402,
														"src": "2486:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1404",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"src": "2478:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SaleStage_$1404",
														"typeString": "enum Bettoken.SaleStage"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "2478:25:8"
											}
										]
									},
									"functionSelector": "338dbf59",
									"id": 1499,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1483,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1482,
												"name": "onlyOwner",
												"nameLocations": [
													"2366:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2366:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2366:9:8"
										}
									],
									"name": "startPrivateSale",
									"nameLocation": "2338:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:2:8"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2376:0:8"
									},
									"scope": 2021,
									"src": "2329:181:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1524,
										"nodeType": "Block",
										"src": "2559:227:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_SaleStage_$1404",
																"typeString": "enum Bettoken.SaleStage"
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1505,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "2577:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1404",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1506,
																	"name": "SaleStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "2586:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_SaleStage_$1404_$",
																		"typeString": "type(enum Bettoken.SaleStage)"
																	}
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2596:7:8",
																"memberName": "PRIVATE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1402,
																"src": "2586:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1404",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"src": "2577:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c652073686f756c6420626520636f6e636c756465642066697273742e",
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2605:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878",
																"typeString": "literal_string \"Private Sale should be concluded first.\""
															},
															"value": "Private Sale should be concluded first."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b97c64496c5ebc27eac64be6838e9d951d7fed39ed038d2e7bea77730988878",
																"typeString": "literal_string \"Private Sale should be concluded first.\""
															}
														],
														"id": 1504,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2569:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2569:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "2569:78:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1513,
																"name": "privateSaleSoldTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "2665:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1514,
																"name": "privateSaleTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "2690:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2665:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c6520746172676574206e6f7420726561636865642e",
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2709:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e",
																"typeString": "literal_string \"Private Sale target not reached.\""
															},
															"value": "Private Sale target not reached."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e668387cc15ec5a38d694da250e2cdd892c319ecea63a24b5d98947ed50fd86e",
																"typeString": "literal_string \"Private Sale target not reached.\""
															}
														],
														"id": 1512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2657:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2657:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1518,
												"nodeType": "ExpressionStatement",
												"src": "2657:87:8"
											},
											{
												"expression": {
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1519,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "2754:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1404",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1520,
															"name": "SaleStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "2762:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_SaleStage_$1404_$",
																"typeString": "type(enum Bettoken.SaleStage)"
															}
														},
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2772:7:8",
														"memberName": "PRESALE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1403,
														"src": "2762:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1404",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"src": "2754:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SaleStage_$1404",
														"typeString": "enum Bettoken.SaleStage"
													}
												},
												"id": 1523,
												"nodeType": "ExpressionStatement",
												"src": "2754:25:8"
											}
										]
									},
									"functionSelector": "55dd574c",
									"id": 1525,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1502,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1501,
												"name": "onlyOwner",
												"nameLocations": [
													"2549:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2549:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2549:9:8"
										}
									],
									"name": "startPreSale",
									"nameLocation": "2525:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2537:2:8"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2559:0:8"
									},
									"scope": 2021,
									"src": "2516:270:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1702,
										"nodeType": "Block",
										"src": "2860:1526:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_SaleStage_$1404",
																"typeString": "enum Bettoken.SaleStage"
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1533,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "2878:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1404",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 1534,
																	"name": "SaleStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "2887:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_SaleStage_$1404_$",
																		"typeString": "type(enum Bettoken.SaleStage)"
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2897:4:8",
																"memberName": "NONE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1401,
																"src": "2887:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_SaleStage_$1404",
																	"typeString": "enum Bettoken.SaleStage"
																}
															},
															"src": "2878:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2073616c65206973206163746976652e",
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2903:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f",
																"typeString": "literal_string \"No sale is active.\""
															},
															"value": "No sale is active."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d871801eda0746d8e88e4012db9a288bb2effca056e4dd4d3d3d27d28ea27f8f",
																"typeString": "literal_string \"No sale is active.\""
															}
														],
														"id": 1532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2870:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "2870:54:8"
											},
											{
												"assignments": [
													1541
												],
												"declarations": [
													{
														"constant": false,
														"id": 1541,
														"mutability": "mutable",
														"name": "latestPrice",
														"nameLocation": "2943:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1702,
														"src": "2935:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1540,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2935:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1545,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1542,
															"name": "priceOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "2957:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPriceOracle_$1322",
																"typeString": "contract IPriceOracle"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:14:8",
														"memberName": "getLatestPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1321,
														"src": "2957:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2957:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2935:50:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1547,
																"name": "latestPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1541,
																"src": "3039:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3053:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3039:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726963652066726f6d206f7261636c65",
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3056:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620",
																"typeString": "literal_string \"Invalid price from oracle\""
															},
															"value": "Invalid price from oracle"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24d14d7bb16bfb0d7101e6de774653d3d9b3dccd654c2bfce1cb94965e5aa620",
																"typeString": "literal_string \"Invalid price from oracle\""
															}
														],
														"id": 1546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3031:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3031:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "3031:53:8"
											},
											{
												"assignments": [
													1554
												],
												"declarations": [
													{
														"constant": false,
														"id": 1554,
														"mutability": "mutable",
														"name": "tokensToBuy",
														"nameLocation": "3103:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1702,
														"src": "3095:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1553,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3095:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1555,
												"nodeType": "VariableDeclarationStatement",
												"src": "3095:19:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_SaleStage_$1404",
														"typeString": "enum Bettoken.SaleStage"
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1556,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "3128:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1404",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1557,
															"name": "SaleStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "3137:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_SaleStage_$1404_$",
																"typeString": "type(enum Bettoken.SaleStage)"
															}
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3147:7:8",
														"memberName": "PRIVATE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1402,
														"src": "3137:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1404",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"src": "3128:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_SaleStage_$1404",
															"typeString": "enum Bettoken.SaleStage"
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1627,
															"name": "stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "3783:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_SaleStage_$1404",
																"typeString": "enum Bettoken.SaleStage"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1628,
																"name": "SaleStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1404,
																"src": "3792:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_SaleStage_$1404_$",
																	"typeString": "type(enum Bettoken.SaleStage)"
																}
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3802:7:8",
															"memberName": "PRESALE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1403,
															"src": "3792:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_SaleStage_$1404",
																"typeString": "enum Bettoken.SaleStage"
															}
														},
														"src": "3783:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1700,
													"nodeType": "IfStatement",
													"src": "3779:601:8",
													"trueBody": {
														"id": 1699,
														"nodeType": "Block",
														"src": "3811:569:8",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1632,
																				"name": "preSaleSoldTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1400,
																				"src": "3833:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1633,
																				"name": "preSaleTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1383,
																				"src": "3853:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3833:33:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "5072652d53616c6520736f6c64206f75742e",
																			"id": 1635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3868:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513",
																				"typeString": "literal_string \"Pre-Sale sold out.\""
																			},
																			"value": "Pre-Sale sold out."
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_c3466538fad2015731589fc7e22c0c5bff18fb8c29c6ea18f0704c7e0212a513",
																				"typeString": "literal_string \"Pre-Sale sold out.\""
																			}
																		],
																		"id": 1631,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "3825:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3825:64:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1637,
																"nodeType": "ExpressionStatement",
																"src": "3825:64:8"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1645,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1639,
																					"name": "usdAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1527,
																					"src": "3911:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_rational_100000000000000000000_by_1",
																						"typeString": "int_const 100000000000000000000"
																					},
																					"id": 1644,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "313030",
																						"id": 1640,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3924:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"id": 1643,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "3130",
																							"id": 1641,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3930:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"hexValue": "3138",
																							"id": 1642,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3936:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18_by_1",
																								"typeString": "int_const 18"
																							},
																							"value": "18"
																						},
																						"src": "3930:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					},
																					"src": "3924:14:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000000000000000000_by_1",
																						"typeString": "int_const 100000000000000000000"
																					}
																				},
																				"src": "3911:27:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1646,
																					"name": "usdAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1527,
																					"src": "3942:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"commonType": {
																						"typeIdentifier": "t_rational_3000000000000000000000_by_1",
																						"typeString": "int_const 3000000000000000000000"
																					},
																					"id": 1651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "335f303030",
																						"id": 1647,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3955:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_3000_by_1",
																							"typeString": "int_const 3000"
																						},
																						"value": "3_000"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"id": 1650,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "3130",
																							"id": 1648,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3963:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "**",
																						"rightExpression": {
																							"hexValue": "3138",
																							"id": 1649,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3969:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18_by_1",
																								"typeString": "int_const 18"
																							},
																							"value": "18"
																						},
																						"src": "3963:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					},
																					"src": "3955:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3000000000000000000000_by_1",
																						"typeString": "int_const 3000000000000000000000"
																					}
																				},
																				"src": "3942:29:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "3911:60:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "507572636861736520616d6f756e74206f7574206f66206c696d6974732e",
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3973:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec",
																				"typeString": "literal_string \"Purchase amount out of limits.\""
																			},
																			"value": "Purchase amount out of limits."
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_5fd3ac59411f91d7425edaae4c904602840297108a4ee4a83af5be2cc67224ec",
																				"typeString": "literal_string \"Purchase amount out of limits.\""
																			}
																		],
																		"id": 1638,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "3903:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3903:103:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1656,
																"nodeType": "ExpressionStatement",
																"src": "3903:103:8"
															},
															{
																"expression": {
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1657,
																		"name": "tokensToBuy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1554,
																		"src": "4020:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "31",
																						"id": 1664,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4088:7:8",
																						"subdenomination": "ether",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_1000000000000000000_by_1",
																							"typeString": "int_const 1000000000000000000"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"id": 1661,
																								"name": "latestPrice",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1541,
																								"src": "4071:11:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1659,
																								"name": "usdAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1527,
																								"src": "4057:9:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1660,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4067:3:8",
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1204,
																							"src": "4057:13:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1662,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4057:26:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1663,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4084:3:8",
																					"memberName": "div",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1219,
																					"src": "4057:30:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1665,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4057:39:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1658,
																			"name": "calculatePreSaleTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1831,
																			"src": "4034:22:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) view returns (uint256)"
																			}
																		},
																		"id": 1666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4034:63:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4020:77:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1668,
																"nodeType": "ExpressionStatement",
																"src": "4020:77:8"
															},
															{
																"expression": {
																	"id": 1674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1669,
																		"name": "preSaleSoldTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "4111:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 1672,
																				"name": "tokensToBuy",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1554,
																				"src": "4153:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1670,
																				"name": "preSaleSoldTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1400,
																				"src": "4131:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4149:3:8",
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1174,
																			"src": "4131:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4131:34:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4111:54:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1675,
																"nodeType": "ExpressionStatement",
																"src": "4111:54:8"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1677,
																				"name": "preSaleSoldTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1400,
																				"src": "4187:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"id": 1678,
																				"name": "preSaleTokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1383,
																				"src": "4208:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4187:34:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "45786365656473205072652d53616c6520746f6b656e206c696d69742e",
																			"id": 1680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4223:31:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67",
																				"typeString": "literal_string \"Exceeds Pre-Sale token limit.\""
																			},
																			"value": "Exceeds Pre-Sale token limit."
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_70c0672cdbe4c24b3613b2d826d3a1f2697c9ac1ce673c5c920b24e205ea8f67",
																				"typeString": "literal_string \"Exceeds Pre-Sale token limit.\""
																			}
																		],
																		"id": 1676,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "4179:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4179:76:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1682,
																"nodeType": "ExpressionStatement",
																"src": "4179:76:8"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1686,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "4287:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Bettoken_$2021",
																						"typeString": "contract Bettoken"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Bettoken_$2021",
																						"typeString": "contract Bettoken"
																					}
																				],
																				"id": 1685,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4279:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1684,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4279:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4279:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"expression": {
																				"id": 1688,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4294:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4298:6:8",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4294:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1690,
																			"name": "tokensToBuy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "4306:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1683,
																		"name": "_transfer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "4269:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,address,uint256)"
																		}
																	},
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4269:49:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1692,
																"nodeType": "ExpressionStatement",
																"src": "4269:49:8"
															},
															{
																"eventCall": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1694,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4345:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4349:6:8",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4345:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1696,
																			"name": "tokensToBuy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "4357:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1693,
																		"name": "PreSale",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1438,
																		"src": "4337:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4337:32:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1698,
																"nodeType": "EmitStatement",
																"src": "4332:37:8"
															}
														]
													}
												},
												"id": 1701,
												"nodeType": "IfStatement",
												"src": "3124:1256:8",
												"trueBody": {
													"id": 1626,
													"nodeType": "Block",
													"src": "3156:617:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1561,
																			"name": "privateSaleSoldTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1369,
																			"src": "3178:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1562,
																			"name": "privateSaleTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "3202:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3178:41:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "507269766174652053616c6520736f6c64206f75742e",
																		"id": 1564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3221:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb",
																			"typeString": "literal_string \"Private Sale sold out.\""
																		},
																		"value": "Private Sale sold out."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_af0473d93f3bc38dcd5dbf78b4a6ad0d67aa6a349bd0a353781022ab4f32c2bb",
																			"typeString": "literal_string \"Private Sale sold out.\""
																		}
																	],
																	"id": 1560,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3170:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3170:76:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1566,
															"nodeType": "ExpressionStatement",
															"src": "3170:76:8"
														},
														{
															"expression": {
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1567,
																	"name": "tokensToBuy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1554,
																	"src": "3260:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "31",
																					"id": 1574,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3332:7:8",
																					"subdenomination": "ether",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					},
																					"value": "1"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1000000000000000000_by_1",
																						"typeString": "int_const 1000000000000000000"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1571,
																							"name": "latestPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1541,
																							"src": "3315:11:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1569,
																							"name": "usdAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1527,
																							"src": "3301:9:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1570,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3311:3:8",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1204,
																						"src": "3301:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1572,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3301:26:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3328:3:8",
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1219,
																				"src": "3301:30:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3301:39:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1568,
																		"name": "calculatePrivateSaleTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "3274:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3274:67:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3260:81:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1578,
															"nodeType": "ExpressionStatement",
															"src": "3260:81:8"
														},
														{
															"expression": {
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1579,
																	"name": "privateSaleSoldTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1369,
																	"src": "3355:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1582,
																			"name": "tokensToBuy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "3405:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1580,
																			"name": "privateSaleSoldTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1369,
																			"src": "3379:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3401:3:8",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1174,
																		"src": "3379:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3379:38:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3355:62:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1585,
															"nodeType": "ExpressionStatement",
															"src": "3355:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1587,
																			"name": "privateSaleSoldTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1369,
																			"src": "3439:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1588,
																			"name": "privateSaleTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "3464:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3439:42:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4578636565647320507269766174652053616c6520746f6b656e206c696d69742e",
																		"id": 1590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3483:35:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e",
																			"typeString": "literal_string \"Exceeds Private Sale token limit.\""
																		},
																		"value": "Exceeds Private Sale token limit."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ccc35224d0270c1e6a678319d6cf7ca8d8a0b04bbf6e28613ed5747b5b2a249e",
																			"typeString": "literal_string \"Exceeds Private Sale token limit.\""
																		}
																	],
																	"id": 1586,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3431:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3431:88:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1592,
															"nodeType": "ExpressionStatement",
															"src": "3431:88:8"
														},
														{
															"expression": {
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1593,
																		"name": "vestingBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1413,
																		"src": "3533:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1596,
																	"indexExpression": {
																		"expression": {
																			"id": 1594,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3548:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3552:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3548:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3533:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1602,
																			"name": "tokensToBuy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "3593:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 1597,
																				"name": "vestingBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1413,
																				"src": "3562:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1600,
																			"indexExpression": {
																				"expression": {
																					"id": 1598,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "3577:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1599,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3581:6:8",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "3577:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3562:26:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3589:3:8",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1174,
																		"src": "3562:30:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3562:43:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3533:72:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1605,
															"nodeType": "ExpressionStatement",
															"src": "3533:72:8"
														},
														{
															"expression": {
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1606,
																		"name": "vestingReleaseTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1417,
																		"src": "3619:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1609,
																	"indexExpression": {
																		"expression": {
																			"id": 1607,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3638:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3642:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3638:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3619:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1616,
																			"name": "vestingDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1420,
																			"src": "3691:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1613,
																					"name": "stakeDuration",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1423,
																					"src": "3672:13:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1610,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "3652:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 1611,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3658:9:8",
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "3652:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3668:3:8",
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1174,
																				"src": "3652:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3652:34:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3687:3:8",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1174,
																		"src": "3652:38:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3652:55:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3619:88:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1619,
															"nodeType": "ExpressionStatement",
															"src": "3619:88:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1621,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3738:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3742:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3738:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1623,
																		"name": "tokensToBuy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1554,
																		"src": "3750:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1620,
																	"name": "PrivateSale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "3726:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3726:36:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1625,
															"nodeType": "EmitStatement",
															"src": "3721:41:8"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3610724e",
									"id": 1703,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1530,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1529,
												"name": "nonReentrant",
												"nameLocations": [
													"2847:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "2847:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2847:12:8"
										}
									],
									"name": "buyTokens",
									"nameLocation": "2801:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "usdAmount",
												"nameLocation": "2819:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "2811:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2811:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2810:19:8"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:8"
									},
									"scope": 2021,
									"src": "2792:1594:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "4479:777:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1711,
																"name": "usdAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "4497:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4509:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4497:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55534420616d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4512:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a",
																"typeString": "literal_string \"USD amount must be greater than 0\""
															},
															"value": "USD amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_40123a0034c639340c66739d30ae856f674a9c12c9ed77a8f4b557845661130a",
																"typeString": "literal_string \"USD amount must be greater than 0\""
															}
														],
														"id": 1710,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4489:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4489:59:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "4489:59:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1718,
																"name": "privateSaleTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "4566:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4586:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4566:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c6520746f6b656e73206d7573742062652067726561746572207468616e2030",
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4589:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85",
																"typeString": "literal_string \"Private Sale tokens must be greater than 0\""
															},
															"value": "Private Sale tokens must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d781c9c58204b715aa12ff712345861790565794f7bf2028281421b0b16eeb85",
																"typeString": "literal_string \"Private Sale tokens must be greater than 0\""
															}
														],
														"id": 1717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4558:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4558:76:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "4558:76:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1725,
																"name": "privateSaleSoldTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "4652:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1726,
																"name": "privateSaleTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "4677:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4652:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c6520736f6c6420746f6b656e732065786365656420617661696c61626c6520746f6b656e73",
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4696:50:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2",
																"typeString": "literal_string \"Private Sale sold tokens exceed available tokens\""
															},
															"value": "Private Sale sold tokens exceed available tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae33c3dab9dcdb2e4c8cad626b76111cb24a0cb7f43777ecf8ad3e792079c5d2",
																"typeString": "literal_string \"Private Sale sold tokens exceed available tokens\""
															}
														],
														"id": 1724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4644:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4644:103:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "4644:103:8"
											},
											{
												"assignments": [
													1732
												],
												"declarations": [
													{
														"constant": false,
														"id": 1732,
														"mutability": "mutable",
														"name": "tokenRange",
														"nameLocation": "4766:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1778,
														"src": "4758:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1731,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4758:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1737,
												"initialValue": {
													"arguments": [
														{
															"id": 1735,
															"name": "privateSaleStartPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "4803:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1733,
															"name": "privateSaleEndPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "4779:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4799:3:8",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1189,
														"src": "4779:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4779:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4758:67:8"
											},
											{
												"assignments": [
													1739
												],
												"declarations": [
													{
														"constant": false,
														"id": 1739,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "4843:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1778,
														"src": "4835:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1738,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4835:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1747,
																	"name": "privateSaleTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "4939:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1744,
																			"name": "privateSaleSoldTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1369,
																			"src": "4912:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1742,
																			"name": "tokenRange",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1732,
																			"src": "4897:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4908:3:8",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1204,
																		"src": "4897:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4897:37:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4935:3:8",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1219,
																"src": "4897:41:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4897:60:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1740,
															"name": "privateSaleStartPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "4858:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4880:3:8",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1174,
														"src": "4858:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4858:109:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4835:132:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1752,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1739,
																	"src": "4986:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1753,
																	"name": "privateSaleStartPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "5002:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4986:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1755,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1739,
																	"src": "5027:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1756,
																	"name": "privateSaleEndPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "5043:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5027:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4986:76:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2070726963652063616c63756c61746564",
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5064:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4",
																"typeString": "literal_string \"Invalid token price calculated\""
															},
															"value": "Invalid token price calculated"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4",
																"typeString": "literal_string \"Invalid token price calculated\""
															}
														],
														"id": 1751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4978:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4978:119:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "4978:119:8"
											},
											{
												"assignments": [
													1763
												],
												"declarations": [
													{
														"constant": false,
														"id": 1763,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "5116:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1778,
														"src": "5108:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1762,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5108:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1768,
												"initialValue": {
													"arguments": [
														{
															"id": 1766,
															"name": "currentPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "5139:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1764,
															"name": "usdAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1705,
															"src": "5125:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5135:3:8",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1219,
														"src": "5125:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5125:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5108:44:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1770,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1763,
																"src": "5170:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5179:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5170:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c63756c6174656420746f6b656e73206d7573742062652067726561746572207468616e2030",
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5182:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996",
																"typeString": "literal_string \"Calculated tokens must be greater than 0\""
															},
															"value": "Calculated tokens must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996",
																"typeString": "literal_string \"Calculated tokens must be greater than 0\""
															}
														],
														"id": 1769,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5162:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5162:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "5162:63:8"
											},
											{
												"expression": {
													"id": 1776,
													"name": "tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1763,
													"src": "5243:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1709,
												"id": 1777,
												"nodeType": "Return",
												"src": "5236:13:8"
											}
										]
									},
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePrivateSaleTokens",
									"nameLocation": "4401:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "usdAmount",
												"nameLocation": "4436:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "4428:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4428:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4427:19:8"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "4470:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4470:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4469:9:8"
									},
									"scope": 2021,
									"src": "4392:864:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "5345:440:8",
										"statements": [
											{
												"assignments": [
													1787
												],
												"declarations": [
													{
														"constant": false,
														"id": 1787,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "5363:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1830,
														"src": "5355:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1786,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5355:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1802,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1799,
																	"name": "preSaleTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "5481:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1796,
																			"name": "preSaleSoldTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "5458:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"arguments": [
																						{
																							"id": 1792,
																							"name": "preSaleStartPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1390,
																							"src": "5434:17:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1790,
																							"name": "preSaleEndPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1397,
																							"src": "5414:15:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1791,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5430:3:8",
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1189,
																						"src": "5414:19:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1793,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5414:38:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1794,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5413:40:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5454:3:8",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1204,
																		"src": "5413:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5413:63:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5477:3:8",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1219,
																"src": "5413:67:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5413:82:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1788,
															"name": "preSaleStartPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "5378:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5396:3:8",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1174,
														"src": "5378:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5378:127:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5355:150:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1804,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1787,
																	"src": "5523:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1805,
																	"name": "preSaleStartPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "5539:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5523:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1807,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1787,
																	"src": "5560:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1808,
																	"name": "preSaleEndPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "5576:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5560:31:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5523:68:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2070726963652063616c63756c61746564",
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5593:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4",
																"typeString": "literal_string \"Invalid token price calculated\""
															},
															"value": "Invalid token price calculated"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_28bf21239d008e6f1a0e5f6647c675d9185164992b72fec4455970391fce8eb4",
																"typeString": "literal_string \"Invalid token price calculated\""
															}
														],
														"id": 1803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5515:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5515:111:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1813,
												"nodeType": "ExpressionStatement",
												"src": "5515:111:8"
											},
											{
												"assignments": [
													1815
												],
												"declarations": [
													{
														"constant": false,
														"id": 1815,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "5645:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1830,
														"src": "5637:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1814,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5637:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1820,
												"initialValue": {
													"arguments": [
														{
															"id": 1818,
															"name": "currentPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "5668:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1816,
															"name": "usdAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1781,
															"src": "5654:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5664:3:8",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1219,
														"src": "5654:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5654:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5637:44:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1822,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "5699:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5708:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5699:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c63756c6174656420746f6b656e73206d7573742062652067726561746572207468616e2030",
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5711:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996",
																"typeString": "literal_string \"Calculated tokens must be greater than 0\""
															},
															"value": "Calculated tokens must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d78f96aa764ccbe5b1e3431156c92e8a16a70af59820803cbbd0cdcef75b996",
																"typeString": "literal_string \"Calculated tokens must be greater than 0\""
															}
														],
														"id": 1821,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5691:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5691:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1827,
												"nodeType": "ExpressionStatement",
												"src": "5691:63:8"
											},
											{
												"expression": {
													"id": 1828,
													"name": "tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1815,
													"src": "5772:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1785,
												"id": 1829,
												"nodeType": "Return",
												"src": "5765:13:8"
											}
										]
									},
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePreSaleTokens",
									"nameLocation": "5271:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "usdAmount",
												"nameLocation": "5302:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "5294:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5294:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5293:19:8"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "5336:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5335:9:8"
									},
									"scope": 2021,
									"src": "5262:523:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1899,
										"nodeType": "Block",
										"src": "5850:442:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1839,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1833,
																"src": "5868:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5877:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5868:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e2030",
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5880:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															},
															"value": "Amount must be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e76f273c719bb7d23db533a2dc9a822ae7d899fcd42eb8910272e24764e8296",
																"typeString": "literal_string \"Amount must be greater than 0\""
															}
														],
														"id": 1838,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5860:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5860:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1844,
												"nodeType": "ExpressionStatement",
												"src": "5860:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1847,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5940:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5944:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5940:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1846,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "5930:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5930:21:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1850,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1833,
																"src": "5955:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5930:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e636520746f207374616b65",
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5963:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0",
																"typeString": "literal_string \"Insufficient balance to stake\""
															},
															"value": "Insufficient balance to stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_be4ec4c53ce7c45c5c937d71eca324b9bda7db453280c22b604ba649eadeb9a0",
																"typeString": "literal_string \"Insufficient balance to stake\""
															}
														],
														"id": 1845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5922:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5922:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1854,
												"nodeType": "ExpressionStatement",
												"src": "5922:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1856,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6016:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6020:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6016:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1860,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6036:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Bettoken_$2021",
																		"typeString": "contract Bettoken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Bettoken_$2021",
																		"typeString": "contract Bettoken"
																	}
																],
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6028:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1858,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6028:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6028:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1862,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "6043:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1855,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "6006:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6006:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1864,
												"nodeType": "ExpressionStatement",
												"src": "6006:44:8"
											},
											{
												"expression": {
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1865,
															"name": "vestingBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "6061:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1868,
														"indexExpression": {
															"expression": {
																"id": 1866,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6076:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6080:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6076:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6061:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1874,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1833,
																"src": "6121:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1869,
																	"name": "vestingBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1413,
																	"src": "6090:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1872,
																"indexExpression": {
																	"expression": {
																		"id": 1870,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6105:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6109:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6105:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6090:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6117:3:8",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1174,
															"src": "6090:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6090:38:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6061:67:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1877,
												"nodeType": "ExpressionStatement",
												"src": "6061:67:8"
											},
											{
												"expression": {
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1878,
															"name": "vestingReleaseTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "6138:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1881,
														"indexExpression": {
															"expression": {
																"id": 1879,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6157:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6161:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6157:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6138:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1885,
																"name": "stakeDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "6191:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1882,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6171:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6177:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6171:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6187:3:8",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1174,
															"src": "6171:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6171:34:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6138:67:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1888,
												"nodeType": "ExpressionStatement",
												"src": "6138:67:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1890,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6234:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6238:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6234:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1892,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "6246:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1893,
																"name": "vestingReleaseTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "6254:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1896,
															"indexExpression": {
																"expression": {
																	"id": 1894,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6273:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6277:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6273:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6254:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1889,
														"name": "TokensStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "6221:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6221:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1898,
												"nodeType": "EmitStatement",
												"src": "6216:69:8"
											}
										]
									},
									"functionSelector": "7547c7a3",
									"id": 1900,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1836,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1835,
												"name": "nonReentrant",
												"nameLocations": [
													"5837:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "5837:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "5837:12:8"
										}
									],
									"name": "stakeTokens",
									"nameLocation": "5800:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5820:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "5812:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5812:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5811:16:8"
									},
									"returnParameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5850:0:8"
									},
									"scope": 2021,
									"src": "5791:501:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1960,
										"nodeType": "Block",
										"src": "6351:530:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1906,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6369:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6375:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6369:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"baseExpression": {
																	"id": 1908,
																	"name": "vestingReleaseTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1417,
																	"src": "6388:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1911,
																"indexExpression": {
																	"expression": {
																		"id": 1909,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6407:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6411:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6407:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6388:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6369:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e6720706572696f64206e6f742079657420636f6d706c657465642e",
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6420:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d",
																"typeString": "literal_string \"Vesting period not yet completed.\""
															},
															"value": "Vesting period not yet completed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69db0820d2b5dbb5c59932a07a2524ad52e6be93f4c7cf24ff7f978186ce352d",
																"typeString": "literal_string \"Vesting period not yet completed.\""
															}
														],
														"id": 1905,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6361:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6361:95:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1915,
												"nodeType": "ExpressionStatement",
												"src": "6361:95:8"
											},
											{
												"assignments": [
													1917
												],
												"declarations": [
													{
														"constant": false,
														"id": 1917,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "6474:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1960,
														"src": "6466:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1916,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6466:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1922,
												"initialValue": {
													"baseExpression": {
														"id": 1918,
														"name": "vestingBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "6483:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1921,
													"indexExpression": {
														"expression": {
															"id": 1919,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6498:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6502:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6498:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6483:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6466:43:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1924,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1917,
																"src": "6527:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6536:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6527:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2076657374656420746f6b656e7320746f2072656c65617365",
															"id": 1927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6539:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b",
																"typeString": "literal_string \"No vested tokens to release\""
															},
															"value": "No vested tokens to release"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c152396b88058f5eb08581ce4811427a017ecdd9f7382597b65174c9d3a500b",
																"typeString": "literal_string \"No vested tokens to release\""
															}
														],
														"id": 1923,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6519:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6519:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1929,
												"nodeType": "ExpressionStatement",
												"src": "6519:50:8"
											},
											{
												"expression": {
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1930,
															"name": "vestingBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "6689:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1933,
														"indexExpression": {
															"expression": {
																"id": 1931,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6704:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6708:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6704:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6689:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6718:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6689:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1936,
												"nodeType": "ExpressionStatement",
												"src": "6689:30:8"
											},
											{
												"expression": {
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1937,
															"name": "vestingReleaseTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "6729:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1940,
														"indexExpression": {
															"expression": {
																"id": 1938,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6748:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6752:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6748:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6729:30:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1941,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6762:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6729:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1943,
												"nodeType": "ExpressionStatement",
												"src": "6729:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1947,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6792:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Bettoken_$2021",
																		"typeString": "contract Bettoken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Bettoken_$2021",
																		"typeString": "contract Bettoken"
																	}
																],
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6784:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1945,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6784:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6784:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1949,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6799:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6803:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6799:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1951,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "6811:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1944,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "6774:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6774:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1953,
												"nodeType": "ExpressionStatement",
												"src": "6774:44:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1955,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6855:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6859:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6855:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1957,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "6867:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1954,
														"name": "VestedTokensReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "6834:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6834:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1959,
												"nodeType": "EmitStatement",
												"src": "6829:45:8"
											}
										]
									},
									"functionSelector": "54dd1da4",
									"id": 1961,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1903,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1902,
												"name": "nonReentrant",
												"nameLocations": [
													"6338:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "6338:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6338:12:8"
										}
									],
									"name": "releaseVestedTokens",
									"nameLocation": "6307:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6326:2:8"
									},
									"returnParameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6351:0:8"
									},
									"scope": 2021,
									"src": "6298:583:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1982,
										"nodeType": "Block",
										"src": "6927:185:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1967,
																	"name": "privateSaleSoldTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1369,
																	"src": "6945:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1968,
																	"name": "privateSaleTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "6970:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6945:42:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1970,
																	"name": "preSaleSoldTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "6991:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1971,
																	"name": "preSaleTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "7012:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6991:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6945:80:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65732074617267657473206e6f7420796574206d65742e",
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7044:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef",
																"typeString": "literal_string \"Sales targets not yet met.\""
															},
															"value": "Sales targets not yet met."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b026938faafe8b34a1ffeb239aee6b9ffa9dde4b94a1c34a8f6852b893257ef",
																"typeString": "literal_string \"Sales targets not yet met.\""
															}
														],
														"id": 1966,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6937:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6937:136:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1976,
												"nodeType": "ExpressionStatement",
												"src": "6937:136:8"
											},
											{
												"expression": {
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1977,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "7083:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1404",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1978,
															"name": "SaleStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "7091:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_SaleStage_$1404_$",
																"typeString": "type(enum Bettoken.SaleStage)"
															}
														},
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7101:4:8",
														"memberName": "NONE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1401,
														"src": "7091:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_SaleStage_$1404",
															"typeString": "enum Bettoken.SaleStage"
														}
													},
													"src": "7083:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_SaleStage_$1404",
														"typeString": "enum Bettoken.SaleStage"
													}
												},
												"id": 1981,
												"nodeType": "ExpressionStatement",
												"src": "7083:22:8"
											}
										]
									},
									"functionSelector": "32c85ac0",
									"id": 1983,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1964,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1963,
												"name": "onlyOwner",
												"nameLocations": [
													"6917:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6917:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "6917:9:8"
										}
									],
									"name": "haltSales",
									"nameLocation": "6896:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6905:2:8"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6927:0:8"
									},
									"scope": 2021,
									"src": "6887:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2003,
										"nodeType": "Block",
										"src": "7175:65:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1998,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7219:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Bettoken_$2021",
																			"typeString": "contract Bettoken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Bettoken_$2021",
																			"typeString": "contract Bettoken"
																		}
																	],
																	"id": 1997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7211:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1996,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7211:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7211:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7225:7:8",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "7211:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1992,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "7193:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7193:7:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7185:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1990,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7185:8:8",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7185:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7202:8:8",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "7185:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7185:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2002,
												"nodeType": "ExpressionStatement",
												"src": "7185:48:8"
											}
										]
									},
									"functionSelector": "24600fc3",
									"id": 2004,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1986,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1985,
												"name": "onlyOwner",
												"nameLocations": [
													"7152:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7152:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7152:9:8"
										},
										{
											"id": 1988,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1987,
												"name": "nonReentrant",
												"nameLocations": [
													"7162:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "7162:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7162:12:8"
										}
									],
									"name": "withdrawFunds",
									"nameLocation": "7127:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7140:2:8"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7175:0:8"
									},
									"scope": 2021,
									"src": "7118:122:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "7274:60:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "44697265637420455448207472616e7366657273206e6f7420616c6c6f7765642e",
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7291:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
																"typeString": "literal_string \"Direct ETH transfers not allowed.\""
															},
															"value": "Direct ETH transfers not allowed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
																"typeString": "literal_string \"Direct ETH transfers not allowed.\""
															}
														],
														"id": 2007,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "7284:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7284:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2010,
												"nodeType": "ExpressionStatement",
												"src": "7284:43:8"
											}
										]
									},
									"id": 2012,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7254:2:8"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7274:0:8"
									},
									"scope": 2021,
									"src": "7246:88:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2019,
										"nodeType": "Block",
										"src": "7367:60:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "44697265637420455448207472616e7366657273206e6f7420616c6c6f7765642e",
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7384:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
																"typeString": "literal_string \"Direct ETH transfers not allowed.\""
															},
															"value": "Direct ETH transfers not allowed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_e254088ceb5c580faffa89d2a1988cf7d6394e3887328e52e403668d528f03dd",
																"typeString": "literal_string \"Direct ETH transfers not allowed.\""
															}
														],
														"id": 2015,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "7377:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7377:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2018,
												"nodeType": "ExpressionStatement",
												"src": "7377:43:8"
											}
										]
									},
									"id": 2020,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7347:2:8"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7367:0:8"
									},
									"scope": 2021,
									"src": "7340:87:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2022,
							"src": "379:7050:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								876,
								885,
								1432,
								1438,
								1446,
								1452
							]
						}
					],
					"src": "32:7398:8"
				},
				"id": 8
			}
		}
	}
}